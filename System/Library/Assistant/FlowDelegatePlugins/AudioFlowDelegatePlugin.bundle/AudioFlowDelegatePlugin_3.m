uint64_t sub_1A46DC(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  os_log_s *v14;
  os_log_type_t v15;
  uint8_t *v16;
  void (*v17)(void);
  uint8_t *v18;
  uint8_t *v19;
  uint64_t v20;
  uint64_t v22;
  uint64_t v23;
  v4 = type metadata accessor for ExecuteResponse(0LL);
  v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  v8 = type metadata accessor for Logger(0LL);
  v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  if (qword_283888 != -1) {
    swift_once(&qword_283888, sub_BFC5C);
  }
  v12 = sub_6960(v8, (uint64_t)qword_2969C8);
  v13 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, v12, v8);
  v14 = (os_log_s *)Logger.logObject.getter(v13);
  v15 = static os_log_type_t.default.getter(v14);
  if (os_log_type_enabled(v14, v15))
  {
    v16 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
    v23 = v5;
    v17 = a3;
    v18 = v16;
    *(_WORD *)v16 = 0;
    _os_log_impl( &dword_0,  v14,  v15,  "SwitchPodcastNewsPreferenceFlow#publishDialog Dialog successfully generated and published.",  v16,  2u);
    v19 = v18;
    a3 = v17;
    v5 = v23;
    swift_slowDealloc(v19, -1LL, -1LL);
  }

  v20 = (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  static ExecuteResponse.complete()(v20);
  a3(v7);
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_1A48A0()
{
  uint64_t v1 = v0;
  uint64_t v552 = type metadata accessor for AdditionalMetricsDescription.StatusReason(0LL);
  uint64_t v551 = *(void *)(v552 - 8);
  __chkstk_darwin(v552);
  v550 = (char *)&v545 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v3 = sub_6C5C(&qword_2845D0);
  __chkstk_darwin(v3);
  v604 = (char *)&v545 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v589 = type metadata accessor for Siri_Nlu_External_UserDialogAct(0LL);
  uint64_t v588 = *(void *)(v589 - 8);
  __chkstk_darwin(v589);
  v587 = (char *)&v545 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v6 = sub_6C5C(&qword_2845A0);
  __chkstk_darwin(v6);
  v613 = (char *)&v545 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v8 = sub_6C5C((uint64_t *)&unk_286BD0);
  __chkstk_darwin(v8);
  v614 = (char *)&v545 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v10 = sub_6C5C(&qword_2845A8);
  __chkstk_darwin(v10);
  v615 = (char *)&v545 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v618 = type metadata accessor for TypeOfIntent(0LL);
  uint64_t v616 = *(void *)(v618 - 8);
  __chkstk_darwin(v618);
  v617 = (char *)&v545 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v609 = type metadata accessor for AdditionalMetricsDescription.SourceFunction(0LL);
  uint64_t v607 = *(void *)(v609 - 8);
  __chkstk_darwin(v609);
  v608 = (char *)&v545 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  v612 = (void *)type metadata accessor for AdditionalMetricsDescription.ModuleName(0LL);
  uint64_t v610 = *(v612 - 1);
  __chkstk_darwin(v612);
  v611 = (char *)&v545 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v578 = type metadata accessor for CommonAudio.MediaType(0LL);
  uint64_t v582 = *(void *)(v578 - 8);
  __chkstk_darwin(v578);
  v555 = (char *)&v545 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v577 = sub_6C5C(&qword_284DA0);
  uint64_t v16 = __chkstk_darwin(v577);
  uint64_t v560 = (uint64_t)&v545 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v16);
  v573 = (char *)&v545 - v18;
  uint64_t v19 = sub_6C5C(&qword_284DC8);
  uint64_t v20 = __chkstk_darwin(v19);
  uint64_t v553 = (uint64_t)&v545 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v22 = __chkstk_darwin(v20);
  uint64_t v557 = (uint64_t)&v545 - v23;
  uint64_t v24 = __chkstk_darwin(v22);
  uint64_t v561 = (uint64_t)&v545 - v25;
  uint64_t v26 = __chkstk_darwin(v24);
  uint64_t v562 = (uint64_t)&v545 - v27;
  uint64_t v28 = __chkstk_darwin(v26);
  v571 = (char *)&v545 - v29;
  __chkstk_darwin(v28);
  v572 = (char *)&v545 - v30;
  uint64_t v595 = type metadata accessor for CommonAudio.Verb(0LL);
  uint64_t v596 = *(void *)(v595 - 8);
  __chkstk_darwin(v595);
  v579 = (char *)&v545 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v590 = sub_6C5C(&qword_284DA8);
  uint64_t v32 = __chkstk_darwin(v590);
  uint64_t v566 = (uint64_t)&v545 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v34 = __chkstk_darwin(v32);
  uint64_t v570 = (uint64_t)&v545 - v35;
  __chkstk_darwin(v34);
  uint64_t v591 = (uint64_t)&v545 - v36;
  uint64_t v37 = sub_6C5C(&qword_284DB0);
  uint64_t v38 = __chkstk_darwin(v37);
  uint64_t v556 = (uint64_t)&v545 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v40 = __chkstk_darwin(v38);
  uint64_t v569 = (uint64_t)&v545 - v41;
  uint64_t v42 = __chkstk_darwin(v40);
  uint64_t v575 = (uint64_t)&v545 - v43;
  uint64_t v44 = __chkstk_darwin(v42);
  uint64_t v563 = (uint64_t)&v545 - v45;
  uint64_t v46 = __chkstk_darwin(v44);
  v583 = (char *)&v545 - v47;
  uint64_t v48 = __chkstk_darwin(v46);
  uint64_t v576 = (uint64_t)&v545 - v49;
  uint64_t v50 = __chkstk_darwin(v48);
  uint64_t v567 = (uint64_t)&v545 - v51;
  uint64_t v52 = __chkstk_darwin(v50);
  uint64_t v585 = (uint64_t)&v545 - v53;
  __chkstk_darwin(v52);
  v581 = (char *)&v545 - v54;
  uint64_t v55 = sub_6C5C(&qword_284CA0);
  __chkstk_darwin(v55);
  uint64_t v594 = (uint64_t)&v545 - ((v56 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v597 = type metadata accessor for AudioNLv3Intent(0LL);
  uint64_t v593 = *(void *)(v597 - 8);
  uint64_t v57 = __chkstk_darwin(v597);
  uint64_t v584 = (uint64_t)&v545 - ((v58 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v59 = __chkstk_darwin(v57);
  uint64_t v586 = (uint64_t)&v545 - v60;
  __chkstk_darwin(v59);
  uint64_t v599 = (uint64_t)&v545 - v61;
  uint64_t v62 = type metadata accessor for Logger(0LL);
  uint64_t v63 = *(void *)(v62 - 8);
  uint64_t v619 = v62;
  uint64_t v620 = v63;
  uint64_t v64 = __chkstk_darwin(v62);
  v605 = (char *)&v545 - ((v65 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v66 = __chkstk_darwin(v64);
  v600 = (char *)&v545 - v67;
  uint64_t v68 = __chkstk_darwin(v66);
  v568 = (char *)&v545 - v69;
  uint64_t v70 = __chkstk_darwin(v68);
  v559 = (char *)&v545 - v71;
  uint64_t v72 = __chkstk_darwin(v70);
  v564 = (char *)&v545 - v73;
  uint64_t v74 = __chkstk_darwin(v72);
  v554 = (char *)&v545 - v75;
  uint64_t v76 = __chkstk_darwin(v74);
  v549 = (char *)&v545 - v77;
  uint64_t v78 = __chkstk_darwin(v76);
  v592 = (char *)&v545 - v79;
  uint64_t v80 = __chkstk_darwin(v78);
  v580 = (char *)&v545 - v81;
  uint64_t v82 = __chkstk_darwin(v80);
  v574 = (char *)&v545 - v83;
  uint64_t v84 = __chkstk_darwin(v82);
  v565 = (char *)&v545 - v85;
  uint64_t v86 = __chkstk_darwin(v84);
  v558 = (char *)&v545 - v87;
  __chkstk_darwin(v86);
  v598 = (char *)&v545 - v88;
  uint64_t v89 = sub_6C5C(&qword_28C8D8);
  uint64_t v90 = __chkstk_darwin(v89);
  v601 = (char *)&v545 - ((v91 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v92 = __chkstk_darwin(v90);
  uint64_t v606 = (uint64_t)&v545 - v93;
  uint64_t v94 = __chkstk_darwin(v92);
  v603 = (uint64_t (*)(char *))((char *)&v545 - v95);
  __chkstk_darwin(v94);
  v602 = (char *)&v545 - v96;
  uint64_t v97 = type metadata accessor for Input(0LL);
  uint64_t v98 = *(void *)(v97 - 8);
  __chkstk_darwin(v97);
  v100 = (char *)&v545 - ((v99 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v101 = sub_6C5C(&qword_285BD0);
  __chkstk_darwin(v101);
  v103 = (char *)&v545 - ((v102 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v104 = type metadata accessor for Parse(0LL);
  uint64_t v105 = *(void *)(v104 - 8);
  uint64_t v106 = __chkstk_darwin(v104);
  v108 = (char *)&v545 - ((v107 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v109 = __chkstk_darwin(v106);
  v111 = (char *)&v545 - v110;
  __chkstk_darwin(v109);
  v113 = (char *)&v545 - v112;
  uint64_t v621 = v1;
  uint64_t v114 = v1 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin30SwitchNewsSourcePreferenceFlow_input;
  swift_beginAccess(v114, v625, 0LL, 0LL);
  sub_FF10(v114, (uint64_t)v103, &qword_285BD0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v98 + 48))(v103, 1LL, v97))
  {
    uint64_t v115 = v621;
    sub_1F6CC((uint64_t)v103, &qword_285BD0);
    if (qword_283888 != -1) {
      swift_once(&qword_283888, sub_BFC5C);
    }
    uint64_t v116 = v619;
    uint64_t v117 = sub_6960(v619, (uint64_t)qword_2969C8);
    uint64_t v118 = v620;
    v119 = v605;
    uint64_t v120 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v620 + 16))(v605, v117, v116);
    v121 = (os_log_s *)Logger.logObject.getter(v120);
    os_log_type_t v122 = static os_log_type_t.error.getter();
    uint64_t v123 = v115;
    if (os_log_type_enabled(v121, v122))
    {
      v124 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)v124 = 0;
      _os_log_impl(&dword_0, v121, v122, "SwitchPodcastNewsPreferenceFlow#checkAndSetParse Parse is nil.", v124, 2u);
      swift_slowDealloc(v124, -1LL, -1LL);
    }

    (*(void (**)(char *, uint64_t))(v118 + 8))(v119, v116);
    uint64_t v126 = v610;
    v125 = v611;
    v127 = v612;
    (*(void (**)(char *, void, void *))(v610 + 104))( v611,  enum case for AdditionalMetricsDescription.ModuleName.snspf(_:),  v612);
    uint64_t v128 = v607;
    v129 = v608;
    uint64_t v130 = v609;
    (*(void (**)(char *, void, uint64_t))(v607 + 104))( v608,  enum case for AdditionalMetricsDescription.SourceFunction.chkAndSetPrs(_:),  v609);
    uint64_t v620 = static AdditionalMetricsDescription.encodeInfo(module:source:statusReason:extraInfo:)( v125,  v129,  0x73726170206C694ELL,  0xE900000000000065LL,  0LL,  1LL);
    uint64_t v132 = v131;
    (*(void (**)(char *, uint64_t))(v128 + 8))(v129, v130);
    (*(void (**)(char *, void *))(v126 + 8))(v125, v127);
    uint64_t v133 = *(void *)(v123
                     + OBJC_IVAR____TtC23AudioFlowDelegatePlugin30SwitchNewsSourcePreferenceFlow_siriKitTaskLoggingProvider
                     + 24);
    uint64_t v621 = *(void *)(v123
                     + OBJC_IVAR____TtC23AudioFlowDelegatePlugin30SwitchNewsSourcePreferenceFlow_siriKitTaskLoggingProvider
                     + 32);
    sub_6EA8( (void *)(v123 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin30SwitchNewsSourcePreferenceFlow_siriKitTaskLoggingProvider),  v133);
    uint64_t v134 = v616;
    v135 = v617;
    uint64_t v136 = v618;
    (*(void (**)(char *, void, uint64_t))(v616 + 104))( v617,  enum case for TypeOfIntent.switchNewsPreference(_:),  v618);
    uint64_t v137 = enum case for ActivityType.failed(_:);
    uint64_t v138 = type metadata accessor for ActivityType(0LL);
    uint64_t v139 = *(void *)(v138 - 8);
    uint64_t v140 = (uint64_t)v615;
    (*(void (**)(char *, uint64_t, uint64_t))(v139 + 104))(v615, v137, v138);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v139 + 56))(v140, 0LL, 1LL, v138);
    uint64_t v141 = type metadata accessor for TemplatingResult(0LL);
    uint64_t v142 = (uint64_t)v614;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v141 - 8) + 56LL))(v614, 1LL, 1LL, v141);
    uint64_t v143 = type metadata accessor for SiriKitReliabilityCodes(0LL);
    uint64_t v144 = (uint64_t)v613;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v143 - 8) + 56LL))(v613, 1LL, 1LL, v143);
    dispatch thunk of SiriKitTaskLoggingProviding.submitMetric(typeOfIntent:activityType:templateResult:statusReason:description:)( v135,  v140,  v142,  v144,  v620,  v132,  v133,  v621);
    swift_bridgeObjectRelease(v132);
    sub_1F6CC(v144, &qword_2845A0);
    sub_1F6CC(v142, (uint64_t *)&unk_286BD0);
    sub_1F6CC(v140, &qword_2845A8);
    (*(void (**)(char *, uint64_t))(v134 + 8))(v135, v136);
    return 0LL;
  }

  v605 = v108;
  v145 = v604;
  (*(void (**)(char *, char *, uint64_t))(v98 + 16))(v100, v103, v97);
  uint64_t v146 = sub_1F6CC((uint64_t)v103, &qword_285BD0);
  Input.parse.getter(v146);
  (*(void (**)(char *, uint64_t))(v98 + 8))(v100, v97);
  (*(void (**)(char *, char *, uint64_t))(v105 + 32))(v113, v111, v104);
  v147 = *(void (**)(char *, char *, uint64_t))(v105 + 16);
  id v148 = v602;
  v147(v602, v113, v104);
  (*(void (**)(id, void, uint64_t, uint64_t))(v105 + 56))(v148, 0LL, 1LL, v104);
  v149 = v603;
  sub_45F6C((uint64_t)v148, (uint64_t)v603, &qword_28C8D8);
  uint64_t v150 = v621;
  uint64_t v151 = v621 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin30SwitchNewsSourcePreferenceFlow_parse;
  swift_beginAccess( v621 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin30SwitchNewsSourcePreferenceFlow_parse,  &v623,  33LL,  0LL);
  sub_DD950((uint64_t)v149, v151, &qword_28C8D8);
  swift_endAccess(&v623);
  uint64_t v152 = v151;
  uint64_t v153 = v606;
  sub_FF10(v152, v606, &qword_28C8D8);
  int v154 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v105 + 48))(v153, 1LL, v104);
  uint64_t v155 = v104;
  uint64_t v156 = v619;
  uint64_t v547 = v155;
  uint64_t v546 = v105;
  v548 = v113;
  if (v154 == 1) {
    goto LABEL_32;
  }
  v157 = (void **)v601;
  sub_FF10(v153, (uint64_t)v601, &qword_28C8D8);
  int v158 = (*(uint64_t (**)(void **, uint64_t))(v105 + 88))(v157, v155);
  if (v158 == enum case for Parse.NLv3IntentPlusServerConversion(_:))
  {
    (*(void (**)(void **, uint64_t))(v105 + 96))(v157, v155);
    uint64_t v159 = sub_6C5C(&qword_284618);
    swift_release(*(void **)((char *)v157 + *(int *)(v159 + 48)));
    if (qword_283888 != -1) {
      swift_once(&qword_283888, sub_BFC5C);
    }
    uint64_t v160 = sub_6960(v156, (uint64_t)qword_2969C8);
    uint64_t v161 = v620;
    v162 = *(uint64_t (**)(char *))(v620 + 16);
    v163 = v598;
    v604 = (char *)v160;
    uint64_t v164 = v162(v598);
    v165 = (os_log_s *)Logger.logObject.getter(v164);
    os_log_type_t v166 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v165, v166))
    {
      uint64_t v167 = v150;
      v168 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)v168 = 0;
      _os_log_impl( &dword_0,  v165,  v166,  "SwitchPodcastNewsPreferenceFlow#checkAndSetParse received .NLv3IntentPlusServerConversion parse.",  v168,  2u);
      v169 = v168;
      uint64_t v150 = v167;
      v163 = v598;
      uint64_t v161 = v620;
      swift_slowDealloc(v169, -1LL, -1LL);
    }

    v170 = *(void (**)(char *, uint64_t))(v161 + 8);
    v170(v163, v156);
    v171 = v605;
    v147(v605, v113, v155);
    uint64_t v172 = v594;
    sub_206FC0(v171, v594);
    uint64_t v173 = v597;
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v593 + 48))(v172, 1LL, v597) == 1)
    {
      sub_1F6CC(v172, &qword_284CA0);
      v174 = v580;
      uint64_t v175 = ((uint64_t (*)(char *, char *, uint64_t))v162)(v580, v604, v156);
      v176 = (os_log_s *)Logger.logObject.getter(v175);
      os_log_type_t v177 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v176, v177))
      {
        v178 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
        *(_WORD *)v178 = 0;
        _os_log_impl( &dword_0,  v176,  v177,  "SwitchPodcastNewsPreferenceFlow#checkAndSetParse AudioNLv3Intent failed to be constructed.",  v178,  2u);
        swift_slowDealloc(v178, -1LL, -1LL);
      }

      v170(v174, v156);
      uint64_t v180 = v610;
      v179 = v611;
      v181 = v612;
      (*(void (**)(char *, void, void *))(v610 + 104))( v611,  enum case for AdditionalMetricsDescription.ModuleName.snspf(_:),  v612);
      uint64_t v182 = v607;
      v183 = v608;
      uint64_t v184 = v609;
      (*(void (**)(char *, void, uint64_t))(v607 + 104))( v608,  enum case for AdditionalMetricsDescription.SourceFunction.chkAndSetPrs(_:),  v609);
      uint64_t v620 = static AdditionalMetricsDescription.encodeInfo(module:source:statusReason:extraInfo:)( v179,  v183,  0xD000000000000023LL,  0x8000000000222820LL,  0LL,  1LL);
      uint64_t v186 = v185;
      (*(void (**)(char *, uint64_t))(v182 + 8))(v183, v184);
      (*(void (**)(char *, void *))(v180 + 8))(v179, v181);
      uint64_t v187 = *(void *)(v150
                       + OBJC_IVAR____TtC23AudioFlowDelegatePlugin30SwitchNewsSourcePreferenceFlow_siriKitTaskLoggingProvider
                       + 24);
      uint64_t v621 = *(void *)(v150
                       + OBJC_IVAR____TtC23AudioFlowDelegatePlugin30SwitchNewsSourcePreferenceFlow_siriKitTaskLoggingProvider
                       + 32);
      sub_6EA8( (void *)(v150 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin30SwitchNewsSourcePreferenceFlow_siriKitTaskLoggingProvider),  v187);
      uint64_t v188 = v616;
      v189 = v617;
      uint64_t v190 = v618;
      (*(void (**)(char *, void, uint64_t))(v616 + 104))( v617,  enum case for TypeOfIntent.switchNewsPreference(_:),  v618);
      uint64_t v191 = enum case for ActivityType.failed(_:);
      uint64_t v192 = type metadata accessor for ActivityType(0LL);
      uint64_t v193 = *(void *)(v192 - 8);
      uint64_t v194 = (uint64_t)v615;
      (*(void (**)(char *, uint64_t, uint64_t))(v193 + 104))(v615, v191, v192);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v193 + 56))(v194, 0LL, 1LL, v192);
      uint64_t v195 = type metadata accessor for TemplatingResult(0LL);
      uint64_t v196 = (uint64_t)v614;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v195 - 8) + 56LL))(v614, 1LL, 1LL, v195);
      uint64_t v197 = type metadata accessor for SiriKitReliabilityCodes(0LL);
      uint64_t v198 = (uint64_t)v613;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v197 - 8) + 56LL))(v613, 1LL, 1LL, v197);
      dispatch thunk of SiriKitTaskLoggingProviding.submitMetric(typeOfIntent:activityType:templateResult:statusReason:description:)( v189,  v194,  v196,  v198,  v620,  v186,  v187,  v621);
      swift_bridgeObjectRelease(v186);
      sub_1F6CC(v198, &qword_2845A0);
      sub_1F6CC(v196, (uint64_t *)&unk_286BD0);
      sub_1F6CC(v194, &qword_2845A8);
      (*(void (**)(char *, uint64_t))(v188 + 8))(v189, v190);
LABEL_70:
      (*(void (**)(char *, uint64_t))(v546 + 8))(v548, v547);
      uint64_t v342 = type metadata accessor for NLIntent(0LL);
      (*(void (**)(char *, uint64_t))(*(void *)(v342 - 8) + 8LL))(v601, v342);
      goto LABEL_71;
    }

    uint64_t v620 = (uint64_t)v170;
    sub_B8980(v172, v599);
    if (qword_2839D0 != -1) {
      swift_once(&qword_2839D0, sub_209354);
    }
    uint64_t v228 = qword_28E990;
    v605 = (char *)sub_10430(&qword_289178, type metadata accessor for AudioNLv3Intent, (uint64_t)&unk_21C3B8);
    IntentNodeTraversable.value<A>(forNode:)(&v623, v228, v173, v605);
    uint64_t v229 = (uint64_t)v581;
    v603 = v162;
    if (v623 == 11)
    {
      uint64_t v230 = v596;
      v231 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v596 + 56);
      v232 = v581;
      uint64_t v233 = 1LL;
    }

    else
    {
      sub_C09BC(v623);
      uint64_t v230 = v596;
      v231 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v596 + 56);
      v232 = (char *)v229;
      uint64_t v233 = 0LL;
    }

    uint64_t v261 = v595;
    v231(v232, v233, 1LL, v595);
    uint64_t v262 = v591;
    uint64_t v263 = v585;
    v602 = *(char **)(v230 + 104);
    ((void (*)(uint64_t, void, uint64_t))v602)(v585, enum case for CommonAudio.Verb.update(_:), v261);
    v231((char *)v263, 0LL, 1LL, v261);
    uint64_t v264 = v590;
    uint64_t v265 = v262 + *(int *)(v590 + 48);
    sub_FF10(v229, v262, &qword_284DB0);
    sub_FF10(v263, v265, &qword_284DB0);
    v266 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v230 + 48);
    int v267 = v266(v262, 1LL, v261);
    uint64_t v268 = (uint64_t)v583;
    if (v267 == 1)
    {
      sub_1F6CC(v263, &qword_284DB0);
      sub_1F6CC(v229, &qword_284DB0);
      int v269 = v266(v265, 1LL, v261);
      uint64_t v270 = v621;
      if (v269 == 1)
      {
        sub_1F6CC(v591, &qword_284DB0);
        uint64_t v271 = v586;
        sub_FE7FC(v599, v586);
        uint64_t v272 = v619;
LABEL_48:
        sub_DD994(v271);
        uint64_t v294 = v582;
        uint64_t v295 = v584;
LABEL_55:
        sub_FE7FC(v599, v295);
        uint64_t v305 = v578;
        uint64_t v306 = v577;
        uint64_t v307 = (uint64_t)v573;
        v308 = v572;
        uint64_t v309 = (uint64_t)v571;
LABEL_56:
        sub_209124(v308);
        (*(void (**)(uint64_t, void, uint64_t))(v294 + 104))( v309,  enum case for CommonAudio.MediaType.news(_:),  v305);
        (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v294 + 56))(v309, 0LL, 1LL, v305);
        uint64_t v310 = v307 + *(int *)(v306 + 48);
        sub_FF10((uint64_t)v308, v307, &qword_284DC8);
        sub_FF10(v309, v310, &qword_284DC8);
        v311 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v294 + 48);
        if (v311(v307, 1LL, v305) == 1)
        {
          sub_1F6CC(v309, &qword_284DC8);
          sub_1F6CC((uint64_t)v308, &qword_284DC8);
          sub_DD994(v295);
          if (v311(v310, 1LL, v305) == 1)
          {
            sub_1F6CC(v307, &qword_284DC8);
            v312 = (void (*)(char *, uint64_t))v620;
            uint64_t v270 = v621;
            v313 = v548;
LABEL_85:
            v405 = v558;
            v406 = v604;
            uint64_t v407 = ((uint64_t (*)(char *, char *, uint64_t))v603)(v558, v604, v272);
            v408 = (os_log_s *)Logger.logObject.getter(v407);
            os_log_type_t v409 = static os_log_type_t.debug.getter();
            if (os_log_type_enabled(v408, v409))
            {
              v410 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
              *(_WORD *)v410 = 0;
              _os_log_impl( &dword_0,  v408,  v409,  "SwitchPodcastNewsPreferenceFlow#checkAndSetParse Correct update verb and news mediaType present in AudioNLv3Intent.",  v410,  2u);
              v411 = v410;
              uint64_t v270 = v621;
              swift_slowDealloc(v411, -1LL, -1LL);
            }

            v312(v405, v272);
            uint64_t v412 = sub_208814();
            v413 = (uint64_t *)(v270
                             + OBJC_IVAR____TtC23AudioFlowDelegatePlugin30SwitchNewsSourcePreferenceFlow_newsPodcastTopicId);
            uint64_t v414 = *(void *)(v270
                             + OBJC_IVAR____TtC23AudioFlowDelegatePlugin30SwitchNewsSourcePreferenceFlow_newsPodcastTopicId
                             + 8);
            uint64_t *v413 = v412;
            v413[1] = v415;
            swift_bridgeObjectRelease(v414);
            uint64_t v416 = sub_208C9C();
            v417 = (uint64_t *)(v270
                             + OBJC_IVAR____TtC23AudioFlowDelegatePlugin30SwitchNewsSourcePreferenceFlow_newsPodcastIdentifier);
            uint64_t v418 = *(void *)(v270
                             + OBJC_IVAR____TtC23AudioFlowDelegatePlugin30SwitchNewsSourcePreferenceFlow_newsPodcastIdentifier
                             + 8);
            uint64_t *v417 = v416;
            v417[1] = v419;
            __n128 v420 = swift_bridgeObjectRelease(v418);
            v421 = v565;
            ((void (*)(char *, char *, uint64_t, __n128))v603)(v565, v406, v272, v420);
            uint64_t v422 = swift_retain_n(v270, 4LL);
            v423 = (os_log_s *)Logger.logObject.getter(v422);
            os_log_type_t v424 = static os_log_type_t.debug.getter();
            if (os_log_type_enabled(v423, v424))
            {
              uint64_t v425 = swift_slowAlloc(22LL, -1LL);
              v426 = (uint64_t *)swift_slowAlloc(16LL, -1LL);
              *(_DWORD *)uint64_t v425 = 138412546;
              uint64_t v427 = v413[1];
              if (v427)
              {
                v428 = v313;
                uint64_t v429 = *v413;
                unint64_t v430 = sub_6C9C();
                uint64_t v431 = swift_allocError(&type metadata for String, v430, 0LL, 0LL);
                uint64_t *v432 = v429;
                v432[1] = v427;
                v313 = v428;
                swift_bridgeObjectRetain(v427);
                uint64_t v427 = _swift_stdlib_bridgeErrorToNSError(v431);
                uint64_t v623 = v427;
              }

              else
              {
                uint64_t v623 = 0LL;
              }

              UnsafeMutableRawBufferPointer.copyMemory(from:)(&v623, v624);
              uint64_t *v426 = v427;
              swift_release_n(v621, 2LL);
              *(_WORD *)(v425 + 12) = 2112;
              uint64_t v472 = v417[1];
              if (v472)
              {
                uint64_t v473 = *v417;
                unint64_t v474 = sub_6C9C();
                uint64_t v475 = swift_allocError(&type metadata for String, v474, 0LL, 0LL);
                uint64_t *v476 = v473;
                v476[1] = v472;
                swift_bridgeObjectRetain(v472);
                uint64_t v472 = _swift_stdlib_bridgeErrorToNSError(v475);
                uint64_t v623 = v472;
              }

              else
              {
                uint64_t v623 = 0LL;
              }

              UnsafeMutableRawBufferPointer.copyMemory(from:)(&v623, v624);
              uint64_t v433 = v547;
              uint64_t v272 = v619;
              v426[1] = v472;
              swift_release_n(v621, 2LL);
              _os_log_impl( &dword_0,  v423,  v424,  "SwitchPodcastNewsPreferenceFlow#checkAndSetParse newsPodcastTopicId: %@ & newsPodcastIdentifier: %@.",  (uint8_t *)v425,  0x16u);
              uint64_t v477 = sub_6C5C((uint64_t *)&unk_286BC0);
              swift_arrayDestroy(v426, 2LL, v477);
              swift_slowDealloc(v426, -1LL, -1LL);
              swift_slowDealloc(v425, -1LL, -1LL);
              v421 = v565;
              v312 = (void (*)(char *, uint64_t))v620;
            }

            else
            {
              swift_release_n(v270, 4LL);
              uint64_t v433 = v547;
            }

            v312(v421, v272);
            sub_DD994(v599);
            (*(void (**)(char *, uint64_t))(v546 + 8))(v313, v433);
            uint64_t v478 = type metadata accessor for NLIntent(0LL);
            (*(void (**)(char *, uint64_t))(*(void *)(v478 - 8) + 8LL))(v601, v478);
            sub_1F6CC(v606, &qword_28C8D8);
            return 1LL;
          }
        }

        else
        {
          uint64_t v316 = v562;
          sub_FF10(v307, v562, &qword_284DC8);
          if (v311(v310, 1LL, v305) != 1)
          {
            v401 = v555;
            (*(void (**)(char *, uint64_t, uint64_t))(v294 + 32))(v555, v310, v305);
            uint64_t v402 = sub_10430( &qword_284DF8,  (uint64_t (*)(uint64_t))&type metadata accessor for CommonAudio.MediaType,  (uint64_t)&protocol conformance descriptor for CommonAudio.MediaType);
            char v403 = dispatch thunk of static Equatable.== infix(_:_:)(v316, v401, v305, v402);
            v404 = *(void (**)(char *, uint64_t))(v294 + 8);
            v404(v401, v305);
            sub_1F6CC(v309, &qword_284DC8);
            sub_1F6CC((uint64_t)v308, &qword_284DC8);
            sub_DD994(v584);
            v404((char *)v316, v305);
            sub_1F6CC(v307, &qword_284DC8);
            v312 = (void (*)(char *, uint64_t))v620;
            uint64_t v270 = v621;
            v313 = v548;
            if ((v403 & 1) != 0) {
              goto LABEL_85;
            }
LABEL_67:
            v317 = v574;
            uint64_t v318 = ((uint64_t (*)(char *, char *, uint64_t))v603)(v574, v604, v272);
            v319 = (os_log_s *)Logger.logObject.getter(v318);
            os_log_type_t v320 = static os_log_type_t.error.getter();
            if (os_log_type_enabled(v319, v320))
            {
              v321 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
              *(_WORD *)v321 = 0;
              _os_log_impl( &dword_0,  v319,  v320,  "SwitchPodcastNewsPreferenceFlow#checkAndSetParse Update verb / news mediaType not present in AudioNLv3Intent.",  v321,  2u);
              swift_slowDealloc(v321, -1LL, -1LL);
            }

            v312(v317, v272);
            uint64_t v323 = v610;
            v322 = v611;
            v324 = v612;
            (*(void (**)(char *, void, void *))(v610 + 104))( v611,  enum case for AdditionalMetricsDescription.ModuleName.snspf(_:),  v612);
            uint64_t v325 = v607;
            v326 = v608;
            uint64_t v327 = v609;
            (*(void (**)(char *, void, uint64_t))(v607 + 104))( v608,  enum case for AdditionalMetricsDescription.SourceFunction.chkAndSetPrs(_:),  v609);
            uint64_t v620 = static AdditionalMetricsDescription.encodeInfo(module:source:statusReason:extraInfo:)( v322,  v326,  0xD00000000000003BLL,  0x8000000000222850LL,  0LL,  1LL);
            uint64_t v329 = v328;
            (*(void (**)(char *, uint64_t))(v325 + 8))(v326, v327);
            (*(void (**)(char *, void *))(v323 + 8))(v322, v324);
            uint64_t v330 = *(void *)(v270
                             + OBJC_IVAR____TtC23AudioFlowDelegatePlugin30SwitchNewsSourcePreferenceFlow_siriKitTaskLoggingProvider
                             + 24);
            uint64_t v621 = *(void *)(v270
                             + OBJC_IVAR____TtC23AudioFlowDelegatePlugin30SwitchNewsSourcePreferenceFlow_siriKitTaskLoggingProvider
                             + 32);
            sub_6EA8( (void *)(v270 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin30SwitchNewsSourcePreferenceFlow_siriKitTaskLoggingProvider),  v330);
            uint64_t v331 = v616;
            v332 = v617;
            uint64_t v333 = v618;
            (*(void (**)(char *, void, uint64_t))(v616 + 104))( v617,  enum case for TypeOfIntent.switchNewsPreference(_:),  v618);
            uint64_t v334 = enum case for ActivityType.failed(_:);
            uint64_t v335 = type metadata accessor for ActivityType(0LL);
            uint64_t v336 = *(void *)(v335 - 8);
            uint64_t v337 = (uint64_t)v615;
            (*(void (**)(char *, uint64_t, uint64_t))(v336 + 104))(v615, v334, v335);
            (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v336 + 56))(v337, 0LL, 1LL, v335);
            uint64_t v338 = type metadata accessor for TemplatingResult(0LL);
            uint64_t v339 = (uint64_t)v614;
            (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v338 - 8) + 56LL))( v614,  1LL,  1LL,  v338);
            uint64_t v340 = type metadata accessor for SiriKitReliabilityCodes(0LL);
            uint64_t v341 = (uint64_t)v613;
            (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v340 - 8) + 56LL))( v613,  1LL,  1LL,  v340);
            dispatch thunk of SiriKitTaskLoggingProviding.submitMetric(typeOfIntent:activityType:templateResult:statusReason:description:)( v332,  v337,  v339,  v341,  v620,  v329,  v330,  v621);
            swift_bridgeObjectRelease(v329);
            sub_1F6CC(v341, &qword_2845A0);
            sub_1F6CC(v339, (uint64_t *)&unk_286BD0);
            sub_1F6CC(v337, &qword_2845A8);
            (*(void (**)(char *, uint64_t))(v331 + 8))(v332, v333);
            sub_DD994(v599);
            goto LABEL_70;
          }

          sub_1F6CC(v309, &qword_284DC8);
          sub_1F6CC((uint64_t)v308, &qword_284DC8);
          sub_DD994(v584);
          (*(void (**)(uint64_t, uint64_t))(v294 + 8))(v316, v305);
        }

        sub_1F6CC(v307, &qword_284DA0);
        uint64_t v270 = v621;
LABEL_66:
        v312 = (void (*)(char *, uint64_t))v620;
        goto LABEL_67;
      }
    }

    else
    {
      uint64_t v273 = v567;
      sub_FF10(v262, v567, &qword_284DB0);
      if (v266(v265, 1LL, v261) != 1)
      {
        uint64_t v287 = v229;
        uint64_t v288 = v273;
        uint64_t v289 = v596;
        v290 = v579;
        (*(void (**)(char *, uint64_t, uint64_t))(v596 + 32))(v579, v265, v261);
        uint64_t v291 = sub_10430( (unint64_t *)&qword_284E08,  (uint64_t (*)(uint64_t))&type metadata accessor for CommonAudio.Verb,  (uint64_t)&protocol conformance descriptor for CommonAudio.Verb);
        char v292 = dispatch thunk of static Equatable.== infix(_:_:)(v288, v290, v261, v291);
        v293 = *(void (**)(char *, uint64_t))(v289 + 8);
        v293(v290, v261);
        sub_1F6CC(v585, &qword_284DB0);
        sub_1F6CC(v287, &qword_284DB0);
        v293((char *)v288, v261);
        uint64_t v268 = (uint64_t)v583;
        uint64_t v264 = v590;
        sub_1F6CC(v262, &qword_284DB0);
        uint64_t v271 = v586;
        sub_FE7FC(v599, v586);
        uint64_t v270 = v621;
        uint64_t v272 = v619;
        if ((v292 & 1) != 0) {
          goto LABEL_48;
        }
LABEL_49:
        IntentNodeTraversable.value<A>(forNode:)(&v623, qword_28E990, v597, v605);
        uint64_t v296 = v576;
        if (v623 == 11)
        {
          uint64_t v297 = v576;
          uint64_t v298 = 1LL;
        }

        else
        {
          sub_C09BC(v623);
          uint64_t v297 = v296;
          uint64_t v298 = 0LL;
        }

        uint64_t v299 = v595;
        v231((char *)v297, v298, 1LL, v595);
        v300 = v579;
        ((void (*)(uint64_t, void, uint64_t))v602)(v268, enum case for CommonAudio.Verb.modify(_:), v299);
        v231((char *)v268, 0LL, 1LL, v299);
        uint64_t v301 = *(int *)(v264 + 48);
        uint64_t v302 = v570;
        uint64_t v303 = v570 + v301;
        sub_FF10(v296, v570, &qword_284DB0);
        sub_FF10(v268, v303, &qword_284DB0);
        if (v266(v302, 1LL, v299) == 1)
        {
          sub_1F6CC(v268, &qword_284DB0);
          sub_1F6CC(v296, &qword_284DB0);
          sub_DD994(v586);
          int v304 = v266(v303, 1LL, v299);
          uint64_t v294 = v582;
          if (v304 == 1)
          {
            sub_1F6CC(v302, &qword_284DB0);
            uint64_t v295 = v584;
            uint64_t v272 = v619;
            goto LABEL_55;
          }
        }

        else
        {
          uint64_t v314 = v563;
          sub_FF10(v302, v563, &qword_284DB0);
          int v315 = v266(v303, 1LL, v299);
          uint64_t v294 = v582;
          if (v315 != 1)
          {
            uint64_t v394 = v314;
            uint64_t v395 = v596;
            (*(void (**)(char *, uint64_t, uint64_t))(v596 + 32))(v300, v303, v299);
            uint64_t v396 = sub_10430( (unint64_t *)&qword_284E08,  (uint64_t (*)(uint64_t))&type metadata accessor for CommonAudio.Verb,  (uint64_t)&protocol conformance descriptor for CommonAudio.Verb);
            uint64_t v397 = v268;
            char v398 = dispatch thunk of static Equatable.== infix(_:_:)(v394, v300, v299, v396);
            uint64_t v399 = v270;
            v400 = *(void (**)(char *, uint64_t))(v395 + 8);
            v400(v300, v299);
            sub_1F6CC(v397, &qword_284DB0);
            sub_1F6CC(v576, &qword_284DB0);
            sub_DD994(v586);
            v400((char *)v394, v299);
            uint64_t v270 = v399;
            sub_1F6CC(v302, &qword_284DB0);
            uint64_t v295 = v584;
            sub_FE7FC(v599, v584);
            uint64_t v305 = v578;
            uint64_t v306 = v577;
            uint64_t v307 = (uint64_t)v573;
            v308 = v572;
            uint64_t v309 = (uint64_t)v571;
            uint64_t v272 = v619;
            if ((v398 & 1) != 0) {
              goto LABEL_56;
            }
LABEL_62:
            sub_DD994(v295);
            goto LABEL_66;
          }

          sub_1F6CC(v268, &qword_284DB0);
          sub_1F6CC(v296, &qword_284DB0);
          sub_DD994(v586);
          (*(void (**)(uint64_t, uint64_t))(v596 + 8))(v314, v299);
        }

        sub_1F6CC(v302, &qword_284DA8);
        uint64_t v295 = v584;
        sub_FE7FC(v599, v584);
        uint64_t v272 = v619;
        goto LABEL_62;
      }

      sub_1F6CC(v585, &qword_284DB0);
      sub_1F6CC(v229, &qword_284DB0);
      (*(void (**)(uint64_t, uint64_t))(v596 + 8))(v273, v261);
      uint64_t v270 = v621;
    }

    sub_1F6CC(v591, &qword_284DA8);
    sub_FE7FC(v599, v586);
    goto LABEL_49;
  }

  if (v158 != enum case for Parse.pommesResponse(_:))
  {
    (*(void (**)(void **, uint64_t))(v105 + 8))(v157, v155);
LABEL_32:
    if (qword_283888 != -1) {
      swift_once(&qword_283888, sub_BFC5C);
    }
    uint64_t v234 = sub_6960(v156, (uint64_t)qword_2969C8);
    uint64_t v235 = v620;
    v236 = v600;
    uint64_t v237 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v620 + 16))(v600, v234, v156);
    v238 = (os_log_s *)Logger.logObject.getter(v237);
    os_log_type_t v239 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v238, v239))
    {
      v240 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)v240 = 0;
      _os_log_impl( &dword_0,  v238,  v239,  "SwitchPodcastNewsPreferenceFlow#checkAndSetParse received non-pommesResponse parse.",  v240,  2u);
      swift_slowDealloc(v240, -1LL, -1LL);
    }

    (*(void (**)(char *, uint64_t))(v235 + 8))(v236, v156);
    uint64_t v242 = v610;
    v241 = v611;
    v243 = v612;
    (*(void (**)(char *, void, void *))(v610 + 104))( v611,  enum case for AdditionalMetricsDescription.ModuleName.snspf(_:),  v612);
    uint64_t v244 = v607;
    v245 = v608;
    uint64_t v246 = v609;
    (*(void (**)(char *, void, uint64_t))(v607 + 104))( v608,  enum case for AdditionalMetricsDescription.SourceFunction.chkAndSetPrs(_:),  v609);
    uint64_t v620 = static AdditionalMetricsDescription.encodeInfo(module:source:statusReason:extraInfo:)( v241,  v245,  0xD000000000000021LL,  0x8000000000222750LL,  0LL,  1LL);
    uint64_t v248 = v247;
    (*(void (**)(char *, uint64_t))(v244 + 8))(v245, v246);
    (*(void (**)(char *, void *))(v242 + 8))(v241, v243);
    uint64_t v249 = *(void *)(v150
                     + OBJC_IVAR____TtC23AudioFlowDelegatePlugin30SwitchNewsSourcePreferenceFlow_siriKitTaskLoggingProvider
                     + 24);
    uint64_t v621 = *(void *)(v150
                     + OBJC_IVAR____TtC23AudioFlowDelegatePlugin30SwitchNewsSourcePreferenceFlow_siriKitTaskLoggingProvider
                     + 32);
    sub_6EA8( (void *)(v150 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin30SwitchNewsSourcePreferenceFlow_siriKitTaskLoggingProvider),  v249);
    uint64_t v250 = v616;
    v251 = v617;
    uint64_t v252 = v618;
    (*(void (**)(char *, void, uint64_t))(v616 + 104))( v617,  enum case for TypeOfIntent.switchNewsPreference(_:),  v618);
    uint64_t v253 = enum case for ActivityType.failed(_:);
    uint64_t v254 = type metadata accessor for ActivityType(0LL);
    uint64_t v255 = *(void *)(v254 - 8);
    uint64_t v256 = (uint64_t)v615;
    (*(void (**)(char *, uint64_t, uint64_t))(v255 + 104))(v615, v253, v254);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v255 + 56))(v256, 0LL, 1LL, v254);
    uint64_t v257 = type metadata accessor for TemplatingResult(0LL);
    uint64_t v258 = (uint64_t)v614;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v257 - 8) + 56LL))(v614, 1LL, 1LL, v257);
    uint64_t v259 = type metadata accessor for SiriKitReliabilityCodes(0LL);
    uint64_t v260 = (uint64_t)v613;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v259 - 8) + 56LL))(v613, 1LL, 1LL, v259);
    dispatch thunk of SiriKitTaskLoggingProviding.submitMetric(typeOfIntent:activityType:templateResult:statusReason:description:)( v251,  v256,  v258,  v260,  v620,  v248,  v249,  v621);
    swift_bridgeObjectRelease(v248);
    sub_1F6CC(v260, &qword_2845A0);
    sub_1F6CC(v258, (uint64_t *)&unk_286BD0);
    sub_1F6CC(v256, &qword_2845A8);
    (*(void (**)(char *, uint64_t))(v250 + 8))(v251, v252);
    goto LABEL_37;
  }

  (*(void (**)(void **, uint64_t))(v105 + 96))(v157, v155);
  v199 = (char *)*v157;
  if (qword_283888 != -1) {
    swift_once(&qword_283888, sub_BFC5C);
  }
  v200 = (uint64_t (*)(char *))sub_6960(v156, (uint64_t)qword_2969C8);
  v201 = *(char **)(v620 + 16);
  v603 = v200;
  v605 = v201;
  uint64_t v202 = ((uint64_t (*)(char *))v201)(v592);
  v203 = (os_log_s *)Logger.logObject.getter(v202);
  os_log_type_t v204 = static os_log_type_t.debug.getter();
  BOOL v205 = os_log_type_enabled(v203, v204);
  v206 = v587;
  if (v205)
  {
    v207 = v199;
    v208 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
    *(_WORD *)v208 = 0;
    _os_log_impl( &dword_0,  v203,  v204,  "SwitchPodcastNewsPreferenceFlow#checkAndSetParse received .pommesResponse parse.",  v208,  2u);
    v209 = v208;
    v199 = v207;
    swift_slowDealloc(v209, -1LL, -1LL);
  }

  v210 = *(void (**)(char *, uint64_t))(v620 + 8);
  v210(v592, v156);
  v211 = v199;
  v212 = (char *)sub_10470();
  uint64_t v213 = v589;
  uint64_t v214 = v588;
  if (!v212)
  {
    v274 = v568;
    ((void (*)(char *, uint64_t (*)(char *), uint64_t))v605)(v568, v603, v156);
    v275 = v211;
    v276 = (os_log_s *)Logger.logObject.getter(v275);
    os_log_type_t v277 = static os_log_type_t.error.getter();
    BOOL v278 = os_log_type_enabled(v276, v277);
    v605 = v275;
    if (v278)
    {
      uint64_t v279 = swift_slowAlloc(12LL, -1LL);
      uint64_t v620 = (uint64_t)v210;
      v280 = (uint8_t *)v279;
      uint64_t v281 = swift_slowAlloc(32LL, -1LL);
      uint64_t v623 = v281;
      *(_DWORD *)v280 = 136315138;
      uint64_t v282 = dispatch thunk of PommesResponse.experiences.getter(v281);
      uint64_t v283 = type metadata accessor for Experience(0LL);
      uint64_t v284 = Array.description.getter(v282, v283);
      unint64_t v286 = v285;
      swift_bridgeObjectRelease(v282);
      uint64_t v622 = sub_6978(v284, v286, &v623);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v622, &v623);

      swift_bridgeObjectRelease(v286);
      _os_log_impl( &dword_0,  v276,  v277,  "SwitchPodcastNewsPreferenceFlow#checkAndSetParse pommesResponse doesn't contain audioExperience %s.",  v280,  0xCu);
      swift_arrayDestroy(v281, 1LL, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v281, -1LL, -1LL);
      swift_slowDealloc(v280, -1LL, -1LL);

      ((void (*)(char *, uint64_t))v620)(v568, v619);
    }

    else
    {

      v210(v274, v156);
    }

    uint64_t v373 = v621;
    uint64_t v375 = v610;
    v374 = v611;
    v376 = v612;
    (*(void (**)(char *, void, void *))(v610 + 104))( v611,  enum case for AdditionalMetricsDescription.ModuleName.snspf(_:),  v612);
    uint64_t v377 = v607;
    v378 = v608;
    uint64_t v379 = v609;
    (*(void (**)(char *, void, uint64_t))(v607 + 104))( v608,  enum case for AdditionalMetricsDescription.SourceFunction.chkAndSetPrs(_:),  v609);
    uint64_t v620 = static AdditionalMetricsDescription.encodeInfo(module:source:statusReason:extraInfo:)( v374,  v378,  0xD00000000000002FLL,  0x8000000000222780LL,  0LL,  1LL);
    uint64_t v381 = v380;
    (*(void (**)(char *, uint64_t))(v377 + 8))(v378, v379);
    (*(void (**)(char *, void *))(v375 + 8))(v374, v376);
    uint64_t v382 = *(void *)(v373
                     + OBJC_IVAR____TtC23AudioFlowDelegatePlugin30SwitchNewsSourcePreferenceFlow_siriKitTaskLoggingProvider
                     + 24);
    uint64_t v621 = *(void *)(v373
                     + OBJC_IVAR____TtC23AudioFlowDelegatePlugin30SwitchNewsSourcePreferenceFlow_siriKitTaskLoggingProvider
                     + 32);
    sub_6EA8( (void *)(v373 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin30SwitchNewsSourcePreferenceFlow_siriKitTaskLoggingProvider),  v382);
    uint64_t v384 = v616;
    v383 = v617;
    uint64_t v385 = v618;
    (*(void (**)(char *, void, uint64_t))(v616 + 104))( v617,  enum case for TypeOfIntent.switchNewsPreference(_:),  v618);
    uint64_t v386 = enum case for ActivityType.failed(_:);
    uint64_t v387 = type metadata accessor for ActivityType(0LL);
    uint64_t v388 = *(void *)(v387 - 8);
    uint64_t v389 = (uint64_t)v615;
    (*(void (**)(char *, uint64_t, uint64_t))(v388 + 104))(v615, v386, v387);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v388 + 56))(v389, 0LL, 1LL, v387);
    uint64_t v390 = type metadata accessor for TemplatingResult(0LL);
    uint64_t v391 = (uint64_t)v614;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v390 - 8) + 56LL))(v614, 1LL, 1LL, v390);
    uint64_t v392 = type metadata accessor for SiriKitReliabilityCodes(0LL);
    uint64_t v393 = (uint64_t)v613;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v392 - 8) + 56LL))(v613, 1LL, 1LL, v392);
    dispatch thunk of SiriKitTaskLoggingProviding.submitMetric(typeOfIntent:activityType:templateResult:statusReason:description:)( v383,  v389,  v391,  v393,  v620,  v381,  v382,  v621);

    swift_bridgeObjectRelease(v381);
    sub_1F6CC(v393, &qword_2845A0);
    sub_1F6CC(v391, (uint64_t *)&unk_286BD0);
    sub_1F6CC(v389, &qword_2845A8);
    (*(void (**)(char *, uint64_t))(v384 + 8))(v383, v385);
    goto LABEL_37;
  }

  v602 = v211;
  v601 = v212;
  Experience.userDialogAct.getter(v212);
  type metadata accessor for AudioUsoIntent(0LL);
  (*(void (**)(char *, char *, uint64_t))(v214 + 16))(v145, v206, v213);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v214 + 56))(v145, 0LL, 1LL, v213);
  uint64_t v215 = AudioUsoIntent.__allocating_init(userDialogAct:)(v145);
  if (!v215)
  {
    v345 = v559;
    uint64_t v346 = ((uint64_t (*)(char *, uint64_t (*)(char *), uint64_t))v605)(v559, v603, v156);
    v347 = (os_log_s *)Logger.logObject.getter(v346);
    os_log_type_t v348 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v347, v348))
    {
      v349 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)v349 = 0;
      _os_log_impl( &dword_0,  v347,  v348,  "SwitchPodcastNewsPreferenceFlow#checkAndSetParse AudioUsoIntent failed to be constructed.",  v349,  2u);
      swift_slowDealloc(v349, -1LL, -1LL);
    }

    v210(v345, v156);
    uint64_t v351 = v610;
    v350 = v611;
    v352 = v612;
    (*(void (**)(char *, void, void *))(v610 + 104))( v611,  enum case for AdditionalMetricsDescription.ModuleName.snspf(_:),  v612);
    uint64_t v353 = v607;
    v354 = v608;
    uint64_t v355 = v609;
    (*(void (**)(char *, void, uint64_t))(v607 + 104))( v608,  enum case for AdditionalMetricsDescription.SourceFunction.chkAndSetPrs(_:),  v609);
    uint64_t v620 = static AdditionalMetricsDescription.encodeInfo(module:source:statusReason:extraInfo:)( v350,  v354,  0xD000000000000022LL,  0x80000000002227B0LL,  0LL,  1LL);
    uint64_t v357 = v356;
    (*(void (**)(char *, uint64_t))(v353 + 8))(v354, v355);
    (*(void (**)(char *, void *))(v351 + 8))(v350, v352);
    v358 = (void *)(v621
                    + OBJC_IVAR____TtC23AudioFlowDelegatePlugin30SwitchNewsSourcePreferenceFlow_siriKitTaskLoggingProvider);
    uint64_t v359 = *(void *)(v621
                     + OBJC_IVAR____TtC23AudioFlowDelegatePlugin30SwitchNewsSourcePreferenceFlow_siriKitTaskLoggingProvider
                     + 24);
    uint64_t v621 = *(void *)(v621
                     + OBJC_IVAR____TtC23AudioFlowDelegatePlugin30SwitchNewsSourcePreferenceFlow_siriKitTaskLoggingProvider
                     + 32);
    sub_6EA8(v358, v359);
    uint64_t v360 = v616;
    v361 = v617;
    uint64_t v362 = v618;
    (*(void (**)(char *, void, uint64_t))(v616 + 104))( v617,  enum case for TypeOfIntent.switchNewsPreference(_:),  v618);
    uint64_t v363 = enum case for ActivityType.failed(_:);
    uint64_t v364 = type metadata accessor for ActivityType(0LL);
    uint64_t v365 = *(void *)(v364 - 8);
    v366 = v615;
    (*(void (**)(char *, uint64_t, uint64_t))(v365 + 104))(v615, v363, v364);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v365 + 56))(v366, 0LL, 1LL, v364);
    uint64_t v367 = type metadata accessor for TemplatingResult(0LL);
    uint64_t v368 = (uint64_t)v614;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v367 - 8) + 56LL))(v614, 1LL, 1LL, v367);
    uint64_t v369 = type metadata accessor for SiriKitReliabilityCodes(0LL);
    uint64_t v370 = (uint64_t)v613;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v369 - 8) + 56LL))(v613, 1LL, 1LL, v369);
    dispatch thunk of SiriKitTaskLoggingProviding.submitMetric(typeOfIntent:activityType:templateResult:statusReason:description:)( v361,  v366,  v368,  v370,  v620,  v357,  v359,  v621);

    swift_bridgeObjectRelease(v357);
    sub_1F6CC(v370, &qword_2845A0);
    sub_1F6CC(v368, (uint64_t *)&unk_286BD0);
    uint64_t v371 = (uint64_t)v366;
    goto LABEL_101;
  }

  uint64_t v620 = (uint64_t)v210;
  uint64_t v216 = v575;
  v604 = (char *)v215;
  dispatch thunk of AudioUsoIntent.verb.getter(v215);
  uint64_t v217 = v596;
  uint64_t v218 = v569;
  uint64_t v219 = v595;
  (*(void (**)(uint64_t, void, uint64_t))(v596 + 104))(v569, enum case for CommonAudio.Verb.update(_:), v595);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v217 + 56))(v218, 0LL, 1LL, v219);
  uint64_t v220 = v566;
  uint64_t v221 = v566 + *(int *)(v590 + 48);
  sub_FF10(v216, v566, &qword_284DB0);
  v600 = (char *)v221;
  uint64_t v222 = v219;
  sub_FF10(v218, v221, &qword_284DB0);
  v223 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v217 + 48);
  if (v223((char *)v220, 1LL, v222) == 1)
  {
    sub_1F6CC(v218, &qword_284DB0);
    sub_1F6CC(v575, &qword_284DB0);
    int v224 = v223(v600, 1LL, v222);
    v225 = (void (*)(char *, uint64_t))v620;
    uint64_t v226 = v220;
    if (v224 == 1)
    {
      uint64_t v227 = sub_1F6CC(v220, &qword_284DB0);
      goto LABEL_92;
    }

    goto LABEL_79;
  }

  uint64_t v372 = v556;
  sub_FF10(v220, v556, &qword_284DB0);
  uint64_t v226 = v220;
  if (v223(v600, 1LL, v222) == 1)
  {
    sub_1F6CC(v569, &qword_284DB0);
    sub_1F6CC(v575, &qword_284DB0);
    (*(void (**)(uint64_t, uint64_t))(v596 + 8))(v372, v222);
    v225 = (void (*)(char *, uint64_t))v620;
LABEL_79:
    sub_1F6CC(v226, &qword_284DA8);
LABEL_98:
    v449 = v564;
    uint64_t v450 = ((uint64_t (*)(char *, uint64_t (*)(char *), uint64_t))v605)(v564, v603, v156);
    v451 = (os_log_s *)Logger.logObject.getter(v450);
    os_log_type_t v452 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v451, v452))
    {
      v453 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)v453 = 0;
      _os_log_impl( &dword_0,  v451,  v452,  "SwitchPodcastNewsPreferenceFlow#checkAndSetParse Update verb / news mediaType not present in AudioUsoIntent.",  v453,  2u);
      swift_slowDealloc(v453, -1LL, -1LL);
    }

    v225(v449, v156);
    uint64_t v455 = v610;
    v454 = v611;
    v456 = v612;
    (*(void (**)(char *, void, void *))(v610 + 104))( v611,  enum case for AdditionalMetricsDescription.ModuleName.snspf(_:),  v612);
    uint64_t v457 = v607;
    v458 = v608;
    uint64_t v459 = v609;
    (*(void (**)(char *, void, uint64_t))(v607 + 104))( v608,  enum case for AdditionalMetricsDescription.SourceFunction.chkAndSetPrs(_:),  v609);
    uint64_t v620 = static AdditionalMetricsDescription.encodeInfo(module:source:statusReason:extraInfo:)( v454,  v458,  0xD00000000000003ALL,  0x80000000002227E0LL,  0LL,  1LL);
    uint64_t v461 = v460;
    (*(void (**)(char *, uint64_t))(v457 + 8))(v458, v459);
    (*(void (**)(char *, void *))(v455 + 8))(v454, v456);
    v462 = (void *)(v621
                    + OBJC_IVAR____TtC23AudioFlowDelegatePlugin30SwitchNewsSourcePreferenceFlow_siriKitTaskLoggingProvider);
    uint64_t v463 = *(void *)(v621
                     + OBJC_IVAR____TtC23AudioFlowDelegatePlugin30SwitchNewsSourcePreferenceFlow_siriKitTaskLoggingProvider
                     + 24);
    uint64_t v621 = *(void *)(v621
                     + OBJC_IVAR____TtC23AudioFlowDelegatePlugin30SwitchNewsSourcePreferenceFlow_siriKitTaskLoggingProvider
                     + 32);
    sub_6EA8(v462, v463);
    uint64_t v360 = v616;
    v361 = v617;
    uint64_t v362 = v618;
    (*(void (**)(char *, void, uint64_t))(v616 + 104))( v617,  enum case for TypeOfIntent.switchNewsPreference(_:),  v618);
    uint64_t v464 = enum case for ActivityType.failed(_:);
    uint64_t v465 = type metadata accessor for ActivityType(0LL);
    uint64_t v466 = *(void *)(v465 - 8);
    v467 = v615;
    (*(void (**)(char *, uint64_t, uint64_t))(v466 + 104))(v615, v464, v465);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v466 + 56))(v467, 0LL, 1LL, v465);
    uint64_t v468 = type metadata accessor for TemplatingResult(0LL);
    uint64_t v469 = (uint64_t)v614;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v468 - 8) + 56LL))(v614, 1LL, 1LL, v468);
    uint64_t v470 = type metadata accessor for SiriKitReliabilityCodes(0LL);
    uint64_t v471 = (uint64_t)v613;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v470 - 8) + 56LL))(v613, 1LL, 1LL, v470);
    dispatch thunk of SiriKitTaskLoggingProviding.submitMetric(typeOfIntent:activityType:templateResult:statusReason:description:)( v361,  v467,  v469,  v471,  v620,  v461,  v463,  v621);

    swift_bridgeObjectRelease(v461);
    swift_release(v604);
    sub_1F6CC(v471, &qword_2845A0);
    sub_1F6CC(v469, (uint64_t *)&unk_286BD0);
    uint64_t v371 = (uint64_t)v467;
LABEL_101:
    sub_1F6CC(v371, &qword_2845A8);
    (*(void (**)(char *, uint64_t))(v360 + 8))(v361, v362);
    (*(void (**)(char *, uint64_t))(v588 + 8))(v587, v589);
LABEL_37:
    (*(void (**)(char *, uint64_t))(v546 + 8))(v548, v547);
LABEL_71:
    sub_1F6CC(v606, &qword_28C8D8);
    return 0LL;
  }

  uint64_t v434 = v596;
  v435 = v579;
  (*(void (**)(char *, char *, uint64_t))(v596 + 32))(v579, v600, v222);
  uint64_t v436 = sub_10430( (unint64_t *)&qword_284E08,  (uint64_t (*)(uint64_t))&type metadata accessor for CommonAudio.Verb,  (uint64_t)&protocol conformance descriptor for CommonAudio.Verb);
  LODWORD(v600) = dispatch thunk of static Equatable.== infix(_:_:)(v372, v435, v222, v436);
  v437 = *(void (**)(char *, uint64_t))(v434 + 8);
  v437(v435, v222);
  sub_1F6CC(v569, &qword_284DB0);
  sub_1F6CC(v575, &qword_284DB0);
  v437((char *)v372, v222);
  uint64_t v227 = sub_1F6CC(v220, &qword_284DB0);
  v225 = (void (*)(char *, uint64_t))v620;
LABEL_92:
  uint64_t v438 = v561;
  dispatch thunk of AudioUsoIntent.mediaType.getter(v227);
  uint64_t v439 = v582;
  uint64_t v440 = v557;
  uint64_t v441 = v578;
  (*(void (**)(uint64_t, void, uint64_t))(v582 + 104))( v557,  enum case for CommonAudio.MediaType.news(_:),  v578);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v439 + 56))(v440, 0LL, 1LL, v441);
  uint64_t v442 = v560;
  v443 = (char *)(v560 + *(int *)(v577 + 48));
  sub_FF10(v438, v560, &qword_284DC8);
  v600 = v443;
  uint64_t v444 = (uint64_t)v443;
  uint64_t v445 = v441;
  sub_FF10(v440, v444, &qword_284DC8);
  v446 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v439 + 48);
  if (v446((char *)v442, 1LL, v441) != 1)
  {
    uint64_t v447 = v553;
    sub_FF10(v442, v553, &qword_284DC8);
    v448 = v600;
    if (v446(v600, 1LL, v441) != 1)
    {
      uint64_t v479 = v582;
      v480 = v555;
      (*(void (**)(char *, char *, uint64_t))(v582 + 32))(v555, v448, v445);
      uint64_t v481 = sub_10430( &qword_284DF8,  (uint64_t (*)(uint64_t))&type metadata accessor for CommonAudio.MediaType,  (uint64_t)&protocol conformance descriptor for CommonAudio.MediaType);
      LODWORD(v600) = dispatch thunk of static Equatable.== infix(_:_:)(v447, v480, v445, v481);
      v482 = *(void (**)(char *, uint64_t))(v479 + 8);
      v482(v480, v445);
      sub_1F6CC(v557, &qword_284DC8);
      sub_1F6CC(v561, &qword_284DC8);
      v482((char *)v447, v445);
      sub_1F6CC(v560, &qword_284DC8);
      v225 = (void (*)(char *, uint64_t))v620;
      goto LABEL_98;
    }

    sub_1F6CC(v557, &qword_284DC8);
    sub_1F6CC(v561, &qword_284DC8);
    (*(void (**)(uint64_t, uint64_t))(v582 + 8))(v447, v441);
    goto LABEL_97;
  }

  sub_1F6CC(v440, &qword_284DC8);
  uint64_t v442 = v560;
  sub_1F6CC(v561, &qword_284DC8);
  if (v446(v600, 1LL, v441) != 1)
  {
LABEL_97:
    sub_1F6CC(v442, &qword_284DA0);
    v225 = (void (*)(char *, uint64_t))v620;
    goto LABEL_98;
  }

  sub_1F6CC(v442, &qword_284DC8);
  v225 = (void (*)(char *, uint64_t))v620;
LABEL_109:
  v483 = v549;
  v484 = v603;
  v485 = v605;
  uint64_t v486 = ((uint64_t (*)(char *, uint64_t (*)(char *), uint64_t))v605)(v549, v603, v156);
  v487 = (os_log_s *)Logger.logObject.getter(v486);
  os_log_type_t v488 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v487, v488))
  {
    v489 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
    *(_WORD *)v489 = 0;
    _os_log_impl( &dword_0,  v487,  v488,  "SwitchPodcastNewsPreferenceFlow#checkAndSetParse Correct update verb and news mediaType present in AudioUsoIntent.",  v489,  2u);
    swift_slowDealloc(v489, -1LL, -1LL);
  }

  uint64_t v490 = ((uint64_t (*)(char *, uint64_t))v225)(v483, v156);
  uint64_t v491 = dispatch thunk of AudioUsoIntent.newsPodcastTopicId.getter(v490);
  uint64_t v492 = v621;
  v493 = (uint64_t *)(v621 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin30SwitchNewsSourcePreferenceFlow_newsPodcastTopicId);
  uint64_t v494 = *(void *)(v621
                   + OBJC_IVAR____TtC23AudioFlowDelegatePlugin30SwitchNewsSourcePreferenceFlow_newsPodcastTopicId
                   + 8);
  uint64_t *v493 = v491;
  v493[1] = v495;
  __n128 v496 = swift_bridgeObjectRelease(v494);
  uint64_t v497 = dispatch thunk of AudioUsoIntent.newsPodcastIdentifier.getter(v496);
  v498 = (uint64_t *)(v492
                   + OBJC_IVAR____TtC23AudioFlowDelegatePlugin30SwitchNewsSourcePreferenceFlow_newsPodcastIdentifier);
  uint64_t v499 = *(void *)(v492
                   + OBJC_IVAR____TtC23AudioFlowDelegatePlugin30SwitchNewsSourcePreferenceFlow_newsPodcastIdentifier
                   + 8);
  uint64_t *v498 = v497;
  v498[1] = v500;
  __n128 v501 = swift_bridgeObjectRelease(v499);
  ((void (*)(char *, uint64_t (*)(char *), uint64_t, __n128))v485)(v554, v484, v156, v501);
  uint64_t v502 = swift_retain_n(v492, 4LL);
  v503 = (os_log_s *)Logger.logObject.getter(v502);
  int v504 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v503, (os_log_type_t)v504))
  {
    LODWORD(v603) = v504;
    uint64_t v505 = swift_slowAlloc(22LL, -1LL);
    v605 = (char *)swift_slowAlloc(16LL, -1LL);
    *(_DWORD *)uint64_t v505 = 138412546;
    uint64_t v506 = v493[1];
    if (v506)
    {
      uint64_t v507 = *v493;
      unint64_t v508 = sub_6C9C();
      uint64_t v509 = swift_allocError(&type metadata for String, v508, 0LL, 0LL);
      uint64_t *v510 = v507;
      v510[1] = v506;
      uint64_t v492 = v621;
      swift_bridgeObjectRetain(v506);
      uint64_t v506 = _swift_stdlib_bridgeErrorToNSError(v509);
      uint64_t v623 = v506;
    }

    else
    {
      uint64_t v623 = 0LL;
    }

    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v623, v624);
    *(void *)v605 = v506;
    uint64_t v514 = v492;
    swift_release_n(v492, 2LL);
    *(_WORD *)(v505 + 12) = 2112;
    uint64_t v515 = v498[1];
    if (v515)
    {
      uint64_t v516 = *v498;
      unint64_t v517 = sub_6C9C();
      uint64_t v518 = swift_allocError(&type metadata for String, v517, 0LL, 0LL);
      uint64_t *v519 = v516;
      v519[1] = v515;
      swift_bridgeObjectRetain(v515);
      uint64_t v515 = _swift_stdlib_bridgeErrorToNSError(v518);
      uint64_t v623 = v515;
    }

    else
    {
      uint64_t v623 = 0LL;
    }

    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v623, v624);
    uint64_t v512 = v551;
    v513 = v554;
    v520 = v605;
    *((void *)v605 + 1) = v515;
    swift_release_n(v514, 2LL);
    _os_log_impl( &dword_0,  v503,  (os_log_type_t)v603,  "SwitchPodcastNewsPreferenceFlow#checkAndSetParse newsPodcastTopicId: %@ & newsPodcastIdentifier: %@.",  (uint8_t *)v505,  0x16u);
    uint64_t v521 = sub_6C5C((uint64_t *)&unk_286BC0);
    swift_arrayDestroy(v520, 2LL, v521);
    swift_slowDealloc(v520, -1LL, -1LL);
    swift_slowDealloc(v505, -1LL, -1LL);

    uint64_t v511 = v552;
  }

  else
  {

    swift_release_n(v492, 4LL);
    uint64_t v511 = v552;
    uint64_t v512 = v551;
    v513 = v554;
  }

  ((void (*)(char *, uint64_t))v620)(v513, v156);
  uint64_t v523 = v610;
  v522 = v611;
  v524 = v612;
  (*(void (**)(char *, void, void *))(v610 + 104))( v611,  enum case for AdditionalMetricsDescription.ModuleName.snspf(_:),  v612);
  uint64_t v525 = v607;
  v526 = v608;
  uint64_t v527 = v609;
  (*(void (**)(char *, void, uint64_t))(v607 + 104))( v608,  enum case for AdditionalMetricsDescription.SourceFunction.chkAndSetPrs(_:),  v609);
  v528 = v550;
  (*(void (**)(char *, void, uint64_t))(v512 + 104))( v550,  enum case for AdditionalMetricsDescription.StatusReason.success(_:),  v511);
  uint64_t v343 = 1LL;
  uint64_t v529 = static AdditionalMetricsDescription.encodeInfo(module:source:statusReason:extraInfo:)( v522,  v526,  v528,  0LL,  1LL);
  uint64_t v619 = v530;
  uint64_t v620 = v529;
  (*(void (**)(char *, uint64_t))(v512 + 8))(v528, v511);
  (*(void (**)(char *, uint64_t))(v525 + 8))(v526, v527);
  (*(void (**)(char *, void *))(v523 + 8))(v522, v524);
  v531 = (void *)(v621
                  + OBJC_IVAR____TtC23AudioFlowDelegatePlugin30SwitchNewsSourcePreferenceFlow_siriKitTaskLoggingProvider);
  uint64_t v532 = *(void *)(v621
                   + OBJC_IVAR____TtC23AudioFlowDelegatePlugin30SwitchNewsSourcePreferenceFlow_siriKitTaskLoggingProvider
                   + 24);
  uint64_t v621 = *(void *)(v621
                   + OBJC_IVAR____TtC23AudioFlowDelegatePlugin30SwitchNewsSourcePreferenceFlow_siriKitTaskLoggingProvider
                   + 32);
  v612 = sub_6EA8(v531, v532);
  uint64_t v534 = v616;
  v533 = v617;
  uint64_t v535 = v618;
  (*(void (**)(char *, void, uint64_t))(v616 + 104))( v617,  enum case for TypeOfIntent.switchNewsPreference(_:),  v618);
  uint64_t v536 = enum case for ActivityType.completed(_:);
  uint64_t v537 = type metadata accessor for ActivityType(0LL);
  uint64_t v538 = *(void *)(v537 - 8);
  uint64_t v539 = (uint64_t)v615;
  (*(void (**)(char *, uint64_t, uint64_t))(v538 + 104))(v615, v536, v537);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v538 + 56))(v539, 0LL, 1LL, v537);
  uint64_t v540 = type metadata accessor for TemplatingResult(0LL);
  uint64_t v541 = (uint64_t)v614;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v540 - 8) + 56LL))(v614, 1LL, 1LL, v540);
  uint64_t v542 = type metadata accessor for SiriKitReliabilityCodes(0LL);
  uint64_t v543 = (uint64_t)v613;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v542 - 8) + 56LL))(v613, 1LL, 1LL, v542);
  uint64_t v544 = v619;
  dispatch thunk of SiriKitTaskLoggingProviding.submitMetric(typeOfIntent:activityType:templateResult:statusReason:description:)( v533,  v539,  v541,  v543,  v620,  v619,  v532,  v621);

  swift_release(v604);
  swift_bridgeObjectRelease(v544);
  sub_1F6CC(v543, &qword_2845A0);
  sub_1F6CC(v541, (uint64_t *)&unk_286BD0);
  sub_1F6CC(v539, &qword_2845A8);
  (*(void (**)(char *, uint64_t))(v534 + 8))(v533, v535);
  (*(void (**)(char *, uint64_t))(v588 + 8))(v587, v589);
  (*(void (**)(char *, uint64_t))(v546 + 8))(v548, v547);
  sub_1F6CC(v606, &qword_28C8D8);
  return v343;
}

uint64_t sub_1A8494()
{
  swift_bridgeObjectRelease(*(void *)(v0
                                      + OBJC_IVAR____TtC23AudioFlowDelegatePlugin30SwitchNewsSourcePreferenceFlow_newsPodcastTopicId
                                      + 8));
  swift_bridgeObjectRelease(*(void *)(v0
                                      + OBJC_IVAR____TtC23AudioFlowDelegatePlugin30SwitchNewsSourcePreferenceFlow_newsPodcastIdentifier
                                      + 8));
  swift_release(*(void *)(v0
                          + OBJC_IVAR____TtC23AudioFlowDelegatePlugin30SwitchNewsSourcePreferenceFlow_networkAvailabilityProvider));
  sub_6C3C((void *)(v0 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin30SwitchNewsSourcePreferenceFlow_audioFlowProvider));
  sub_6C3C((void *)(v0
                    + OBJC_IVAR____TtC23AudioFlowDelegatePlugin30SwitchNewsSourcePreferenceFlow_appleMediaServicesProvider));
  swift_release(*(void *)(v0
                          + OBJC_IVAR____TtC23AudioFlowDelegatePlugin30SwitchNewsSourcePreferenceFlow_playMediaCatDialogService));
  sub_6C3C((void *)(v0 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin30SwitchNewsSourcePreferenceFlow_publisher));
  sub_6C3C((void *)(v0
                    + OBJC_IVAR____TtC23AudioFlowDelegatePlugin30SwitchNewsSourcePreferenceFlow_siriKitTaskLoggingProvider));
  sub_6C3C((void *)(v0 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin30SwitchNewsSourcePreferenceFlow_featureFlagProvider));
  return v0;
}

uint64_t sub_1A8570()
{
  return swift_deallocClassInstance( v0,  *(unsigned int *)(*(void *)v0 + 48LL),  *(unsigned __int16 *)(*(void *)v0 + 52LL));
}

uint64_t sub_1A8594()
{
  return type metadata accessor for SwitchNewsSourcePreferenceFlow(0LL);
}

uint64_t type metadata accessor for SwitchNewsSourcePreferenceFlow(uint64_t a1)
{
  uint64_t result = qword_28C710;
  if (!qword_28C710) {
    return swift_getSingletonMetadata(a1, &nominal type descriptor for SwitchNewsSourcePreferenceFlow);
  }
  return result;
}

void sub_1A85D8(uint64_t a1)
{
  if (v3 <= 0x3F)
  {
    v6[0] = *(void *)(v2 - 8) + 64LL;
    sub_67DE8( 319LL,  (unint64_t *)&unk_28C720,  (uint64_t (*)(uint64_t))&type metadata accessor for Parse);
    if (v5 <= 0x3F)
    {
      v6[1] = *(void *)(v4 - 8) + 64LL;
      v6[2] = &unk_21A2C0;
      v6[3] = &unk_21A2D8;
      v6[4] = &unk_21A2D8;
      v6[5] = (char *)&value witness table for Builtin.NativeObject + 64;
      v6[6] = &unk_21A2F0;
      v6[7] = &unk_21A2F0;
      v6[8] = (char *)&value witness table for Builtin.NativeObject + 64;
      v6[9] = &unk_21A2F0;
      v6[10] = &unk_21A2F0;
      v6[11] = &unk_21A2F0;
      swift_updateClassMetadata2(a1, 256LL, 12LL, v6, a1 + 80);
    }
  }

uint64_t storeEnumTagSinglePayload for SwitchNewsSourcePreferenceFlow.HTTPCallAttemptState( _BYTE *a1, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    LODWORD(v4) = 1;
  }
  else {
    LODWORD(v4) = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v4 = v4;
  }
  else {
    uint64_t v4 = 0LL;
  }
  if (a2 <= 0xFE) {
    return ((uint64_t (*)(void))((char *)&loc_1A8700 + 4 * byte_21A275[v4]))();
  }
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1A8734 + 4 * byte_21A270[v4]))();
}

uint64_t sub_1A8734(uint64_t result)
{
  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A873C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2) {
    JUMPOUT(0x1A8744LL);
  }
  return result;
}

uint64_t sub_1A8750(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2) {
    JUMPOUT(0x1A8758LL);
  }
  *(_BYTE *)uint64_t result = a2 + 1;
  return result;
}

uint64_t sub_1A875C(uint64_t result)
{
  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A8764(uint64_t result)
{
  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for SwitchNewsSourcePreferenceFlow.HTTPCallAttemptState()
{
  return &type metadata for SwitchNewsSourcePreferenceFlow.HTTPCallAttemptState;
}

unint64_t sub_1A8784()
{
  unint64_t result = qword_28C8C0[0];
  if (!qword_28C8C0[0])
  {
    unint64_t result = swift_getWitnessTable(&unk_21A368, &type metadata for SwitchNewsSourcePreferenceFlow.HTTPCallAttemptState);
    atomic_store(result, qword_28C8C0);
  }

  return result;
}

uint64_t sub_1A87C8(uint64_t a1)
{
  return sub_19E330(a1) & 1;
}

uint64_t sub_1A87EC(uint64_t a1, uint64_t a2)
{
  return sub_19E564(a1, a2);
}

uint64_t sub_1A880C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = type metadata accessor for SwitchNewsSourcePreferenceFlow(0LL);
  return Flow<>.exitValue.getter(v3, a2);
}

uint64_t sub_1A8834()
{
  return swift_deallocObject(v0, 32LL, 7LL);
}

uint64_t sub_1A8858(uint64_t a1, char a2)
{
  return sub_1A46DC(a1, a2 & 1, *(void (**)(void))(v2 + 16));
}

uint64_t sub_1A8868(uint64_t a1)
{
  return sub_1A3EDC( a1,  v1[2],  v1[3],  v1[4],  "SwitchPodcastNewsPreferenceFlow#genericErrorDialog Error creating dialog: %s.");
}

uint64_t sub_1A8890(uint64_t a1)
{
  return sub_1A3EDC( a1,  v1[2],  v1[3],  v1[4],  "SwitchPodcastNewsPreferenceFlow#mediaAPICallErrorDialog Error creating dialog: %s.");
}

uint64_t sub_1A88B8(uint64_t a1)
{
  return sub_1A3570(a1, v1[2], v1[3], v1[4]);
}

uint64_t sub_1A88D8()
{
  uint64_t v1 = type metadata accessor for OSSignpostID(0LL);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 33) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = (*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8LL;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_release(*(void *)(v0 + v6 + 8));
  return swift_deallocObject(v0, v6 + 16, v5);
}

uint64_t sub_1A8950(uint64_t a1)
{
  uint64_t v3 = *(void *)(type metadata accessor for OSSignpostID(0LL) - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 33LL) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  return sub_D29A0( a1,  *(void *)(v1 + 16),  *(void *)(v1 + 24),  *(unsigned __int8 *)(v1 + 32),  v1 + v4,  *(uint64_t (**)(uint64_t))(v1 + ((*(void *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8LL)));
}

uint64_t sub_1A89AC()
{
  return swift_deallocObject(v0, 32LL, 7LL);
}

uint64_t sub_1A89BC()
{
  uint64_t v1 = type metadata accessor for URL(0LL);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 24) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = (*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8LL;
  unint64_t v7 = (v6 + 15) & 0xFFFFFFFFFFFFFFF8LL;
  swift_release(*(void *)(v0 + 16));
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_release(*(void *)(v0 + v6));

  return swift_deallocObject(v0, v7 + 8, v5);
}

uint64_t sub_1A8A5C()
{
  uint64_t v1 = *(void *)(type metadata accessor for URL(0LL) - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 24LL) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  unint64_t v3 = (*(void *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8LL;
  return sub_1A0300( *(void *)(v0 + 16),  v0 + v2,  *(void *)(v0 + v3),  *(void **)(v0 + ((v3 + 15) & 0xFFFFFFFFFFFFF8LL)));
}

uint64_t sub_1A8AAC()
{
  return swift_deallocObject(v0, 48LL, 7LL);
}

uint64_t sub_1A8AE0()
{
  return sub_1A045C( *(_BYTE **)(v0 + 16),  *(void *)(v0 + 24),  *(void (**)(char *))(v0 + 32),  *(void *)(v0 + 40));
}

uint64_t sub_1A8AEC()
{
  return swift_deallocObject(v0, 32LL, 7LL);
}

void sub_1A8B18(uint64_t a1, char a2)
{
  uint64_t v6 = *(void *)(v2 + 16);
  uint64_t v5 = *(dispatch_group_s **)(v2 + 24);
  swift_beginAccess(v6 + 16, v7, 1LL, 0LL);
  *(void *)(v6 + 16) = a1;
  *(_BYTE *)(v6 + 24) = a2 & 1;
  dispatch_group_leave(v5);
}

uint64_t storeEnumTagSinglePayload for MediaPlayerNoun(uint64_t a1, int a2, int a3)
{
  else {
    int v3 = 2;
  }
  else {
    LODWORD(v4) = v3;
  }
  if (a3) {
    uint64_t v4 = v4;
  }
  else {
    uint64_t v4 = 0LL;
  }
  if (a2) {
    return ((uint64_t (*)(void))((char *)sub_1A8BD8 + 4 * byte_21A3F0[v4]))();
  }
  else {
    return ((uint64_t (*)(void))((char *)sub_1A8BF8 + 4 * byte_21A3F5[v4]))();
  }
}

_BYTE *sub_1A8BD8(_BYTE *result, char a2)
{
  *unint64_t result = a2;
  return result;
}

_BYTE *sub_1A8BF8(_BYTE *result)
{
  *unint64_t result = 0;
  return result;
}

_DWORD *sub_1A8C00(_DWORD *result, int a2)
{
  *unint64_t result = a2;
  return result;
}

_WORD *sub_1A8C08(_WORD *result, __int16 a2)
{
  *unint64_t result = a2;
  return result;
}

_WORD *sub_1A8C10(_WORD *result)
{
  *unint64_t result = 0;
  return result;
}

_DWORD *sub_1A8C18(_DWORD *result)
{
  *unint64_t result = 0;
  return result;
}

ValueMetadata *type metadata accessor for MediaPlayerNoun()
{
  return &type metadata for MediaPlayerNoun;
}

unint64_t sub_1A8C38()
{
  unint64_t result = qword_28C8F0;
  if (!qword_28C8F0)
  {
    unint64_t result = swift_getWitnessTable(&unk_21A500, &type metadata for MediaPlayerNoun);
    atomic_store(result, (unint64_t *)&qword_28C8F0);
  }

  return result;
}

Swift::Int sub_1A8C7C()
{
  return Hasher._finalize()();
}

uint64_t sub_1A8CCC(uint64_t a1)
{
  return String.hash(into:)(a1, 0x7972617262696CLL, 0xE700000000000000LL);
}

Swift::Int sub_1A8CE4(uint64_t a1)
{
  return Hasher._finalize()();
}

uint64_t sub_1A8D30@<X0>(uint64_t *a1@<X0>, BOOL *a2@<X8>)
{
  v3._countAndFlagsBits = *a1;
  uint64_t v4 = (void *)a1[1];
  v3._object = v4;
  Swift::Int v5 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_26B400, v3);
  uint64_t result = swift_bridgeObjectRelease(v4);
  *a2 = v5 != 0;
  return result;
}

void sub_1A8D80(void *a1@<X8>)
{
  *a1 = 0x7972617262696CLL;
  a1[1] = 0xE700000000000000LL;
}

void sub_1A8D9C(void *a1@<X8>)
{
  *a1 = &off_26B438;
}

uint64_t sub_1A8DAC(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = sub_1A8EEC();
  unint64_t v5 = sub_1A8F30();
  unint64_t v6 = sub_1A8F74();
  return static TerminalNodeBoundedSemanticValue<>.fromIntentNodeValue(_:)(a1, a2, v4, v5, v6);
}

unint64_t sub_1A8E10()
{
  unint64_t result = qword_28C8F8;
  if (!qword_28C8F8)
  {
    uint64_t v1 = sub_45D50(&qword_28C900);
    unint64_t result = swift_getWitnessTable(&protocol conformance descriptor for [A], v1);
    atomic_store(result, (unint64_t *)&qword_28C8F8);
  }

  return result;
}

unint64_t sub_1A8E60()
{
  unint64_t result = qword_28C908;
  if (!qword_28C908)
  {
    unint64_t result = swift_getWitnessTable(&unk_21A428, &type metadata for MediaPlayerNoun);
    atomic_store(result, (unint64_t *)&qword_28C908);
  }

  return result;
}

unint64_t sub_1A8EA8()
{
  unint64_t result = qword_28C910;
  if (!qword_28C910)
  {
    unint64_t result = swift_getWitnessTable(&unk_21A540, &type metadata for MediaPlayerNoun);
    atomic_store(result, (unint64_t *)&qword_28C910);
  }

  return result;
}

unint64_t sub_1A8EEC()
{
  unint64_t result = qword_28C918;
  if (!qword_28C918)
  {
    unint64_t result = swift_getWitnessTable(&unk_21A490, &type metadata for MediaPlayerNoun);
    atomic_store(result, (unint64_t *)&qword_28C918);
  }

  return result;
}

unint64_t sub_1A8F30()
{
  unint64_t result = qword_28C920;
  if (!qword_28C920)
  {
    unint64_t result = swift_getWitnessTable(&unk_21A458, &type metadata for MediaPlayerNoun);
    atomic_store(result, (unint64_t *)&qword_28C920);
  }

  return result;
}

unint64_t sub_1A8F74()
{
  unint64_t result = qword_28C928;
  if (!qword_28C928)
  {
    unint64_t result = swift_getWitnessTable(&unk_21A4C8, &type metadata for MediaPlayerNoun);
    atomic_store(result, (unint64_t *)&qword_28C928);
  }

  return result;
}

double sub_1A8FB8(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  unint64_t v5 = v4;
  uint64_t v10 = type metadata accessor for Logger(0LL);
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)&v36 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  if (a2)
  {
    uint64_t v14 = (void *)swift_allocObject(&unk_273F68, 48LL, 7LL);
    v14[2] = v5;
    v14[3] = a1;
    v14[4] = a3;
    v14[5] = a4;
    uint64_t v15 = objc_opt_self(&OBJC_CLASS___INPlayMediaIntent);
    uint64_t v16 = swift_dynamicCastObjCClass(a2, v15);
    if (v16)
    {
      uint64_t v17 = (void *)v16;
      swift_retain_n(v5, 2LL);
      swift_bridgeObjectRetain_n(a1, 2LL);
      swift_retain_n(a4, 2LL);
      id v18 = a2;
      id v19 = [v17 hashedRouteUIDs];
    }

    else
    {
      uint64_t v26 = type metadata accessor for DetermineIntent();
      uint64_t v27 = (void *)swift_dynamicCastClass(a2, v26);
      swift_retain_n(v5, 2LL);
      swift_bridgeObjectRetain_n(a1, 2LL);
      swift_retain_n(a4, 2LL);
      id v28 = a2;
      if (!v27) {
        goto LABEL_13;
      }
      id v19 = [v27 targetDeviceIds];
    }

    id v29 = v19;
    uint64_t v30 = v29;
    if (v29)
    {
      uint64_t v31 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v29, &type metadata for String);

      uint64_t v32 = v5[15];
      uint64_t v33 = v5[16];
      sub_6EA8(v5 + 12, v32);
      uint64_t v34 = swift_allocObject(&unk_273F90, 32LL, 7LL);
      *(void *)(v34 + 16) = sub_1AAF74;
      *(void *)(v34 + 24) = v14;
      swift_retain(v14);
      dispatch thunk of EncryptionProviding.decodeRouteIds(_:completion:)(v31, sub_1AAEE8, v34, v32, v33);
      swift_release(v5);
      swift_release(v14);
      swift_bridgeObjectRelease(v31);
      uint64_t v35 = (void *)v34;
LABEL_14:
      swift_release(v35);

      swift_release(a4);
      *(void *)&double result = swift_bridgeObjectRelease(a1).n128_u64[0];
      return result;
    }

void sub_1A92F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v31 = a1;
  uint64_t v11 = type metadata accessor for Logger(0LL);
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v14 = (char *)&v26 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  if (qword_283888 != -1) {
    swift_once(&qword_283888, sub_BFC5C);
  }
  uint64_t v15 = sub_6960(v11, (uint64_t)qword_2969C8);
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v14, v15, v11);
  uint64_t v16 = swift_bridgeObjectRetain_n(a2, 2LL);
  uint64_t v17 = (os_log_s *)Logger.logObject.getter(v16);
  os_log_type_t v18 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v17, v18))
  {
    uint64_t v27 = a4;
    uint64_t v28 = a5;
    uint64_t v29 = a3;
    uint64_t v30 = a6;
    id v19 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
    uint64_t v20 = (uint64_t *)swift_slowAlloc(8LL, -1LL);
    *(_DWORD *)id v19 = 138412290;
    if (a2)
    {
      unint64_t v21 = sub_6C9C();
      uint64_t v22 = swift_allocError(&type metadata for String, v21, 0LL, 0LL);
      *os_log_type_t v23 = v31;
      v23[1] = a2;
      swift_bridgeObjectRetain(a2);
      uint64_t v24 = _swift_stdlib_bridgeErrorToNSError(v22);
      uint64_t v32 = v24;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v32, &v33);
    }

    else
    {
      uint64_t v32 = 0LL;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v32, &v33);
      uint64_t v24 = 0LL;
    }

    *uint64_t v20 = v24;
    swift_bridgeObjectRelease_n(a2, 2LL);
    _os_log_impl(&dword_0, v17, v18, "SiriAudioUIAssertionProvider#suppressSnippetIfneeded routeId: %@", v19, 0xCu);
    uint64_t v25 = sub_6C5C((uint64_t *)&unk_286BC0);
    swift_arrayDestroy(v20, 1LL, v25);
    swift_slowDealloc(v20, -1LL, -1LL);
    swift_slowDealloc(v19, -1LL, -1LL);

    a6 = v30;
    a4 = v27;
    a5 = v28;
  }

  else
  {

    swift_bridgeObjectRelease_n(a2, 2LL);
  }

  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  sub_1A9E88(a4, v31, a2, a5, a6);
}

uint64_t sub_1A95A0(void *a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4 = v3;
  uint64_t v8 = type metadata accessor for Logger(0LL);
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v34 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  if (qword_283888 != -1) {
    swift_once(&qword_283888, sub_BFC5C);
  }
  uint64_t v12 = sub_6960(v8, (uint64_t)qword_2969C8);
  uint64_t v13 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, v12, v8);
  uint64_t v14 = (os_log_s *)Logger.logObject.getter(v13);
  os_log_type_t v15 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v14, v15))
  {
    uint64_t v16 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
    *(_WORD *)uint64_t v16 = 0;
    _os_log_impl(&dword_0, v14, v15, "SiriAudioUIAssertionProvider#acquireUIAssertion...", v16, 2u);
    swift_slowDealloc(v16, -1LL, -1LL);
  }

  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  uint64_t v17 = (void *)swift_allocObject(&unk_273EF0, 40LL, 7LL);
  v17[2] = v4;
  v17[3] = a2;
  v17[4] = a3;
  uint64_t v18 = objc_opt_self(&OBJC_CLASS___INPlayMediaIntent);
  uint64_t v19 = swift_dynamicCastObjCClass(a1, v18);
  if (v19)
  {
    uint64_t v20 = (void *)v19;
    swift_retain_n(v4, 2LL);
    swift_retain_n(a3, 2LL);
    id v21 = a1;
    id v22 = [v20 hashedRouteUIDs];
  }

  else
  {
    uint64_t v23 = type metadata accessor for DetermineIntent();
    uint64_t v24 = (void *)swift_dynamicCastClass(a1, v23);
    swift_retain_n(v4, 2LL);
    swift_retain_n(a3, 2LL);
    if (!v24)
    {
LABEL_12:
      sub_1A9880(0LL, 0LL, v4, a2, a3);
      swift_release(v4);
      uint64_t v32 = v17;
      goto LABEL_13;
    }

    id v25 = a1;
    id v22 = [v24 targetDeviceIds];
  }

  id v26 = v22;
  uint64_t v27 = v26;
  if (!v26)
  {

    goto LABEL_12;
  }

  uint64_t v28 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v26, &type metadata for String);

  uint64_t v29 = v4[15];
  uint64_t v30 = v4[16];
  sub_6EA8(v4 + 12, v29);
  uint64_t v31 = swift_allocObject(&unk_273F18, 32LL, 7LL);
  *(void *)(v31 + 16) = sub_1AAEB8;
  *(void *)(v31 + 24) = v17;
  swift_retain(v17);
  dispatch thunk of EncryptionProviding.decodeRouteIds(_:completion:)(v28, sub_1AAEE8, v31, v29, v30);
  swift_release(v4);
  swift_release(v17);
  swift_bridgeObjectRelease(v28);
  uint64_t v32 = (void *)v31;
LABEL_13:
  swift_release(v32);
  return swift_release(a3);
}

uint64_t sub_1A9880(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v32 = a4;
  uint64_t v33 = a5;
  uint64_t v8 = type metadata accessor for Logger(0LL);
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v30 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  if (qword_283888 != -1) {
    swift_once(&qword_283888, sub_BFC5C);
  }
  uint64_t v12 = sub_6960(v8, (uint64_t)qword_2969C8);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, v12, v8);
  uint64_t v13 = swift_bridgeObjectRetain_n(a2, 2LL);
  uint64_t v14 = (os_log_s *)Logger.logObject.getter(v13);
  os_log_type_t v15 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v14, v15))
  {
    uint64_t v31 = a1;
    uint64_t v16 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
    uint64_t v30 = (uint64_t *)swift_slowAlloc(8LL, -1LL);
    *(_DWORD *)uint64_t v16 = 138412290;
    if (a2)
    {
      unint64_t v17 = sub_6C9C();
      uint64_t v18 = swift_allocError(&type metadata for String, v17, 0LL, 0LL);
      *uint64_t v19 = v31;
      v19[1] = a2;
      swift_bridgeObjectRetain(a2);
      uint64_t v20 = _swift_stdlib_bridgeErrorToNSError(v18);
      uint64_t v34 = v20;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v34, &v35);
    }

    else
    {
      uint64_t v34 = 0LL;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v34, &v35);
      uint64_t v20 = 0LL;
    }

    id v21 = v30;
    *uint64_t v30 = v20;
    swift_bridgeObjectRelease_n(a2, 2LL);
    _os_log_impl(&dword_0, v14, v15, "SiriAudioUIAssertionProvider#acquireUIAssertion routeId: %@", v16, 0xCu);
    uint64_t v22 = sub_6C5C((uint64_t *)&unk_286BC0);
    swift_arrayDestroy(v21, 1LL, v22);
    swift_slowDealloc(v21, -1LL, -1LL);
    swift_slowDealloc(v16, -1LL, -1LL);

    a1 = v31;
  }

  else
  {

    swift_bridgeObjectRelease_n(a2, 2LL);
  }

  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  uint64_t v23 = a3[10];
  uint64_t v24 = a3[11];
  sub_6EA8(a3 + 7, v23);
  uint64_t v25 = swift_allocObject(&unk_273EA0, 24LL, 7LL);
  swift_weakInit(v25 + 16, a3);
  id v26 = (void *)swift_allocObject(&unk_273F40, 40LL, 7LL);
  uint64_t v27 = v32;
  uint64_t v28 = v33;
  v26[2] = v25;
  v26[3] = v27;
  v26[4] = v28;
  swift_retain(v25);
  swift_retain(v28);
  dispatch thunk of MediaRemoteAPIProviding.shouldSuppressNowPlayingSnippet(for:completion:)( a1,  a2,  sub_1AAF30,  v26,  v23,  v24);
  swift_release(v25);
  return swift_release(v26);
}

double sub_1A9B9C(char a1, uint64_t a2, void (*a3)(void, void), uint64_t a4)
{
  uint64_t v8 = type metadata accessor for Logger(0LL);
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v29 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  a2 += 16LL;
  swift_beginAccess(a2, v33, 0LL, 0LL);
  uint64_t Strong = swift_weakLoadStrong(a2);
  if (Strong)
  {
    uint64_t v13 = Strong;
    uint64_t v14 = sub_1AA268(a1 & 1);
    uint64_t v16 = v15;
    swift_release(v13);
  }

  else
  {
    uint64_t v14 = 0LL;
    uint64_t v16 = 0LL;
  }

  if (qword_283888 != -1) {
    swift_once(&qword_283888, sub_BFC5C);
  }
  uint64_t v17 = sub_6960(v8, (uint64_t)qword_2969C8);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, v17, v8);
  uint64_t v18 = swift_bridgeObjectRetain_n(v16, 2LL);
  uint64_t v19 = (os_log_s *)Logger.logObject.getter(v18);
  os_log_type_t v20 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v19, v20))
  {
    uint64_t v30 = a3;
    uint64_t v31 = v14;
    uint64_t v29 = a4;
    id v21 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
    uint64_t v22 = (uint64_t *)swift_slowAlloc(8LL, -1LL);
    *(_DWORD *)id v21 = 138412290;
    if (v16)
    {
      unint64_t v23 = sub_6C9C();
      uint64_t v24 = swift_allocError(&type metadata for String, v23, 0LL, 0LL);
      *uint64_t v25 = v31;
      v25[1] = v16;
      swift_bridgeObjectRetain(v16);
      uint64_t v26 = _swift_stdlib_bridgeErrorToNSError(v24);
      uint64_t v32 = v26;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v32, v33);
    }

    else
    {
      uint64_t v32 = 0LL;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v32, v33);
      uint64_t v26 = 0LL;
    }

    *uint64_t v22 = v26;
    swift_bridgeObjectRelease_n(v16, 2LL);
    _os_log_impl( &dword_0,  v19,  v20,  "SiriAudioUIAssertionProvider#acquireUIAssertion returning sessionID: %@",  v21,  0xCu);
    uint64_t v27 = sub_6C5C((uint64_t *)&unk_286BC0);
    swift_arrayDestroy(v22, 1LL, v27);
    swift_slowDealloc(v22, -1LL, -1LL);
    swift_slowDealloc(v21, -1LL, -1LL);

    a3 = v30;
    uint64_t v14 = v31;
  }

  else
  {

    swift_bridgeObjectRelease_n(v16, 2LL);
  }

  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  a3(v14, v16);
  *(void *)&double result = swift_bridgeObjectRelease(v16).n128_u64[0];
  return result;
}

void sub_1A9E88(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  if (!((unint64_t)a1 >> 62))
  {
    uint64_t v11 = *(void *)((char *)&dword_10 + (a1 & 0xFFFFFFFFFFFFF8LL));
    swift_bridgeObjectRetain(a1);
    uint64_t v21 = a5;
    if (v11) {
      goto LABEL_3;
    }
LABEL_11:
    uint64_t v14 = a4;
    swift_bridgeObjectRelease(a1);
    goto LABEL_12;
  }

  if (a1 < 0) {
    uint64_t v16 = a1;
  }
  else {
    uint64_t v16 = a1 & 0xFFFFFFFFFFFFFF8LL;
  }
  swift_bridgeObjectRetain(a1);
  uint64_t v21 = a5;
  if (!_CocoaArrayWrapper.endIndex.getter(v16)) {
    goto LABEL_11;
  }
LABEL_3:
  if ((a1 & 0xC000000000000001LL) != 0)
  {
    id v12 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0LL, a1);
    goto LABEL_6;
  }

  if (*(void *)((char *)&dword_10 + (a1 & 0xFFFFFFFFFFFFF8LL)))
  {
    id v12 = *(id *)(a1 + 32);
LABEL_6:
    uint64_t v13 = v12;
    uint64_t v14 = a4;
    swift_bridgeObjectRelease(a1);
    NSString v15 = String._bridgeToObjectiveC()();
    [v13 setViewId:v15];

LABEL_12:
    uint64_t v17 = v5[10];
    uint64_t v18 = v5[11];
    sub_6EA8(v5 + 7, v17);
    uint64_t v19 = swift_allocObject(&unk_273EA0, 24LL, 7LL);
    swift_weakInit(v19 + 16, v5);
    os_log_type_t v20 = (void *)swift_allocObject(&unk_273EC8, 48LL, 7LL);
    v20[2] = v19;
    v20[3] = a1;
    v20[4] = v14;
    v20[5] = v21;
    swift_bridgeObjectRetain(a1);
    swift_retain(v19);
    swift_retain(v21);
    dispatch thunk of MediaRemoteAPIProviding.shouldSuppressNowPlayingSnippet(for:completion:)( a2,  a3,  sub_1AAB7C,  v20,  v17,  v18);
    swift_release(v19);
    swift_release(v20);
    return;
  }

  __break(1u);
}

void sub_1AA054(char a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t))
{
  uint64_t v7 = a2 + 16;
  swift_beginAccess(a2 + 16, v22, 0LL, 0LL);
  uint64_t Strong = swift_weakLoadStrong(v7);
  if (Strong)
  {
    uint64_t v9 = Strong;
    sub_1AA268(a1 & 1);
    uint64_t v11 = v10;
    swift_release(v9);
    if (v11)
    {
      if ((unint64_t)a3 >> 62)
      {
        if (a3 < 0) {
          uint64_t v18 = a3;
        }
        else {
          uint64_t v18 = a3 & 0xFFFFFFFFFFFFFF8LL;
        }
        swift_bridgeObjectRetain(a3);
        if (_CocoaArrayWrapper.endIndex.getter(v18))
        {
LABEL_5:
          if ((a3 & 0xC000000000000001LL) != 0)
          {
            id v13 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0LL, a3);
          }

          else
          {
            if (!*(void *)((char *)&dword_10 + (a3 & 0xFFFFFFFFFFFFF8LL)))
            {
              __break(1u);
              goto LABEL_23;
            }

            id v13 = *(id *)(a3 + 32);
          }

          uint64_t v14 = v13;
          swift_bridgeObjectRelease(a3);
          NSString v15 = String._bridgeToObjectiveC()();
          objc_msgSend(v14, "setCorrespondingSessionID:", v15, swift_bridgeObjectRelease(v11).n128_f64[0]);

          if ((a3 & 0xC000000000000001LL) != 0)
          {
            swift_bridgeObjectRetain(a3);
            id v16 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0LL, a3);
            swift_bridgeObjectRelease(a3);
LABEL_12:
            NSString v17 = String._bridgeToObjectiveC()();
            [v16 setViewId:v17];

            goto LABEL_18;
          }

          if (*(void *)((char *)&dword_10 + (a3 & 0xFFFFFFFFFFFFF8LL)))
          {
            id v16 = *(id *)(a3 + 32);
            goto LABEL_12;
          }

uint64_t sub_1AA268(char a1)
{
  uint64_t v2 = type metadata accessor for Logger(0LL);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  unint64_t v5 = (char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  if (qword_283888 != -1) {
    swift_once(&qword_283888, sub_BFC5C);
  }
  uint64_t v6 = sub_6960(v2, (uint64_t)qword_2969C8);
  uint64_t v7 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, v6, v2);
  uint64_t v8 = (os_log_s *)Logger.logObject.getter(v7);
  os_log_type_t v9 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v8, v9))
  {
    uint64_t v10 = (uint8_t *)swift_slowAlloc(8LL, -1LL);
    *(_DWORD *)uint64_t v10 = 67109120;
    int v13 = a1 & 1;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v13, &v14);
    _os_log_impl( &dword_0,  v8,  v9,  "SiriAudioUIAssertionProvider#fetchSessionIDIfNeeded shouldSuppressSnippet: %{BOOL}d",  v10,  8u);
    swift_slowDealloc(v10, -1LL, -1LL);
  }

  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  if ((a1 & 1) != 0) {
    return sub_1AA3F4();
  }
  else {
    return 0LL;
  }
}

uint64_t sub_1AA3F4()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for DispatchWorkItemFlags(0LL);
  uint64_t v53 = *(void *)(v2 - 8);
  uint64_t v54 = v2;
  __chkstk_darwin(v2);
  uint64_t v52 = (char *)&v46 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v4 = type metadata accessor for DispatchQoS(0LL);
  uint64_t v50 = *(void *)(v4 - 8);
  uint64_t v51 = v4;
  __chkstk_darwin(v4);
  uint64_t v49 = (char *)&v46 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v55 = type metadata accessor for DispatchTime(0LL);
  uint64_t v47 = *(void *)(v55 - 8);
  uint64_t v6 = __chkstk_darwin(v55);
  uint64_t v8 = (char *)&v46 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v6);
  uint64_t v48 = (char *)&v46 - v9;
  uint64_t v10 = type metadata accessor for Logger(0LL);
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = __chkstk_darwin(v10);
  uint64_t v46 = (char *)&v46 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v12);
  NSString v15 = (char *)&v46 - v14;
  if (qword_283888 != -1) {
    swift_once(&qword_283888, sub_BFC5C);
  }
  uint64_t v16 = sub_6960(v10, (uint64_t)qword_2969C8);
  NSString v17 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v11 + 16);
  uint64_t v18 = v17(v15, v16, v10);
  uint64_t v19 = (os_log_s *)Logger.logObject.getter(v18);
  os_log_type_t v20 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v19, v20))
  {
    uint64_t v21 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
    *(_WORD *)uint64_t v21 = 0;
    _os_log_impl( &dword_0,  v19,  v20,  "SiriAudioUIAssertionProvider#acquireAndReleaseQuickControlsAssertion acquire Media Remote assertion.",  v21,  2u);
    swift_slowDealloc(v21, -1LL, -1LL);
  }

  uint64_t v22 = *(void (**)(char *, uint64_t))(v11 + 8);
  v22(v15, v10);
  uint64_t v23 = v1[10];
  uint64_t v24 = v1[11];
  sub_6EA8(v1 + 7, v23);
  uint64_t v25 = dispatch thunk of MediaRemoteAPIProviding.acquireUIAssertion()(v23, v24);
  uint64_t v27 = v26;
  if (v26)
  {
    uint64_t v28 = v25;
    sub_1AAA38();
    __n128 v29 = swift_bridgeObjectRetain(v27);
    uint64_t v30 = (void *)static OS_dispatch_queue.main.getter(v29);
    static DispatchTime.now()(v30);
    uint64_t v31 = v48;
    + infix(_:_:)(v8, 10.0);
    uint64_t v47 = *(void *)(v47 + 8);
    ((void (*)(char *, uint64_t))v47)(v8, v55);
    uint64_t v32 = (void *)swift_allocObject(&unk_273E50, 40LL, 7LL);
    v32[2] = v1;
    v32[3] = v28;
    v32[4] = v27;
    aBlock[4] = sub_1AAA80;
    uint64_t v57 = v32;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256LL;
    aBlock[2] = sub_6E7C;
    aBlock[3] = &unk_273E68;
    uint64_t v33 = _Block_copy(aBlock);
    uint64_t v34 = v57;
    swift_retain(v1);
    uint64_t v35 = swift_release(v34);
    uint64_t v36 = v49;
    static DispatchQoS.unspecified.getter(v35);
    aBlock[0] = _swiftEmptyArrayStorage;
    sub_21A04();
    uint64_t v37 = sub_6C5C(&qword_285480);
    sub_21358();
    uint64_t v38 = v52;
    uint64_t v39 = v54;
    dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v37);
    OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)(v31, v36, v38, v33);
    _Block_release(v33);

    (*(void (**)(char *, uint64_t))(v53 + 8))(v38, v39);
    (*(void (**)(char *, uint64_t))(v50 + 8))(v36, v51);
    ((void (*)(char *, uint64_t))v47)(v31, v55);
  }

  else
  {
    uint64_t v40 = v46;
    uint64_t v41 = v17(v46, v16, v10);
    uint64_t v42 = (os_log_s *)Logger.logObject.getter(v41);
    os_log_type_t v43 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v42, v43))
    {
      uint64_t v44 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)uint64_t v44 = 0;
      _os_log_impl( &dword_0,  v42,  v43,  "SiriAudioUIAssertionProvider#acquireAndReleaseQuickControlsAssertion No UI sessionID has been provided",  v44,  2u);
      swift_slowDealloc(v44, -1LL, -1LL);
    }

    v22(v40, v10);
    return 0LL;
  }

  return v28;
}

uint64_t sub_1AA874(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for Logger(0LL);
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  if (qword_283888 != -1) {
    swift_once(&qword_283888, sub_BFC5C);
  }
  uint64_t v10 = sub_6960(v6, (uint64_t)qword_2969C8);
  uint64_t v11 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, v10, v6);
  uint64_t v12 = (os_log_s *)Logger.logObject.getter(v11);
  os_log_type_t v13 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v12, v13))
  {
    uint64_t v14 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
    *(_WORD *)uint64_t v14 = 0;
    _os_log_impl( &dword_0,  v12,  v13,  "SiriAudioUIAssertionProvider#acquireAndReleaseQuickControlsAssertion release Media Remote assertion.",  v14,  2u);
    swift_slowDealloc(v14, -1LL, -1LL);
  }

  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  NSString v15 = a1 + 7;
  uint64_t v17 = a1[10];
  uint64_t v16 = a1[11];
  sub_6EA8(v15, v17);
  return dispatch thunk of MediaRemoteAPIProviding.releaseUIAssertion(for:)(a2, a3, v17, v16);
}

uint64_t sub_1AA9E4()
{
  return swift_deallocClassInstance(v0, 136LL, 7LL);
}

uint64_t type metadata accessor for SiriAudioUIAssertionProvider()
{
  return objc_opt_self(&OBJC_CLASS____TtC23AudioFlowDelegatePlugin28SiriAudioUIAssertionProvider);
}

unint64_t sub_1AAA38()
{
  unint64_t result = qword_287938;
  if (!qword_287938)
  {
    uint64_t v1 = objc_opt_self(&OBJC_CLASS___OS_dispatch_queue);
    unint64_t result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_287938);
  }

  return result;
}

uint64_t sub_1AAA74()
{
  return sub_1AAEF8((void (*)(void))&_swift_bridgeObjectRelease);
}

uint64_t sub_1AAA80()
{
  return sub_1AA874(*(void **)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32));
}

void (*sub_1AAA8C(void (**a1)(id *a1), unint64_t a2, uint64_t a3))(void *a1)
{
  uint64_t v6 = (void (*)(id *))malloc(0x28uLL);
  *a1 = v6;
  *((void *)v6 + 4) = sub_1AAAE0(v6, a2, a3);
  return sub_910E0;
}

void (*sub_1AAAE0(void (*result)(id *a1), unint64_t a2, uint64_t a3))(id *a1)
{
  uint64_t v3 = result;
  if ((a3 & 0xC000000000000001LL) != 0)
  {
    id v4 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(a2, a3);
    goto LABEL_5;
  }

  if ((a2 & 0x8000000000000000LL) != 0)
  {
    __break(1u);
  }

  else if (*(void *)((char *)&dword_10 + (a3 & 0xFFFFFFFFFFFFF8LL)) > a2)
  {
    id v4 = *(id *)(a3 + 8 * a2 + 32);
LABEL_5:
    *(void *)uint64_t v3 = v4;
    return sub_1AAB4C;
  }

  __break(1u);
  return result;
}

void sub_1AAB4C(id *a1)
{
}

uint64_t sub_1AAB54()
{
  return swift_deallocObject(v0, 24LL, 7LL);
}

void sub_1AAB7C(char a1)
{
}

void sub_1AAB88(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for Logger(0LL);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v27 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  if (qword_283888 != -1) {
    swift_once(&qword_283888, sub_BFC5C);
  }
  uint64_t v6 = sub_6960(v2, (uint64_t)qword_2969C8);
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, v6, v2);
  uint64_t v7 = swift_bridgeObjectRetain_n(a1, 2LL);
  uint64_t v8 = (void *)Logger.logObject.getter(v7);
  int v9 = static os_log_type_t.info.getter(v8);
  if (!os_log_type_enabled((os_log_t)v8, (os_log_type_t)v9))
  {

    swift_bridgeObjectRelease_n(a1, 2LL);
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    return;
  }

  uint64_t v10 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
  uint64_t v11 = swift_slowAlloc(32LL, -1LL);
  uint64_t v36 = v11;
  *(_DWORD *)uint64_t v10 = 136446210;
  if ((unint64_t)a1 >> 62)
  {
    if (a1 < 0) {
      uint64_t v26 = a1;
    }
    else {
      uint64_t v26 = a1 & 0xFFFFFFFFFFFFFF8LL;
    }
    swift_bridgeObjectRetain(a1);
    uint64_t v12 = _CocoaArrayWrapper.endIndex.getter(v26);
  }

  else
  {
    uint64_t v12 = *(void *)((char *)&dword_10 + (a1 & 0xFFFFFFFFFFFFF8LL));
    swift_bridgeObjectRetain(a1);
  }

  uint64_t v32 = v3;
  uint64_t v33 = v2;
  os_log_t v30 = (os_log_t)v8;
  uint64_t v31 = v5;
  __n128 v29 = v10;
  int v28 = v9;
  uint64_t v27 = v11;
  if (!v12)
  {
    uint64_t v14 = 0LL;
    unint64_t v15 = 0xE000000000000000LL;
LABEL_15:
    swift_bridgeObjectRelease(a1);
    uint64_t v23 = v29;
    uint64_t v34 = sub_6978(v14, v15, &v36);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v34, &v35);
    swift_bridgeObjectRelease_n(a1, 2LL);
    swift_bridgeObjectRelease(v15);
    os_log_t v24 = v30;
    _os_log_impl( &dword_0,  v30,  (os_log_type_t)v28,  "SiriAudioUIAssertionProvider#logRenderingViewInfo views: %{public}s",  v23,  0xCu);
    uint64_t v25 = v27;
    swift_arrayDestroy(v27, 1LL, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v25, -1LL, -1LL);
    swift_slowDealloc(v23, -1LL, -1LL);

    (*(void (**)(char *, uint64_t))(v32 + 8))(v31, v33);
    return;
  }

  if (v12 >= 1)
  {
    uint64_t v13 = 0LL;
    uint64_t v14 = 0LL;
    unint64_t v15 = 0xE000000000000000LL;
    do
    {
      if ((a1 & 0xC000000000000001LL) != 0) {
        id v16 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v13, a1);
      }
      else {
        id v16 = *(id *)(a1 + 8 * v13 + 32);
      }
      ++v13;
      id v17 = v16;
      id v18 = [v17 description];
      uint64_t v19 = static String._unconditionallyBridgeFromObjectiveC(_:)(v18);
      uint64_t v21 = v20;

      uint64_t v34 = v14;
      unint64_t v35 = v15;
      swift_bridgeObjectRetain(v15);
      v22._countAndFlagsBits = v19;
      v22._object = v21;
      String.append(_:)(v22);
      swift_bridgeObjectRelease(v15);

      swift_bridgeObjectRelease(v21);
      uint64_t v14 = v34;
      unint64_t v15 = v35;
    }

    while (v12 != v13);
    goto LABEL_15;
  }

  __break(1u);
}

uint64_t sub_1AAEAC()
{
  return sub_1AAEF8((void (*)(void))&_swift_release);
}

uint64_t sub_1AAEB8(uint64_t a1, uint64_t a2)
{
  return sub_1A9880(a1, a2, *(void **)(v2 + 16), *(void *)(v2 + 24), *(void *)(v2 + 32));
}

uint64_t sub_1AAEC4()
{
  return swift_deallocObject(v0, 32LL, 7LL);
}

uint64_t sub_1AAEEC()
{
  return sub_1AAEF8((void (*)(void))&_swift_release);
}

uint64_t sub_1AAEF8(void (*a1)(void))
{
  return swift_deallocObject(v1, 40LL, 7LL);
}

double sub_1AAF30(char a1)
{
  return sub_1A9B9C(a1, *(void *)(v1 + 16), *(void (**)(void, void))(v1 + 24), *(void *)(v1 + 32));
}

uint64_t sub_1AAF40()
{
  return swift_deallocObject(v0, 48LL, 7LL);
}

void sub_1AAF74(uint64_t a1, uint64_t a2)
{
}

double sub_1AAF80(uint64_t a1)
{
  uint64_t v2 = *(void (**)(uint64_t))(v1 + 16);
  uint64_t v3 = sub_72558(a1);
  uint64_t v5 = v4;
  v2(v3);
  *(void *)&double result = swift_bridgeObjectRelease(v5).n128_u64[0];
  return result;
}

uint64_t sub_1AAFC0()
{
  uint64_t v0 = type metadata accessor for InternalSignalsManager();
  uint64_t v1 = swift_allocObject(v0, 24LL, 7LL);
  uint64_t v5 = type metadata accessor for SiriKitTaskLoggingProvider(0LL);
  uint64_t v6 = &protocol witness table for SiriKitTaskLoggingProvider;
  v4[0] = static SiriKitTaskLoggingProvider.shared.getter(v5);
  uint64_t v2 = type metadata accessor for PThreadMutex(0LL);
  swift_allocObject(v2, *(unsigned int *)(v2 + 48), *(unsigned __int16 *)(v2 + 52));
  uint64_t result = PThreadMutex.init(name:abortOnFail:analyticsService:)(0xD00000000000001ALL, 0x800000000021D190LL, 1LL, v4);
  *(void *)(v1 + swift_weakDestroy(v0 + 16) = result;
  off_28CA28 = (int *)v1;
  return result;
}

uint64_t static InternalSignalsManager.doesIntent(_:haveInternalSignalWith:)(void *a1, uint64_t a2, void *a3)
{
  uint64_t v53 = a1;
  uint64_t v54 = a2;
  unint64_t v4 = type metadata accessor for Logger(0LL);
  unint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = __chkstk_darwin(v4);
  uint64_t v8 = (char *)&v49 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v9 = __chkstk_darwin(v6);
  uint64_t v11 = (char *)&v49 - v10;
  __chkstk_darwin(v9);
  uint64_t v13 = (char *)&v49 - v12;
  if (qword_283958 != -1) {
    goto LABEL_22;
  }
  while (1)
  {
    uint64_t v50 = v11;
    uint64_t v14 = *(void *)((char *)&dword_10 + (void)off_28CA28);
    uint64_t v15 = swift_retain(v14);
    dispatch thunk of PThreadMutex.lock()(v15);
    swift_release(v14);
    if (qword_283888 != -1) {
      swift_once(&qword_283888, sub_BFC5C);
    }
    uint64_t v51 = v8;
    uint64_t v16 = sub_6960(v4, (uint64_t)qword_2969C8);
    id v17 = *(uint64_t (**)(char *, uint64_t, unint64_t))(v5 + 16);
    uint64_t v18 = v17(v13, v16, v4);
    uint64_t v19 = (os_log_s *)Logger.logObject.getter(v18);
    os_log_type_t v20 = static os_log_type_t.default.getter(v19);
    if (os_log_type_enabled(v19, v20))
    {
      uint64_t v21 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)uint64_t v21 = 0;
      _os_log_impl( &dword_0,  v19,  v20,  "InternalSignalsManager#doesIntent#haveInternalSignalWith (lock aquired)",  v21,  2u);
      swift_slowDealloc(v21, -1LL, -1LL);
    }

    uint64_t v22 = v4;
    uint64_t v52 = *(void (**)(char *, unint64_t))(v5 + 8);
    v52(v13, v4);
    uint64_t v23 = (char *)_s23AudioFlowDelegatePlugin22InternalSignalsManagerC08internalF03forSaySSGSo8INIntentC_tFZ_0(v53);
    uint64_t v11 = v23;
    uint64_t v8 = (char *)*((void *)v23 + 2);
    if (!v8) {
      break;
    }
    uint64_t v13 = (char *)*((void *)v23 + 4);
    unint64_t v5 = *((void *)v23 + 5);
    swift_bridgeObjectRetain(v5);
    v24._countAndFlagsBits = v54;
    v24._object = a3;
    if (String.hasPrefix(_:)(v24))
    {
LABEL_8:
      __n128 v25 = swift_bridgeObjectRelease(v11);
      uint64_t v26 = v50;
      ((void (*)(char *, uint64_t, uint64_t, __n128))v17)(v50, v16, v22, v25);
      swift_bridgeObjectRetain(v5);
      int v28 = (os_log_s *)Logger.logObject.getter(v27);
      os_log_type_t v29 = static os_log_type_t.default.getter(v28);
      if (os_log_type_enabled(v28, v29))
      {
        uint64_t v54 = v22;
        os_log_t v30 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
        uint64_t v31 = swift_slowAlloc(32LL, -1LL);
        uint64_t v56 = v31;
        *(_DWORD *)os_log_t v30 = 136315138;
        swift_bridgeObjectRetain(v5);
        uint64_t v55 = sub_6978((uint64_t)v13, v5, &v56);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v55, &v56);
        swift_bridgeObjectRelease_n(v5, 3LL);
        _os_log_impl( &dword_0,  v28,  v29,  "InternalSignalsManager#doesIntent#haveInternalSignalWith %s is present. (unlock)",  v30,  0xCu);
        uint64_t v32 = 1LL;
        swift_arrayDestroy(v31, 1LL, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v31, -1LL, -1LL);
        swift_slowDealloc(v30, -1LL, -1LL);

        v52(v26, v54);
      }

      else
      {

        swift_bridgeObjectRelease_n(v5, 2LL);
        v52(v26, v22);
        uint64_t v32 = 1LL;
      }

      goto LABEL_20;
    }

    swift_bridgeObjectRelease(v5);
    if (v8 == (_BYTE *)&dword_0 + 1) {
      break;
    }
    uint64_t v33 = (unint64_t *)(v11 + 56);
    unint64_t v4 = 1LL;
    while (v4 < *((void *)v11 + 2))
    {
      uint64_t v13 = (char *)*(v33 - 1);
      unint64_t v5 = *v33;
      swift_bridgeObjectRetain(*v33);
      v34._countAndFlagsBits = v54;
      v34._object = a3;
      if (String.hasPrefix(_:)(v34)) {
        goto LABEL_8;
      }
      swift_bridgeObjectRelease(v5);
      ++v4;
      v33 += 2;
    }

    __break(1u);
LABEL_22:
    swift_once(&qword_283958, sub_1AAFC0);
  }

uint64_t static InternalSignalsManager.getSignal(with:from:)(uint64_t a1, void *a2, void *a3)
{
  v53._countAndFlagsBits = a1;
  v53._object = a2;
  uint64_t v4 = type metadata accessor for Logger(0LL);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = __chkstk_darwin(v4);
  uint64_t v8 = (char *)&v51 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v9 = __chkstk_darwin(v6);
  uint64_t v51 = (char *)&v51 - v10;
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v51 - v11;
  if (qword_283958 != -1) {
    goto LABEL_22;
  }
  while (1)
  {
    uint64_t v13 = *(void *)((char *)&dword_10 + (void)off_28CA28);
    uint64_t v14 = swift_retain(v13);
    dispatch thunk of PThreadMutex.lock()(v14);
    swift_release(v13);
    if (qword_283888 != -1) {
      swift_once(&qword_283888, sub_BFC5C);
    }
    uint64_t v15 = sub_6960(v4, (uint64_t)qword_2969C8);
    uint64_t v16 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v5 + 16);
    uint64_t v17 = v16(v12, v15, v4);
    uint64_t v18 = (os_log_s *)Logger.logObject.getter(v17);
    os_log_type_t v19 = static os_log_type_t.default.getter(v18);
    if (os_log_type_enabled(v18, v19))
    {
      os_log_type_t v20 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)os_log_type_t v20 = 0;
      _os_log_impl(&dword_0, v18, v19, "InternalSignalsManager#getSignal (lock aquired)", v20, 2u);
      swift_slowDealloc(v20, -1LL, -1LL);
    }

    uint64_t v52 = *(void (**)(char *, uint64_t))(v5 + 8);
    v52(v12, v4);
    uint64_t v21 = _s23AudioFlowDelegatePlugin22InternalSignalsManagerC08internalF03forSaySSGSo8INIntentC_tFZ_0(a3);
    uint64_t v22 = v21;
    uint64_t v5 = v21[2];
    if (!v5) {
      break;
    }
    uint64_t v12 = (char *)v21[4];
    a3 = (void *)v21[5];
    swift_bridgeObjectRetain(a3);
    if (String.hasPrefix(_:)(v53))
    {
LABEL_8:
      __n128 v23 = swift_bridgeObjectRelease(v22);
      Swift::String v24 = v51;
      ((void (*)(char *, uint64_t, uint64_t, __n128))v16)(v51, v15, v4, v23);
      uint64_t v25 = swift_bridgeObjectRetain_n(a3, 2LL);
      uint64_t v26 = (os_log_s *)Logger.logObject.getter(v25);
      os_log_type_t v27 = static os_log_type_t.default.getter(v26);
      if (os_log_type_enabled(v26, v27))
      {
        int v28 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
        uint64_t v29 = swift_slowAlloc(32LL, -1LL);
        uint64_t v55 = v29;
        *(_DWORD *)int v28 = 136315138;
        swift_bridgeObjectRetain(a3);
        uint64_t v54 = sub_6978((uint64_t)v12, (unint64_t)a3, &v55);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v54, &v55);
        swift_bridgeObjectRelease_n(a3, 3LL);
        _os_log_impl(&dword_0, v26, v27, "InternalSignalsManager#getSignal returning signal: %s. (unlock)", v28, 0xCu);
        swift_arrayDestroy(v29, 1LL, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v29, -1LL, -1LL);
        swift_slowDealloc(v28, -1LL, -1LL);
      }

      else
      {

        swift_bridgeObjectRelease_n(a3, 2LL);
      }

      v52(v24, v4);
      uint64_t v40 = *(void *)((char *)&dword_10 + (void)off_28CA28);
      uint64_t v41 = swift_retain(v40);
      dispatch thunk of PThreadMutex.unlock()(v41);
      swift_release(v40);
      unint64_t v42 = String.count.getter(v53._countAndFlagsBits, v53._object);
      unint64_t v43 = sub_1AD18C(v42, (uint64_t)v12, (unint64_t)a3);
      uint64_t v45 = v44;
      uint64_t v47 = v46;
      uint64_t v49 = v48;
      swift_bridgeObjectRelease(a3);
      uint64_t v39 = static String._fromSubstring(_:)(v43, v45, v47, v49);
      swift_bridgeObjectRelease(v49);
      return v39;
    }

    swift_bridgeObjectRelease(a3);
    if (v5 == 1) {
      break;
    }
    os_log_t v30 = v22 + 7;
    unint64_t v31 = 1LL;
    while (v31 < v22[2])
    {
      uint64_t v12 = (char *)*(v30 - 1);
      a3 = (void *)*v30;
      swift_bridgeObjectRetain(*v30);
      if (String.hasPrefix(_:)(v53)) {
        goto LABEL_8;
      }
      swift_bridgeObjectRelease(a3);
      ++v31;
      v30 += 2;
      if (v5 == v31) {
        goto LABEL_15;
      }
    }

    __break(1u);
LABEL_22:
    swift_once(&qword_283958, sub_1AAFC0);
  }

void static InternalSignalsManager.add(_:to:)(uint64_t a1, unint64_t a2, void *a3)
{
  uint64_t v6 = type metadata accessor for Logger(0LL);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = __chkstk_darwin(v6);
  uint64_t v10 = (char *)&v52 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v8);
  uint64_t v12 = (char *)&v52 - v11;
  if (qword_283888 != -1) {
    swift_once(&qword_283888, sub_BFC5C);
  }
  uint64_t v13 = sub_6960(v6, (uint64_t)qword_2969C8);
  uint64_t v14 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 16);
  uint64_t v57 = v13;
  uint64_t v58 = v14;
  ((void (*)(char *))v14)(v12);
  swift_bridgeObjectRetain_n(a2, 2LL);
  id v15 = a3;
  uint64_t v16 = (os_log_s *)Logger.logObject.getter(v15);
  os_log_type_t v17 = static os_log_type_t.default.getter(v16);
  BOOL v18 = os_log_type_enabled(v16, v17);
  uint64_t v59 = a1;
  if (v18)
  {
    uint64_t v19 = swift_slowAlloc(22LL, -1LL);
    uint64_t v55 = v10;
    uint64_t v20 = v19;
    uint64_t v52 = (void *)swift_slowAlloc(8LL, -1LL);
    uint64_t v54 = swift_slowAlloc(32LL, -1LL);
    uint64_t v61 = v54;
    *(_DWORD *)uint64_t v20 = 136315394;
    uint64_t v56 = v6;
    swift_bridgeObjectRetain(a2);
    uint64_t v60 = sub_6978(a1, a2, &v61);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v60, &v61);
    swift_bridgeObjectRelease_n(a2, 3LL);
    *(_WORD *)(v20 + 1sub_6C3C(v0 + 2) = 2112;
    uint64_t v53 = v7;
    uint64_t v60 = (uint64_t)v15;
    unint64_t v21 = a2;
    id v22 = v15;
    uint64_t v6 = v56;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v60, &v61);
    __n128 v23 = v52;
    *uint64_t v52 = v15;

    a2 = v21;
    _os_log_impl(&dword_0, v16, v17, "InternalSignalsManager#add signal: %s, to intent: %@...", (uint8_t *)v20, 0x16u);
    uint64_t v24 = sub_6C5C((uint64_t *)&unk_286BC0);
    swift_arrayDestroy(v23, 1LL, v24);
    swift_slowDealloc(v23, -1LL, -1LL);
    uint64_t v25 = v54;
    swift_arrayDestroy(v54, 1LL, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v25, -1LL, -1LL);
    uint64_t v26 = v20;
    uint64_t v10 = v55;
    swift_slowDealloc(v26, -1LL, -1LL);

    os_log_type_t v27 = *(void (**)(char *, uint64_t))(v53 + 8);
  }

  else
  {

    swift_bridgeObjectRelease_n(a2, 2LL);
    os_log_type_t v27 = *(void (**)(char *, uint64_t))(v7 + 8);
  }

  v27(v12, v6);
  uint64_t v28 = objc_opt_self(&OBJC_CLASS___INPlayMediaIntent);
  uint64_t v29 = swift_dynamicCastObjCClass(v15, v28);
  if (v29)
  {
    os_log_t v30 = (void *)v29;
    uint64_t v31 = qword_283958;
    id v32 = v15;
    if (v31 != -1) {
      swift_once(&qword_283958, sub_1AAFC0);
    }
    sub_1ABFC0(v59, a2, v30);
  }

  else
  {
    uint64_t v33 = objc_opt_self(&OBJC_CLASS___INAddMediaIntent);
    uint64_t v34 = swift_dynamicCastObjCClass(v15, v33);
    if (v34)
    {
      os_log_type_t v35 = (void *)v34;
      uint64_t v36 = qword_283958;
      id v37 = v15;
      if (v36 != -1) {
        swift_once(&qword_283958, sub_1AAFC0);
      }
      sub_1AD228(v59, a2, v35);
    }

    else
    {
      uint64_t v38 = objc_opt_self(&OBJC_CLASS___INUpdateMediaAffinityIntent);
      uint64_t v39 = swift_dynamicCastObjCClass(v15, v38);
      if (v39)
      {
        uint64_t v40 = (void *)v39;
        uint64_t v41 = qword_283958;
        id v42 = v15;
        if (v41 != -1) {
          swift_once(&qword_283958, sub_1AAFC0);
        }
        sub_1AD6F8(v59, a2, v40);
      }

      else
      {
        uint64_t v43 = objc_opt_self(&OBJC_CLASS___INSearchForMediaIntent);
        uint64_t v44 = swift_dynamicCastObjCClass(v15, v43);
        if (v44)
        {
          uint64_t v45 = (void *)v44;
          uint64_t v46 = qword_283958;
          id v47 = v15;
          if (v46 != -1) {
            swift_once(&qword_283958, sub_1AAFC0);
          }
          sub_1ADBC8(v59, a2, v45);
        }

        else
        {
          uint64_t v48 = v58(v10, v57, v6);
          uint64_t v49 = (os_log_s *)Logger.logObject.getter(v48);
          os_log_type_t v50 = static os_log_type_t.error.getter();
          if (os_log_type_enabled(v49, v50))
          {
            uint64_t v51 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
            *(_WORD *)uint64_t v51 = 0;
            _os_log_impl( &dword_0,  v49,  v50,  "InternalSignalsManager#add Unexpected intent type when adding internal signal",  v51,  2u);
            swift_slowDealloc(v51, -1LL, -1LL);
          }

          v27(v10, v6);
        }
      }
    }
  }

uint64_t sub_1ABFC0(uint64_t a1, unint64_t a2, void *a3)
{
  unint64_t v57 = a2;
  uint64_t v58 = a1;
  uint64_t v4 = type metadata accessor for Logger(0LL);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = __chkstk_darwin(v4);
  uint64_t v8 = (char *)&v55 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v9 = __chkstk_darwin(v6);
  uint64_t v11 = (char *)&v55 - v10;
  __chkstk_darwin(v9);
  uint64_t v13 = (char *)&v55 - v12;
  if (qword_283958 != -1) {
    swift_once(&qword_283958, sub_1AAFC0);
  }
  uint64_t v14 = *(void *)((char *)&dword_10 + (void)off_28CA28);
  uint64_t v15 = swift_retain(v14);
  dispatch thunk of PThreadMutex.lock()(v15);
  swift_release(v14);
  if (qword_283888 != -1) {
    swift_once(&qword_283888, sub_BFC5C);
  }
  uint64_t v16 = sub_6960(v4, (uint64_t)qword_2969C8);
  os_log_type_t v17 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v5 + 16);
  uint64_t v18 = v17(v13, v16, v4);
  uint64_t v19 = (os_log_s *)Logger.logObject.getter(v18);
  os_log_type_t v20 = static os_log_type_t.default.getter(v19);
  if (os_log_type_enabled(v19, v20))
  {
    unint64_t v21 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
    uint64_t v55 = v4;
    uint64_t v22 = v16;
    __n128 v23 = v17;
    uint64_t v24 = v8;
    uint64_t v25 = a3;
    uint64_t v26 = v11;
    os_log_type_t v27 = v21;
    *(_WORD *)unint64_t v21 = 0;
    _os_log_impl(&dword_0, v19, v20, "InternalSignalsManager#add#fromPlayMediaIntent (lock aquired)", v21, 2u);
    uint64_t v28 = v27;
    uint64_t v11 = v26;
    a3 = v25;
    uint64_t v8 = v24;
    os_log_type_t v17 = v23;
    uint64_t v16 = v22;
    uint64_t v4 = v55;
    swift_slowDealloc(v28, -1LL, -1LL);
  }

  uint64_t v29 = *(void (**)(char *, uint64_t))(v5 + 8);
  v29(v13, v4);
  id v30 = [a3 backingStore];
  uint64_t v31 = objc_opt_self(&OBJC_CLASS____INPBPlayMediaIntent);
  id v32 = (void *)swift_dynamicCastObjCClass(v30, v31);
  if (v32)
  {
    uint64_t v33 = v32;
    uint64_t v56 = v29;
    id v34 = [v32 privatePlayMediaIntentData];

    if (!v34)
    {
      id v35 = [objc_allocWithZone(_INPBPrivatePlayMediaIntentData) init];
      [v33 setPrivatePlayMediaIntentData:v35];
    }

    id v36 = [v33 privatePlayMediaIntentData];
    unint64_t v37 = v57;
    if (v36)
    {
      uint64_t v38 = v36;
      NSString v39 = String._bridgeToObjectiveC()();
      [v38 addInternalSignal:v39];
    }

    v17(v11, v16, v4);
    uint64_t v40 = swift_bridgeObjectRetain_n(v37, 2LL);
    uint64_t v41 = (os_log_s *)Logger.logObject.getter(v40);
    os_log_type_t v42 = static os_log_type_t.default.getter(v41);
    if (os_log_type_enabled(v41, v42))
    {
      uint64_t v43 = v11;
      uint64_t v44 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
      uint64_t v45 = swift_slowAlloc(32LL, -1LL);
      uint64_t v60 = v45;
      *(_DWORD *)uint64_t v44 = 136315138;
      swift_bridgeObjectRetain(v37);
      uint64_t v59 = sub_6978(v58, v37, &v60);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v59, &v60);
      swift_bridgeObjectRelease_n(v37, 3LL);
      _os_log_impl( &dword_0,  v41,  v42,  "InternalSignalsManager#add#fromPlayMediaIntent added %s to playMediaIntent. (unlock)",  v44,  0xCu);
      swift_arrayDestroy(v45, 1LL, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v45, -1LL, -1LL);
      swift_slowDealloc(v44, -1LL, -1LL);

      uint64_t v46 = v43;
    }

    else
    {

      swift_bridgeObjectRelease_n(v37, 2LL);
      uint64_t v46 = v11;
    }

    v56(v46, v4);
    uint64_t v53 = *(void *)((char *)&dword_10 + (void)off_28CA28);
    uint64_t v54 = swift_retain(v53);
    dispatch thunk of PThreadMutex.unlock()(v54);

    return swift_release(v53);
  }

  else
  {

    uint64_t v47 = v17(v8, v16, v4);
    uint64_t v48 = (os_log_s *)Logger.logObject.getter(v47);
    os_log_type_t v49 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v48, v49))
    {
      os_log_type_t v50 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)os_log_type_t v50 = 0;
      _os_log_impl( &dword_0,  v48,  v49,  "InternalSignalsManager#add#fromPlayMediaIntent Unexpected backing store error adding internal signal. (unlock)",  v50,  2u);
      swift_slowDealloc(v50, -1LL, -1LL);
    }

    uint64_t v51 = ((uint64_t (*)(char *, uint64_t))v29)(v8, v4);
    return dispatch thunk of PThreadMutex.unlock()(v51);
  }

void static InternalSignalsManager.remove(_:from:)(uint64_t a1, unint64_t a2, void *a3)
{
  uint64_t v6 = type metadata accessor for Logger(0LL);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = __chkstk_darwin(v6);
  uint64_t v10 = (char *)&v48 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v8);
  uint64_t v12 = (char *)&v48 - v11;
  if (qword_283888 != -1) {
    swift_once(&qword_283888, sub_BFC5C);
  }
  uint64_t v13 = sub_6960(v6, (uint64_t)qword_2969C8);
  uint64_t v14 = *(void (**)(char *))(v7 + 16);
  uint64_t v53 = v13;
  v14(v12);
  uint64_t v15 = swift_bridgeObjectRetain_n(a2, 2LL);
  uint64_t v16 = (os_log_s *)Logger.logObject.getter(v15);
  os_log_type_t v17 = static os_log_type_t.default.getter(v16);
  if (os_log_type_enabled(v16, v17))
  {
    uint64_t v52 = v6;
    uint64_t v18 = swift_slowAlloc(12LL, -1LL);
    os_log_type_t v50 = v14;
    uint64_t v19 = (uint8_t *)v18;
    uint64_t v20 = swift_slowAlloc(32LL, -1LL);
    uint64_t v49 = v7;
    uint64_t v21 = v20;
    uint64_t v55 = v20;
    uint64_t v51 = a3;
    *(_DWORD *)uint64_t v19 = 136315138;
    swift_bridgeObjectRetain(a2);
    uint64_t v54 = sub_6978(a1, a2, &v55);
    a3 = v51;
    uint64_t v6 = v52;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v54, &v55);
    swift_bridgeObjectRelease_n(a2, 3LL);
    _os_log_impl(&dword_0, v16, v17, "InternalSignalsManager#remove %s...", v19, 0xCu);
    swift_arrayDestroy(v21, 1LL, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v21, -1LL, -1LL);
    uint64_t v22 = v19;
    uint64_t v14 = v50;
    swift_slowDealloc(v22, -1LL, -1LL);

    __n128 v23 = *(void (**)(char *, uint64_t))(v49 + 8);
  }

  else
  {

    swift_bridgeObjectRelease_n(a2, 2LL);
    __n128 v23 = *(void (**)(char *, uint64_t))(v7 + 8);
  }

  v23(v12, v6);
  uint64_t v24 = objc_opt_self(&OBJC_CLASS___INPlayMediaIntent);
  uint64_t v25 = swift_dynamicCastObjCClass(a3, v24);
  if (v25)
  {
    uint64_t v26 = (void *)v25;
    uint64_t v27 = qword_283958;
    id v28 = a3;
    if (v27 != -1) {
      swift_once(&qword_283958, sub_1AAFC0);
    }
    sub_1AE098(a1, a2, v26);
  }

  else
  {
    uint64_t v29 = objc_opt_self(&OBJC_CLASS___INAddMediaIntent);
    uint64_t v30 = swift_dynamicCastObjCClass(a3, v29);
    if (v30)
    {
      uint64_t v31 = (void *)v30;
      uint64_t v32 = qword_283958;
      id v33 = a3;
      if (v32 != -1) {
        swift_once(&qword_283958, sub_1AAFC0);
      }
      sub_1AE628(a1, a2, v31);
    }

    else
    {
      uint64_t v34 = objc_opt_self(&OBJC_CLASS___INUpdateMediaAffinityIntent);
      uint64_t v35 = swift_dynamicCastObjCClass(a3, v34);
      if (v35)
      {
        id v36 = (void *)v35;
        uint64_t v37 = qword_283958;
        id v38 = a3;
        if (v37 != -1) {
          swift_once(&qword_283958, sub_1AAFC0);
        }
        sub_1AEBB8(a1, a2, v36);
      }

      else
      {
        uint64_t v39 = objc_opt_self(&OBJC_CLASS___INSearchForMediaIntent);
        uint64_t v40 = swift_dynamicCastObjCClass(a3, v39);
        if (v40)
        {
          uint64_t v41 = (void *)v40;
          uint64_t v42 = qword_283958;
          id v43 = a3;
          if (v42 != -1) {
            swift_once(&qword_283958, sub_1AAFC0);
          }
          sub_1AF148(a1, a2, v41);
        }

        else
        {
          uint64_t v44 = ((uint64_t (*)(char *, uint64_t, uint64_t))v14)(v10, v53, v6);
          uint64_t v45 = (os_log_s *)Logger.logObject.getter(v44);
          os_log_type_t v46 = static os_log_type_t.error.getter();
          if (os_log_type_enabled(v45, v46))
          {
            uint64_t v47 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
            *(_WORD *)uint64_t v47 = 0;
            _os_log_impl( &dword_0,  v45,  v46,  "InternalSignalsManager#remove Unexpected intent type when removing internal signal",  v47,  2u);
            swift_slowDealloc(v47, -1LL, -1LL);
          }

          v23(v10, v6);
        }
      }
    }
  }

uint64_t sub_1AC928(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v3 = a3[2];
  if (!v3) {
    return 0LL;
  }
  uint64_t v7 = a3[4];
  uint64_t v8 = a3[5];
  BOOL v9 = v7 == a1 && v8 == a2;
  if (v9 || (_stringCompareWithSmolCheck(_:_:expecting:)(v7, v8) & 1) != 0) {
    return 0LL;
  }
  uint64_t v11 = 0LL;
  uint64_t v12 = a3 + 7;
  uint64_t v13 = 1LL;
  while (1)
  {
    if (v3 == v13) {
      return 0LL;
    }
    ++v11;
    uint64_t v14 = *(v12 - 1);
    uint64_t v15 = *v12;
    if (v14 == a1 && v15 == a2) {
      break;
    }
    char v17 = _stringCompareWithSmolCheck(_:_:expecting:)(v14, v15);
    uint64_t result = v13++;
    v12 += 2;
    if ((v17 & 1) != 0) {
      return result;
    }
  }

  return v11;
}

uint64_t sub_1ACA0C(unint64_t a1)
{
  uint64_t v3 = (void *)*v1;
  if ((swift_isUniquelyReferenced_nonNull_native(*v1) & 1) == 0) {
    uint64_t v3 = sub_1ACB04(v3);
  }
  unint64_t v4 = v3[2];
  if (v4 <= a1)
  {
    __break(1u);
  }

  else
  {
    unint64_t v5 = v4 - 1;
    uint64_t v6 = v4 - 1 - a1;
    if (v6 >= 0)
    {
      uint64_t v7 = &v3[2 * a1];
      uint64_t v8 = v7[4];
      memmove(v7 + 4, v7 + 6, 16 * v6);
      v3[2] = v5;
      *uint64_t v1 = v3;
      return v8;
    }
  }

  char v10 = 2;
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  "UnsafeMutablePointer.moveInitialize with negative count",  55LL,  2LL,  "Swift/UnsafePointer.swift",  25LL,  v10,  1046LL,  0);
  __break(1u);
  return result;
}

uint64_t InternalSignalsManager.deinit()
{
  return v0;
}

void *sub_1ACB04(void *a1)
{
  return sub_1FC6C(0LL, a1[2], 0, a1);
}

void *_s23AudioFlowDelegatePlugin22InternalSignalsManagerC08internalF03forSaySSGSo8INIntentC_tFZ_0(void *a1)
{
  uint64_t v2 = objc_opt_self(&OBJC_CLASS___INPlayMediaIntent);
  uint64_t v3 = swift_dynamicCastObjCClass(a1, v2);
  if (v3)
  {
    unint64_t v4 = (void *)v3;
    id v5 = a1;
    id v6 = [v4 privatePlayMediaIntentData];
    if (v6) {
      goto LABEL_12;
    }
LABEL_14:
    uint64_t v18 = &_swiftEmptyArrayStorage;
    goto LABEL_15;
  }

  uint64_t v7 = objc_opt_self(&OBJC_CLASS___INAddMediaIntent);
  uint64_t v8 = swift_dynamicCastObjCClass(a1, v7);
  if (v8)
  {
    BOOL v9 = (void *)v8;
    id v5 = a1;
    id v6 = [v9 privateAddMediaIntentData];
    if (!v6) {
      goto LABEL_14;
    }
  }

  else
  {
    uint64_t v10 = objc_opt_self(&OBJC_CLASS___INUpdateMediaAffinityIntent);
    uint64_t v11 = swift_dynamicCastObjCClass(a1, v10);
    if (v11)
    {
      uint64_t v12 = (void *)v11;
      id v5 = a1;
      id v6 = [v12 privateUpdateMediaAffinityIntentData];
      if (!v6) {
        goto LABEL_14;
      }
    }

    else
    {
      uint64_t v13 = objc_opt_self(&OBJC_CLASS___INSearchForMediaIntent);
      uint64_t v14 = swift_dynamicCastObjCClass(a1, v13);
      if (!v14) {
        return &_swiftEmptyArrayStorage;
      }
      uint64_t v15 = (void *)v14;
      id v5 = a1;
      id v6 = [v15 privateSearchForMediaIntentData];
      if (!v6) {
        goto LABEL_14;
      }
    }
  }

uint64_t _s23AudioFlowDelegatePlugin22InternalSignalsManagerC10doesIntent_4haveSbSo8INIntentC_SaySSGtFZ_0( void *a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for Logger(0LL);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = __chkstk_darwin(v4);
  uint64_t v53 = (char *)&v47 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v6);
  BOOL v9 = (char *)&v47 - v8;
  if (qword_283958 != -1) {
    goto LABEL_40;
  }
  while (1)
  {
    uint64_t v10 = *(void *)((char *)&dword_10 + (void)off_28CA28);
    uint64_t v11 = swift_retain(v10);
    dispatch thunk of PThreadMutex.lock()(v11);
    swift_release(v10);
    if (qword_283888 != -1) {
      swift_once(&qword_283888, sub_BFC5C);
    }
    uint64_t v12 = sub_6960(v4, (uint64_t)qword_2969C8);
    uint64_t v13 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v5 + 16);
    uint64_t v14 = v13(v9, v12, v4);
    uint64_t v15 = (os_log_s *)Logger.logObject.getter(v14);
    os_log_type_t v16 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v15, v16))
    {
      id v17 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)id v17 = 0;
      _os_log_impl(&dword_0, v15, v16, "InternalSignalsManager#doesIntent#have (lock aquired)", v17, 2u);
      swift_slowDealloc(v17, -1LL, -1LL);
    }

    uint64_t v54 = *(void (**)(char *, uint64_t))(v5 + 8);
    v54(v9, v4);
    uint64_t v18 = _s23AudioFlowDelegatePlugin22InternalSignalsManagerC08internalF03forSaySSGSo8INIntentC_tFZ_0(a1);
    uint64_t v19 = v18;
    uint64_t v5 = *(void *)(a2 + 16);
    if (!v5) {
      break;
    }
    uint64_t v48 = v12;
    uint64_t v49 = (void (*)(char *, uint64_t, uint64_t))v13;
    uint64_t v50 = a2;
    uint64_t v51 = v4;
    uint64_t v20 = 0LL;
    uint64_t v21 = a2 + 32;
    uint64_t v22 = v18[2];
    uint64_t v52 = (char **)(v18 + 7);
    while (1)
    {
      if (v22)
      {
        uint64_t v23 = v21 + 16 * v20;
        a1 = *(void **)v23;
        BOOL v9 = *(char **)(v23 + 8);
        uint64_t v24 = v19[4];
        uint64_t v25 = (char *)v19[5];
        BOOL v26 = v24 == *(void *)v23 && v25 == v9;
        if (v26 || (_stringCompareWithSmolCheck(_:_:expecting:)(v24, v25) & 1) != 0)
        {
LABEL_25:
          swift_bridgeObjectRelease(v19);
          uint64_t v31 = 1LL;
LABEL_26:
          a2 = v50;
          uint64_t v4 = v51;
          uint64_t v32 = v53;
          v49(v53, v48, v51);
          goto LABEL_28;
        }

        if (v22 != 1) {
          break;
        }
      }

LABEL_8:
      if (++v20 == v5)
      {
        swift_bridgeObjectRelease(v19);
        uint64_t v31 = 0LL;
        goto LABEL_26;
      }
    }

    uint64_t v27 = v52;
    uint64_t v4 = 1LL;
    while (1)
    {
      a2 = v4 + 1;
      if (__OFADD__(v4, 1LL)) {
        break;
      }
      id v28 = *(v27 - 1);
      uint64_t v29 = *v27;
      BOOL v30 = v28 == a1 && v29 == v9;
      if (v30 || (_stringCompareWithSmolCheck(_:_:expecting:)(v28, v29) & 1) != 0) {
        goto LABEL_25;
      }
      v27 += 2;
      ++v4;
      if (a2 == v22) {
        goto LABEL_8;
      }
    }

    __break(1u);
LABEL_40:
    swift_once(&qword_283958, sub_1AAFC0);
  }

  swift_bridgeObjectRelease(v18);
  uint64_t v31 = 0LL;
  uint64_t v32 = v53;
  v13(v53, v12, v4);
LABEL_28:
  uint64_t v33 = swift_bridgeObjectRetain_n(a2, 2LL);
  uint64_t v34 = (os_log_s *)Logger.logObject.getter(v33);
  os_log_type_t v35 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v34, v35))
  {
    uint64_t v36 = swift_slowAlloc(22LL, -1LL);
    uint64_t v53 = (char *)swift_slowAlloc(64LL, -1LL);
    uint64_t v56 = v53;
    *(_DWORD *)uint64_t v36 = 136315394;
    uint64_t v37 = swift_bridgeObjectRetain(a2);
    uint64_t v38 = Array.description.getter(v37, &type metadata for String);
    unint64_t v40 = v39;
    swift_bridgeObjectRelease(a2);
    uint64_t v55 = sub_6978(v38, v40, (uint64_t *)&v56);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v55, &v56);
    swift_bridgeObjectRelease_n(a2, 2LL);
    swift_bridgeObjectRelease(v40);
    *(_WORD *)(v36 + 1sub_6C3C(v0 + 2) = 2080;
    if ((_DWORD)v31) {
      uint64_t v41 = 0LL;
    }
    else {
      uint64_t v41 = 7630702LL;
    }
    if ((_DWORD)v31) {
      unint64_t v42 = 0xE000000000000000LL;
    }
    else {
      unint64_t v42 = 0xE300000000000000LL;
    }
    uint64_t v55 = sub_6978(v41, v42, (uint64_t *)&v56);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v55, &v56);
    swift_bridgeObjectRelease(v42);
    _os_log_impl( &dword_0,  v34,  v35,  "InternalSignalsManager#doesIntent signals: %s %s present in intent. (unlock)",  (uint8_t *)v36,  0x16u);
    id v43 = v53;
    swift_arrayDestroy(v53, 2LL, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v43, -1LL, -1LL);
    swift_slowDealloc(v36, -1LL, -1LL);
  }

  else
  {

    swift_bridgeObjectRelease_n(a2, 2LL);
  }

  v54(v32, v4);
  uint64_t v44 = *(void *)((char *)&dword_10 + (void)off_28CA28);
  uint64_t v45 = swift_retain(v44);
  dispatch thunk of PThreadMutex.unlock()(v45);
  swift_release(v44);
  return v31;
}

  *(void *)a2 = v4;
  *(void *)(a2 + 8) = v8;
  uint64_t result = 0.0;
  *(_OWORD *)(a2 + swift_weakDestroy(v0 + 16) = 0u;
  *(_OWORD *)(a2 + 3sub_6C3C(v0 + 2) = 0u;
  *(void *)(a2 + 48) = 0LL;
  *(_BYTE *)(a2 + 56) = 1;
  return result;
}

                swift_bridgeObjectRelease(v21);
              }

              while (v17 != v5);
            }
          }

          swift_bridgeObjectRelease(v16);
          if (qword_283888 != -1) {
            swift_once(&qword_283888, sub_BFC5C);
          }
          uint64_t v36 = sub_6960(v1, (uint64_t)qword_2969C8);
          uint64_t v37 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v2 + 16))(v7, v36, v1);
          uint64_t v38 = (os_log_s *)Logger.logObject.getter(v37);
          unint64_t v39 = static os_log_type_t.error.getter();
          if (os_log_type_enabled(v38, v39))
          {
            unint64_t v40 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
            *(_WORD *)unint64_t v40 = 0;
            _os_log_impl( &dword_0,  v38,  v39,  "AudioNLv3Intent had no relevant topicId. Returning newsPodcastTopicId=nil",  v40,  2u);
            swift_slowDealloc(v40, -1LL, -1LL);
          }

          (*(void (**)(char *, uint64_t))(v2 + 8))(v7, v1);
          return 0LL;
        }
      }
    }
  }

  if (qword_283888 != -1) {
LABEL_37:
  }
    swift_once(&qword_283888, sub_BFC5C);
  BOOL v26 = sub_6960(v1, (uint64_t)qword_2969C8);
  uint64_t v27 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v2 + 16))(v5, v26, v1);
  id v28 = (os_log_s *)Logger.logObject.getter(v27);
  uint64_t v29 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v28, v29))
  {
    BOOL v30 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
    *(_WORD *)BOOL v30 = 0;
    _os_log_impl( &dword_0,  v28,  v29,  "AudioNLv3Intent called for non INPlayMediaIntent. Returning newsPodcastTopicId=nil",  v30,  2u);
    swift_slowDealloc(v30, -1LL, -1LL);
  }

  (*(void (**)(char *, uint64_t))(v2 + 8))(v5, v1);
  return 0LL;
}

                swift_bridgeObjectRelease(v21);
              }

              while (v17 != v5);
            }
          }

          swift_bridgeObjectRelease(v16);
          if (qword_283888 != -1) {
            swift_once(&qword_283888, sub_BFC5C);
          }
          uint64_t v36 = sub_6960(v1, (uint64_t)qword_2969C8);
          uint64_t v37 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v2 + 16))(v7, v36, v1);
          uint64_t v38 = (os_log_s *)Logger.logObject.getter(v37);
          unint64_t v39 = static os_log_type_t.error.getter();
          if (os_log_type_enabled(v38, v39))
          {
            unint64_t v40 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
            *(_WORD *)unint64_t v40 = 0;
            _os_log_impl( &dword_0,  v38,  v39,  "AudioNLv3Intent had no relevant podcastId. Returning newsPodcastIdentifier=nil",  v40,  2u);
            swift_slowDealloc(v40, -1LL, -1LL);
          }

          (*(void (**)(char *, uint64_t))(v2 + 8))(v7, v1);
          return 0LL;
        }
      }
    }
  }

  if (qword_283888 != -1) {
LABEL_37:
  }
    swift_once(&qword_283888, sub_BFC5C);
  BOOL v26 = sub_6960(v1, (uint64_t)qword_2969C8);
  uint64_t v27 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v2 + 16))(v5, v26, v1);
  id v28 = (os_log_s *)Logger.logObject.getter(v27);
  uint64_t v29 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v28, v29))
  {
    BOOL v30 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
    *(_WORD *)BOOL v30 = 0;
    _os_log_impl( &dword_0,  v28,  v29,  "AudioNLv3Intent called for non INPlayMediaIntent. Returning newsPodcastIdentifier=nil",  v30,  2u);
    swift_slowDealloc(v30, -1LL, -1LL);
  }

  (*(void (**)(char *, uint64_t))(v2 + 8))(v5, v1);
  return 0LL;
}

unint64_t sub_1AD18C(unint64_t result, uint64_t a2, unint64_t a3)
{
  if ((result & 0x8000000000000000LL) != 0)
  {
    __break(1u);
  }

  else
  {
    if ((a3 & 0x2000000000000000LL) != 0) {
      uint64_t v5 = HIBYTE(a3) & 0xF;
    }
    else {
      uint64_t v5 = a2 & 0xFFFFFFFFFFFFLL;
    }
    uint64_t v6 = 7LL;
    if (((a3 >> 60) & ((a2 & 0x800000000000000LL) == 0)) != 0) {
      uint64_t v6 = 11LL;
    }
    unint64_t v7 = v6 | (v5 << 16);
    uint64_t result = String.index(_:offsetBy:limitedBy:)(15LL, result, v7, a2, a3);
    if ((v8 & 1) != 0) {
      uint64_t result = v7;
    }
    if (4 * v5 >= result >> 14) {
      return String.subscript.getter(result, v7, a2, a3);
    }
  }

  __break(1u);
  return result;
}

uint64_t sub_1AD228(uint64_t a1, unint64_t a2, void *a3)
{
  unint64_t v47 = a2;
  uint64_t v48 = a1;
  uint64_t v4 = type metadata accessor for Logger(0LL);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = __chkstk_darwin(v4);
  char v8 = (char *)&v46 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v9 = __chkstk_darwin(v6);
  uint64_t v49 = (char *)&v46 - v10;
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v46 - v11;
  if (qword_283958 != -1) {
    swift_once(&qword_283958, sub_1AAFC0);
  }
  uint64_t v13 = *(void *)((char *)&dword_10 + (void)off_28CA28);
  uint64_t v14 = swift_retain(v13);
  dispatch thunk of PThreadMutex.lock()(v14);
  swift_release(v13);
  if (qword_283888 != -1) {
    swift_once(&qword_283888, sub_BFC5C);
  }
  uint64_t v15 = sub_6960(v4, (uint64_t)qword_2969C8);
  os_log_type_t v16 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v5 + 16);
  uint64_t v17 = v16(v12, v15, v4);
  uint64_t v18 = (os_log_s *)Logger.logObject.getter(v17);
  os_log_type_t v19 = static os_log_type_t.default.getter(v18);
  if (os_log_type_enabled(v18, v19))
  {
    uint64_t v20 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
    *(_WORD *)uint64_t v20 = 0;
    _os_log_impl(&dword_0, v18, v19, "InternalSignalsManager#add#fromAddMediaIntent (lock aquired)", v20, 2u);
    swift_slowDealloc(v20, -1LL, -1LL);
  }

  uint64_t v21 = *(void (**)(char *, uint64_t))(v5 + 8);
  v21(v12, v4);
  id v22 = [a3 backingStore];
  uint64_t v23 = objc_opt_self(&OBJC_CLASS____INPBAddMediaIntent);
  uint64_t v24 = (void *)swift_dynamicCastObjCClass(v22, v23);
  if (v24)
  {
    uint64_t v25 = v24;
    id v26 = [v24 privateAddMediaIntentData];

    if (!v26)
    {
      id v27 = [objc_allocWithZone(_INPBPrivateAddMediaIntentData) init];
      [v25 setPrivateAddMediaIntentData:v27];
    }

    id v28 = [v25 privateAddMediaIntentData];
    unint64_t v29 = v47;
    if (v28)
    {
      BOOL v30 = v28;
      NSString v31 = String._bridgeToObjectiveC()();
      [v30 addInternalSignal:v31];
    }

    uint64_t v32 = v49;
    v16(v49, v15, v4);
    uint64_t v33 = swift_bridgeObjectRetain_n(v29, 2LL);
    uint64_t v34 = (os_log_s *)Logger.logObject.getter(v33);
    os_log_type_t v35 = static os_log_type_t.default.getter(v34);
    if (os_log_type_enabled(v34, v35))
    {
      uint64_t v36 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
      uint64_t v37 = swift_slowAlloc(32LL, -1LL);
      uint64_t v51 = v37;
      *(_DWORD *)uint64_t v36 = 136315138;
      swift_bridgeObjectRetain(v29);
      uint64_t v50 = sub_6978(v48, v29, &v51);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v50, &v51);
      swift_bridgeObjectRelease_n(v29, 3LL);
      _os_log_impl( &dword_0,  v34,  v35,  "InternalSignalsManager#add#fromAddMediaIntent added %s to addMediaIntent. (unlock)",  v36,  0xCu);
      swift_arrayDestroy(v37, 1LL, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v37, -1LL, -1LL);
      swift_slowDealloc(v36, -1LL, -1LL);

      v21(v49, v4);
    }

    else
    {

      swift_bridgeObjectRelease_n(v29, 2LL);
      v21(v32, v4);
    }

    uint64_t v42 = *(void *)((char *)&dword_10 + (void)off_28CA28);
    uint64_t v44 = swift_retain(v42);
    dispatch thunk of PThreadMutex.unlock()(v44);
  }

  else
  {

    uint64_t v38 = v16(v8, v15, v4);
    unint64_t v39 = (os_log_s *)Logger.logObject.getter(v38);
    os_log_type_t v40 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v39, v40))
    {
      uint64_t v41 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)uint64_t v41 = 0;
      _os_log_impl( &dword_0,  v39,  v40,  "InternalSignalsManager#add#fromAddMediaIntent Unexpected backing store error while adding internal signal. (unlock)",  v41,  2u);
      swift_slowDealloc(v41, -1LL, -1LL);
    }

    v21(v8, v4);
    uint64_t v42 = *(void *)((char *)&dword_10 + (void)off_28CA28);
    uint64_t v43 = swift_retain(v42);
    dispatch thunk of PThreadMutex.unlock()(v43);
  }

  return swift_release(v42);
}

uint64_t sub_1AD6F8(uint64_t a1, unint64_t a2, void *a3)
{
  unint64_t v47 = a2;
  uint64_t v48 = a1;
  uint64_t v4 = type metadata accessor for Logger(0LL);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = __chkstk_darwin(v4);
  char v8 = (char *)&v46 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v9 = __chkstk_darwin(v6);
  uint64_t v49 = (char *)&v46 - v10;
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v46 - v11;
  if (qword_283958 != -1) {
    swift_once(&qword_283958, sub_1AAFC0);
  }
  uint64_t v13 = *(void *)((char *)&dword_10 + (void)off_28CA28);
  uint64_t v14 = swift_retain(v13);
  dispatch thunk of PThreadMutex.lock()(v14);
  swift_release(v13);
  if (qword_283888 != -1) {
    swift_once(&qword_283888, sub_BFC5C);
  }
  uint64_t v15 = sub_6960(v4, (uint64_t)qword_2969C8);
  os_log_type_t v16 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v5 + 16);
  uint64_t v17 = v16(v12, v15, v4);
  uint64_t v18 = (os_log_s *)Logger.logObject.getter(v17);
  os_log_type_t v19 = static os_log_type_t.default.getter(v18);
  if (os_log_type_enabled(v18, v19))
  {
    uint64_t v20 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
    *(_WORD *)uint64_t v20 = 0;
    _os_log_impl(&dword_0, v18, v19, "InternalSignalsManager#add#fromUpdateMediaAffinityIntent (lock aquired)", v20, 2u);
    swift_slowDealloc(v20, -1LL, -1LL);
  }

  uint64_t v21 = *(void (**)(char *, uint64_t))(v5 + 8);
  v21(v12, v4);
  id v22 = [a3 backingStore];
  uint64_t v23 = objc_opt_self(&OBJC_CLASS____INPBUpdateMediaAffinityIntent);
  uint64_t v24 = (void *)swift_dynamicCastObjCClass(v22, v23);
  if (v24)
  {
    uint64_t v25 = v24;
    id v26 = [v24 privateUpdateMediaAffinityIntentData];

    if (!v26)
    {
      id v27 = [objc_allocWithZone(_INPBPrivateUpdateMediaAffinityIntentData) init];
      [v25 setPrivateUpdateMediaAffinityIntentData:v27];
    }

    id v28 = [v25 privateUpdateMediaAffinityIntentData];
    unint64_t v29 = v47;
    if (v28)
    {
      BOOL v30 = v28;
      NSString v31 = String._bridgeToObjectiveC()();
      [v30 addInternalSignal:v31];
    }

    uint64_t v32 = v49;
    v16(v49, v15, v4);
    uint64_t v33 = swift_bridgeObjectRetain_n(v29, 2LL);
    uint64_t v34 = (os_log_s *)Logger.logObject.getter(v33);
    os_log_type_t v35 = static os_log_type_t.default.getter(v34);
    if (os_log_type_enabled(v34, v35))
    {
      uint64_t v36 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
      uint64_t v37 = swift_slowAlloc(32LL, -1LL);
      uint64_t v51 = v37;
      *(_DWORD *)uint64_t v36 = 136315138;
      swift_bridgeObjectRetain(v29);
      uint64_t v50 = sub_6978(v48, v29, &v51);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v50, &v51);
      swift_bridgeObjectRelease_n(v29, 3LL);
      _os_log_impl( &dword_0,  v34,  v35,  "InternalSignalsManager#add#fromUpdateMediaAffinityIntent added %s to updateMediaIntent. (unlock)",  v36,  0xCu);
      swift_arrayDestroy(v37, 1LL, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v37, -1LL, -1LL);
      swift_slowDealloc(v36, -1LL, -1LL);

      v21(v49, v4);
    }

    else
    {

      swift_bridgeObjectRelease_n(v29, 2LL);
      v21(v32, v4);
    }

    uint64_t v42 = *(void *)((char *)&dword_10 + (void)off_28CA28);
    uint64_t v44 = swift_retain(v42);
    dispatch thunk of PThreadMutex.unlock()(v44);
  }

  else
  {

    uint64_t v38 = v16(v8, v15, v4);
    unint64_t v39 = (os_log_s *)Logger.logObject.getter(v38);
    os_log_type_t v40 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v39, v40))
    {
      uint64_t v41 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)uint64_t v41 = 0;
      _os_log_impl( &dword_0,  v39,  v40,  "InternalSignalsManager#add#fromUpdateMediaAffinityIntent Unexpected backing store error while adding internal signal. (unlock)",  v41,  2u);
      swift_slowDealloc(v41, -1LL, -1LL);
    }

    v21(v8, v4);
    uint64_t v42 = *(void *)((char *)&dword_10 + (void)off_28CA28);
    uint64_t v43 = swift_retain(v42);
    dispatch thunk of PThreadMutex.unlock()(v43);
  }

  return swift_release(v42);
}

uint64_t sub_1ADBC8(uint64_t a1, unint64_t a2, void *a3)
{
  unint64_t v47 = a2;
  uint64_t v48 = a1;
  uint64_t v4 = type metadata accessor for Logger(0LL);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = __chkstk_darwin(v4);
  char v8 = (char *)&v46 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v9 = __chkstk_darwin(v6);
  uint64_t v49 = (char *)&v46 - v10;
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v46 - v11;
  if (qword_283958 != -1) {
    swift_once(&qword_283958, sub_1AAFC0);
  }
  uint64_t v13 = *(void *)((char *)&dword_10 + (void)off_28CA28);
  uint64_t v14 = swift_retain(v13);
  dispatch thunk of PThreadMutex.lock()(v14);
  swift_release(v13);
  if (qword_283888 != -1) {
    swift_once(&qword_283888, sub_BFC5C);
  }
  uint64_t v15 = sub_6960(v4, (uint64_t)qword_2969C8);
  os_log_type_t v16 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v5 + 16);
  uint64_t v17 = v16(v12, v15, v4);
  uint64_t v18 = (os_log_s *)Logger.logObject.getter(v17);
  os_log_type_t v19 = static os_log_type_t.default.getter(v18);
  if (os_log_type_enabled(v18, v19))
  {
    uint64_t v20 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
    *(_WORD *)uint64_t v20 = 0;
    _os_log_impl(&dword_0, v18, v19, "InternalSignalsManager#add#fromSearchMediaIntent (lock aquired)", v20, 2u);
    swift_slowDealloc(v20, -1LL, -1LL);
  }

  uint64_t v21 = *(void (**)(char *, uint64_t))(v5 + 8);
  v21(v12, v4);
  id v22 = [a3 backingStore];
  uint64_t v23 = objc_opt_self(&OBJC_CLASS____INPBSearchForMediaIntent);
  uint64_t v24 = (void *)swift_dynamicCastObjCClass(v22, v23);
  if (v24)
  {
    uint64_t v25 = v24;
    id v26 = [v24 privateSearchForMediaIntentData];

    if (!v26)
    {
      id v27 = [objc_allocWithZone(_INPBPrivateSearchForMediaIntentData) init];
      [v25 setPrivateSearchForMediaIntentData:v27];
    }

    id v28 = [v25 privateSearchForMediaIntentData];
    unint64_t v29 = v47;
    if (v28)
    {
      BOOL v30 = v28;
      NSString v31 = String._bridgeToObjectiveC()();
      [v30 addInternalSignal:v31];
    }

    uint64_t v32 = v49;
    v16(v49, v15, v4);
    uint64_t v33 = swift_bridgeObjectRetain_n(v29, 2LL);
    uint64_t v34 = (os_log_s *)Logger.logObject.getter(v33);
    os_log_type_t v35 = static os_log_type_t.default.getter(v34);
    if (os_log_type_enabled(v34, v35))
    {
      uint64_t v36 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
      uint64_t v37 = swift_slowAlloc(32LL, -1LL);
      uint64_t v51 = v37;
      *(_DWORD *)uint64_t v36 = 136315138;
      swift_bridgeObjectRetain(v29);
      uint64_t v50 = sub_6978(v48, v29, &v51);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v50, &v51);
      swift_bridgeObjectRelease_n(v29, 3LL);
      _os_log_impl( &dword_0,  v34,  v35,  "InternalSignalsManager#add#fromSearchMediaIntent added %s to searchMediaIntent. (unlock)",  v36,  0xCu);
      swift_arrayDestroy(v37, 1LL, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v37, -1LL, -1LL);
      swift_slowDealloc(v36, -1LL, -1LL);

      v21(v49, v4);
    }

    else
    {

      swift_bridgeObjectRelease_n(v29, 2LL);
      v21(v32, v4);
    }

    uint64_t v42 = *(void *)((char *)&dword_10 + (void)off_28CA28);
    uint64_t v44 = swift_retain(v42);
    dispatch thunk of PThreadMutex.unlock()(v44);
  }

  else
  {

    uint64_t v38 = v16(v8, v15, v4);
    unint64_t v39 = (os_log_s *)Logger.logObject.getter(v38);
    os_log_type_t v40 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v39, v40))
    {
      uint64_t v41 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)uint64_t v41 = 0;
      _os_log_impl( &dword_0,  v39,  v40,  "InternalSignalsManager#add#fromSearchMediaIntent Unexpected backing store error while adding internal signal. (unlock)",  v41,  2u);
      swift_slowDealloc(v41, -1LL, -1LL);
    }

    v21(v8, v4);
    uint64_t v42 = *(void *)((char *)&dword_10 + (void)off_28CA28);
    uint64_t v43 = swift_retain(v42);
    dispatch thunk of PThreadMutex.unlock()(v43);
  }

  return swift_release(v42);
}

uint64_t sub_1AE098(uint64_t a1, unint64_t a2, void *a3)
{
  uint64_t v67 = a1;
  uint64_t v5 = type metadata accessor for Logger(0LL);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = __chkstk_darwin(v5);
  uint64_t v9 = (char *)&v66 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v10 = __chkstk_darwin(v7);
  uint64_t v12 = (char *)&v66 - v11;
  __chkstk_darwin(v10);
  uint64_t v14 = (char *)&v66 - v13;
  if (qword_283958 != -1) {
    swift_once(&qword_283958, sub_1AAFC0);
  }
  uint64_t v15 = *(void *)((char *)&dword_10 + (void)off_28CA28);
  uint64_t v16 = swift_retain(v15);
  dispatch thunk of PThreadMutex.lock()(v16);
  swift_release(v15);
  if (qword_283888 != -1) {
    swift_once(&qword_283888, sub_BFC5C);
  }
  uint64_t v17 = sub_6960(v5, (uint64_t)qword_2969C8);
  uint64_t v18 = *(void (**)(char *, uint64_t, uint64_t))(v6 + 16);
  uint64_t v68 = v17;
  uint64_t v69 = v18;
  uint64_t v19 = ((uint64_t (*)(char *))v18)(v14);
  uint64_t v20 = (os_log_s *)Logger.logObject.getter(v19);
  os_log_type_t v21 = static os_log_type_t.default.getter(v20);
  if (os_log_type_enabled(v20, v21))
  {
    unint64_t v22 = a2;
    uint64_t v23 = v12;
    uint64_t v24 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
    *(_WORD *)uint64_t v24 = 0;
    _os_log_impl(&dword_0, v20, v21, "InternalSignalsManager#remove#fromPlayMediaIntent (lock aquired)", v24, 2u);
    uint64_t v25 = v24;
    uint64_t v12 = v23;
    a2 = v22;
    swift_slowDealloc(v25, -1LL, -1LL);
  }

  id v26 = *(void (**)(char *, uint64_t))(v6 + 8);
  v26(v14, v5);
  id v27 = [a3 backingStore];
  uint64_t v28 = objc_opt_self(&OBJC_CLASS____INPBPlayMediaIntent);
  unint64_t v29 = (void *)swift_dynamicCastObjCClass(v27, v28);
  if (v29)
  {
    BOOL v30 = v29;
    id v31 = [v29 privatePlayMediaIntentData];
    if (v31)
    {
      uint64_t v32 = v31;
      id v33 = [v31 internalSignals];

      if (v33)
      {
        uint64_t v34 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v33, &type metadata for String);
        uint64_t v66 = v12;
        os_log_type_t v35 = (void *)v34;

        unint64_t v36 = sub_1AC928(v67, a2, v35);
        char v38 = v37;
        unint64_t v39 = v35;
        uint64_t v12 = v66;
        *(void *)&double v40 = swift_bridgeObjectRelease(v39).n128_u64[0];
        if ((v38 & 1) == 0)
        {
          id v41 = objc_msgSend(v30, "privatePlayMediaIntentData", v40);
          if (v41)
          {
            uint64_t v42 = v41;
            id v43 = [v41 internalSignals];
            if (v43)
            {
              uint64_t v44 = v43;
              uint64_t v45 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v43, &type metadata for String);

              uint64_t v71 = v45;
              sub_1ACA0C(v36);
              uint64_t v48 = v47;
              uint64_t v49 = v71;
              if (v71)
              {
                v50.super.isa = Array._bridgeToObjectiveC()().super.isa;
                *(void *)&double v46 = swift_bridgeObjectRelease(v49).n128_u64[0];
              }

              else
              {
                v50.super.isa = 0LL;
              }

              uint64_t v12 = v66;
              objc_msgSend(v42, "setInternalSignals:", v50.super.isa, v46);
              swift_bridgeObjectRelease(v48);
            }

            else
            {
              [v42 setInternalSignals:0];
            }
          }
        }
      }
    }

    v69(v12, v68, v5);
    uint64_t v57 = swift_bridgeObjectRetain_n(a2, 2LL);
    uint64_t v58 = (os_log_s *)Logger.logObject.getter(v57);
    os_log_type_t v59 = static os_log_type_t.default.getter(v58);
    if (os_log_type_enabled(v58, v59))
    {
      uint64_t v60 = swift_slowAlloc(12LL, -1LL);
      uint64_t v69 = (void (*)(char *, uint64_t, uint64_t))v26;
      uint64_t v61 = (uint8_t *)v60;
      uint64_t v62 = swift_slowAlloc(32LL, -1LL);
      uint64_t v66 = v12;
      uint64_t v63 = v62;
      uint64_t v71 = v62;
      *(_DWORD *)uint64_t v61 = 136315138;
      swift_bridgeObjectRetain(a2);
      uint64_t v70 = sub_6978(v67, a2, &v71);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v70, &v71);
      swift_bridgeObjectRelease_n(a2, 3LL);
      _os_log_impl( &dword_0,  v58,  v59,  "InternalSignalsManager#remove#fromPlayMediaIntent removed %s from playMediaIntent. (unlock)",  v61,  0xCu);
      swift_arrayDestroy(v63, 1LL, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v63, -1LL, -1LL);
      swift_slowDealloc(v61, -1LL, -1LL);

      ((void (*)(char *, uint64_t))v69)(v66, v5);
    }

    else
    {

      swift_bridgeObjectRelease_n(a2, 2LL);
      v26(v12, v5);
    }

    uint64_t v55 = *(void *)((char *)&dword_10 + (void)off_28CA28);
    uint64_t v64 = swift_retain(v55);
    dispatch thunk of PThreadMutex.unlock()(v64);
  }

  else
  {

    uint64_t v51 = ((uint64_t (*)(char *, uint64_t, uint64_t))v69)(v9, v68, v5);
    uint64_t v52 = (os_log_s *)Logger.logObject.getter(v51);
    os_log_type_t v53 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v52, v53))
    {
      uint64_t v54 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)uint64_t v54 = 0;
      _os_log_impl( &dword_0,  v52,  v53,  "InternalSignalsManager#remove#fromPlayMediaIntent Unexpected backing store error adding internal signal. (unlock)",  v54,  2u);
      swift_slowDealloc(v54, -1LL, -1LL);
    }

    v26(v9, v5);
    uint64_t v55 = *(void *)((char *)&dword_10 + (void)off_28CA28);
    uint64_t v56 = swift_retain(v55);
    dispatch thunk of PThreadMutex.unlock()(v56);
  }

  return swift_release(v55);
}

uint64_t sub_1AE628(uint64_t a1, unint64_t a2, void *a3)
{
  uint64_t v67 = a1;
  uint64_t v5 = type metadata accessor for Logger(0LL);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = __chkstk_darwin(v5);
  uint64_t v9 = (char *)&v66 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v10 = __chkstk_darwin(v7);
  uint64_t v12 = (char *)&v66 - v11;
  __chkstk_darwin(v10);
  uint64_t v14 = (char *)&v66 - v13;
  if (qword_283958 != -1) {
    swift_once(&qword_283958, sub_1AAFC0);
  }
  uint64_t v15 = *(void *)((char *)&dword_10 + (void)off_28CA28);
  uint64_t v16 = swift_retain(v15);
  dispatch thunk of PThreadMutex.lock()(v16);
  swift_release(v15);
  if (qword_283888 != -1) {
    swift_once(&qword_283888, sub_BFC5C);
  }
  uint64_t v17 = sub_6960(v5, (uint64_t)qword_2969C8);
  uint64_t v18 = *(void (**)(char *, uint64_t, uint64_t))(v6 + 16);
  uint64_t v68 = v17;
  uint64_t v69 = v18;
  uint64_t v19 = ((uint64_t (*)(char *))v18)(v14);
  uint64_t v20 = (os_log_s *)Logger.logObject.getter(v19);
  os_log_type_t v21 = static os_log_type_t.default.getter(v20);
  if (os_log_type_enabled(v20, v21))
  {
    unint64_t v22 = a2;
    uint64_t v23 = v12;
    uint64_t v24 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
    *(_WORD *)uint64_t v24 = 0;
    _os_log_impl(&dword_0, v20, v21, "InternalSignalsManager#remove#fromAddMediaIntent (lock aquired)", v24, 2u);
    uint64_t v25 = v24;
    uint64_t v12 = v23;
    a2 = v22;
    swift_slowDealloc(v25, -1LL, -1LL);
  }

  id v26 = *(void (**)(char *, uint64_t))(v6 + 8);
  v26(v14, v5);
  id v27 = [a3 backingStore];
  uint64_t v28 = objc_opt_self(&OBJC_CLASS____INPBAddMediaIntent);
  unint64_t v29 = (void *)swift_dynamicCastObjCClass(v27, v28);
  if (v29)
  {
    BOOL v30 = v29;
    id v31 = [v29 privateAddMediaIntentData];
    if (v31)
    {
      uint64_t v32 = v31;
      id v33 = [v31 internalSignals];

      if (v33)
      {
        uint64_t v34 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v33, &type metadata for String);
        uint64_t v66 = v12;
        os_log_type_t v35 = (void *)v34;

        unint64_t v36 = sub_1AC928(v67, a2, v35);
        char v38 = v37;
        unint64_t v39 = v35;
        uint64_t v12 = v66;
        *(void *)&double v40 = swift_bridgeObjectRelease(v39).n128_u64[0];
        if ((v38 & 1) == 0)
        {
          id v41 = objc_msgSend(v30, "privateAddMediaIntentData", v40);
          if (v41)
          {
            uint64_t v42 = v41;
            id v43 = [v41 internalSignals];
            if (v43)
            {
              uint64_t v44 = v43;
              uint64_t v45 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v43, &type metadata for String);

              uint64_t v71 = v45;
              sub_1ACA0C(v36);
              uint64_t v48 = v47;
              uint64_t v49 = v71;
              if (v71)
              {
                v50.super.isa = Array._bridgeToObjectiveC()().super.isa;
                *(void *)&double v46 = swift_bridgeObjectRelease(v49).n128_u64[0];
              }

              else
              {
                v50.super.isa = 0LL;
              }

              uint64_t v12 = v66;
              objc_msgSend(v42, "setInternalSignals:", v50.super.isa, v46);
              swift_bridgeObjectRelease(v48);
            }

            else
            {
              [v42 setInternalSignals:0];
            }
          }
        }
      }
    }

    v69(v12, v68, v5);
    uint64_t v57 = swift_bridgeObjectRetain_n(a2, 2LL);
    uint64_t v58 = (os_log_s *)Logger.logObject.getter(v57);
    os_log_type_t v59 = static os_log_type_t.default.getter(v58);
    if (os_log_type_enabled(v58, v59))
    {
      uint64_t v60 = swift_slowAlloc(12LL, -1LL);
      uint64_t v69 = (void (*)(char *, uint64_t, uint64_t))v26;
      uint64_t v61 = (uint8_t *)v60;
      uint64_t v62 = swift_slowAlloc(32LL, -1LL);
      uint64_t v66 = v12;
      uint64_t v63 = v62;
      uint64_t v71 = v62;
      *(_DWORD *)uint64_t v61 = 136315138;
      swift_bridgeObjectRetain(a2);
      uint64_t v70 = sub_6978(v67, a2, &v71);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v70, &v71);
      swift_bridgeObjectRelease_n(a2, 3LL);
      _os_log_impl( &dword_0,  v58,  v59,  "InternalSignalsManager#remove#fromAddMediaIntent removed %s from addMediaIntent. (unlock)",  v61,  0xCu);
      swift_arrayDestroy(v63, 1LL, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v63, -1LL, -1LL);
      swift_slowDealloc(v61, -1LL, -1LL);

      ((void (*)(char *, uint64_t))v69)(v66, v5);
    }

    else
    {

      swift_bridgeObjectRelease_n(a2, 2LL);
      v26(v12, v5);
    }

    uint64_t v55 = *(void *)((char *)&dword_10 + (void)off_28CA28);
    uint64_t v64 = swift_retain(v55);
    dispatch thunk of PThreadMutex.unlock()(v64);
  }

  else
  {

    uint64_t v51 = ((uint64_t (*)(char *, uint64_t, uint64_t))v69)(v9, v68, v5);
    uint64_t v52 = (os_log_s *)Logger.logObject.getter(v51);
    os_log_type_t v53 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v52, v53))
    {
      uint64_t v54 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)uint64_t v54 = 0;
      _os_log_impl( &dword_0,  v52,  v53,  "InternalSignalsManager#remove#fromAddMediaIntent Unexpected backing store error adding internal signal. (unlock)",  v54,  2u);
      swift_slowDealloc(v54, -1LL, -1LL);
    }

    v26(v9, v5);
    uint64_t v55 = *(void *)((char *)&dword_10 + (void)off_28CA28);
    uint64_t v56 = swift_retain(v55);
    dispatch thunk of PThreadMutex.unlock()(v56);
  }

  return swift_release(v55);
}

uint64_t sub_1AEBB8(uint64_t a1, unint64_t a2, void *a3)
{
  uint64_t v67 = a1;
  uint64_t v5 = type metadata accessor for Logger(0LL);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = __chkstk_darwin(v5);
  uint64_t v9 = (char *)&v66 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v10 = __chkstk_darwin(v7);
  uint64_t v12 = (char *)&v66 - v11;
  __chkstk_darwin(v10);
  uint64_t v14 = (char *)&v66 - v13;
  if (qword_283958 != -1) {
    swift_once(&qword_283958, sub_1AAFC0);
  }
  uint64_t v15 = *(void *)((char *)&dword_10 + (void)off_28CA28);
  uint64_t v16 = swift_retain(v15);
  dispatch thunk of PThreadMutex.lock()(v16);
  swift_release(v15);
  if (qword_283888 != -1) {
    swift_once(&qword_283888, sub_BFC5C);
  }
  uint64_t v17 = sub_6960(v5, (uint64_t)qword_2969C8);
  uint64_t v18 = *(void (**)(char *, uint64_t, uint64_t))(v6 + 16);
  uint64_t v68 = v17;
  uint64_t v69 = v18;
  uint64_t v19 = ((uint64_t (*)(char *))v18)(v14);
  uint64_t v20 = (os_log_s *)Logger.logObject.getter(v19);
  os_log_type_t v21 = static os_log_type_t.default.getter(v20);
  if (os_log_type_enabled(v20, v21))
  {
    unint64_t v22 = a2;
    uint64_t v23 = v12;
    uint64_t v24 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
    *(_WORD *)uint64_t v24 = 0;
    _os_log_impl(&dword_0, v20, v21, "InternalSignalsManager#remove#fromUpdateMediaIntent (lock aquired)", v24, 2u);
    uint64_t v25 = v24;
    uint64_t v12 = v23;
    a2 = v22;
    swift_slowDealloc(v25, -1LL, -1LL);
  }

  id v26 = *(void (**)(char *, uint64_t))(v6 + 8);
  v26(v14, v5);
  id v27 = [a3 backingStore];
  uint64_t v28 = objc_opt_self(&OBJC_CLASS____INPBUpdateMediaAffinityIntent);
  unint64_t v29 = (void *)swift_dynamicCastObjCClass(v27, v28);
  if (v29)
  {
    BOOL v30 = v29;
    id v31 = [v29 privateUpdateMediaAffinityIntentData];
    if (v31)
    {
      uint64_t v32 = v31;
      id v33 = [v31 internalSignals];

      if (v33)
      {
        uint64_t v34 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v33, &type metadata for String);
        uint64_t v66 = v12;
        os_log_type_t v35 = (void *)v34;

        unint64_t v36 = sub_1AC928(v67, a2, v35);
        char v38 = v37;
        unint64_t v39 = v35;
        uint64_t v12 = v66;
        *(void *)&double v40 = swift_bridgeObjectRelease(v39).n128_u64[0];
        if ((v38 & 1) == 0)
        {
          id v41 = objc_msgSend(v30, "privateUpdateMediaAffinityIntentData", v40);
          if (v41)
          {
            uint64_t v42 = v41;
            id v43 = [v41 internalSignals];
            if (v43)
            {
              uint64_t v44 = v43;
              uint64_t v45 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v43, &type metadata for String);

              uint64_t v71 = v45;
              sub_1ACA0C(v36);
              uint64_t v48 = v47;
              uint64_t v49 = v71;
              if (v71)
              {
                v50.super.isa = Array._bridgeToObjectiveC()().super.isa;
                *(void *)&double v46 = swift_bridgeObjectRelease(v49).n128_u64[0];
              }

              else
              {
                v50.super.isa = 0LL;
              }

              uint64_t v12 = v66;
              objc_msgSend(v42, "setInternalSignals:", v50.super.isa, v46);
              swift_bridgeObjectRelease(v48);
            }

            else
            {
              [v42 setInternalSignals:0];
            }
          }
        }
      }
    }

    v69(v12, v68, v5);
    uint64_t v57 = swift_bridgeObjectRetain_n(a2, 2LL);
    uint64_t v58 = (os_log_s *)Logger.logObject.getter(v57);
    os_log_type_t v59 = static os_log_type_t.default.getter(v58);
    if (os_log_type_enabled(v58, v59))
    {
      uint64_t v60 = swift_slowAlloc(12LL, -1LL);
      uint64_t v69 = (void (*)(char *, uint64_t, uint64_t))v26;
      uint64_t v61 = (uint8_t *)v60;
      uint64_t v62 = swift_slowAlloc(32LL, -1LL);
      uint64_t v66 = v12;
      uint64_t v63 = v62;
      uint64_t v71 = v62;
      *(_DWORD *)uint64_t v61 = 136315138;
      swift_bridgeObjectRetain(a2);
      uint64_t v70 = sub_6978(v67, a2, &v71);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v70, &v71);
      swift_bridgeObjectRelease_n(a2, 3LL);
      _os_log_impl( &dword_0,  v58,  v59,  "InternalSignalsManager#remove#fromUpdateMediaIntent removed %s from updateMediaIntent. (unlock)",  v61,  0xCu);
      swift_arrayDestroy(v63, 1LL, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v63, -1LL, -1LL);
      swift_slowDealloc(v61, -1LL, -1LL);

      ((void (*)(char *, uint64_t))v69)(v66, v5);
    }

    else
    {

      swift_bridgeObjectRelease_n(a2, 2LL);
      v26(v12, v5);
    }

    uint64_t v55 = *(void *)((char *)&dword_10 + (void)off_28CA28);
    uint64_t v64 = swift_retain(v55);
    dispatch thunk of PThreadMutex.unlock()(v64);
  }

  else
  {

    uint64_t v51 = ((uint64_t (*)(char *, uint64_t, uint64_t))v69)(v9, v68, v5);
    uint64_t v52 = (os_log_s *)Logger.logObject.getter(v51);
    os_log_type_t v53 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v52, v53))
    {
      uint64_t v54 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)uint64_t v54 = 0;
      _os_log_impl( &dword_0,  v52,  v53,  "InternalSignalsManager#remove#fromUpdateMediaIntent Unexpected backing store error adding internal signal. (unlock)",  v54,  2u);
      swift_slowDealloc(v54, -1LL, -1LL);
    }

    v26(v9, v5);
    uint64_t v55 = *(void *)((char *)&dword_10 + (void)off_28CA28);
    uint64_t v56 = swift_retain(v55);
    dispatch thunk of PThreadMutex.unlock()(v56);
  }

  return swift_release(v55);
}

uint64_t sub_1AF148(uint64_t a1, unint64_t a2, void *a3)
{
  uint64_t v67 = a1;
  uint64_t v5 = type metadata accessor for Logger(0LL);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = __chkstk_darwin(v5);
  uint64_t v9 = (char *)&v66 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v10 = __chkstk_darwin(v7);
  uint64_t v12 = (char *)&v66 - v11;
  __chkstk_darwin(v10);
  uint64_t v14 = (char *)&v66 - v13;
  if (qword_283958 != -1) {
    swift_once(&qword_283958, sub_1AAFC0);
  }
  uint64_t v15 = *(void *)((char *)&dword_10 + (void)off_28CA28);
  uint64_t v16 = swift_retain(v15);
  dispatch thunk of PThreadMutex.lock()(v16);
  swift_release(v15);
  if (qword_283888 != -1) {
    swift_once(&qword_283888, sub_BFC5C);
  }
  uint64_t v17 = sub_6960(v5, (uint64_t)qword_2969C8);
  uint64_t v18 = *(void (**)(char *, uint64_t, uint64_t))(v6 + 16);
  uint64_t v68 = v17;
  uint64_t v69 = v18;
  uint64_t v19 = ((uint64_t (*)(char *))v18)(v14);
  uint64_t v20 = (os_log_s *)Logger.logObject.getter(v19);
  os_log_type_t v21 = static os_log_type_t.default.getter(v20);
  if (os_log_type_enabled(v20, v21))
  {
    unint64_t v22 = a2;
    uint64_t v23 = v12;
    uint64_t v24 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
    *(_WORD *)uint64_t v24 = 0;
    _os_log_impl(&dword_0, v20, v21, "InternalSignalsManager#remove#fromSearchMediaIntent (lock aquired)", v24, 2u);
    uint64_t v25 = v24;
    uint64_t v12 = v23;
    a2 = v22;
    swift_slowDealloc(v25, -1LL, -1LL);
  }

  id v26 = *(void (**)(char *, uint64_t))(v6 + 8);
  v26(v14, v5);
  id v27 = [a3 backingStore];
  uint64_t v28 = objc_opt_self(&OBJC_CLASS____INPBSearchForMediaIntent);
  unint64_t v29 = (void *)swift_dynamicCastObjCClass(v27, v28);
  if (v29)
  {
    BOOL v30 = v29;
    id v31 = [v29 privateSearchForMediaIntentData];
    if (v31)
    {
      uint64_t v32 = v31;
      id v33 = [v31 internalSignals];

      if (v33)
      {
        uint64_t v34 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v33, &type metadata for String);
        uint64_t v66 = v12;
        os_log_type_t v35 = (void *)v34;

        unint64_t v36 = sub_1AC928(v67, a2, v35);
        char v38 = v37;
        unint64_t v39 = v35;
        uint64_t v12 = v66;
        *(void *)&double v40 = swift_bridgeObjectRelease(v39).n128_u64[0];
        if ((v38 & 1) == 0)
        {
          id v41 = objc_msgSend(v30, "privateSearchForMediaIntentData", v40);
          if (v41)
          {
            uint64_t v42 = v41;
            id v43 = [v41 internalSignals];
            if (v43)
            {
              uint64_t v44 = v43;
              uint64_t v45 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v43, &type metadata for String);

              uint64_t v71 = v45;
              sub_1ACA0C(v36);
              uint64_t v48 = v47;
              uint64_t v49 = v71;
              if (v71)
              {
                v50.super.isa = Array._bridgeToObjectiveC()().super.isa;
                *(void *)&double v46 = swift_bridgeObjectRelease(v49).n128_u64[0];
              }

              else
              {
                v50.super.isa = 0LL;
              }

              uint64_t v12 = v66;
              objc_msgSend(v42, "setInternalSignals:", v50.super.isa, v46);
              swift_bridgeObjectRelease(v48);
            }

            else
            {
              [v42 setInternalSignals:0];
            }
          }
        }
      }
    }

    v69(v12, v68, v5);
    uint64_t v57 = swift_bridgeObjectRetain_n(a2, 2LL);
    uint64_t v58 = (os_log_s *)Logger.logObject.getter(v57);
    os_log_type_t v59 = static os_log_type_t.default.getter(v58);
    if (os_log_type_enabled(v58, v59))
    {
      uint64_t v60 = swift_slowAlloc(12LL, -1LL);
      uint64_t v69 = (void (*)(char *, uint64_t, uint64_t))v26;
      uint64_t v61 = (uint8_t *)v60;
      uint64_t v62 = swift_slowAlloc(32LL, -1LL);
      uint64_t v66 = v12;
      uint64_t v63 = v62;
      uint64_t v71 = v62;
      *(_DWORD *)uint64_t v61 = 136315138;
      swift_bridgeObjectRetain(a2);
      uint64_t v70 = sub_6978(v67, a2, &v71);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v70, &v71);
      swift_bridgeObjectRelease_n(a2, 3LL);
      _os_log_impl( &dword_0,  v58,  v59,  "InternalSignalsManager#remove#fromSearchMediaIntent removed %s from searchMediaIntent. (unlock)",  v61,  0xCu);
      swift_arrayDestroy(v63, 1LL, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v63, -1LL, -1LL);
      swift_slowDealloc(v61, -1LL, -1LL);

      ((void (*)(char *, uint64_t))v69)(v66, v5);
    }

    else
    {

      swift_bridgeObjectRelease_n(a2, 2LL);
      v26(v12, v5);
    }

    uint64_t v55 = *(void *)((char *)&dword_10 + (void)off_28CA28);
    uint64_t v64 = swift_retain(v55);
    dispatch thunk of PThreadMutex.unlock()(v64);
  }

  else
  {

    uint64_t v51 = ((uint64_t (*)(char *, uint64_t, uint64_t))v69)(v9, v68, v5);
    uint64_t v52 = (os_log_s *)Logger.logObject.getter(v51);
    os_log_type_t v53 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v52, v53))
    {
      uint64_t v54 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)uint64_t v54 = 0;
      _os_log_impl( &dword_0,  v52,  v53,  "InternalSignalsManager#remove#fromSearchMediaIntent Unexpected backing store error adding internal signal. (unlock)",  v54,  2u);
      swift_slowDealloc(v54, -1LL, -1LL);
    }

    v26(v9, v5);
    uint64_t v55 = *(void *)((char *)&dword_10 + (void)off_28CA28);
    uint64_t v56 = swift_retain(v55);
    dispatch thunk of PThreadMutex.unlock()(v56);
  }

  return swift_release(v55);
}

uint64_t type metadata accessor for InternalSignalsManager()
{
  return objc_opt_self(&OBJC_CLASS____TtC23AudioFlowDelegatePlugin22InternalSignalsManager);
}

uint64_t sub_1AF6F8(unsigned __int8 *a1, uint64_t (*a2)(void))
{
  return a2(*a1 | (a1[1] << 8));
}

uint64_t sub_1AF72C(__int16 a1, uint64_t (*a2)(__int16 *))
{
  __int16 v3 = a1 & 0x1FF;
  return a2(&v3);
}

uint64_t sub_1AF764()
{
  uint64_t v0 = type metadata accessor for OS_dispatch_queue.Attributes(0LL);
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  __int16 v3 = (char *)&v12 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v4 = type metadata accessor for DispatchQoS(0LL);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = __chkstk_darwin(v4);
  uint64_t v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v9 = static DispatchQoS.userInteractive.getter(v6);
  static OS_dispatch_queue.Attributes.concurrent.getter(v9);
  uint64_t v10 = static DispatchQueues.queue(_:qos:attributes:)(0xD000000000000023LL, 0x8000000000222F30LL, v8, v3);
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v8, v4);
  qword_28CB10 = v10;
  return result;
}

uint64_t sub_1AF868(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v39 = type metadata accessor for NowPlayingProvider(0LL);
  uint64_t v37 = *(void *)(v39 - 8);
  uint64_t v6 = __chkstk_darwin(v39);
  uint64_t v8 = (char *)&v33 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v6);
  uint64_t v10 = (char *)&v33 - v9;
  uint64_t v11 = type metadata accessor for FeatureFlagProvider(0LL);
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = __chkstk_darwin(v11);
  uint64_t v15 = (char *)&v33 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v13);
  uint64_t v17 = (char *)&v33 - v16;
  uint64_t v18 = sub_6C5C(&qword_285BD0);
  __chkstk_darwin(v18);
  uint64_t v36 = (uint64_t)&v33 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  sub_FF10(a1, v36, &qword_285BD0);
  sub_157C4(a3, (uint64_t)v42);
  uint64_t v20 = qword_2838F0;
  char v38 = a2;
  id v35 = a2;
  if (v20 != -1) {
    swift_once(&qword_2838F0, sub_14EB48);
  }
  os_log_type_t v21 = static AceService.current.getter(v41);
  uint64_t v22 = static FeatureFlagProvider.shared.getter(v21);
  static NowPlayingProvider.shared.getter(v22);
  uint64_t v23 = type metadata accessor for SiriKitTaskLoggingProvider(0LL);
  uint64_t v34 = static SiriKitTaskLoggingProvider.shared.getter(v23);
  uint64_t v24 = type metadata accessor for AudioAppResolutionFlow(0LL);
  uint64_t v25 = swift_allocObject(v24, *(unsigned int *)(v24 + 48), *(unsigned __int16 *)(v24 + 52));
  sub_156E8((uint64_t)&static StringsBackedAppNameResolver.shared, (uint64_t)v40);
  uint64_t v26 = v12;
  (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v15, v17, v11);
  uint64_t v27 = v37;
  uint64_t v28 = v39;
  (*(void (**)(char *, char *, uint64_t))(v37 + 16))(v8, v10, v39);
  uint64_t v29 = sub_1B6E94( v36,  v38,  v40,  v41,  v42,  0LL,  (uint64_t)v15,  (uint64_t)v8,  v34,  (uint64_t *)sub_E8BE8,  0LL,  (uint64_t)sub_E8BEC,  0LL,  0LL,  v25);

  (*(void (**)(char *, uint64_t))(v27 + 8))(v10, v28);
  (*(void (**)(char *, uint64_t))(v26 + 8))(v17, v11);
  *(void *)&v40[0] = v29;
  unint64_t v30 = sub_1B738C();
  uint64_t v31 = Flow.eraseToAnyFlow()(v24, v30);
  swift_release(v29);
  return v31;
}

uint64_t sub_1AFB58(uint64_t a1)
{
  uint64_t v2 = sub_6C5C(&qword_285BD0);
  uint64_t v3 = __chkstk_darwin(v2);
  uint64_t v124 = (uint64_t)&v118 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v3);
  uint64_t v123 = (char *)&v118 - v5;
  uint64_t v6 = type metadata accessor for Parse.DirectInvocation(0LL);
  uint64_t v127 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)&v118 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v9 = (void *)type metadata accessor for Parse(0LL);
  uint64_t v10 = (char *)*(v9 - 1);
  id v131 = v9;
  uint64_t v132 = v10;
  __chkstk_darwin(v9);
  uint64_t v133 = (char *)&v118 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v12 = type metadata accessor for Logger(0LL);
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = __chkstk_darwin(v12);
  os_log_type_t v122 = (char *)&v118 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v16 = __chkstk_darwin(v14);
  uint64_t v126 = (char *)&v118 - v17;
  uint64_t v18 = __chkstk_darwin(v16);
  v121 = (char *)&v118 - v19;
  uint64_t v20 = __chkstk_darwin(v18);
  uint64_t v22 = (char *)&v118 - v21;
  uint64_t v23 = __chkstk_darwin(v20);
  v119 = (char *)&v118 - v24;
  uint64_t v25 = __chkstk_darwin(v23);
  uint64_t v128 = (char *)&v118 - v26;
  __chkstk_darwin(v25);
  uint64_t v28 = (char *)&v118 - v27;
  if (qword_283888 != -1) {
    swift_once(&qword_283888, sub_BFC5C);
  }
  uint64_t v29 = sub_6960(v12, (uint64_t)qword_2969C8);
  unint64_t v30 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v13 + 16);
  uint64_t v129 = v29;
  uint64_t v130 = v30;
  uint64_t v31 = ((uint64_t (*)(char *))v30)(v28);
  uint64_t v32 = (os_log_s *)Logger.logObject.getter(v31);
  os_log_type_t v33 = static os_log_type_t.default.getter(v32);
  if (os_log_type_enabled(v32, v33))
  {
    uint64_t v34 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
    uint64_t v120 = v22;
    uint64_t v35 = a1;
    uint64_t v36 = v8;
    uint64_t v37 = v6;
    uint64_t v38 = v12;
    uint64_t v39 = v34;
    *(_WORD *)uint64_t v34 = 0;
    _os_log_impl(&dword_0, v32, v33, "AmbiguousPlayFlow#on Handling input", v34, 2u);
    double v40 = v39;
    uint64_t v12 = v38;
    uint64_t v6 = v37;
    uint64_t v8 = v36;
    a1 = v35;
    uint64_t v22 = v120;
    swift_slowDealloc(v40, -1LL, -1LL);
  }

  id v41 = *(uint64_t (**)(char *, uint64_t))(v13 + 8);
  uint64_t v42 = v41(v28, v12);
  id v43 = v133;
  Input.parse.getter(v42);
  id v45 = v131;
  uint64_t v44 = v132;
  int v46 = (*((uint64_t (**)(char *, id))v132 + 11))(v43, v131);
  if (v46 == enum case for Parse.NLv3IntentOnly(_:)) {
    goto LABEL_13;
  }
  if (v46 != enum case for Parse.directInvocation(_:))
  {
    if (v46 != enum case for Parse.pegasusResults(_:))
    {
      uint64_t v74 = a1;
      uint64_t v75 = v122;
      uint64_t v76 = v130(v122, v129, v12);
      uint64_t v77 = (os_log_s *)Logger.logObject.getter(v76);
      os_log_type_t v78 = static os_log_type_t.info.getter(v77);
      if (os_log_type_enabled(v77, v78))
      {
        uint64_t v79 = v12;
        uint64_t v80 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
        *(_WORD *)uint64_t v80 = 0;
        _os_log_impl(&dword_0, v77, v78, "AmbiguousPlayFlow#on received supported parse", v80, 2u);
        uint64_t v81 = v80;
        uint64_t v12 = v79;
        swift_slowDealloc(v81, -1LL, -1LL);
      }

      v41(v75, v12);
      (*((void (**)(char *, id))v132 + 1))(v133, v45);
      uint64_t v82 = type metadata accessor for Input(0LL);
      uint64_t v83 = *(void *)(v82 - 8);
      uint64_t v84 = v123;
      (*(void (**)(char *, uint64_t, uint64_t))(v83 + 16))(v123, v74, v82);
      uint64_t v85 = *(void (**)(char *, void, uint64_t, uint64_t))(v83 + 56);
      uint64_t v86 = 1LL;
      v85(v84, 0LL, 1LL, v82);
      uint64_t v87 = (uint64_t)v84;
      uint64_t v88 = v124;
      sub_45F6C(v87, v124, &qword_285BD0);
      uint64_t v89 = v125 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin17AmbiguousPlayFlow_input;
      swift_beginAccess(v125 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin17AmbiguousPlayFlow_input, v144, 33LL, 0LL);
      sub_1B3B0(v88, v89);
      uint64_t v90 = v144;
      goto LABEL_30;
    }

uint64_t sub_1B05D4(uint64_t *a1, uint64_t a2, void *a3, uint64_t a4)
{
  uint64_t v409 = a4;
  v448 = a3;
  uint64_t v444 = a1;
  uint64_t v5 = type metadata accessor for Parse.DirectInvocation(0LL);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v429 = v5;
  uint64_t v430 = v6;
  uint64_t v7 = __chkstk_darwin(v5);
  uint64_t v402 = (char *)&v391 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v9 = __chkstk_darwin(v7);
  v400 = (char *)&v391 - v10;
  uint64_t v11 = __chkstk_darwin(v9);
  uint64_t v397 = (char *)&v391 - v12;
  __chkstk_darwin(v11);
  v432 = (char *)&v391 - v13;
  uint64_t v14 = type metadata accessor for ExecuteResponse(0LL);
  uint64_t v441 = *(void **)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v16 = (char *)&v391 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v418 = type metadata accessor for EncryptionProvider(0LL);
  uint64_t v416 = *(void *)(v418 - 8);
  __chkstk_darwin(v418);
  uint64_t v415 = (char *)&v391 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v417 = type metadata accessor for DeviceResolutionProvider(0LL);
  uint64_t v414 = *(void *)(v417 - 8);
  __chkstk_darwin(v417);
  v413 = (char *)&v391 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v19 = type metadata accessor for Input(0LL);
  uint64_t v447 = *(uint8_t **)(v19 - 8);
  uint64_t v20 = __chkstk_darwin(v19);
  uint64_t v425 = (char *)&v391 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v22 = __chkstk_darwin(v20);
  v404 = (char *)&v391 - v23;
  uint64_t v24 = __chkstk_darwin(v22);
  char v403 = (char *)&v391 - v25;
  uint64_t v26 = __chkstk_darwin(v24);
  uint64_t v427 = (char *)&v391 - v27;
  uint64_t v412 = v28;
  __chkstk_darwin(v26);
  uint64_t v434 = (char *)&v391 - v29;
  uint64_t v30 = sub_6C5C(&qword_285BD0);
  uint64_t v31 = __chkstk_darwin(v30);
  uint64_t v426 = (uint64_t)&v391 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v33 = __chkstk_darwin(v31);
  uint64_t v410 = (uint64_t)&v391 - v34;
  uint64_t v35 = __chkstk_darwin(v33);
  uint64_t v406 = (uint64_t)&v391 - v36;
  uint64_t v37 = __chkstk_darwin(v35);
  uint64_t v428 = (uint64_t)&v391 - v38;
  __chkstk_darwin(v37);
  v446 = (void (*)(char *, uint64_t))((char *)&v391 - v39);
  uint64_t v438 = type metadata accessor for Parse(0LL);
  uint64_t v40 = *(void *)(v438 - 8);
  uint64_t v41 = __chkstk_darwin(v438);
  v421 = (char *)&v391 - ((v42 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v43 = __chkstk_darwin(v41);
  uint64_t v439 = (char *)&v391 - v44;
  uint64_t v45 = __chkstk_darwin(v43);
  uint64_t v433 = (char *)&v391 - v46;
  uint64_t v411 = v47;
  __chkstk_darwin(v45);
  uint64_t v440 = (uint64_t)&v391 - v48;
  uint64_t v49 = type metadata accessor for Logger(0LL);
  uint64_t v50 = *(void *)(v49 - 8);
  uint64_t v51 = __chkstk_darwin(v49);
  v401 = (char *)&v391 - ((v52 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v53 = __chkstk_darwin(v51);
  v408 = (char *)&v391 - v54;
  uint64_t v55 = __chkstk_darwin(v53);
  char v398 = (char *)&v391 - v56;
  uint64_t v57 = __chkstk_darwin(v55);
  os_log_type_t v424 = (char *)&v391 - v58;
  uint64_t v59 = __chkstk_darwin(v57);
  v423 = (char *)&v391 - v60;
  uint64_t v61 = __chkstk_darwin(v59);
  uint64_t v422 = (char *)&v391 - v62;
  uint64_t v63 = __chkstk_darwin(v61);
  __n128 v420 = (char *)&v391 - v64;
  uint64_t v65 = __chkstk_darwin(v63);
  uint64_t v419 = (char *)&v391 - v66;
  uint64_t v67 = __chkstk_darwin(v65);
  uint64_t v396 = (char *)&v391 - v68;
  uint64_t v69 = __chkstk_darwin(v67);
  uint64_t v399 = (char *)&v391 - v70;
  uint64_t v71 = __chkstk_darwin(v69);
  uint64_t v407 = (char *)&v391 - v72;
  uint64_t v73 = __chkstk_darwin(v71);
  v405 = (char *)&v391 - v74;
  uint64_t v75 = __chkstk_darwin(v73);
  uint64_t v431 = (char *)&v391 - v76;
  uint64_t v77 = __chkstk_darwin(v75);
  uint64_t v436 = (char *)&v391 - v78;
  __chkstk_darwin(v77);
  uint64_t v80 = (char *)&v391 - v79;
  if (qword_283888 != -1) {
    swift_once(&qword_283888, sub_BFC5C);
  }
  uint64_t v81 = (os_log_s *)sub_6960(v49, (uint64_t)qword_2969C8);
  uint64_t v445 = v50;
  uint64_t v82 = *(uint64_t (**)(char *, os_log_t, uint64_t))(v50 + 16);
  os_log_t v442 = v81;
  v443 = v82;
  uint64_t v83 = ((uint64_t (*)(char *))v82)(v80);
  uint64_t v84 = (os_log_s *)Logger.logObject.getter(v83);
  os_log_type_t v85 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v84, v85))
  {
    uint64_t v86 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
    v435 = v16;
    uint64_t v87 = v14;
    uint64_t v88 = v49;
    uint64_t v89 = v19;
    uint64_t v90 = v40;
    uint64_t v91 = a2;
    uint64_t v92 = v86;
    *(_WORD *)uint64_t v86 = 0;
    _os_log_impl(&dword_0, v84, v85, "AmbiguousPlayFlow#execute", v86, 2u);
    uint64_t v93 = v92;
    a2 = v91;
    uint64_t v40 = v90;
    uint64_t v19 = v89;
    uint64_t v49 = v88;
    uint64_t v14 = v87;
    uint64_t v16 = v435;
    swift_slowDealloc(v93, -1LL, -1LL);
  }

  uint64_t v437 = v40;

  uint64_t v445 = *(void *)(v445 + 8);
  ((void (*)(char *, uint64_t))v445)(v80, v49);
  uint64_t v94 = (uint64_t)v448 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin17AmbiguousPlayFlow_input;
  swift_beginAccess((char *)v448 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin17AmbiguousPlayFlow_input, &v451, 0LL, 0LL);
  uint64_t v95 = v19;
  uint64_t v96 = v446;
  sub_FF10(v94, (uint64_t)v446, &qword_285BD0);
  uint64_t v97 = v447;
  uint64_t v98 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))*((void *)v447 + 6);
  if (v98((uint64_t)v96, 1LL, v95))
  {
    sub_1F6CC((uint64_t)v96, &qword_285BD0);
    uint64_t v99 = v436;
    uint64_t v100 = v443(v436, v442, v49);
    uint64_t v101 = (os_log_s *)Logger.logObject.getter(v100);
    os_log_type_t v102 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v101, v102))
    {
      uint64_t v103 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)uint64_t v103 = 0;
      _os_log_impl(&dword_0, v101, v102, "AmbiguousPlayFlow#execute Parse is nil", v103, 2u);
      swift_slowDealloc(v103, -1LL, -1LL);
    }

    uint64_t v104 = ((uint64_t (*)(char *, uint64_t))v445)(v99, v49);
    static ExecuteResponse.complete()(v104);
    ((void (*)(char *))v444)(v16);
    uint64_t v105 = (uint64_t (*)(uint64_t, uint64_t))v441[1];
    uint64_t v106 = (uint64_t)v16;
    goto LABEL_9;
  }

  uint64_t v393 = v98;
  uint64_t v394 = v49;
  v435 = v16;
  uint64_t v436 = (char *)v14;
  uint64_t v395 = a2;
  uint64_t v109 = v434;
  uint64_t v392 = (void (*)(char *, void (*)(void, void), uint64_t))*((void *)v97 + 2);
  v392(v434, (void (*)(void, void))v96, v95);
  uint64_t v110 = sub_1F6CC((uint64_t)v96, &qword_285BD0);
  uint64_t v111 = v433;
  Input.parse.getter(v110);
  uint64_t v112 = (void (*)(char *, uint64_t))*((void *)v97 + 1);
  v112(v109, v95);
  uint64_t v114 = v437;
  uint64_t v113 = v438;
  uint64_t v115 = v440;
  uint64_t v433 = *(char **)(v437 + 32);
  ((void (*)(uint64_t, char *, uint64_t))v433)(v440, v111, v438);
  uint64_t v116 = *(void (**)(char *, uint64_t, uint64_t))(v114 + 16);
  uint64_t v117 = v439;
  v116(v439, v115, v113);
  int v118 = (*(uint64_t (**)(char *, uint64_t))(v114 + 88))(v117, v113);
  uint64_t v119 = v95;
  if (v118 != enum case for Parse.NLv3IntentPlusServerConversion(_:))
  {
    if (v118 == enum case for Parse.directInvocation(_:))
    {
      uint64_t v128 = v437;
      uint64_t v129 = v439;
      (*(void (**)(char *, uint64_t))(v437 + 96))(v439, v113);
      uint64_t v131 = v429;
      uint64_t v130 = v430;
      (*(void (**)(char *, char *, uint64_t))(v430 + 32))(v432, v129, v429);
      uint64_t v132 = v94;
      uint64_t v133 = v426;
      sub_FF10(v132, v426, &qword_285BD0);
      if (v393(v133, 1LL, v119) == 1)
      {
        sub_1F6CC(v133, &qword_285BD0);
        uint64_t v134 = v420;
        uint64_t v135 = v443(v420, v442, v394);
        uint64_t v136 = (os_log_s *)Logger.logObject.getter(v135);
        os_log_type_t v137 = static os_log_type_t.error.getter();
        if (os_log_type_enabled(v136, v137))
        {
          uint64_t v138 = v128;
          uint64_t v139 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
          *(_WORD *)uint64_t v139 = 0;
          _os_log_impl(&dword_0, v136, v137, "AmbiguousPlayFlow#execute Unable to unwrap input", v139, 2u);
          uint64_t v140 = v139;
          uint64_t v128 = v138;
          swift_slowDealloc(v140, -1LL, -1LL);
        }

        uint64_t v141 = ((uint64_t (*)(char *, uint64_t))v445)(v134, v394);
        uint64_t v142 = v435;
        static ExecuteResponse.complete()(v141);
        ((void (*)(char *))v444)(v142);
        ((void (*)(char *, char *))v441[1])(v142, v436);
        (*(void (**)(char *, uint64_t))(v430 + 8))(v432, v131);
        return (*(uint64_t (**)(uint64_t, uint64_t))(v128 + 8))(v440, v113);
      }

      v446 = v112;
      uint64_t v190 = (uint64_t)v425;
      (*((void (**)(char *, uint64_t, uint64_t))v447 + 4))(v425, v133, v119);
      uint64_t v191 = *(void **)((char *)v448 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin17AmbiguousPlayFlow_shimAudioExperience);
      if (v191)
      {
        uint64_t v192 = v394;
        v443(v422, v442, v394);
        id v193 = v191;
        uint64_t v194 = (os_log_s *)Logger.logObject.getter(v193);
        os_log_type_t v195 = static os_log_type_t.debug.getter();
        uint64_t v14 = v113;
        if (os_log_type_enabled(v194, v195))
        {
          uint64_t v196 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
          *(_WORD *)uint64_t v196 = 0;
          _os_log_impl(&dword_0, v194, v195, "AmbiguousPlayFlow#execute Constructing INPlayMediaIntent", v196, 2u);
          swift_slowDealloc(v196, -1LL, -1LL);
        }

        ((void (*)(char *, uint64_t))v445)(v422, v192);
        id v197 = [objc_allocWithZone(INPlayMediaIntent) init];
        id v198 = sub_170254(v193, (uint64_t)_swiftEmptyArrayStorage);

        uint64_t v199 = v443(v423, v442, v192);
        v200 = (os_log_s *)Logger.logObject.getter(v199);
        os_log_type_t v201 = static os_log_type_t.debug.getter();
        if (os_log_type_enabled(v200, v201))
        {
          uint64_t v202 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
          *(_WORD *)uint64_t v202 = 0;
          _os_log_impl(&dword_0, v200, v201, "AmbiguousPlayFlow#execute Constructing playMediaRCHFlowWrapper", v202, 2u);
          uint64_t v192 = v394;
          swift_slowDealloc(v202, -1LL, -1LL);
        }

        ((void (*)(char *, uint64_t))v445)(v423, v192);
        uint64_t v203 = sub_111180(v190, v198);
        uint64_t v204 = v443(v424, v442, v192);
        BOOL v205 = (os_log_s *)Logger.logObject.getter(v204);
        os_log_type_t v206 = static os_log_type_t.debug.getter();
        if (os_log_type_enabled(v205, v206))
        {
          v207 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
          *(_WORD *)v207 = 0;
          _os_log_impl( &dword_0,  v205,  v206,  "AmbiguousPlayFlow#execute Sending shim input to playMediaRCHFlowWrapper",  v207,  2u);
          v208 = v207;
          uint64_t v14 = v438;
          swift_slowDealloc(v208, -1LL, -1LL);
        }

        ((void (*)(char *, uint64_t))v445)(v424, v394);
        v209 = v435;
        static ExecuteResponse.complete(next:)(v203);
        ((void (*)(char *))v444)(v209);

        swift_release(v203);
        ((void (*)(char *, char *))v441[1])(v209, v436);
        v446((char *)v190, v119);
        (*(void (**)(char *, uint64_t))(v430 + 8))(v432, v429);
        uint64_t v105 = *(uint64_t (**)(uint64_t, uint64_t))(v437 + 8);
        uint64_t v106 = v440;
        goto LABEL_9;
      }

      sub_1CF340((uint64_t)v432, (uint64_t)v452);
      sub_45F6C((uint64_t)v452, (uint64_t)v453, &qword_2845F0);
      uint64_t v235 = v408;
      if (v453[56] == 255)
      {
LABEL_53:
        uint64_t v391 = v119;
        v443(v235, v442, v394);
        v236 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v130 + 16);
        uint64_t v237 = v402;
        uint64_t v238 = v429;
        uint64_t v239 = v236(v402, (uint64_t)v432, v429);
        v240 = (os_log_s *)Logger.logObject.getter(v239);
        os_log_type_t v241 = static os_log_type_t.error.getter();
        if (os_log_type_enabled(v240, v241))
        {
          uint64_t v242 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
          uint64_t v243 = swift_slowAlloc(32LL, -1LL);
          uint64_t v450 = (void *)v243;
          *(_DWORD *)uint64_t v242 = 136315138;
          v448 = v242 + 4;
          uint64_t v244 = v237;
          v245 = v400;
          v236(v400, (uint64_t)v244, v238);
          uint64_t v246 = String.init<A>(describing:)(v245, v238);
          unint64_t v248 = v247;
          uint64_t v449 = sub_6978(v246, v247, (uint64_t *)&v450);
          uint64_t v249 = v438;
          UnsafeMutableRawBufferPointer.copyMemory(from:)(&v449, &v450);
          swift_bridgeObjectRelease(v248);
          uint64_t v250 = *(void (**)(char *, uint64_t))(v430 + 8);
          v250(v244, v238);
          _os_log_impl( &dword_0,  v240,  v241,  "AmbiguousPlayFlow#execute Unsupported direct invocation use case %s",  v242,  0xCu);
          swift_arrayDestroy(v243, 1LL, (char *)&type metadata for Any + 8);
          swift_slowDealloc(v243, -1LL, -1LL);
          swift_slowDealloc(v242, -1LL, -1LL);

          uint64_t v251 = ((uint64_t (*)(char *, uint64_t))v445)(v408, v394);
          uint64_t v252 = v444;
          uint64_t v253 = v435;
          uint64_t v254 = v441;
        }

        else
        {
          uint64_t v250 = *(void (**)(char *, uint64_t))(v130 + 8);
          v250(v237, v238);

          uint64_t v251 = ((uint64_t (*)(char *, uint64_t))v445)(v235, v394);
          uint64_t v252 = v444;
          uint64_t v253 = v435;
          uint64_t v254 = v441;
          uint64_t v249 = v438;
        }

        static ExecuteResponse.complete()(v251);
        ((void (*)(char *))v252)(v253);
        ((void (*)(char *, char *))v254[1])(v253, v436);
        v446(v425, v391);
        v250(v432, v238);
        return (*(uint64_t (**)(uint64_t, uint64_t))(v437 + 8))(v440, v249);
      }

      sub_45D94((uint64_t)v453, (uint64_t)&v454);
      sub_45D94((uint64_t)&v454, (uint64_t)v456);
      if (v458)
      {
        sub_45DD0((uint64_t)v452);
        goto LABEL_53;
      }

      uint64_t v328 = (void *)v456[2];
      swift_bridgeObjectRelease(v456[1]);
      if (v328)
      {
        uint64_t v329 = objc_opt_self(&OBJC_CLASS___INPlayMediaIntent);
        uint64_t v330 = swift_dynamicCastObjCClass(v328, v329);
        if (v330)
        {
          uint64_t v331 = (void *)v330;
          id v332 = v328;
          uint64_t v333 = v128;
          uint64_t v334 = sub_111180(v190, v331);
          uint64_t v335 = v435;
          static ExecuteResponse.complete(next:)(v334);
          ((void (*)(char *))v444)(v335);

          swift_release(v334);
          ((void (*)(char *, char *))v441[1])(v335, v436);
          v446((char *)v190, v119);
          (*(void (**)(char *, uint64_t))(v130 + 8))(v432, v429);
          return (*(uint64_t (**)(uint64_t, uint64_t))(v333 + 8))(v440, v438);
        }
      }

      v443(v398, v442, v394);
      uint64_t v337 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v130 + 16);
      uint64_t v338 = v397;
      uint64_t v339 = v429;
      uint64_t v340 = v337(v397, (uint64_t)v432, v429);
      uint64_t v341 = (os_log_s *)Logger.logObject.getter(v340);
      uint64_t v342 = v130;
      os_log_type_t v343 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v341, v343))
      {
        v344 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
        v448 = (void *)swift_slowAlloc(32LL, -1LL);
        uint64_t v450 = v448;
        uint64_t v447 = v344;
        *(_DWORD *)v344 = 136315138;
        v443 = (uint64_t (*)(char *, os_log_t, uint64_t))(v344 + 4);
        v345 = v338;
        uint64_t v346 = v400;
        v337(v400, (uint64_t)v345, v339);
        uint64_t v347 = String.init<A>(describing:)(v346, v339);
        uint64_t v348 = v119;
        unint64_t v350 = v349;
        uint64_t v449 = sub_6978(v347, v349, (uint64_t *)&v450);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v449, &v450);
        unint64_t v351 = v350;
        uint64_t v119 = v348;
        swift_bridgeObjectRelease(v351);
        v352 = *(void (**)(char *, uint64_t))(v430 + 8);
        v352(v345, v339);
        uint64_t v353 = v447;
        _os_log_impl( &dword_0,  v341,  v343,  "AmbiguousPlayFlow#execute Unable to convert intent to INPlayMediaIntent from direct invocation use case %s",  v447,  0xCu);
        v354 = v448;
        swift_arrayDestroy(v448, 1LL, (char *)&type metadata for Any + 8);
        uint64_t v298 = v440;
        swift_slowDealloc(v354, -1LL, -1LL);
        uint64_t v355 = v353;
        uint64_t v128 = v437;
        swift_slowDealloc(v355, -1LL, -1LL);

        uint64_t v356 = ((uint64_t (*)(char *, uint64_t))v445)(v398, v394);
      }

      else
      {
        v352 = *(void (**)(char *, uint64_t))(v342 + 8);
        v352(v338, v339);

        uint64_t v356 = ((uint64_t (*)(char *, uint64_t))v445)(v398, v394);
        uint64_t v298 = v440;
      }

      uint64_t v386 = v435;
      static ExecuteResponse.complete()(v356);
      ((void (*)(char *))v444)(v386);

      ((void (*)(char *, char *))v441[1])(v386, v436);
      v446(v425, v119);
      v352(v432, v339);
      uint64_t v105 = *(uint64_t (**)(uint64_t, uint64_t))(v128 + 8);
LABEL_93:
      uint64_t v106 = v298;
      uint64_t v107 = v438;
      return v105(v106, v107);
    }

    uint64_t v14 = v113;
    uint64_t v143 = v437;
    uint64_t v144 = v393;
    if (v118 == enum case for Parse.NLv4IntentOnly(_:))
    {
      v446 = v112;
      uint64_t v145 = v437;
      uint64_t v146 = v439;
      (*(void (**)(char *, uint64_t))(v437 + 96))(v439, v113);
      swift_unknownObjectRelease(*(void *)v146);
    }

    else
    {
      if (v118 == enum case for Parse.pommesResponse(_:))
      {
        v446 = v112;
        v210 = v439;
        (*(void (**)(char *, uint64_t))(v437 + 96))(v439, v113);
        uint64_t v441 = *(void **)v210;
        v211 = v405;
        uint64_t v212 = v394;
        uint64_t v213 = v443(v405, v442, v394);
        uint64_t v214 = (os_log_s *)Logger.logObject.getter(v213);
        os_log_type_t v215 = static os_log_type_t.debug.getter();
        if (os_log_type_enabled(v214, v215))
        {
          uint64_t v216 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
          *(_WORD *)uint64_t v216 = 0;
          _os_log_impl(&dword_0, v214, v215, "AmbiguousPlayFlow#execute received .pommesResponse parse.", v216, 2u);
          uint64_t v217 = v216;
          uint64_t v14 = v438;
          swift_slowDealloc(v217, -1LL, -1LL);
        }

        ((void (*)(char *, uint64_t))v445)(v211, v212);
        uint64_t v218 = v406;
        sub_FF10(v94, v406, &qword_285BD0);
        uint64_t v219 = v212;
        if (v393(v218, 1LL, v119) == 1)
        {
          id v220 = v441;
          uint64_t v221 = v143;
          sub_1F6CC(v218, &qword_285BD0);
        }

        else
        {
          uint64_t v274 = (uint64_t)v403;
          uint64_t v439 = (char *)*((void *)v447 + 4);
          ((void (*)(char *, uint64_t, uint64_t))v439)(v403, v218, v119);
          id v275 = v441;
          uint64_t v276 = sub_10470();
          if (v276)
          {
            os_log_type_t v277 = (void *)v276;
            id v278 = [objc_allocWithZone(INPlayMediaIntent) init];
            uint64_t v279 = dispatch thunk of PommesResponse.clientResults.getter();
            id v280 = sub_170254(v277, v279);

            swift_bridgeObjectRelease(v279);
            uint64_t v281 = v440;
            sub_19928(v440, (uint64_t)v456);
            uint64_t v282 = v457;
            sub_1F6CC((uint64_t)v456, &qword_28C140);
            if (!v282)
            {
              id v336 = v280;
              sub_1B4588(v281, v274, v280, (void (*)(void))v444, v395);

              v446((char *)v274, v119);
              return (*(uint64_t (**)(uint64_t, uint64_t))(v143 + 8))(v281, v438);
            }

            uint64_t v283 = v421;
            v116(v421, v281, v438);
            uint64_t v284 = v274;
            unint64_t v285 = v434;
            v392(v434, (void (*)(void, void))v284, v119);
            uint64_t v286 = *(unsigned __int8 *)(v143 + 80);
            uint64_t v287 = (v286 + 48) & ~v286;
            uint64_t v288 = v447[80];
            uint64_t v289 = (v411 + v288 + v287) & ~v288;
            v290 = (void *)swift_allocObject(&unk_274208, v289 + v412, v286 | v288 | 7);
            uint64_t v291 = v448;
            v290[2] = v280;
            v290[3] = v291;
            uint64_t v292 = v395;
            v290[4] = v444;
            v290[5] = v292;
            ((void (*)(char *, char *, uint64_t))v433)((char *)v290 + v287, v283, v438);
            ((void (*)(char *, char *, uint64_t))v439)((char *)v290 + v289, v285, v119);
            swift_retain(v291);
            swift_retain(v292);
            id v293 = v280;
            uint64_t v294 = (uint64_t)v413;
            uint64_t v295 = ((uint64_t (*)(void))static DeviceResolutionProvider.current.getter)();
            uint64_t v296 = (uint64_t)v415;
            EncryptionProvider.init()(v295);
            type metadata accessor for SharedContextProvider(0LL);
            uint64_t v297 = static SharedContextProvider.shared.getter();
            uint64_t v298 = v440;
            sub_1B6654(v440, v294, v296, v297, (void (*)(void))sub_1B7850, (uint64_t)v290, v293);
            swift_release(v297);

            swift_release(v290);
            (*(void (**)(uint64_t, uint64_t))(v416 + 8))(v296, v418);
            (*(void (**)(uint64_t, uint64_t))(v414 + 8))(v294, v417);
            v446(v403, v119);
            uint64_t v105 = *(uint64_t (**)(uint64_t, uint64_t))(v437 + 8);
            goto LABEL_93;
          }

          id v220 = v275;
          uint64_t v316 = v119;
          uint64_t v221 = v143;
          v446((char *)v274, v316);
        }

        *((_BYTE *)v448 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin17AmbiguousPlayFlow_state) = 1;
        v317 = v407;
        uint64_t v318 = v443(v407, v442, v219);
        v319 = (os_log_s *)Logger.logObject.getter(v318);
        os_log_type_t v320 = static os_log_type_t.error.getter();
        BOOL v321 = os_log_type_enabled(v319, v320);
        uint64_t v322 = v395;
        if (v321)
        {
          uint64_t v323 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
          uint64_t v324 = swift_slowAlloc(32LL, -1LL);
          v456[0] = v324;
          *(_DWORD *)uint64_t v323 = 136315138;
          uint64_t v454 = sub_6978(0xD000000000000048LL, 0x8000000000222E20LL, v456);
          uint64_t v14 = v438;
          UnsafeMutableRawBufferPointer.copyMemory(from:)(&v454, v455);
          _os_log_impl(&dword_0, v319, v320, "%s", v323, 0xCu);
          swift_arrayDestroy(v324, 1LL, (char *)&type metadata for Any + 8);
          swift_slowDealloc(v324, -1LL, -1LL);
          swift_slowDealloc(v323, -1LL, -1LL);

          uint64_t v325 = v407;
          uint64_t v326 = v394;
        }

        else
        {

          uint64_t v325 = v317;
          uint64_t v326 = v219;
        }

        ((void (*)(char *, uint64_t))v445)(v325, v326);
        uint64_t v327 = v440;
        sub_1B4908(0xD000000000000013LL, (void *)0x8000000000222E70LL, v444, v322);

        uint64_t v105 = *(uint64_t (**)(uint64_t, uint64_t))(v221 + 8);
        uint64_t v106 = v327;
        goto LABEL_9;
      }

      if (v118 != enum case for Parse.uso(_:))
      {
        uint64_t v299 = v401;
        uint64_t v300 = v394;
        uint64_t v301 = v443(v401, v442, v394);
        uint64_t v302 = (os_log_s *)Logger.logObject.getter(v301);
        os_log_type_t v303 = static os_log_type_t.error.getter();
        if (os_log_type_enabled(v302, v303))
        {
          uint64_t v304 = v143;
          uint64_t v305 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
          *(_WORD *)uint64_t v305 = 0;
          _os_log_impl(&dword_0, v302, v303, "AmbiguousPlayFlow#execute unexpected parse type", v305, 2u);
          uint64_t v306 = v305;
          uint64_t v143 = v304;
          swift_slowDealloc(v306, -1LL, -1LL);
        }

        uint64_t v307 = ((uint64_t (*)(char *, uint64_t))v445)(v299, v300);
        v308 = v435;
        static ExecuteResponse.complete()(v307);
        ((void (*)(char *))v444)(v308);
        ((void (*)(char *, char *))v441[1])(v308, v436);
        uint64_t v309 = *(void (**)(uint64_t, uint64_t))(v143 + 8);
        v309(v440, v14);
        return ((uint64_t (*)(char *, uint64_t))v309)(v439, v14);
      }

      v446 = v112;
      uint64_t v145 = v437;
      (*(void (**)(char *, uint64_t))(v437 + 8))(v439, v113);
    }

    uint64_t v147 = v395;
    uint64_t v148 = v448[32];
    uint64_t v149 = v448[33];
    sub_6EA8(v448 + 29, v148);
    if ((dispatch thunk of FeatureFlagProviding.isMediaControlsOnSiriXEnabled.getter(v148, v149) & 1) != 0)
    {
      uint64_t v150 = v410;
      sub_FF10(v94, v410, &qword_285BD0);
      if (v144(v150, 1LL, v119) == 1)
      {
        sub_1F6CC(v150, &qword_285BD0);
      }

      else
      {
        uint64_t v255 = (uint64_t)v404;
        uint64_t v256 = (*((uint64_t (**)(char *, uint64_t, uint64_t))v447 + 4))(v404, v150, v119);
        uint64_t v257 = v421;
        uint64_t v258 = Input.parse.getter(v256);
        uint64_t v259 = Parse.firstUsoTask()(v258);
        uint64_t v260 = *(uint8_t **)(v145 + 8);
        ((void (*)(char *, uint64_t))v260)(v257, v14);
        if (v259)
        {
          uint64_t v391 = v119;
          char v261 = sub_2E8C8();
          uint64_t v147 = v395;
          if ((v261 & 1) != 0)
          {
            uint64_t v447 = v260;
            uint64_t v262 = v399;
            uint64_t v263 = v394;
            uint64_t v264 = v443(v399, v442, v394);
            uint64_t v265 = (os_log_s *)Logger.logObject.getter(v264);
            os_log_type_t v266 = static os_log_type_t.info.getter(v265);
            if (os_log_type_enabled(v265, v266))
            {
              int v267 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
              uint64_t v268 = swift_slowAlloc(32LL, -1LL);
              v456[0] = v268;
              *(_DWORD *)int v267 = 136446210;
              uint64_t v269 = static Insights.frameKit.getter();
              unint64_t v271 = v270;
              uint64_t v454 = sub_6978(v269, v270, v456);
              uint64_t v14 = v438;
              UnsafeMutableRawBufferPointer.copyMemory(from:)(&v454, v455);
              swift_bridgeObjectRelease(v271);
              _os_log_impl( &dword_0,  v265,  v266,  "AmbiguousPlayFlow#execute %{public}s Resume app intent, handling in SiriAudio.",  v267,  0xCu);
              swift_arrayDestroy(v268, 1LL, (char *)&type metadata for Any + 8);
              swift_slowDealloc(v268, -1LL, -1LL);
              swift_slowDealloc(v267, -1LL, -1LL);

              uint64_t v272 = v399;
            }

            else
            {

              uint64_t v272 = v262;
            }

            ((void (*)(char *, uint64_t))v445)(v272, v263);
            uint64_t v357 = v391;
            uint64_t v358 = type metadata accessor for AudioUsoIntent(0LL);
            swift_allocObject(v358, *(unsigned int *)(v358 + 48), *(unsigned __int16 *)(v358 + 52));
            uint64_t v359 = swift_retain(v259);
            uint64_t v360 = AudioUsoIntent.init(task:)(v359);
            sub_BC728();
            uint64_t v361 = ((uint64_t (*)(void))dispatch thunk of AudioUsoIntent.appBundleId.getter)();
            uint64_t v363 = v362;
            uint64_t v364 = (void *)static INPlayMediaIntent.resumeApp(bundleIdentifier:)(v361);
            uint64_t v365 = swift_bridgeObjectRelease(v363);
            uint64_t v366 = dispatch thunk of AudioUsoIntent.appBundleId.getter(v365);
            if (v367)
            {
              uint64_t v368 = (void *)v366;
              uint64_t v369 = v367;
              if ((static BundleIdentifiers.isFirstParty(bundleIdentifier:)(v366, v367) & 1) != 0)
              {
                uint64_t v441 = v368;
                uint64_t v370 = v396;
                uint64_t v371 = v394;
                uint64_t v372 = v443(v396, v442, v394);
                uint64_t v373 = (os_log_s *)Logger.logObject.getter(v372);
                os_log_type_t v374 = static os_log_type_t.info.getter(v373);
                if (os_log_type_enabled(v373, v374))
                {
                  uint64_t v375 = (_DWORD *)swift_slowAlloc(12LL, -1LL);
                  v443 = (uint64_t (*)(char *, os_log_t, uint64_t))swift_slowAlloc(32LL, -1LL);
                  v456[0] = (uint64_t)v443;
                  os_log_t v442 = v373;
                  *uint64_t v375 = 136446210;
                  uint64_t v439 = (char *)(v375 + 1);
                  v376 = (uint8_t *)v375;
                  uint64_t v377 = static Insights.frameKit.getter();
                  unint64_t v379 = v378;
                  uint64_t v454 = sub_6978(v377, v378, v456);
                  UnsafeMutableRawBufferPointer.copyMemory(from:)(&v454, v455);
                  swift_bridgeObjectRelease(v379);
                  os_log_t v380 = v442;
                  _os_log_impl( &dword_0,  v442,  v374,  "AmbiguousPlayFlow#execute %{public}s Resume first party app intent. Handling in Controls",  v376,  0xCu);
                  uint64_t v381 = v443;
                  swift_arrayDestroy(v443, 1LL, (char *)&type metadata for Any + 8);
                  swift_slowDealloc(v381, -1LL, -1LL);
                  swift_slowDealloc(v376, -1LL, -1LL);

                  uint64_t v382 = v396;
                }

                else
                {

                  uint64_t v382 = v370;
                }

                ((void (*)(char *, uint64_t))v445)(v382, v371);
                uint64_t v387 = v448;
                uint64_t v388 = v448[5];
                uint64_t v445 = v448[6];
                sub_6EA8(v448 + 2, v388);
                uint64_t v389 = (void *)swift_allocObject(&unk_2741E0, 40LL, 7LL);
                uint64_t v390 = v395;
                v389[2] = v444;
                v389[3] = v390;
                v389[4] = v387;
                swift_retain(v387);
                swift_retain(v390);
                dispatch thunk of ControlsFlowProviding.makeResumeAppFlow(for:with:)( v441,  v369,  sub_1B783C,  v389,  v388,  v445);
                swift_release(v259);
                swift_bridgeObjectRelease(v369);
                swift_release(v360);

                swift_release(v389);
                v446(v404, v391);
                return ((uint64_t (*)(uint64_t, uint64_t))v447)(v440, v438);
              }

              swift_bridgeObjectRelease(v369);
            }

            uint64_t v383 = (uint64_t)v404;
            uint64_t v384 = sub_111180((uint64_t)v404, v364);
            uint64_t v385 = v435;
            static ExecuteResponse.complete(next:)(v384);
            ((void (*)(char *))v444)(v385);
            swift_release(v259);
            swift_release(v384);
            swift_release(v360);

            ((void (*)(char *, char *))v441[1])(v385, v436);
            v446((char *)v383, v357);
            return ((uint64_t (*)(uint64_t, uint64_t))v447)(v440, v14);
          }

          v446((char *)v255, v391);
          swift_release(v259);
        }

        else
        {
          v446((char *)v255, v119);
          uint64_t v147 = v395;
        }
      }

      uint64_t v310 = v448;
      uint64_t v311 = v448[5];
      uint64_t v312 = v448[6];
      sub_6EA8(v448 + 2, v311);
      v313 = (void *)swift_allocObject(&unk_2741B8, 48LL, 7LL);
      uint64_t v314 = v444;
      v313[2] = v310;
      v313[3] = v314;
      uint64_t v315 = v409;
      v313[4] = v147;
      v313[5] = v315;
      swift_retain(v310);
      swift_retain(v147);
      uint64_t v229 = v440;
      dispatch thunk of ControlsFlowProviding.makeAmbiguousPlayFlow(for:with:)(v440, sub_1B7800, v313, v311, v312);
      swift_release(v313);
    }

    else
    {
      uint64_t v222 = v147;
      v223 = v419;
      uint64_t v224 = v394;
      uint64_t v225 = v443(v419, v442, v394);
      uint64_t v226 = (os_log_s *)Logger.logObject.getter(v225);
      os_log_type_t v227 = static os_log_type_t.error.getter();
      BOOL v228 = os_log_type_enabled(v226, v227);
      uint64_t v229 = v440;
      if (v228)
      {
        uint64_t v230 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
        uint64_t v231 = swift_slowAlloc(32LL, -1LL);
        v456[0] = v231;
        *(_DWORD *)uint64_t v230 = 136315138;
        uint64_t v454 = sub_6978(0xD000000000000062LL, 0x8000000000222DB0LL, v456);
        uint64_t v14 = v438;
        uint64_t v229 = v440;
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v454, v455);
        _os_log_impl(&dword_0, v226, v227, "%s", v230, 0xCu);
        swift_arrayDestroy(v231, 1LL, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v231, -1LL, -1LL);
        swift_slowDealloc(v230, -1LL, -1LL);

        v232 = v419;
      }

      else
      {

        v232 = v223;
      }

      ((void (*)(char *, uint64_t))v445)(v232, v224);
      uint64_t v273 = v444;
      *((_BYTE *)v448 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin17AmbiguousPlayFlow_state) = 1;
      sub_1B4908(0x7463657078656E75LL, (void *)0xEF65737261506465LL, v273, v222);
    }

    uint64_t v105 = *(uint64_t (**)(uint64_t, uint64_t))(v145 + 8);
    uint64_t v106 = v229;
LABEL_9:
    uint64_t v107 = v14;
    return v105(v106, v107);
  }

  v446 = v112;
  (*(void (**)(char *, uint64_t))(v114 + 96))(v117, v113);
  uint64_t v120 = sub_6C5C(&qword_284618);
  uint64_t v121 = *(void *)&v117[*(int *)(v120 + 48)];
  os_log_type_t v122 = (void *)Parse.ServerConversion.siriKitIntent.getter(v120);
  uint64_t v123 = objc_opt_self(&OBJC_CLASS___INPlayMediaIntent);
  uint64_t v124 = swift_dynamicCastObjCClass(v122, v123);
  uint64_t v125 = v114;
  v432 = (char *)v121;
  if (v124)
  {
    uint64_t v126 = (void *)v124;
    uint64_t v127 = v428;
    sub_FF10(v94, v428, &qword_285BD0);
    if (v393(v127, 1LL, v119) != 1)
    {
      os_log_type_t v166 = v447;
      uint64_t v167 = (uint64_t)v427;
      uint64_t v445 = *((void *)v447 + 4);
      ((void (*)(char *, uint64_t, uint64_t))v445)(v427, v127, v119);
      uint64_t v168 = v119;
      uint64_t v169 = v440;
      sub_19928(v440, (uint64_t)v456);
      uint64_t v170 = v457;
      sub_1F6CC((uint64_t)v456, &qword_28C140);
      if (v170)
      {
        uint64_t v171 = v169;
        uint64_t v172 = v168;
        uint64_t v391 = v168;
        uint64_t v173 = v421;
        uint64_t v174 = v438;
        v116(v421, v171, v438);
        v392(v434, (void (*)(void, void))v167, v172);
        uint64_t v175 = *(unsigned __int8 *)(v125 + 80);
        uint64_t v176 = (v175 + 48) & ~v175;
        uint64_t v177 = v166[80];
        uint64_t v178 = (v411 + v177 + v176) & ~v177;
        v179 = (void *)swift_allocObject(&unk_274230, v178 + v412, v175 | v177 | 7);
        uint64_t v180 = v448;
        v179[2] = v126;
        v179[3] = v180;
        uint64_t v181 = v395;
        v179[4] = v444;
        v179[5] = v181;
        ((void (*)(char *, char *, uint64_t))v433)((char *)v179 + v176, v173, v174);
        uint64_t v182 = v391;
        ((void (*)(char *, char *, uint64_t))v445)((char *)v179 + v178, v434, v391);
        id v183 = v122;
        swift_retain(v180);
        uint64_t v184 = swift_retain(v181);
        uint64_t v185 = (uint64_t)v413;
        uint64_t v186 = static DeviceResolutionProvider.current.getter(v184);
        uint64_t v187 = (uint64_t)v415;
        EncryptionProvider.init()(v186);
        type metadata accessor for SharedContextProvider(0LL);
        uint64_t v188 = static SharedContextProvider.shared.getter();
        uint64_t v189 = v440;
        sub_1B6654(v440, v185, v187, v188, (void (*)(void))sub_1B7850, (uint64_t)v179, v126);
        swift_release(v188);

        swift_release(v432);
        swift_release(v179);
        (*(void (**)(uint64_t, uint64_t))(v416 + 8))(v187, v418);
        (*(void (**)(uint64_t, uint64_t))(v414 + 8))(v185, v417);
        v446(v427, v182);
        (*(void (**)(uint64_t, uint64_t))(v437 + 8))(v189, v438);
      }

      else
      {
        id v233 = v122;
        sub_1B4588(v169, v167, v126, (void (*)(void))v444, v395);

        swift_release(v432);
        v446((char *)v167, v168);
        (*(void (**)(uint64_t, uint64_t))(v125 + 8))(v169, v438);
      }

      uint64_t v234 = type metadata accessor for NLIntent(0LL);
      return (*(uint64_t (**)(char *, uint64_t))(*(void *)(v234 - 8) + 8LL))(v439, v234);
    }

    sub_1F6CC(v127, &qword_285BD0);
  }

  else
  {
  }

  uint64_t v151 = v431;
  uint64_t v152 = v394;
  uint64_t v153 = v443(v431, v442, v394);
  int v154 = (os_log_s *)Logger.logObject.getter(v153);
  os_log_type_t v155 = static os_log_type_t.error.getter();
  BOOL v156 = os_log_type_enabled(v154, v155);
  uint64_t v157 = v438;
  int v158 = v439;
  uint64_t v159 = v440;
  if (v156)
  {
    uint64_t v160 = v125;
    uint64_t v161 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
    *(_WORD *)uint64_t v161 = 0;
    _os_log_impl(&dword_0, v154, v155, "AmbiguousPlayFlow#execute NLv3IntentPlusServerConversion error", v161, 2u);
    v162 = v161;
    uint64_t v125 = v160;
    uint64_t v151 = v431;
    swift_slowDealloc(v162, -1LL, -1LL);
  }

  uint64_t v163 = ((uint64_t (*)(char *, uint64_t))v445)(v151, v152);
  uint64_t v164 = v435;
  static ExecuteResponse.complete()(v163);
  ((void (*)(char *))v444)(v164);
  swift_release(v432);
  ((void (*)(char *, char *))v441[1])(v164, v436);
  (*(void (**)(uint64_t, uint64_t))(v125 + 8))(v159, v157);
  uint64_t v165 = type metadata accessor for NLIntent(0LL);
  return (*(uint64_t (**)(char *, uint64_t))(*(void *)(v165 - 8) + 8LL))(v158, v165);
}

uint64_t sub_1B29BC(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1B29FC + 4 * asc_21A630[a1]))( 0x636572726F636E69LL,  0xEE007475706E4974LL);
}

unint64_t sub_1B29FC()
{
  return 0xD000000000000013LL;
}

uint64_t sub_1B2A18()
{
  return 0x7463657078656E75LL;
}

unint64_t sub_1B2A3C()
{
  return 0xD00000000000001BLL;
}

uint64_t sub_1B2A74()
{
  return 0x6552776F6C466F6ELL;
}

uint64_t sub_1B2A98( int a1, void *a2, uint64_t a3, void (*a4)(void), uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v49 = a6;
  uint64_t v50 = a7;
  int v48 = a1;
  int v51 = (unsigned __int16)a1;
  uint64_t v11 = type metadata accessor for Logger(0LL);
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = __chkstk_darwin(v11);
  uint64_t v52 = (char *)&v41 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v13);
  uint64_t v16 = (char *)&v41 - v15;
  if (qword_283888 != -1) {
    swift_once(&qword_283888, sub_BFC5C);
  }
  uint64_t v17 = sub_6960(v11, (uint64_t)qword_2969C8);
  uint64_t v18 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v12 + 16);
  uint64_t v46 = v17;
  uint64_t v47 = v18;
  ((void (*)(char *))v18)(v16);
  id v19 = a2;
  uint64_t v20 = (os_log_s *)Logger.logObject.getter(v19);
  os_log_type_t v21 = static os_log_type_t.default.getter(v20);
  if (os_log_type_enabled(v20, v21))
  {
    uint64_t v43 = a4;
    uint64_t v22 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
    uint64_t v41 = swift_slowAlloc(32LL, -1LL);
    uint64_t v54 = v41;
    *(_DWORD *)uint64_t v22 = 136315138;
    id v23 = [v19 hashedRouteUIDs];
    uint64_t v44 = a5;
    uint64_t v45 = a3;
    id v42 = v19;
    if (v23)
    {
      uint64_t v24 = v23;
      uint64_t v25 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v23, &type metadata for String);
    }

    else
    {
      uint64_t v25 = 0LL;
    }

    uint64_t v53 = v25;
    uint64_t v36 = sub_6C5C(&qword_287D98);
    uint64_t v37 = Optional.debugDescription.getter(v36);
    unint64_t v39 = v38;
    swift_bridgeObjectRelease(v25);
    uint64_t v53 = sub_6978(v37, v39, &v54);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v53, &v54);
    id v19 = v42;

    swift_bridgeObjectRelease(v39);
    _os_log_impl(&dword_0, v20, v21, "AmbiguousPlayFlow#execute Resolved hashed route ids: %s", v22, 0xCu);
    uint64_t v40 = v41;
    swift_arrayDestroy(v41, 1LL, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v40, -1LL, -1LL);
    swift_slowDealloc(v22, -1LL, -1LL);

    uint64_t v26 = *(void (**)(char *, uint64_t))(v12 + 8);
    v26(v16, v11);
    a5 = v44;
    a4 = v43;
    if ((v51 & 0x100) == 0) {
      return sub_1B4588(v49, v50, v19, a4, a5);
    }
  }

  else
  {

    uint64_t v26 = *(void (**)(char *, uint64_t))(v12 + 8);
    v26(v16, v11);
    if ((v51 & 0x100) == 0) {
      return sub_1B4588(v49, v50, v19, a4, a5);
    }
  }

  uint64_t v27 = v19;
  int v28 = v48;
  uint64_t v29 = v47(v52, v46, v11);
  uint64_t v30 = (os_log_s *)Logger.logObject.getter(v29);
  os_log_type_t v31 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v30, v31))
  {
    uint64_t v32 = a4;
    uint64_t v33 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
    *(_WORD *)uint64_t v33 = 0;
    _os_log_impl( &dword_0,  v30,  v31,  "AmbiguousPlayFlow#execute WHA route resolution failed. Returning an error",  v33,  2u);
    uint64_t v34 = v33;
    a4 = v32;
    swift_slowDealloc(v34, -1LL, -1LL);
  }

  v26(v52, v11);
  if (v28 == 1) {
    return sub_1B4D28(v27, (uint64_t)a4, a5);
  }
  if (v28 == 3) {
    return sub_1B5198(v27, (uint64_t)a4, a5);
  }
  return sub_1B4F14(v27, (uint64_t)a4, a5);
}

uint64_t sub_1B2E4C(uint64_t a1, char a2, uint64_t *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v36 = a5;
  uint64_t v9 = type metadata accessor for Logger(0LL);
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v31 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v13 = type metadata accessor for ExecuteResponse(0LL);
  uint64_t v14 = *(void *)(v13 - 8);
  __chkstk_darwin(v13);
  uint64_t v16 = (char *)&v31 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  if ((a2 & 1) != 0)
  {
    swift_errorRetain(a1);
    if (qword_283888 != -1) {
      swift_once(&qword_283888, sub_BFC5C);
    }
    uint64_t v19 = sub_6960(v9, (uint64_t)qword_2969C8);
    (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v12, v19, v9);
    swift_errorRetain(a1);
    uint64_t v20 = swift_errorRetain(a1);
    os_log_type_t v21 = (os_log_s *)Logger.logObject.getter(v20);
    os_log_type_t v22 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v21, v22))
    {
      uint64_t v23 = swift_slowAlloc(22LL, -1LL);
      uint64_t v32 = (uint64_t *)swift_slowAlloc(8LL, -1LL);
      uint64_t v34 = swift_slowAlloc(32LL, -1LL);
      uint64_t v38 = v34;
      *(_DWORD *)uint64_t v23 = 136446466;
      os_log_t v33 = v21;
      uint64_t v24 = static Insights.frameKit.getter();
      uint64_t v35 = a4;
      unint64_t v26 = v25;
      uint64_t v37 = sub_6978(v24, v25, &v38);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v37, &v38);
      swift_bridgeObjectRelease(v26);
      *(_WORD *)(v23 + 1sub_6C3C(v0 + 2) = 2112;
      swift_errorRetain(a1);
      uint64_t v27 = _swift_stdlib_bridgeErrorToNSError(a1);
      uint64_t v37 = v27;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v37, &v38);
      int v28 = v32;
      *uint64_t v32 = v27;
      a4 = v35;
      sub_ABC68(a1, 1);
      sub_ABC68(a1, 1);
      os_log_type_t v21 = v33;
      _os_log_impl( &dword_0,  v33,  v22,  "AmbiguousPlayFlow#execute %{public}s Resume first party app intent failed with an error: %@",  (uint8_t *)v23,  0x16u);
      uint64_t v29 = sub_6C5C((uint64_t *)&unk_286BC0);
      swift_arrayDestroy(v28, 1LL, v29);
      swift_slowDealloc(v28, -1LL, -1LL);
      uint64_t v30 = v34;
      swift_arrayDestroy(v34, 1LL, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v30, -1LL, -1LL);
      swift_slowDealloc(v23, -1LL, -1LL);
    }

    else
    {
      sub_ABC68(a1, 1);
      sub_ABC68(a1, 1);
    }

    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
    sub_1B4908(0x7463657078656E75LL, (void *)0xEF65737261506465LL, a3, a4);
    return sub_ABC68(a1, 1);
  }

  else
  {
    uint64_t v17 = swift_retain(a1);
    static ExecuteResponse.complete(next:)(v17);
    ((void (*)(char *))a3)(v16);
    sub_ABC68(a1, 0);
    return (*(uint64_t (**)(char *, uint64_t))(v14 + 8))(v16, v13);
  }

uint64_t sub_1B31B4(uint64_t a1, char a2, void *a3, uint64_t *a4, uint64_t a5, uint64_t a6)
{
  uint64_t v117 = a6;
  uint64_t v130 = a4;
  uint64_t v131 = a5;
  uint64_t v123 = type metadata accessor for FlowUnhandledReason(0LL);
  uint64_t v122 = *(void *)(v123 - 8);
  __chkstk_darwin(v123);
  uint64_t v121 = (char *)&v115 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v120 = type metadata accessor for QueuePosition(0LL);
  uint64_t v119 = *(void *)(v120 - 8);
  __chkstk_darwin(v120);
  int v118 = (char *)&v115 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v11 = type metadata accessor for ExecuteResponse(0LL);
  uint64_t v125 = *(void *)(v11 - 8);
  uint64_t v126 = v11;
  __chkstk_darwin(v11);
  uint64_t v124 = (char *)&v115 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v13 = sub_6C5C(&qword_285BD0);
  __chkstk_darwin(v13);
  uint64_t v15 = (char *)&v115 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v16 = type metadata accessor for Input(0LL);
  uint64_t v17 = *(void *)(v16 - 8);
  uint64_t v18 = *(void *)(v17 + 64);
  uint64_t v19 = __chkstk_darwin(v16);
  uint64_t v116 = (char *)&v115 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v19);
  uint64_t v127 = (uint64_t *)((char *)&v115 - v20);
  uint64_t v132 = type metadata accessor for Logger(0LL);
  uint64_t v129 = *(void *)(v132 - 8);
  uint64_t v21 = __chkstk_darwin(v132);
  uint64_t v22 = __chkstk_darwin(v21);
  uint64_t v24 = (char *)&v115 - v23;
  uint64_t v25 = __chkstk_darwin(v22);
  uint64_t v27 = (char *)&v115 - v26;
  __chkstk_darwin(v25);
  uint64_t v30 = (char *)&v115 - v29;
  if ((a2 & 1) != 0)
  {
    uint64_t v127 = a3;
    uint64_t v139 = 0LL;
    uint64_t v140 = (void *)0xE000000000000000LL;
    swift_errorRetain(a1);
    _StringGuts.grow(_:)(104LL);
    v44._countAndFlagsBits = 0xD00000000000004ELL;
    v44._object = (void *)0x8000000000222EC0LL;
    String.append(_:)(v44);
    swift_getErrorValue(a1, v136, v135);
    v45._countAndFlagsBits = Error.localizedDescription.getter(v135[1], v135[2]);
    object = v45._object;
    String.append(_:)(v45);
    swift_bridgeObjectRelease(object);
    v47._countAndFlagsBits = 0xD000000000000018LL;
    v47._object = (void *)0x800000000021F190LL;
    String.append(_:)(v47);
    uint64_t v49 = v139;
    unint64_t v48 = (unint64_t)v140;
    uint64_t v50 = a1;
    if (qword_283888 != -1) {
      swift_once(&qword_283888, sub_BFC5C);
    }
    uint64_t v51 = v132;
    uint64_t v52 = sub_6960(v132, (uint64_t)qword_2969C8);
    uint64_t v53 = v129;
    (*(void (**)(char *, uint64_t, uint64_t))(v129 + 16))(v30, v52, v51);
    uint64_t v54 = swift_bridgeObjectRetain(v48);
    uint64_t v55 = (os_log_s *)Logger.logObject.getter(v54);
    os_log_type_t v56 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v55, v56))
    {
      uint64_t v128 = v50;
      uint64_t v57 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
      uint64_t v58 = swift_slowAlloc(32LL, -1LL);
      uint64_t v139 = v58;
      *(_DWORD *)uint64_t v57 = 136315138;
      swift_bridgeObjectRetain(v48);
      uint64_t v138 = sub_6978(v49, v48, &v139);
      uint64_t v50 = v128;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v138, &v139);
      swift_bridgeObjectRelease_n(v48, 3LL);
      _os_log_impl(&dword_0, v55, v56, "%s", v57, 0xCu);
      swift_arrayDestroy(v58, 1LL, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v58, -1LL, -1LL);
      swift_slowDealloc(v57, -1LL, -1LL);

      (*(void (**)(char *, uint64_t))(v53 + 8))(v30, v132);
    }

    else
    {

      swift_bridgeObjectRelease_n(v48, 2LL);
      (*(void (**)(char *, uint64_t))(v53 + 8))(v30, v51);
    }

    *((_BYTE *)v127 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin17AmbiguousPlayFlow_state) = 1;
    swift_getErrorValue(v50, v134, v133);
    v72._countAndFlagsBits = Error.localizedDescription.getter(v133[1], v133[2]);
    uint64_t v73 = v72._object;
    uint64_t v139 = 0xD00000000000001ELL;
    uint64_t v140 = (void *)0x8000000000222F10LL;
    String.append(_:)(v72);
    swift_bridgeObjectRelease(v73);
    uint64_t v74 = v140;
    sub_1B4908(v139, v140, v130, v131);
    swift_bridgeObjectRelease(v74);
    return sub_ABC68(v50, 1);
  }

  else
  {
    uint64_t v115 = v28;
    uint64_t v128 = a1;
    uint64_t v31 = (uint64_t)a3 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin17AmbiguousPlayFlow_input;
    swift_beginAccess((char *)a3 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin17AmbiguousPlayFlow_input, &v139, 0LL, 0LL);
    sub_FF10(v31, (uint64_t)v15, &qword_285BD0);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v15, 1LL, v16) == 1)
    {
      swift_retain(v128);
      sub_1F6CC((uint64_t)v15, &qword_285BD0);
      if (qword_283888 != -1) {
        swift_once(&qword_283888, sub_BFC5C);
      }
      uint64_t v32 = v132;
      uint64_t v33 = sub_6960(v132, (uint64_t)qword_2969C8);
      uint64_t v34 = v129;
      uint64_t v35 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v129 + 16))(v27, v33, v32);
      uint64_t v36 = (os_log_s *)Logger.logObject.getter(v35);
      os_log_type_t v37 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v36, v37))
      {
        uint64_t v38 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
        *(_WORD *)uint64_t v38 = 0;
        _os_log_impl(&dword_0, v36, v37, "AmbiguousPlayFlow#execute no input available", v38, 2u);
        swift_slowDealloc(v38, -1LL, -1LL);
      }

      (*(void (**)(char *, uint64_t))(v34 + 8))(v27, v32);
      uint64_t v39 = v122;
      uint64_t v40 = v121;
      uint64_t v41 = v123;
      (*(void (**)(char *, void, uint64_t))(v122 + 104))( v121,  enum case for FlowUnhandledReason.needsInfoDomainFallback(_:),  v123);
      id v42 = v124;
      static ExecuteResponse.unhandled(reason:isComplete:)(v40, 1LL);
      (*(void (**)(char *, uint64_t))(v39 + 8))(v40, v41);
      ((void (*)(char *))v130)(v42);
      sub_ABC68(v128, 0);
      return (*(uint64_t (**)(char *, uint64_t))(v125 + 8))(v42, v126);
    }

    uint64_t v59 = *(void (**)(void *, char *, uint64_t))(v17 + 32);
    v59(v127, v15, v16);
    if (v128)
    {
      uint64_t v123 = v17;
      uint64_t v60 = qword_283888;
      swift_retain_n(v128, 2LL);
      if (v60 != -1) {
        swift_once(&qword_283888, sub_BFC5C);
      }
      uint64_t v61 = v132;
      uint64_t v62 = sub_6960(v132, (uint64_t)qword_2969C8);
      uint64_t v63 = v129;
      uint64_t v64 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v129 + 16))(v24, v62, v61);
      uint64_t v65 = (os_log_s *)Logger.logObject.getter(v64);
      os_log_type_t v66 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v65, v66))
      {
        uint64_t v67 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
        uint64_t v68 = swift_slowAlloc(32LL, -1LL);
        uint64_t v138 = v68;
        *(_DWORD *)uint64_t v67 = 136446210;
        uint64_t v69 = static Insights.frameKit.getter();
        unint64_t v71 = v70;
        uint64_t v137 = sub_6978(v69, v70, &v138);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v137, &v138);
        swift_bridgeObjectRelease(v71);
        _os_log_impl( &dword_0,  v65,  v66,  "AmbiguousPlayFlow#execute %{public}s executing resume flow from controls",  v67,  0xCu);
        swift_arrayDestroy(v68, 1LL, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v68, -1LL, -1LL);
        swift_slowDealloc(v67, -1LL, -1LL);

        (*(void (**)(char *, uint64_t))(v63 + 8))(v24, v132);
      }

      else
      {

        (*(void (**)(char *, uint64_t))(v63 + 8))(v24, v61);
      }

      uint64_t v109 = v124;
      uint64_t v110 = v128;
      static ExecuteResponse.complete(next:)(v128);
      ((void (*)(char *))v130)(v109);
      sub_ABC68(v110, 0);
      sub_ABC68(v110, 0);
      (*(void (**)(char *, uint64_t))(v125 + 8))(v109, v126);
      uint64_t v107 = *(uint64_t (**)(uint64_t, uint64_t))(v123 + 8);
      uint64_t v108 = (uint64_t)v127;
      return v107(v108, v16);
    }

    *((_BYTE *)a3 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin17AmbiguousPlayFlow_state) = 1;
    id v75 = objc_allocWithZone(&OBJC_CLASS___NSUserDefaults);
    NSString v76 = String._bridgeToObjectiveC()();
    id v77 = [v75 initWithSuiteName:v76];

    if (!v77
      || (NSString v78 = String._bridgeToObjectiveC()(),
          unsigned __int8 v79 = [v77 BOOLForKey:v78],
          v77,
          v78,
          (v79 & 1) == 0)
      || (uint64_t v80 = a3[10],
          uint64_t v81 = a3[11],
          sub_6EA8(a3 + 7, v80),
          (dispatch thunk of NetworkStatusProviding.isOffline()(v80, v81) & 1) == 0))
    {
      uint64_t v94 = a3;
      uint64_t v95 = type metadata accessor for MediaRemoteAPIProvider(0LL);
      uint64_t v132 = static MediaRemoteAPIProvider.shared.getter(v95);
      if (qword_283960 != -1) {
        swift_once(&qword_283960, sub_1AF764);
      }
      uint64_t v129 = qword_28CB10;
      uint64_t v96 = v116;
      uint64_t v97 = (uint64_t)v127;
      (*(void (**)(char *, void *, uint64_t))(v17 + 16))(v116, v127, v16);
      uint64_t v98 = *(unsigned __int8 *)(v17 + 80);
      uint64_t v99 = (v98 + 40) & ~v98;
      unint64_t v100 = (v18 + v99 + 7) & 0xFFFFFFFFFFFFFFF8LL;
      uint64_t v101 = (void *)swift_allocObject(&unk_274320, v100 + 8, v98 | 7);
      uint64_t v102 = v131;
      v101[2] = v130;
      v101[3] = v102;
      v101[4] = v94;
      v59((void *)((char *)v101 + v99), v96, v16);
      *(void *)((char *)v101 + v100) = v117;
      uint64_t v103 = v119;
      uint64_t v104 = v118;
      uint64_t v105 = v120;
      (*(void (**)(char *, void, uint64_t))(v119 + 104))( v118,  enum case for QueuePosition.current(_:),  v120);
      swift_retain(v102);
      swift_retain(v94);
      uint64_t v106 = v132;
      dispatch thunk of MediaRemoteAPIProvider.getItemInfo(queue:outputDeviceUID:queuePosition:completion:)( v129,  0LL,  0LL,  v104,  sub_1B7ADC,  v101);
      swift_release(v106);
      swift_release(v101);
      (*(void (**)(char *, uint64_t))(v103 + 8))(v104, v105);
      uint64_t v107 = *(uint64_t (**)(uint64_t, uint64_t))(v17 + 8);
      uint64_t v108 = v97;
      return v107(v108, v16);
    }

    uint64_t v123 = v17;
    uint64_t v128 = v16;
    if (qword_283888 != -1) {
      swift_once(&qword_283888, sub_BFC5C);
    }
    uint64_t v82 = v132;
    uint64_t v83 = sub_6960(v132, (uint64_t)qword_2969C8);
    uint64_t v84 = v129;
    uint64_t v85 = v115;
    uint64_t v86 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v129 + 16))(v115, v83, v82);
    uint64_t v87 = (os_log_s *)Logger.logObject.getter(v86);
    os_log_type_t v88 = static os_log_type_t.info.getter(v87);
    if (os_log_type_enabled(v87, v88))
    {
      uint64_t v89 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
      uint64_t v90 = swift_slowAlloc(32LL, -1LL);
      uint64_t v138 = v90;
      *(_DWORD *)uint64_t v89 = 136446210;
      uint64_t v91 = static Insights.frameKit.getter();
      unint64_t v93 = v92;
      uint64_t v137 = sub_6978(v91, v92, &v138);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v137, &v138);
      swift_bridgeObjectRelease(v93);
      _os_log_impl( &dword_0,  v87,  v88,  "AmbiguousPlayFlow#execute %{public}s no flow received from controls for NLv4IntentOnly parse and device is offli ne, shuffling local library",  v89,  0xCu);
      swift_arrayDestroy(v90, 1LL, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v90, -1LL, -1LL);
      swift_slowDealloc(v89, -1LL, -1LL);
    }

    (*(void (**)(uint64_t, uint64_t))(v84 + 8))(v85, v82);
    sub_BC728();
    uint64_t v111 = (void *)static INPlayMediaIntent.shuffleLocalLibrary()();
    uint64_t v112 = (uint64_t)v127;
    uint64_t v113 = sub_111180((uint64_t)v127, v111);
    uint64_t v114 = v124;
    static ExecuteResponse.complete(next:)(v113);
    ((void (*)(char *))v130)(v114);

    swift_release(v113);
    (*(void (**)(char *, uint64_t))(v125 + 8))(v114, v126);
    return (*(uint64_t (**)(uint64_t, uint64_t))(v123 + 8))(v112, v128);
  }

uint64_t sub_1B3EB8(uint64_t a1, void (*a2)(char *), uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v37 = a5;
  uint64_t v39 = a2;
  uint64_t v40 = a3;
  uint64_t v38 = type metadata accessor for ExecuteResponse(0LL);
  uint64_t v6 = *(void *)(v38 - 8);
  __chkstk_darwin(v38);
  uint64_t v8 = (char *)&v37 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v9 = type metadata accessor for Logger(0LL);
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = __chkstk_darwin(v9);
  uint64_t v13 = (char *)&v37 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v11);
  uint64_t v15 = (char *)&v37 - v14;
  uint64_t v16 = sub_6C5C(&qword_284E30);
  __chkstk_darwin(v16);
  uint64_t v18 = (char *)&v37 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  sub_FF10(a1, (uint64_t)v18, &qword_284E30);
  LODWORD(vswift_weakDestroy(v0 + 16) = swift_getEnumCaseMultiPayload(v18, v16);
  sub_1F6CC((uint64_t)v18, &qword_284E30);
  if ((_DWORD)v16 == 1)
  {
    if (qword_283888 != -1) {
      swift_once(&qword_283888, sub_BFC5C);
    }
    uint64_t v19 = sub_6960(v9, (uint64_t)qword_2969C8);
    uint64_t v20 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 16))(v15, v19, v9);
    uint64_t v21 = (os_log_s *)Logger.logObject.getter(v20);
    os_log_type_t v22 = static os_log_type_t.info.getter(v21);
    if (os_log_type_enabled(v21, v22))
    {
      uint64_t v23 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)uint64_t v23 = 0;
      _os_log_impl( &dword_0,  v21,  v22,  "AmbiguousPlayFlow#execute no content in the music queue, looking to shuffle local library",  v23,  2u);
      swift_slowDealloc(v23, -1LL, -1LL);
    }

    (*(void (**)(char *, uint64_t))(v10 + 8))(v15, v9);
    sub_BC728();
    uint64_t v24 = (void *)static INPlayMediaIntent.shuffleLocalLibrary()();
    uint64_t v25 = sub_111180(v37, v24);

    static ExecuteResponse.complete(next:)(v25);
    v39(v8);
    swift_release(v25);
    return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v38);
  }

  else
  {
    if (qword_283888 != -1) {
      swift_once(&qword_283888, sub_BFC5C);
    }
    uint64_t v27 = sub_6960(v9, (uint64_t)qword_2969C8);
    uint64_t v28 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 16))(v13, v27, v9);
    uint64_t v29 = (os_log_s *)Logger.logObject.getter(v28);
    os_log_type_t v30 = static os_log_type_t.info.getter(v29);
    if (os_log_type_enabled(v29, v30))
    {
      uint64_t v31 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)uint64_t v31 = 0;
      _os_log_impl( &dword_0,  v29,  v30,  "AmbiguousPlayFlow#execute found content in the music queue, looking to resume it",  v31,  2u);
      swift_slowDealloc(v31, -1LL, -1LL);
    }

    (*(void (**)(char *, uint64_t))(v10 + 8))(v13, v9);
    uint64_t v32 = type metadata accessor for MediaRemoteAPIProvider(0LL);
    uint64_t v33 = static MediaRemoteAPIProvider.shared.getter(v32);
    if (qword_283960 != -1) {
      swift_once(&qword_283960, sub_1AF764);
    }
    uint64_t v34 = qword_28CB10;
    uint64_t v35 = swift_allocObject(&unk_274348, 32LL, 7LL);
    *(void *)(v35 + swift_weakDestroy(v0 + 16) = v39;
    uint64_t v36 = v40;
    *(void *)(v35 + 24) = v40;
    swift_retain(v36);
    dispatch thunk of MediaRemoteAPIProvider.sendCommandWithReply(command:queue:completion:)(0LL, v34, sub_1B7B34, v35);
    swift_release(v35);
    return swift_release(v33);
  }

uint64_t sub_1B4284(uint64_t a1, void (*a2)(char *))
{
  uint64_t v3 = type metadata accessor for ExecuteResponse(0LL);
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = __chkstk_darwin(v3);
  uint64_t v7 = (char *)&v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  static ExecuteResponse.complete()(v5);
  a2(v7);
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v7, v3);
}

uint64_t sub_1B4310(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  uint64_t v32 = a2;
  uint64_t v30 = a1;
  uint64_t v4 = sub_6C5C(&qword_285BD0);
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)&v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v7 = type metadata accessor for ExecuteResponse(0LL);
  uint64_t v33 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)&v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v10 = type metadata accessor for Logger(0LL);
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)&v28 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  if (qword_283888 != -1) {
    swift_once(&qword_283888, sub_BFC5C);
  }
  uint64_t v14 = sub_6960(v10, (uint64_t)qword_2969C8);
  uint64_t v15 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v11 + 16))(v13, v14, v10);
  uint64_t v16 = (os_log_s *)Logger.logObject.getter(v15);
  os_log_type_t v17 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v16, v17))
  {
    uint64_t v18 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
    uint64_t v29 = v7;
    uint64_t v19 = a3;
    uint64_t v20 = v18;
    *(_WORD *)uint64_t v18 = 0;
    _os_log_impl(&dword_0, v16, v17, "AmbiguousPlayFlow#nextFlow", v18, 2u);
    uint64_t v21 = v20;
    a3 = v19;
    uint64_t v7 = v29;
    swift_slowDealloc(v21, -1LL, -1LL);
  }

  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  uint64_t v22 = v31;
  uint64_t v23 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v31 + 392);
  uint64_t v24 = type metadata accessor for Input(0LL);
  uint64_t v25 = *(void *)(v24 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v25 + 16))(v6, v30, v24);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v25 + 56))(v6, 0LL, 1LL, v24);
  uint64_t v26 = v23(v6, v32, v22 + 352);
  sub_1F6CC((uint64_t)v6, &qword_285BD0);
  static ExecuteResponse.complete(next:)(v26);
  swift_release(v26);
  a3(v9);
  return (*(uint64_t (**)(char *, uint64_t))(v33 + 8))(v9, v7);
}

uint64_t sub_1B4588(uint64_t a1, uint64_t a2, void *a3, void (*a4)(void), uint64_t a5)
{
  uint64_t v6 = v5;
  uint64_t v43 = a4;
  uint64_t v44 = a5;
  uint64_t v41 = a1;
  uint64_t v42 = a2;
  uint64_t v8 = type metadata accessor for Input(0LL);
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = *(void *)(v9 + 64);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)v39 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v12 = type metadata accessor for Logger(0LL);
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = __chkstk_darwin(v12);
  uint64_t v16 = (char *)v39 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v14);
  uint64_t v18 = (char *)v39 - v17;
  if (*((_BYTE *)v6 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin17AmbiguousPlayFlow_state) == 1)
  {
    if (qword_283888 != -1) {
      swift_once(&qword_283888, sub_BFC5C);
    }
    uint64_t v19 = sub_6960(v12, (uint64_t)qword_2969C8);
    uint64_t v20 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v13 + 16))(v18, v19, v12);
    uint64_t v21 = (os_log_s *)Logger.logObject.getter(v20);
    os_log_type_t v22 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v21, v22))
    {
      uint64_t v23 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)uint64_t v23 = 0;
      _os_log_impl( &dword_0,  v21,  v22,  "AmbiguousPlayFlow#executeFlow has previously been rejected by controls, executing next flow",  v23,  2u);
      swift_slowDealloc(v23, -1LL, -1LL);
    }

    (*(void (**)(char *, uint64_t))(v13 + 8))(v18, v12);
    return sub_1B4310(v42, (uint64_t)a3, v43);
  }

  if (a3)
  {
    Swift::String v45 = a3;
    sub_BC728();
    if (CommonIntentSignals.handledBySiriForAirPlay()())
    {
      if (qword_283888 != -1) {
        swift_once(&qword_283888, sub_BFC5C);
      }
      uint64_t v24 = sub_6960(v12, (uint64_t)qword_2969C8);
      uint64_t v25 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v13 + 16))(v16, v24, v12);
      uint64_t v26 = (os_log_s *)Logger.logObject.getter(v25);
      os_log_type_t v27 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v26, v27))
      {
        uint64_t v28 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
        *(_WORD *)uint64_t v28 = 0;
        _os_log_impl( &dword_0,  v26,  v27,  "AmbiguousPlayFlow#executeFlow This is a SiriForAirPlay request, pushing the next play flow directly without ca lling ControlsFlowProvider",  v28,  2u);
        swift_slowDealloc(v28, -1LL, -1LL);
      }

      (*(void (**)(char *, uint64_t))(v13 + 8))(v16, v12);
      return sub_1B4310(v42, (uint64_t)a3, v43);
    }
  }

  uint64_t v30 = v6[5];
  uint64_t v40 = v6[6];
  v39[1] = sub_6EA8(v6 + 2, v30);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))( (char *)v39 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL),  v42,  v8);
  uint64_t v31 = *(unsigned __int8 *)(v9 + 80);
  uint64_t v32 = (v31 + 24) & ~v31;
  unint64_t v33 = (v10 + v32 + 7) & 0xFFFFFFFFFFFFFFF8LL;
  unint64_t v34 = (v33 + 15) & 0xFFFFFFFFFFFFFFF8LL;
  uint64_t v35 = swift_allocObject(&unk_274140, v34 + 16, v31 | 7);
  *(void *)(v35 + swift_weakDestroy(v0 + 16) = v6;
  (*(void (**)(uint64_t, char *, uint64_t))(v9 + 32))(v35 + v32, v11, v8);
  *(void *)(v35 + v33) = a3;
  uint64_t v36 = (void *)(v35 + v34);
  uint64_t v37 = v44;
  *uint64_t v36 = v43;
  v36[1] = v37;
  swift_retain(v6);
  id v38 = a3;
  swift_retain(v37);
  dispatch thunk of ControlsFlowProviding.makeAmbiguousPlayFlow(for:with:)(v41, sub_1B7738, v35, v30, v40);
  return swift_release(v35);
}

uint64_t sub_1B4908(uint64_t a1, void *a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v39 = a4;
  uint64_t v7 = type metadata accessor for Logger(0LL);
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v35 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  if (qword_283888 != -1) {
    swift_once(&qword_283888, sub_BFC5C);
  }
  uint64_t v11 = sub_6960(v7, (uint64_t)qword_2969C8);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, v11, v7);
  uint64_t v12 = swift_bridgeObjectRetain_n(a2, 2LL);
  uint64_t v13 = (os_log_s *)Logger.logObject.getter(v12);
  os_log_type_t v14 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v13, v14))
  {
    uint64_t v37 = a3;
    uint64_t v15 = swift_slowAlloc(12LL, -1LL);
    uint64_t v36 = v8;
    uint64_t v16 = (uint8_t *)v15;
    uint64_t v17 = swift_slowAlloc(32LL, -1LL);
    *(void *)&v41[0] = v17;
    *(_DWORD *)uint64_t v16 = 136315138;
    swift_bridgeObjectRetain(a2);
    uint64_t v40 = sub_6978(a1, (unint64_t)a2, (uint64_t *)v41);
    a3 = v37;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v40, v41);
    swift_bridgeObjectRelease_n(a2, 3LL);
    _os_log_impl(&dword_0, v13, v14, "AmbiguousPlayFlow#genericErrorDialog Reached logic... %s", v16, 0xCu);
    swift_arrayDestroy(v17, 1LL, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v17, -1LL, -1LL);
    swift_slowDealloc(v16, -1LL, -1LL);

    (*(void (**)(char *, uint64_t))(v36 + 8))(v10, v7);
  }

  else
  {

    swift_bridgeObjectRelease_n(a2, 2LL);
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  }

  uint64_t v18 = sub_6C5C(&qword_2844D0);
  uint64_t inited = swift_initStackObject(v18, v43);
  *(_OWORD *)(inited + swift_weakDestroy(v0 + 16) = xmmword_2160E0;
  uint64_t v20 = type metadata accessor for ErrorFilingProvider(0LL);
  *(void *)(inited + 3sub_6C3C(v0 + 2) = static ErrorFilingProvider.errorInfoForParamsKey.getter(v20);
  *(void *)(inited + 40) = v21;
  *(void *)(inited + 7sub_6C3C(v0 + 2) = &type metadata for String;
  *(void *)(inited + 48) = a1;
  *(void *)(inited + 56) = a2;
  uint64_t v22 = swift_bridgeObjectRetain(a2);
  *(void *)(inited + 80) = static ErrorFilingProvider.errorInfoForTitleKey.getter(v22);
  *(void *)(inited + 88) = v23;
  *(void *)&v41[0] = 0LL;
  *((void *)&v41[0] + 1) = 0xE000000000000000LL;
  _StringGuts.grow(_:)(59LL);
  v24._object = (void *)0x8000000000222D50LL;
  v24._countAndFlagsBits = 0xD000000000000039LL;
  String.append(_:)(v24);
  v25._countAndFlagsBits = a1;
  v25._object = a2;
  String.append(_:)(v25);
  __int128 v26 = v41[0];
  *(void *)(inited + 120) = &type metadata for String;
  *(_OWORD *)(inited + 96) = v26;
  unint64_t v27 = sub_74D54(inited);
  uint64_t v28 = v38;
  uint64_t v29 = *(void *)(v38 + 96);
  uint64_t v30 = (void *)swift_allocObject(&unk_274118, 56LL, 7LL);
  uint64_t v37 = &v35;
  v30[2] = v28;
  v30[3] = a1;
  v30[4] = a2;
  v30[5] = a3;
  uint64_t v31 = v39;
  v30[6] = v39;
  uint64_t v32 = *(void *)(v29 + 16);
  uint64_t v33 = *(void *)(v29 + 24);
  uint64_t v42 = 0LL;
  memset(v41, 0, sizeof(v41));
  __chkstk_darwin(v30);
  *(&v35 - 10) = v32;
  *(&v35 - 9) = v33;
  strcpy((char *)&v35 - 64, "GenericError");
  *((_BYTE *)&v35 - 51) = 0;
  *((_WORD *)&v35 - 25) = -5120;
  swift_bridgeObjectRetain(a2);
  swift_retain(v28);
  swift_retain(v31);
  sub_200268( (uint64_t)"catServiceExecute",  17LL,  2u,  (uint64_t)sub_1B7664,  (uint64_t)v30,  "CatService#execute family=%{signpost.telemetry:string1,public}@ id=%{signpost.telemetry:string2,public}@ enableTelemetry=YES ",  125LL,  2,  v32,  v33,  0x45636972656E6547LL,  0xEC000000726F7272LL,  (void (*)(uint64_t (*)(), uint64_t))sub_3CAE4,  (uint64_t)(&v35 - 12));
  sub_1F6CC((uint64_t)v41, &qword_283FE8);
  swift_bridgeObjectRelease(v27);
  return swift_release(v30);
}

uint64_t sub_1B4D28(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v8 = type metadata accessor for Logger(0LL);
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v22[-1] - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  if (qword_283888 != -1) {
    swift_once(&qword_283888, sub_BFC5C);
  }
  uint64_t v12 = sub_6960(v8, (uint64_t)qword_2969C8);
  uint64_t v13 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, v12, v8);
  os_log_type_t v14 = (os_log_s *)Logger.logObject.getter(v13);
  os_log_type_t v15 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v14, v15))
  {
    uint64_t v16 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
    *(_WORD *)uint64_t v16 = 0;
    _os_log_impl(&dword_0, v14, v15, "AmbiguousPlayFlow#unsupportedOnPlatformErrorResponse Reached logic...", v16, 2u);
    swift_slowDealloc(v16, -1LL, -1LL);
  }

  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  unint64_t v17 = sub_74D54((uint64_t)_swiftEmptyArrayStorage);
  v22[3] = sub_BC728();
  v22[4] = &off_272BD0;
  v22[0] = a1;
  uint64_t v18 = (void *)swift_allocObject(&unk_2740F0, 48LL, 7LL);
  v18[2] = v4;
  v18[3] = a1;
  v18[4] = a2;
  v18[5] = a3;
  id v19 = a1;
  swift_retain(v4);
  swift_retain(a3);
  sub_462CC(v17, (uint64_t)v22, (uint64_t)sub_1B75E4, (uint64_t)v18);
  swift_release(v18);
  swift_bridgeObjectRelease(v17);
  return sub_1F6CC((uint64_t)v22, &qword_283FE8);
}

uint64_t sub_1B4F14(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v8 = type metadata accessor for Logger(0LL);
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v25[-1] - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  if (qword_283888 != -1) {
    swift_once(&qword_283888, sub_BFC5C);
  }
  uint64_t v12 = sub_6960(v8, (uint64_t)qword_2969C8);
  uint64_t v13 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, v12, v8);
  os_log_type_t v14 = (os_log_s *)Logger.logObject.getter(v13);
  os_log_type_t v15 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v14, v15))
  {
    uint64_t v16 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
    *(_WORD *)uint64_t v16 = 0;
    _os_log_impl(&dword_0, v14, v15, "AmbiguousPlayFlow#noSpeakerFoundErrorResponse Reached logic...", v16, 2u);
    swift_slowDealloc(v16, -1LL, -1LL);
  }

  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  uint64_t v17 = *(void *)(v4 + 96);
  v25[3] = sub_BC728();
  v25[4] = &off_272BD0;
  v25[0] = a1;
  uint64_t v18 = (void *)swift_allocObject(&unk_2740C8, 48LL, 7LL);
  v18[2] = v4;
  v18[3] = a1;
  v18[4] = a2;
  v18[5] = a3;
  uint64_t v19 = *(void *)(v17 + 40);
  uint64_t v20 = *(void *)(v17 + 48);
  id v21 = a1;
  swift_retain(v4);
  swift_retain(a3);
  unint64_t v22 = sub_74D54((uint64_t)_swiftEmptyArrayStorage);
  __chkstk_darwin(v22);
  *(&v24 - 10) = v19;
  *(&v24 - 9) = v20;
  strcpy((char *)&v24 - 64, "NoSpeakerFound");
  *((_BYTE *)&v24 - 49) = -18;
  sub_200268( (uint64_t)"catServiceExecute",  17LL,  2u,  (uint64_t)sub_1B75C4,  (uint64_t)v18,  "CatService#execute family=%{signpost.telemetry:string1,public}@ id=%{signpost.telemetry:string2,public}@ enableTelemetry=YES ",  125LL,  2,  v19,  v20,  0x656B616570536F4ELL,  0xEE00646E756F4672LL,  (void (*)(uint64_t (*)(), uint64_t))sub_3CAE4,  (uint64_t)(&v24 - 12));
  swift_release(v18);
  swift_bridgeObjectRelease(v22);
  return sub_1F6CC((uint64_t)v25, &qword_283FE8);
}

uint64_t sub_1B5198(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v8 = type metadata accessor for Logger(0LL);
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v25[-1] - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  if (qword_283888 != -1) {
    swift_once(&qword_283888, sub_BFC5C);
  }
  uint64_t v12 = sub_6960(v8, (uint64_t)qword_2969C8);
  uint64_t v13 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, v12, v8);
  os_log_type_t v14 = (os_log_s *)Logger.logObject.getter(v13);
  os_log_type_t v15 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v14, v15))
  {
    uint64_t v16 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
    *(_WORD *)uint64_t v16 = 0;
    _os_log_impl(&dword_0, v14, v15, "AmbiguousPlayFlow#noSpecificSpeakerErrorResponse Reached logic...", v16, 2u);
    swift_slowDealloc(v16, -1LL, -1LL);
  }

  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  uint64_t v17 = *(void *)(v4 + 96);
  v25[3] = sub_BC728();
  v25[4] = &off_272BD0;
  v25[0] = a1;
  uint64_t v18 = (void *)swift_allocObject(&unk_2740A0, 48LL, 7LL);
  v18[2] = v4;
  v18[3] = a1;
  v18[4] = a2;
  v18[5] = a3;
  uint64_t v19 = *(void *)(v17 + 40);
  uint64_t v20 = *(void *)(v17 + 48);
  id v21 = a1;
  swift_retain(v4);
  swift_retain(a3);
  unint64_t v22 = sub_74D54((uint64_t)_swiftEmptyArrayStorage);
  __chkstk_darwin(v22);
  *(&v24 - 10) = v19;
  *(&v24 - 9) = v20;
  *(&v24 - 8) = 0xD000000000000011LL;
  *(&v24 - sub_6C3C(v0 + 7) = 0x80000000002200F0LL;
  sub_200268( (uint64_t)"catServiceExecute",  17LL,  2u,  (uint64_t)sub_1B75A4,  (uint64_t)v18,  "CatService#execute family=%{signpost.telemetry:string1,public}@ id=%{signpost.telemetry:string2,public}@ enableTelemetry=YES ",  125LL,  2,  v19,  v20,  0xD000000000000011LL,  0x80000000002200F0LL,  (void (*)(uint64_t (*)(), uint64_t))sub_3CAE4,  (uint64_t)(&v24 - 12));
  swift_release(v18);
  swift_bridgeObjectRelease(v22);
  return sub_1F6CC((uint64_t)v25, &qword_283FE8);
}

uint64_t sub_1B5414(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v7 = v6;
  uint64_t v47 = a6;
  uint64_t v48 = a4;
  uint64_t v44 = a3;
  uint64_t v45 = a5;
  uint64_t v46 = a2;
  uint64_t v43 = a1;
  uint64_t v8 = sub_6C5C((uint64_t *)&unk_286BB0);
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = *(void *)(v9 + 64);
  __chkstk_darwin(v8);
  uint64_t v11 = type metadata accessor for Logger(0LL);
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  os_log_type_t v14 = (char *)v40 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  if (qword_283888 != -1) {
    swift_once(&qword_283888, sub_BFC5C);
  }
  uint64_t v15 = sub_6960(v11, (uint64_t)qword_2969C8);
  uint64_t v16 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v12 + 16))(v14, v15, v11);
  uint64_t v17 = (os_log_s *)Logger.logObject.getter(v16);
  os_log_type_t v18 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v17, v18))
  {
    uint64_t v19 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
    *(_WORD *)uint64_t v19 = 0;
    _os_log_impl(&dword_0, v17, v18, "AmbiguousPlayFlow#handleErrorDialogResult Handling dialog Result...", v19, 2u);
    swift_slowDealloc(v19, -1LL, -1LL);
  }

  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  uint64_t v20 = v7[23];
  uint64_t v41 = v7[22];
  uint64_t v42 = v20;
  v40[1] = sub_6EA8(v7 + 19, v41);
  v40[0] = static BundleIdentifiers.sentinelBundleIdentifier.getter();
  uint64_t v22 = v21;
  uint64_t v50 = 0LL;
  memset(v49, 0, sizeof(v49));
  sub_FF10(v43, (uint64_t)v40 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL), (uint64_t *)&unk_286BB0);
  uint64_t v23 = *(unsigned __int8 *)(v9 + 80);
  uint64_t v24 = (v23 + 16) & ~v23;
  unint64_t v25 = (v10 + v24 + 7) & 0xFFFFFFFFFFFFFFF8LL;
  unint64_t v26 = (v25 + 23) & 0xFFFFFFFFFFFFFFF8LL;
  unint64_t v27 = (v26 + 15) & 0xFFFFFFFFFFFFFFF8LL;
  uint64_t v28 = v7;
  uint64_t v29 = (char *)v40 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  unint64_t v30 = (v27 + 15) & 0xFFFFFFFFFFFFFFF8LL;
  uint64_t v31 = swift_allocObject(&unk_274078, v30 + 16, v23 | 7);
  sub_45F6C((uint64_t)v29, v31 + v24, (uint64_t *)&unk_286BB0);
  uint64_t v32 = (void *)(v31 + v25);
  uint64_t v33 = v45;
  uint64_t v34 = v48;
  *uint64_t v32 = v44;
  v32[1] = v34;
  *(void *)(v31 + v26) = v28;
  uint64_t v35 = v46;
  uint64_t v36 = v47;
  *(void *)(v31 + v2sub_6C3C(v0 + 7) = v46;
  uint64_t v37 = (void *)(v31 + v30);
  *uint64_t v37 = v33;
  v37[1] = v36;
  id v38 = v35;
  swift_retain(v36);
  swift_bridgeObjectRetain(v34);
  swift_retain(v28);
  dispatch thunk of AppNameResolving.localizedAppName(for:helper:completion:)( v40[0],  v22,  v49,  sub_1B7500,  v31,  v41,  v42);
  swift_bridgeObjectRelease(v22);
  swift_release(v31);
  return sub_1F6CC((uint64_t)v49, &qword_2860C0);
}

uint64_t sub_1B56C4( uint64_t a1, uint64_t a2, void (*a3)(char *, uint64_t *, uint64_t), uint64_t a4, uint64_t a5, void *a6, uint64_t a7, void (*a8)(char *), uint64_t a9)
{
  uint64_t v161 = a8;
  uint64_t v157 = a7;
  os_log_type_t v166 = a6;
  uint64_t v156 = a5;
  uint64_t v154 = a4;
  uint64_t v151 = a3;
  uint64_t v164 = a1;
  uint64_t v159 = a9;
  uint64_t v10 = type metadata accessor for ExecuteResponse(0LL);
  uint64_t v162 = *(void *)(v10 - 8);
  uint64_t v163 = v10;
  __chkstk_darwin(v10);
  uint64_t v160 = (char *)&v140 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v158 = type metadata accessor for Logger(0LL);
  uint64_t v165 = *(void *)(v158 - 8);
  uint64_t v12 = __chkstk_darwin(v158);
  uint64_t v149 = (char *)&v140 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v12);
  uint64_t v148 = (char *)&v140 - v14;
  uint64_t v15 = sub_6C5C(&qword_2845A0);
  uint64_t v16 = __chkstk_darwin(v15);
  uint64_t v147 = (char *)&v140 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v16);
  uint64_t v146 = (char *)&v140 - v18;
  uint64_t v19 = sub_6C5C((uint64_t *)&unk_286BD0);
  uint64_t v20 = __chkstk_darwin(v19);
  uint64_t v145 = (char *)&v140 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v20);
  uint64_t v144 = (char *)&v140 - v22;
  uint64_t v23 = sub_6C5C(&qword_2845A8);
  uint64_t v24 = __chkstk_darwin(v23);
  uint64_t v143 = (char *)&v140 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v24);
  unint64_t v27 = (char *)&v140 - v26;
  os_log_type_t v155 = (void *)type metadata accessor for AdditionalMetricsDescription.SourceFunction(0LL);
  uint64_t v153 = (void *)*(v155 - 1);
  __chkstk_darwin(v155);
  uint64_t v29 = (char *)&v140 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v152 = type metadata accessor for AdditionalMetricsDescription.ModuleName(0LL);
  uint64_t v150 = *(void *)(v152 - 8);
  __chkstk_darwin(v152);
  uint64_t v31 = (char *)&v140 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v32 = sub_6C5C(&qword_289340);
  uint64_t v33 = __chkstk_darwin(v32);
  uint64_t v142 = (char *)&v140 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v33);
  uint64_t v36 = (char *)&v140 - v35;
  uint64_t v37 = sub_6C5C((uint64_t *)&unk_286BB0);
  __chkstk_darwin(v37);
  uint64_t v39 = (uint64_t *)((char *)&v140 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  type metadata accessor for App(0LL);
  swift_bridgeObjectRetain(a2);
  uint64_t v40 = App.__allocating_init(appIdentifier:)(v164, a2);
  sub_FF10((uint64_t)v151, (uint64_t)v39, (uint64_t *)&unk_286BB0);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v39, v37);
  uint64_t v164 = v40;
  if (EnumCaseMultiPayload == 1)
  {
    uint64_t v42 = *v39;
    uint64_t v170 = v154;
    uint64_t v171 = v156;
    swift_bridgeObjectRetain(v156);
    v43._countAndFlagsBits = 95LL;
    v43._object = (void *)0xE100000000000000LL;
    String.append(_:)(v43);
    uint64_t v45 = v170;
    uint64_t v44 = v171;
    uint64_t v156 = v42;
    swift_getErrorValue(v42, v175, v174);
    uint64_t v170 = Error.localizedDescription.getter(v174[1], v174[2]);
    uint64_t v171 = v46;
    uint64_t v47 = String.init<A>(_:)( &v170,  &type metadata for String,  &protocol witness table for String,  &protocol witness table for String);
    uint64_t v49 = v48;
    uint64_t v170 = v45;
    uint64_t v171 = v44;
    swift_bridgeObjectRetain(v44);
    v50._countAndFlagsBits = v47;
    v50._object = v49;
    String.append(_:)(v50);
    swift_bridgeObjectRelease(v44);
    swift_bridgeObjectRelease(v49);
    uint64_t v51 = v170;
    uint64_t v52 = v171;
    uint64_t v53 = v150;
    uint64_t v54 = v152;
    (*(void (**)(char *, void, uint64_t))(v150 + 104))( v31,  enum case for AdditionalMetricsDescription.ModuleName.apf(_:),  v152);
    uint64_t v55 = v153;
    os_log_type_t v56 = v155;
    ((void (*)(char *, void, void *))v153[13])( v29,  enum case for AdditionalMetricsDescription.SourceFunction.handleDlgRes(_:),  v155);
    uint64_t v154 = static AdditionalMetricsDescription.encodeInfo(module:source:statusReason:extraInfo:)( v31,  v29,  v51,  v52,  0LL,  1LL);
    uint64_t v58 = v57;
    swift_bridgeObjectRelease(v52);
    ((void (*)(char *, void *))v55[1])(v29, v56);
    (*(void (**)(char *, uint64_t))(v53 + 8))(v31, v54);
    sub_157C4((uint64_t)(v166 + 39), (uint64_t)&v170);
    uint64_t v59 = v172;
    os_log_type_t v155 = v173;
    os_log_type_t v166 = sub_6EA8(&v170, v172);
    uint64_t v60 = enum case for ActivityType.failed(_:);
    uint64_t v61 = type metadata accessor for ActivityType(0LL);
    uint64_t v62 = *(void *)(v61 - 8);
    uint64_t v63 = (uint64_t)v143;
    (*(void (**)(char *, uint64_t, uint64_t))(v62 + 104))(v143, v60, v61);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v62 + 56))(v63, 0LL, 1LL, v61);
    uint64_t v64 = type metadata accessor for TemplatingResult(0LL);
    uint64_t v65 = (uint64_t)v145;
    (*(void (**)(void))(*(void *)(v64 - 8) + 56LL))();
    uint64_t v66 = enum case for SiriKitReliabilityCodes.renderingError(_:);
    uint64_t v67 = type metadata accessor for SiriKitReliabilityCodes(0LL);
    uint64_t v68 = *(void *)(v67 - 8);
    uint64_t v69 = (uint64_t)v147;
    (*(void (**)(char *, uint64_t, uint64_t))(v68 + 104))(v147, v66, v67);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v68 + 56))(v69, 0LL, 1LL, v67);
    uint64_t v70 = v157;
    uint64_t v71 = v164;
    if (v157)
    {
      uint64_t v72 = swift_retain(v164);
      uint64_t v73 = INPlayMediaIntent.firstMediaItemType()(v72);
    }

    else
    {
      swift_retain(v164);
      uint64_t v73 = 0LL;
    }

    uint64_t v104 = v158;
    dispatch thunk of SiriKitTaskLoggingProviding.submitMetric(app:intent:activityType:templateResult:statusReason:description:mediaItemType:)( v71,  v70,  v63,  v65,  v69,  v154,  v58,  v73,  v70 == 0,  v59,  v155);
    swift_release(v71);
    swift_bridgeObjectRelease(v58);
    sub_1F6CC(v69, &qword_2845A0);
    sub_1F6CC(v65, (uint64_t *)&unk_286BD0);
    sub_1F6CC(v63, &qword_2845A8);
    sub_6C3C(&v170);
    if (qword_283888 != -1) {
      swift_once(&qword_283888, sub_BFC5C);
    }
    uint64_t v105 = sub_6960(v104, (uint64_t)qword_2969C8);
    uint64_t v106 = v165;
    uint64_t v107 = v149;
    (*(void (**)(char *, uint64_t, uint64_t))(v165 + 16))(v149, v105, v104);
    uint64_t v108 = v156;
    swift_errorRetain(v156);
    uint64_t v109 = swift_errorRetain(v108);
    uint64_t v110 = (os_log_s *)Logger.logObject.getter(v109);
    os_log_type_t v111 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v110, v111))
    {
      uint64_t v112 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
      uint64_t v113 = swift_slowAlloc(32LL, -1LL);
      uint64_t v169 = v113;
      *(_DWORD *)uint64_t v112 = 136315138;
      swift_getErrorValue(v108, v168, v167);
      uint64_t v170 = Error.localizedDescription.getter(v167[1], v167[2]);
      uint64_t v171 = v114;
      uint64_t v115 = String.init<A>(_:)( &v170,  &type metadata for String,  &protocol witness table for String,  &protocol witness table for String);
      unint64_t v117 = v116;
      uint64_t v170 = sub_6978(v115, v116, &v169);
      uint64_t v71 = v164;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v170, &v171);
      swift_bridgeObjectRelease(v117);
      swift_errorRelease(v108);
      swift_errorRelease(v108);
      _os_log_impl( &dword_0,  v110,  v111,  "AmbiguousPlayFlow#handleErrorDialogResult Could not properly create dialog %s, silently failing...",  v112,  0xCu);
      swift_arrayDestroy(v113, 1LL, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v113, -1LL, -1LL);
      swift_slowDealloc(v112, -1LL, -1LL);

      uint64_t v118 = (*(uint64_t (**)(char *, uint64_t))(v165 + 8))(v149, v104);
    }

    else
    {
      swift_errorRelease(v108);
      swift_errorRelease(v108);

      uint64_t v118 = (*(uint64_t (**)(char *, uint64_t))(v106 + 8))(v107, v104);
    }

    uint64_t v119 = v160;
    static ExecuteResponse.complete()(v118);
    v161(v119);
    swift_errorRelease(v108);
    swift_release(v71);
    return (*(uint64_t (**)(char *, uint64_t))(v162 + 8))(v119, v163);
  }

  else
  {
    uint64_t v141 = v32;
    uint64_t v74 = *(int *)(v32 + 48);
    uint64_t v75 = type metadata accessor for TemplatingResult(0LL);
    uint64_t v149 = *(char **)(v75 - 8);
    uint64_t v151 = (void (*)(char *, uint64_t *, uint64_t))*((void *)v149 + 4);
    v151(v36, v39, v75);
    NSString v76 = *(void **)((char *)v39 + v74);
    *(void *)&v36[v74] = v76;
    uint64_t v77 = v150;
    uint64_t v78 = v152;
    (*(void (**)(char *, void, uint64_t))(v150 + 104))( v31,  enum case for AdditionalMetricsDescription.ModuleName.apf(_:),  v152);
    unsigned __int8 v79 = v153;
    uint64_t v80 = v155;
    ((void (*)(char *, void, void *))v153[13])( v29,  enum case for AdditionalMetricsDescription.SourceFunction.handleDlgRes(_:),  v155);
    id v81 = v76;
    uint64_t v154 = static AdditionalMetricsDescription.encodeInfo(module:source:statusReason:extraInfo:)( v31,  v29,  v154,  v156,  0LL,  1LL);
    uint64_t v156 = v82;
    ((void (*)(char *, void *))v79[1])(v29, v80);
    (*(void (**)(char *, uint64_t))(v77 + 8))(v31, v78);
    sub_157C4((uint64_t)(v166 + 39), (uint64_t)&v170);
    uint64_t v83 = v172;
    uint64_t v153 = v173;
    os_log_type_t v155 = sub_6EA8(&v170, v172);
    uint64_t v84 = enum case for ActivityType.failed(_:);
    uint64_t v85 = type metadata accessor for ActivityType(0LL);
    uint64_t v86 = *(void *)(v85 - 8);
    (*(void (**)(char *, uint64_t, uint64_t))(v86 + 104))(v27, v84, v85);
    uint64_t v87 = *(void (**)(char *, void, uint64_t, uint64_t))(v86 + 56);
    os_log_type_t v88 = v27;
    v87(v27, 0LL, 1LL, v85);
    uint64_t v89 = *(int *)(v141 + 48);
    uint64_t v90 = v149;
    uint64_t v91 = v142;
    (*((void (**)(char *, char *, uint64_t))v149 + 2))(v142, v36, v75);
    uint64_t v92 = v164;
    swift_retain(v164);

    *(void *)&v91[v89] = v81;
    unint64_t v93 = v144;
    v151(v144, (uint64_t *)v91, v75);
    (*((void (**)(char *, void, uint64_t, uint64_t))v90 + 7))(v93, 0LL, 1LL, v75);
    uint64_t v94 = enum case for SiriKitReliabilityCodes.genericError(_:);
    uint64_t v95 = type metadata accessor for SiriKitReliabilityCodes(0LL);
    uint64_t v96 = *(void *)(v95 - 8);
    uint64_t v97 = v146;
    (*(void (**)(char *, uint64_t, uint64_t))(v96 + 104))(v146, v94, v95);
    uint64_t v98 = (*(uint64_t (**)(char *, void, uint64_t, uint64_t))(v96 + 56))(v97, 0LL, 1LL, v95);
    uint64_t v99 = v157;
    uint64_t v100 = (uint64_t)v36;
    uint64_t v101 = (uint64_t)v97;
    uint64_t v102 = (uint64_t)v93;
    if (v157) {
      uint64_t v103 = INPlayMediaIntent.firstMediaItemType()(v98);
    }
    else {
      uint64_t v103 = 0LL;
    }
    uint64_t v121 = v158;
    uint64_t v122 = v165;
    uint64_t v123 = v148;
    uint64_t v139 = v83;
    uint64_t v124 = (uint64_t)v88;
    uint64_t v125 = v88;
    uint64_t v126 = v156;
    dispatch thunk of SiriKitTaskLoggingProviding.submitMetric(app:intent:activityType:templateResult:statusReason:description:mediaItemType:)( v92,  v99,  v125,  v102,  v101,  v154,  v156,  v103,  v99 == 0,  v139,  v153);
    swift_release(v92);
    swift_bridgeObjectRelease(v126);
    sub_1F6CC(v101, &qword_2845A0);
    sub_1F6CC(v102, (uint64_t *)&unk_286BD0);
    sub_1F6CC(v124, &qword_2845A8);
    sub_6C3C(&v170);
    uint64_t v127 = v166;
    uint64_t v128 = (void *)dispatch thunk of ViewFactory.makeCancellationView(cancelTemplate:snippets:canUseServerTTS:)( v100,  _swiftEmptyArrayStorage,  0LL);
    uint64_t v129 = v127 + 14;
    uint64_t v130 = v127[17];
    uint64_t v131 = v127[18];
    sub_6EA8(v129, v130);
    dispatch thunk of AceServiceInvoker.submitAndForget(_:)(v128, v130, v131);
    if (qword_283888 != -1) {
      swift_once(&qword_283888, sub_BFC5C);
    }
    uint64_t v132 = sub_6960(v121, (uint64_t)qword_2969C8);
    uint64_t v133 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v122 + 16))(v123, v132, v121);
    uint64_t v134 = (os_log_s *)Logger.logObject.getter(v133);
    os_log_type_t v135 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v134, v135))
    {
      uint64_t v136 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)uint64_t v136 = 0;
      _os_log_impl( &dword_0,  v134,  v135,  "AmbiguousPlayFlow#handleErrorDialogResult Dialog successfully generated, responding and exiting...",  v136,  2u);
      swift_slowDealloc(v136, -1LL, -1LL);
    }

    uint64_t v137 = (*(uint64_t (**)(char *, uint64_t))(v122 + 8))(v123, v121);
    uint64_t v138 = v160;
    static ExecuteResponse.complete()(v137);
    v161(v138);
    swift_release(v92);

    (*(void (**)(char *, uint64_t))(v162 + 8))(v138, v163);
    return sub_1F6CC(v100, &qword_289340);
  }

uint64_t sub_1B6458()
{
  return type metadata accessor for AmbiguousPlayFlow(0LL);
}

void sub_1B6460(uint64_t a1)
{
  v4[0] = "(";
  v4[1] = "(";
  v4[2] = (char *)&value witness table for Builtin.NativeObject + 64;
  uint64_t v4[3] = (char *)&value witness table for Builtin.NativeObject + 64;
  v4[4] = "(";
  v4[5] = "(";
  v4[6] = "(";
  v4[7] = "(";
  v4[8] = "(";
  v4[9] = "(";
  v4[10] = "(";
  v4[11] = (char *)&value witness table for () + 64;
  sub_92714(319LL);
  if (v3 <= 0x3F)
  {
    v4[12] = *(void *)(v2 - 8) + 64LL;
    v4[13] = &unk_21A700;
    v4[14] = &unk_21A718;
    v4[15] = &unk_21A730;
    swift_updateClassMetadata2(a1, 256LL, 16LL, v4, a1 + 80);
  }

uint64_t storeEnumTagSinglePayload for FlowState(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    LODWORD(v4) = 1;
  }
  else {
    LODWORD(v4) = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v4 = v4;
  }
  else {
    uint64_t v4 = 0LL;
  }
  if (a2 <= 0xFE) {
    return ((uint64_t (*)(void))((char *)&loc_1B6568 + 4 * byte_21A63B[v4]))();
  }
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1B659C + 4 * byte_21A636[v4]))();
}

uint64_t sub_1B659C(uint64_t result)
{
  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1B65A4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2) {
    JUMPOUT(0x1B65ACLL);
  }
  return result;
}

uint64_t sub_1B65B8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2) {
    JUMPOUT(0x1B65C0LL);
  }
  *(_BYTE *)uint64_t result = a2 + 1;
  return result;
}

uint64_t sub_1B65C4(uint64_t result)
{
  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1B65CC(uint64_t result)
{
  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for FlowState()
{
  return &type metadata for FlowState;
}

unint64_t sub_1B65EC()
{
  unint64_t result = qword_28CCF0[0];
  if (!qword_28CCF0[0])
  {
    unint64_t result = swift_getWitnessTable(&unk_21A794, &type metadata for FlowState);
    atomic_store(result, qword_28CCF0);
  }

  return result;
}

uint64_t sub_1B6630(uint64_t a1)
{
  return sub_1AFB58(a1) & 1;
}

uint64_t sub_1B6654( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(void), uint64_t a6, void *a7)
{
  uint64_t v81 = a6;
  uint64_t v80 = a5;
  uint64_t v79 = type metadata accessor for OSSignpostID(0LL);
  uint64_t v78 = *(void *)(v79 - 8);
  uint64_t v11 = *(void *)(v78 + 64);
  uint64_t v12 = __chkstk_darwin(v79);
  NSString v76 = (char *)&v73 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v12);
  uint64_t v77 = (char *)&v73 - v13;
  uint64_t v14 = type metadata accessor for Logger(0LL);
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = __chkstk_darwin(v14);
  uint64_t v18 = (char *)&v73 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v16);
  uint64_t v20 = (char *)&v73 - v19;
  uint64_t v21 = type metadata accessor for DeviceResolutionProvider(0LL);
  __chkstk_darwin(v21);
  uint64_t v23 = (char *)&v73 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v83 = v24;
  uint64_t v25 = *(void (**)(void))(v24 + 16);
  uint64_t v82 = v23;
  uint64_t v84 = v26;
  v25();
  uint64_t v27 = type metadata accessor for EncryptionProvider(0LL);
  v91[3] = v27;
  v91[4] = &protocol witness table for EncryptionProvider;
  uint64_t v28 = sub_10974(v91);
  (*(void (**)(void *, uint64_t, uint64_t))(*(void *)(v27 - 8) + 16LL))(v28, a3, v27);
  v90[3] = type metadata accessor for SharedContextProvider(0LL);
  v90[4] = &protocol witness table for SharedContextProvider;
  v90[0] = a4;
  swift_retain(a4);
  sub_19928(a1, (uint64_t)&v87);
  if (v88)
  {
    sub_FF54(&v87, (uint64_t)v89);
    if (qword_283888 != -1) {
      swift_once(&qword_283888, sub_BFC5C);
    }
    uint64_t v29 = sub_6960(v14, (uint64_t)qword_2969C8);
    uint64_t v30 = v15;
    (*(void (**)(char *, uint64_t, uint64_t))(v15 + 16))(v20, v29, v14);
    id v31 = a7;
    uint64_t v32 = (os_log_s *)Logger.logObject.getter(v31);
    os_log_type_t v33 = static os_log_type_t.default.getter();
    BOOL v34 = os_log_type_enabled(v32, v33);
    id v75 = v31;
    if (v34)
    {
      uint64_t v73 = v14;
      uint64_t v35 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
      uint64_t v36 = swift_slowAlloc(32LL, -1LL);
      uint64_t v74 = v30;
      uint64_t v37 = v36;
      *(void *)&__int128 v87 = v36;
      *(_DWORD *)uint64_t v35 = 136446210;
      uint64_t v38 = INPlayMediaIntent.slimDescription.getter();
      unint64_t v40 = v39;
      *(void *)&v86[0] = sub_6978(v38, v39, (uint64_t *)&v87);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v86, (char *)v86 + 8);

      swift_bridgeObjectRelease(v40);
      _os_log_impl( &dword_0,  v32,  v33,  "INPlayMediaIntent#performRouteResolution This is a WHA request... Running for intent INPlayMediaIntent: %{public}s",  v35,  0xCu);
      swift_arrayDestroy(v37, 1LL, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v37, -1LL, -1LL);
      swift_slowDealloc(v35, -1LL, -1LL);

      (*(void (**)(char *, uint64_t))(v74 + 8))(v20, v73);
    }

    else
    {

      (*(void (**)(char *, uint64_t))(v15 + 8))(v20, v14);
    }

    uint64_t v51 = swift_allocObject(&unk_274258, 32LL, 7LL);
    *(void *)(v51 + swift_weakDestroy(v0 + 16) = v80;
    uint64_t v52 = v81;
    *(void *)(v51 + 24) = v81;
    uint64_t v53 = qword_2838D0;
    swift_retain(v52);
    if (v53 != -1) {
      swift_once(&qword_2838D0, sub_1362AC);
    }
    id v54 = (id)qword_296AA0;
    uint64_t v55 = v77;
    OSSignpostID.init(log:)(v54);
    uint64_t v56 = v78;
    uint64_t v57 = v76;
    uint64_t v58 = v79;
    (*(void (**)(char *, char *, uint64_t))(v78 + 16))(v76, v55, v79);
    uint64_t v59 = *(unsigned __int8 *)(v56 + 80);
    uint64_t v60 = (v59 + 33) & ~v59;
    unint64_t v61 = (v11 + v60 + 7) & 0xFFFFFFFFFFFFFFF8LL;
    uint64_t v62 = swift_allocObject(&unk_274280, v61 + 16, v59 | 7);
    *(void *)(v62 + swift_weakDestroy(v0 + 16) = "resolveWHADestinationDevices";
    *(void *)(v62 + 24) = 28LL;
    *(_BYTE *)(v62 + 3sub_6C3C(v0 + 2) = 2;
    (*(void (**)(uint64_t, char *, uint64_t))(v56 + 32))(v62 + v60, v57, v58);
    uint64_t v63 = (uint64_t (**)(unsigned __int8 *))(v62 + v61);
    *uint64_t v63 = sub_1B79A0;
    v63[1] = (uint64_t (*)(unsigned __int8 *))v51;
    uint64_t v64 = swift_retain(v51);
    uint64_t v65 = static os_signpost_type_t.begin.getter(v64);
    os_signpost(_:dso:log:name:signpostID:_:_:)( v65,  &dword_0,  qword_296AA0,  "resolveWHADestinationDevices",  28LL,  2LL,  v55,  " enableTelemetry=YES ",  21LL,  2,  _swiftEmptyArrayStorage);
    uint64_t v66 = swift_allocObject(&unk_2742A8, 32LL, 7LL);
    *(void *)(v66 + swift_weakDestroy(v0 + 16) = sub_33DD8;
    *(void *)(v66 + 24) = v62;
    uint64_t v67 = swift_allocObject(&unk_2742D0, 32LL, 7LL);
    *(void *)(v67 + swift_weakDestroy(v0 + 16) = sub_33C34;
    *(void *)(v67 + 24) = v66;
    sub_157C4((uint64_t)v89, (uint64_t)&v87);
    sub_157C4((uint64_t)v90, (uint64_t)v86);
    sub_157C4((uint64_t)v91, (uint64_t)v85);
    uint64_t v68 = (void *)swift_allocObject(&unk_2742F8, 160LL, 7LL);
    v68[2] = sub_1B79D8;
    v68[3] = v67;
    sub_FF54(&v87, (uint64_t)(v68 + 4));
    sub_FF54(v86, (uint64_t)(v68 + 9));
    uint64_t v69 = v75;
    v68[14] = v75;
    sub_FF54(v85, (uint64_t)(v68 + 15));
    id v70 = v69;
    swift_retain(v62);
    swift_retain(v66);
    uint64_t v71 = v82;
    dispatch thunk of DeviceResolutionProviding.resolveDevices(for:with:)( v89,  sub_18F9A4,  v68,  v84,  &protocol witness table for DeviceResolutionProvider);
    swift_release(v62);
    swift_release(v66);
    swift_release(v68);
    (*(void (**)(char *, uint64_t))(v56 + 8))(v55, v58);
    swift_release(v51);
    sub_6C3C(v89);
  }

  else
  {
    sub_1F6CC((uint64_t)&v87, &qword_28C140);
    if (qword_283888 != -1) {
      swift_once(&qword_283888, sub_BFC5C);
    }
    uint64_t v41 = sub_6960(v14, (uint64_t)qword_2969C8);
    uint64_t v42 = v15;
    (*(void (**)(char *, uint64_t, uint64_t))(v15 + 16))(v18, v41, v14);
    id v43 = a7;
    uint64_t v44 = (os_log_s *)Logger.logObject.getter(v43);
    os_log_type_t v45 = static os_log_type_t.info.getter();
    if (os_log_type_enabled(v44, v45))
    {
      uint64_t v46 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
      uint64_t v47 = swift_slowAlloc(32LL, -1LL);
      v89[0] = v47;
      uint64_t v74 = v42;
      *(_DWORD *)uint64_t v46 = 136446210;
      uint64_t v48 = INPlayMediaIntent.slimDescription.getter();
      unint64_t v50 = v49;
      *(void *)&__int128 v87 = sub_6978(v48, v49, v89);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v87, (char *)&v87 + 8);

      swift_bridgeObjectRelease(v50);
      _os_log_impl( &dword_0,  v44,  v45,  "INPlayMediaIntent#performRouteResolution No homeAutomationProvider was found in the intent: %{public}s. This is expected if no home automation entities were requested",  v46,  0xCu);
      swift_arrayDestroy(v47, 1LL, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v47, -1LL, -1LL);
      swift_slowDealloc(v46, -1LL, -1LL);

      (*(void (**)(char *, uint64_t))(v74 + 8))(v18, v14);
    }

    else
    {

      (*(void (**)(char *, uint64_t))(v15 + 8))(v18, v14);
    }

    uint64_t v71 = v82;
    v80(0LL);
  }

  (*(void (**)(char *, uint64_t))(v83 + 8))(v71, v84);
  sub_6C3C(v91);
  return sub_6C3C(v90);
}

uint64_t sub_1B6E94( uint64_t a1, void *a2, __int128 *a3, void *a4, void *a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t *a10, uint64_t *a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15)
{
  uint64_t v72 = a8;
  uint64_t v68 = a7;
  id v70 = a2;
  uint64_t v75 = a14;
  uint64_t v74 = a13;
  uint64_t v73 = a12;
  uint64_t v71 = a10;
  uint64_t v69 = a9;
  uint64_t v20 = type metadata accessor for FeatureFlagProvider(0LL);
  uint64_t v21 = *(void *)(v20 - 8);
  uint64_t v22 = __chkstk_darwin(v20);
  uint64_t v65 = (char *)&v64 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v22);
  uint64_t v66 = (char *)&v64 - v24;
  v83[3] = &type metadata for StringsBackedAppNameResolver;
  v83[4] = sub_15780();
  uint64_t v25 = (_OWORD *)swift_allocObject(&unk_274050, 96LL, 7LL);
  v83[0] = v25;
  __int128 v26 = a3[3];
  v25[3] = a3[2];
  v25[4] = v26;
  void v25[5] = a3[4];
  __int128 v28 = *a3;
  __int128 v27 = a3[1];
  uint64_t v29 = a1;
  uint64_t v30 = a4;
  id v31 = a5;
  v25[1] = v28;
  v25[2] = v27;
  v82[3] = v20;
  v82[4] = &protocol witness table for FeatureFlagProvider;
  uint64_t v32 = sub_10974(v82);
  uint64_t v67 = v21;
  os_log_type_t v33 = *(void (**)(void *, uint64_t, uint64_t))(v21 + 32);
  uint64_t v34 = a6;
  uint64_t v35 = v68;
  uint64_t v68 = v20;
  v33(v32, v35, v20);
  uint64_t v36 = type metadata accessor for NowPlayingProvider(0LL);
  v81[3] = v36;
  v81[4] = &protocol witness table for NowPlayingProvider;
  uint64_t v37 = sub_10974(v81);
  (*(void (**)(void *, uint64_t, uint64_t))(*(void *)(v36 - 8) + 32LL))(v37, v72, v36);
  v80[3] = type metadata accessor for SiriKitTaskLoggingProvider(0LL);
  v80[4] = &protocol witness table for SiriKitTaskLoggingProvider;
  v80[0] = v69;
  uint64_t v38 = a15 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin22AudioAppResolutionFlow_input;
  uint64_t v39 = type metadata accessor for Input(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v39 - 8) + 56LL))(v38, 1LL, 1LL, v39);
  uint64_t v40 = OBJC_IVAR____TtC23AudioFlowDelegatePlugin22AudioAppResolutionFlow_intent;
  *(void *)(a15 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin22AudioAppResolutionFlow_intent) = 0LL;
  swift_beginAccess(v38, v77, 33LL, 0LL);
  uint64_t v72 = v29;
  sub_11C1C(v29, v38);
  swift_endAccess(v77);
  uint64_t v41 = *(void **)(a15 + v40);
  uint64_t v42 = v70;
  *(void *)(a15 + v40) = v70;
  id v43 = v42;

  sub_157C4((uint64_t)v83, a15 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin22AudioAppResolutionFlow_appNameResolver);
  sub_157C4((uint64_t)v30, a15 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin22AudioAppResolutionFlow_aceService);
  sub_157C4((uint64_t)v31, a15 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin22AudioAppResolutionFlow_outputPublisher);
  uint64_t v44 = (uint64_t **)(a15 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin22AudioAppResolutionFlow_nextAppAcceptingFlow);
  *uint64_t v44 = v71;
  v44[1] = a11;
  sub_157C4((uint64_t)v82, a15 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin22AudioAppResolutionFlow_featureFlags);
  sub_157C4((uint64_t)v81, a15 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin22AudioAppResolutionFlow_nowPlayingProvider);
  sub_157C4( (uint64_t)v80,  a15 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin22AudioAppResolutionFlow_siriKitTaskLoggingProvider);
  if (v34)
  {
    swift_retain(a11);
  }

  else
  {
    sub_157C4((uint64_t)v83, (uint64_t)v79);
    sub_157C4((uint64_t)v30, (uint64_t)v78);
    LODWORD(v70) = CATDefaultMode;
    type metadata accessor for MorphunProvider(0LL);
    uint64_t v45 = swift_retain(a11);
    uint64_t v46 = static MorphunProvider.shared.getter(v45);
    uint64_t v47 = v66;
    static FeatureFlagProvider.shared.getter(v46);
    uint64_t v48 = sub_1094C((uint64_t)v79, v79[3]);
    uint64_t v71 = &v64;
    __chkstk_darwin(v48);
    unint64_t v50 = (_OWORD *)((char *)&v64 - ((v49 + 15) & 0xFFFFFFFFFFFFFFF0LL));
    (*(void (**)(_OWORD *))(v51 + 16))(v50);
    __int128 v52 = v50[3];
    v77[2] = v50[2];
    v77[3] = v52;
    v77[4] = v50[4];
    __int128 v53 = v50[1];
    v77[0] = *v50;
    v77[1] = v53;
    uint64_t v54 = type metadata accessor for CatService();
    uint64_t v55 = swift_allocObject(v54, 300LL, 7LL);
    sub_156E8((uint64_t)v77, (uint64_t)v76);
    uint64_t v57 = v67;
    uint64_t v56 = v68;
    uint64_t v58 = (uint64_t)v65;
    (*(void (**)(char *, char *, uint64_t))(v67 + 16))(v65, v47, v68);
    swift_retain(v46);
    uint64_t v34 = sub_10FF64(v76, (int)v70, v46, v78, v58, v55);
    swift_release(v46);
    (*(void (**)(char *, uint64_t))(v57 + 8))(v47, v56);
    swift_release(v46);
    sub_15858(v77);
    sub_6C3C(v79);
  }

  *(void *)(a15 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin22AudioAppResolutionFlow_catService) = v34;
  uint64_t v59 = type metadata accessor for CommonMediaIntentCatDialogService();
  uint64_t v60 = (void *)swift_allocObject(v59, 40LL, 7LL);
  v60[2] = 0xD000000000000011LL;
  v60[3] = 0x800000000021D860LL;
  v60[4] = v34;
  swift_retain(v34);
  sub_6C3C(v80);
  sub_6C3C(v81);
  sub_6C3C(v82);
  sub_6C3C(v31);
  sub_6C3C(v30);
  sub_6C3C(v83);
  sub_1F6CC(v72, &qword_285BD0);
  *(void *)(a15 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin22AudioAppResolutionFlow_commonMediaIntentCatDialogService) = v60;
  unint64_t v61 = (void *)(a15 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin22AudioAppResolutionFlow_appResolutionFlowProducer);
  uint64_t v62 = v74;
  *unint64_t v61 = v73;
  v61[1] = v62;
  *(void *)(a15 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin22AudioAppResolutionFlow_state) = v75;
  return a15;
}

unint64_t sub_1B738C()
{
  unint64_t result = qword_28B1E0;
  if (!qword_28B1E0)
  {
    uint64_t v1 = type metadata accessor for AudioAppResolutionFlow(255LL);
    unint64_t result = swift_getWitnessTable(&unk_217860, v1);
    atomic_store(result, (unint64_t *)&qword_28B1E0);
  }

  return result;
}

uint64_t sub_1B73D4()
{
  return swift_deallocObject(v0, 96LL, 7LL);
}

uint64_t sub_1B7400()
{
  uint64_t v1 = sub_6C5C((uint64_t *)&unk_286BB0);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = *(void *)(v2 + 64);
  uint64_t v6 = (void *)(v0 + v4);
  if (swift_getEnumCaseMultiPayload(v0 + v4, v1) == 1)
  {
    swift_errorRelease(*v6);
  }

  else
  {
    uint64_t v7 = type metadata accessor for TemplatingResult(0LL);
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8LL))(v0 + v4, v7);
  }

  unint64_t v8 = (v5 + v4 + 7) & 0xFFFFFFFFFFFFFFF8LL;
  unint64_t v9 = (v8 + 23) & 0xFFFFFFFFFFFFFFF8LL;
  unint64_t v10 = (v9 + 15) & 0xFFFFFFFFFFFFFFF8LL;
  unint64_t v11 = (v10 + 15) & 0xFFFFFFFFFFFFFFF8LL;
  swift_bridgeObjectRelease(*(void *)(v0 + v8 + 8));
  swift_release(*(void *)(v0 + v9));

  swift_release(*(void *)(v0 + v11 + 8));
  return swift_deallocObject(v0, v11 + 16, v3 | 7);
}

uint64_t sub_1B7500(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *(void *)(sub_6C5C((uint64_t *)&unk_286BB0) - 8);
  unint64_t v6 = (*(unsigned __int8 *)(v5 + 80) + 16LL) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  unint64_t v7 = (*(void *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFFFF8LL;
  unint64_t v8 = (v7 + 23) & 0xFFFFFFFFFFFFFFF8LL;
  return sub_1B56C4( a1,  a2,  (void (*)(char *, uint64_t *, uint64_t))(v2 + v6),  *(void *)(v2 + v7),  *(void *)(v2 + v7 + 8),  *(void **)(v2 + v8),  *(void *)(v2 + ((v8 + 15) & 0xFFFFFFFFFFFFFFF8LL)),  *(void (**)(char *))(v2 + ((((v8 + 15) & 0xFFFFFFFFFFFFFFF8LL) + 15) & 0xFFFFFFFFFFFFFFF8LL)),  *(void *)(v2 + ((((v8 + 15) & 0xFFFFFFFFFFFFFFF8LL) + 15) & 0xFFFFFFFFFFFFFFF8LL) + 8));
}

uint64_t sub_1B75A4(uint64_t a1)
{
  return sub_1B7600(a1, 0xD000000000000011LL, 0x8000000000220110LL);
}

uint64_t sub_1B75C4(uint64_t a1)
{
  return sub_1B7600(a1, 0xD00000000000001BLL, 0x8000000000222D30LL);
}

uint64_t sub_1B75E4(uint64_t a1)
{
  return sub_1B7600(a1, 0xD000000000000015LL, 0x8000000000220130LL);
}

uint64_t sub_1B7600(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B5414(a1, *(void **)(v3 + 24), a2, a3, *(void *)(v3 + 32), *(void *)(v3 + 40));
}

uint64_t sub_1B7630()
{
  return swift_deallocObject(v0, 56LL, 7LL);
}

uint64_t sub_1B7664(uint64_t a1)
{
  return sub_1B5414(a1, 0LL, v1[3], v1[4], v1[5], v1[6]);
}

uint64_t sub_1B7694()
{
  uint64_t v1 = type metadata accessor for Input(0LL);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 24) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = (*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8LL;
  unint64_t v7 = (v6 + 15) & 0xFFFFFFFFFFFFFFF8LL;
  swift_release(*(void *)(v0 + 16));
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  swift_release(*(void *)(v0 + v7 + 8));
  return swift_deallocObject(v0, v7 + 16, v5);
}

uint64_t sub_1B7738(uint64_t a1, char a2)
{
  char v4 = a2 & 1;
  uint64_t v5 = *(void *)(type metadata accessor for Input(0LL) - 8);
  unint64_t v6 = (*(unsigned __int8 *)(v5 + 80) + 24LL) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  unint64_t v7 = (*(void *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFFFF8LL;
  return sub_1B3F8( a1,  v4,  *(void *)(v2 + 16),  v2 + v6,  *(void *)(v2 + v7),  *(void (**)(char *))(v2 + ((v7 + 15) & 0xFFFFFFFFFFFFFFF8LL)),  *(void *)(v2 + ((v7 + 15) & 0xFFFFFFFFFFFFFFF8LL) + 8));
}

uint64_t sub_1B77B0()
{
  return swift_deallocObject(v0, 32LL, 7LL);
}

uint64_t sub_1B77D4()
{
  return swift_deallocObject(v0, 48LL, 7LL);
}

uint64_t sub_1B7800(uint64_t a1, char a2)
{
  return sub_1B31B4( a1,  a2 & 1,  *(void **)(v2 + 16),  *(uint64_t **)(v2 + 24),  *(void *)(v2 + 32),  *(void *)(v2 + 40));
}

uint64_t sub_1B7810()
{
  return swift_deallocObject(v0, 40LL, 7LL);
}

uint64_t sub_1B783C(uint64_t a1, char a2)
{
  return sub_1B2E4C(a1, a2 & 1, *(uint64_t **)(v2 + 16), *(void *)(v2 + 24), *(void *)(v2 + 32));
}

uint64_t sub_1B7858()
{
  uint64_t v1 = type metadata accessor for Parse(0LL);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 48) & ~v3;
  uint64_t v5 = *(void *)(v2 + 64);
  uint64_t v6 = type metadata accessor for Input(0LL);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(unsigned __int8 *)(v7 + 80);
  uint64_t v9 = (v4 + v5 + v8) & ~v8;
  uint64_t v10 = v9 + *(void *)(v7 + 64);
  uint64_t v11 = v3 | v8 | 7;

  swift_release(*(void *)(v0 + 24));
  swift_release(*(void *)(v0 + 40));
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v0 + v9, v6);
  return swift_deallocObject(v0, v10, v11);
}

uint64_t sub_1B7924(__int16 a1)
{
  int v2 = a1 & 0x1FF;
  uint64_t v3 = *(void *)(type metadata accessor for Parse(0LL) - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 48LL) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v5 = *(void *)(v3 + 64);
  uint64_t v6 = *(unsigned __int8 *)(*(void *)(type metadata accessor for Input(0LL) - 8) + 80LL);
  return sub_1B2A98( v2,  *(void **)(v1 + 16),  *(void *)(v1 + 24),  *(void (**)(void))(v1 + 32),  *(void *)(v1 + 40),  v1 + v4,  v1 + ((v4 + v5 + v6) & ~v6));
}

uint64_t sub_1B79A0(unsigned __int8 *a1)
{
  return (*(uint64_t (**)(void))(v1 + 16))(*a1 | (a1[1] << 8));
}

uint64_t sub_1B79D8(__int16 a1)
{
  int v2 = *(uint64_t (**)(__int16 *))(v1 + 16);
  __int16 v4 = a1 & 0x1FF;
  return v2(&v4);
}

uint64_t sub_1B7A10()
{
  sub_6C3C((void *)(v0 + 120));
  return swift_deallocObject(v0, 160LL, 7LL);
}

uint64_t sub_1B7A54()
{
  uint64_t v1 = type metadata accessor for Input(0LL);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 40) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = ((*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8LL) + 8;
  swift_release(*(void *)(v0 + 24));
  swift_release(*(void *)(v0 + 32));
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return swift_deallocObject(v0, v6, v5);
}

uint64_t sub_1B7ADC(uint64_t a1)
{
  uint64_t v3 = *(unsigned __int8 *)(*(void *)(type metadata accessor for Input(0LL) - 8) + 80LL);
  return sub_1B3EB8( a1,  *(void (**)(char *))(v1 + 16),  *(void *)(v1 + 24),  *(void *)(v1 + 32),  v1 + ((v3 + 40) & ~v3));
}

uint64_t sub_1B7B34(uint64_t a1)
{
  return sub_1B4284(a1, *(void (**)(char *))(v1 + 16));
}

uint64_t INMediaItem.isInternalSignalPresent(_:)(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2)
  {
    uint64_t v3 = a1 + 32;
    uint64_t v29 = a1;
    swift_bridgeObjectRetain(a1);
    uint64_t v4 = 0LL;
    uint64_t v5 = &OBJC_INSTANCE_VARIABLES__TtC23AudioFlowDelegatePlugin33PlayMediaAlternativesViewProvider;
    unint64_t v6 = &selRef_serviceGroups;
    uint64_t v30 = v2;
    while (1)
    {
      uint64_t v7 = (uint64_t *)(v3 + 16 * v4);
      uint64_t v9 = *v7;
      uint64_t v8 = (void *)v7[1];
      swift_bridgeObjectRetain(v8);
      id v10 = [v1 *(SEL *)&v5[504]];
      if (!v10) {
        break;
      }
      uint64_t v11 = v10;
      id v12 = objc_msgSend(v10, v6[10], v29);

      if (!v12) {
        break;
      }
      uint64_t v13 = (void *)static Array._unconditionallyBridgeFromObjectiveC(_:)(v12, &type metadata for String);

      uint64_t v14 = v13[2];
      if (!v14)
      {
        swift_bridgeObjectRelease(v8);
        __int128 v27 = v13;
        goto LABEL_22;
      }

      uint64_t v15 = v13[4];
      uint64_t v16 = (void *)v13[5];
      BOOL v17 = v15 == v9 && v16 == v8;
      if (v17
        || (uint64_t v18 = v1, v19 = v3, result = _stringCompareWithSmolCheck(_:_:expecting:)(v15, v16), (result & 1) != 0))
      {
LABEL_26:
        swift_bridgeObjectRelease(v8);
        swift_bridgeObjectRelease(v13);
        uint64_t v28 = 1LL;
        goto LABEL_28;
      }

      if (v14 != 1)
      {
        uint64_t v21 = v13 + 7;
        uint64_t v22 = 1LL;
        while (1)
        {
          uint64_t v23 = v22 + 1;
          if (__OFADD__(v22, 1LL)) {
            break;
          }
          uint64_t v24 = *(v21 - 1);
          uint64_t v25 = (void *)*v21;
          if (v24 == v9 && v25 == v8) {
            goto LABEL_26;
          }
          uint64_t result = _stringCompareWithSmolCheck(_:_:expecting:)(v24, v25);
          if ((result & 1) != 0) {
            goto LABEL_26;
          }
          v21 += 2;
          ++v22;
          if (v23 == v14) {
            goto LABEL_20;
          }
        }

        __break(1u);
        return result;
      }

uint64_t _s27NeedsDisambiguationStrategyCMa_1(uint64_t a1)
{
  uint64_t result = qword_28CD30;
  if (!qword_28CD30) {
    return swift_getSingletonMetadata(a1, &_s27NeedsDisambiguationStrategyCMn_1);
  }
  return result;
}

uint64_t sub_1B7D50()
{
  uint64_t v1 = type metadata accessor for NowPlayingProvider(0LL);
  uint64_t v171 = *(void *)(v1 - 8);
  uint64_t v172 = v1;
  uint64_t v2 = __chkstk_darwin(v1);
  uint64_t v168 = (char *)&v164 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v2);
  uint64_t v170 = (char *)&v164 - v4;
  uint64_t v187 = type metadata accessor for StringsFileResolver(0LL);
  uint64_t v167 = *(void *)(v187 - 8);
  uint64_t v5 = __chkstk_darwin(v187);
  uint64_t v184 = (char *)&v164 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v5);
  uint64_t v186 = (char *)&v164 - v7;
  uint64_t v8 = sub_6C5C(&qword_284ED0);
  __chkstk_darwin(v8);
  uint64_t v185 = (uint64_t)&v164 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v10 = type metadata accessor for FeatureFlagProvider(0LL);
  uint64_t v181 = *(void *)(v10 - 8);
  uint64_t v11 = __chkstk_darwin(v10);
  id v183 = (char *)&v164 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v11);
  uint64_t v191 = (char *)&v164 - v13;
  uint64_t v14 = sub_6C5C(&qword_28CEE8);
  uint64_t v178 = *(void *)(v14 - 8);
  uint64_t v15 = __chkstk_darwin(v14);
  uint64_t v177 = (char *)&v164 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v15);
  uint64_t v18 = (char *)&v164 - v17;
  uint64_t v19 = sub_1641C(0LL, &qword_2858D0, &OBJC_CLASS___INAddMediaIntent_ptr);
  uint64_t v176 = sub_1641C(0LL, &qword_28CEF0, &OBJC_CLASS___INAddMediaIntentResponse_ptr);
  RCHChildFlowProducers.init()(v19);
  uint64_t v20 = swift_allocObject(&unk_274400, 24LL, 7LL);
  *(void *)(v20 + swift_weakDestroy(v0 + 16) = v0;
  RCHChildFlowProducers.needsDisambiguationFlowCompletion.setter(sub_1B8FB0, v20, v14);
  uint64_t v190 = sub_64FAC();
  static AceService.current.getter(&v200);
  uint64_t v21 = type metadata accessor for SiriKitTaskLoggingProvider(0LL);
  uint64_t v22 = static SiriKitTaskLoggingProvider.shared.getter(v21);
  uint64_t v189 = v10;
  uint64_t v204 = (ValueMetadata *)v10;
  BOOL v205 = (_UNKNOWN **)&protocol witness table for FeatureFlagProvider;
  uint64_t v23 = sub_10974(&v203);
  static FeatureFlagProvider.shared.getter(v23);
  uint64_t v24 = type metadata accessor for SiriAudioOutputProvider();
  uint64_t v25 = swift_allocObject(v24, 56LL, 7LL);
  sub_FF54(&v203, v25 + 16);
  uint64_t v204 = (ValueMetadata *)v24;
  BOOL v205 = &off_272868;
  *(void *)&__int128 v203 = v25;
  uint64_t v26 = _s18NeedsValueStrategyCMa_1();
  uint64_t v27 = swift_allocObject(v26, 104LL, 7LL);
  uint64_t v28 = sub_1094C((uint64_t)&v203, v24);
  __chkstk_darwin(v28);
  unint64_t v173 = (v29 + 15) & 0xFFFFFFFFFFFFFFF0LL;
  uint64_t v30 = (uint64_t *)((char *)&v164 - v173);
  uint64_t v32 = *(void (**)(char *))(v31 + 16);
  uint64_t v188 = v24;
  uint64_t v174 = v32;
  uint64_t v175 = v29;
  v32((char *)&v164 - v173);
  uint64_t v33 = *v30;
  swift_retain(v25);
  uint64_t v34 = sub_1B9384(v190, &v200, v22, v33, v27);
  sub_6C3C(&v203);
  swift_release(v25);
  *(void *)&__int128 v200 = v34;
  uint64_t v35 = sub_10430(&qword_28CEF8, (uint64_t (*)(uint64_t))_s18NeedsValueStrategyCMa_1, (uint64_t)&unk_2197FC);
  uint64_t v36 = v21;
  uint64_t v37 = static RCHChildFlowFactoryHelper.makeNeedsValueFlowProducer<A>(strategy:)(&v200, v26, v35);
  uint64_t v39 = v38;
  swift_release(v34);
  RCHChildFlowProducers.needsValueFlowCompletion.setter(v37, v39, v14);
  uint64_t v40 = sub_64FAC();
  static AceService.current.getter(&v200);
  uint64_t v41 = _s25NeedsConfirmationStrategyCMa_1(0LL);
  swift_allocObject(v41, 216LL, 7LL);
  uint64_t v42 = sub_148570(v40, &v200);
  *(void *)&__int128 v200 = v42;
  uint64_t v43 = sub_10430(&qword_28CF00, _s25NeedsConfirmationStrategyCMa_1, (uint64_t)&unk_21B258);
  uint64_t v44 = static RCHChildFlowFactoryHelper.makeNeedsConfirmationFlowProducer<A>(strategy:)(&v200, v41, v43);
  uint64_t v46 = v45;
  swift_release(v42);
  RCHChildFlowProducers.needsConfirmationFlowCompletion.setter(v44, v46, v14);
  uint64_t v47 = sub_64FAC();
  uint64_t v48 = static AceService.current.getter(&v200);
  uint64_t v182 = v36;
  uint64_t v49 = static SiriKitTaskLoggingProvider.shared.getter(v48);
  uint64_t v50 = _s21ConfirmIntentStrategyCMa(0LL);
  uint64_t v51 = swift_allocObject(v50, *(unsigned int *)(v50 + 48), *(unsigned __int16 *)(v50 + 52));
  uint64_t v52 = sub_1B8FBC(v47, &v200, v49, v51);
  *(void *)&__int128 v200 = v52;
  uint64_t v53 = sub_10430(&qword_28CF08, _s21ConfirmIntentStrategyCMa, (uint64_t)&unk_21B870);
  uint64_t v54 = static RCHChildFlowFactoryHelper.makeConditionalConfirmIntentFlowProducer<A>(strategy:_:)( &v200,  sub_231E4,  0LL,  v50,  v53);
  uint64_t v56 = v55;
  swift_release(v52);
  uint64_t v190 = v14;
  uint64_t v192 = v18;
  RCHChildFlowProducers.confirmIntentFlowCompletion.setter(v54, v56, v14);
  if (qword_2838F0 != -1) {
    swift_once(&qword_2838F0, sub_14EB48);
  }
  int v57 = CATDefaultMode;
  uint64_t v58 = type metadata accessor for MorphunProvider(0LL);
  uint64_t v59 = static MorphunProvider.shared.getter(v58);
  uint64_t v60 = static AceService.current.getter(&v203);
  unint64_t v61 = v191;
  static FeatureFlagProvider.shared.getter(v60);
  uint64_t v62 = type metadata accessor for CatService();
  uint64_t v63 = swift_allocObject(v62, 300LL, 7LL);
  sub_156E8((uint64_t)&static StringsBackedAppNameResolver.shared, (uint64_t)&v200);
  uint64_t v64 = v181;
  uint64_t v180 = *(void (**)(char *, char *, uint64_t))(v181 + 16);
  uint64_t v65 = (uint64_t)v183;
  uint64_t v66 = (ValueMetadata *)v189;
  v180(v183, v61, v189);
  swift_retain(v59);
  uint64_t v67 = sub_10FF64(&v200, v57, v59, &v203, v65, v63);
  swift_release(v59);
  uint64_t v181 = *(void *)(v64 + 8);
  ((void (*)(char *, ValueMetadata *))v181)(v61, v66);
  swift_release(v59);
  uint64_t v68 = type metadata accessor for AddMediaCatDialogService();
  uint64_t v69 = swift_allocObject(v68, 56LL, 7LL);
  *(_BYTE *)(v69 + 55) = -18;
  *(void *)(v69 + swift_weakDestroy(v0 + 16) = 0xD000000000000011LL;
  *(void *)(v69 + 24) = 0x800000000021D860LL;
  *(void *)(v69 + 3sub_6C3C(v0 + 2) = v67;
  strcpy((char *)(v69 + 40), "AddMediaIntent");
  uint64_t v70 = v67;
  uint64_t v71 = type metadata accessor for DucTemplatingLocalContext(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v71 - 8) + 56LL))(v185, 1LL, 1LL, v71);
  unint64_t v179 = sub_7F548(&_swiftEmptyArrayStorage);
  uint64_t v169 = v67;
  swift_retain_n(v67, 2LL);
  uint64_t v72 = static AceService.current.getter(&v200);
  uint64_t v73 = v61;
  uint64_t v74 = static FeatureFlagProvider.shared.getter(v72);
  uint64_t v75 = v186;
  static StringsFileResolver.shared.getter(v74);
  uint64_t v76 = type metadata accessor for AddMediaDialogProvider(0LL);
  uint64_t v77 = swift_allocObject(v76, 168LL, 7LL);
  v180((char *)v65, v73, (uint64_t)v66);
  uint64_t v78 = v167;
  os_log_type_t v166 = *(void (**)(char *, char *, uint64_t))(v167 + 16);
  uint64_t v79 = v184;
  uint64_t v80 = v187;
  v166(v184, v75, v187);
  uint64_t v81 = sub_EE3F0(v69, v70, v179, &v200, v185, v65, v79, v77);
  swift_release(v69);
  uint64_t v167 = *(void *)(v78 + 8);
  uint64_t v82 = v75;
  ((void (*)(char *, uint64_t))v167)(v75, v80);
  uint64_t v83 = v191;
  ((void (*)(char *, ValueMetadata *))v181)(v191, v66);
  uint64_t v84 = type metadata accessor for AddMediaSnippetProvider();
  uint64_t v85 = swift_allocObject(v84, 24LL, 7LL);
  uint64_t v185 = v85;
  unint64_t v179 = v81;
  *(void *)(v85 + swift_weakDestroy(v0 + 16) = v81;
  swift_retain(v81);
  swift_retain(v85);
  uint64_t v165 = sub_64FAC();
  static StringsFileResolver.shared.getter(v165);
  uint64_t v86 = static AceService.current.getter(&v200);
  uint64_t v87 = static FeatureFlagProvider.shared.getter(v86);
  uint64_t v88 = static SiriKitTaskLoggingProvider.shared.getter(v87);
  uint64_t v204 = v66;
  BOOL v205 = (_UNKNOWN **)&protocol witness table for FeatureFlagProvider;
  uint64_t v89 = sub_10974(&v203);
  static FeatureFlagProvider.shared.getter(v89);
  uint64_t v164 = swift_allocObject(v188, 56LL, 7LL);
  uint64_t v90 = sub_FF54(&v203, v164 + 16);
  uint64_t v91 = v170;
  static NowPlayingProvider.shared.getter(v90);
  uint64_t v92 = type metadata accessor for AppIntentInvoker(0LL);
  swift_allocObject(v92, *(unsigned int *)(v92 + 48), *(unsigned __int16 *)(v92 + 52));
  uint64_t v93 = AppIntentInvoker.init()();
  uint64_t v94 = (uint64_t)v184;
  v166(v184, v82, v80);
  uint64_t v95 = (uint64_t)v183;
  v180(v183, v83, (uint64_t)v66);
  uint64_t v97 = v171;
  uint64_t v96 = v172;
  uint64_t v98 = (uint64_t)v168;
  (*(void (**)(char *, char *, uint64_t))(v171 + 16))(v168, v91, v172);
  swift_retain(v88);
  uint64_t v99 = v165;
  uint64_t v100 = sub_1B9D50(v165, v94, &v200, v95, v88, v164, v185, v98, v93);
  swift_release(v99);
  swift_release(v88);
  (*(void (**)(char *, uint64_t))(v97 + 8))(v91, v96);
  swift_release(v88);
  uint64_t v101 = (ValueMetadata *)v189;
  ((void (*)(char *, uint64_t))v181)(v191, v189);
  ((void (*)(char *, uint64_t))v167)(v186, v187);
  *(void *)&__int128 v200 = v100;
  uint64_t v102 = type metadata accessor for AddMedia.HandleIntentStrategy();
  uint64_t v103 = sub_10430( &qword_28CF10,  (uint64_t (*)(uint64_t))type metadata accessor for AddMedia.HandleIntentStrategy,  (uint64_t)&protocol conformance descriptor for AddMedia.HandleIntentStrategy);
  uint64_t v104 = static RCHChildFlowFactoryHelper.makeHandleIntentFlowProducer<A>(strategy:)(&v200, v102, v103);
  uint64_t v106 = v105;
  swift_release(v100);
  RCHChildFlowProducers.handleIntentFlowCompletion.setter(v104, v106, v190);
  unint64_t v107 = v179;
  swift_retain_n(v179, 2LL);
  sub_9E554(v199);
  unint64_t v198 = v107;
  os_log_type_t v201 = &type metadata for StringsBackedAppNameResolver;
  unint64_t v108 = sub_15780();
  unint64_t v202 = v108;
  *(void *)&__int128 v200 = swift_allocObject(&unk_274428, 96LL, 7LL);
  sub_156E8((uint64_t)&static StringsBackedAppNameResolver.shared, v200 + 16);
  uint64_t v204 = (ValueMetadata *)type metadata accessor for DeviceProvider(0LL);
  BOOL v205 = (_UNKNOWN **)&protocol witness table for DeviceProvider;
  sub_10974(&v203);
  static DeviceProvider.shared.getter();
  uint64_t v196 = v101;
  id v197 = &protocol witness table for FeatureFlagProvider;
  uint64_t v109 = sub_10974(&v195);
  static FeatureFlagProvider.shared.getter(v109);
  v194[3] = type metadata accessor for UserPreferenceProvider(0LL);
  v194[4] = &protocol witness table for UserPreferenceProvider;
  uint64_t v110 = sub_10974(v194);
  static UserPreferenceProvider.shared.getter(v110);
  v193[3] = type metadata accessor for InstalledAppProvider(0LL);
  v193[4] = &protocol witness table for InstalledAppProvider;
  os_log_type_t v111 = sub_10974(v193);
  static InstalledAppProvider.shared.getter(v111);
  uint64_t v112 = sub_6C5C(&qword_288D40);
  uint64_t v113 = (void *)swift_allocObject(v112, *(unsigned int *)(v112 + 48), *(unsigned __int16 *)(v112 + 52));
  uint64_t v114 = class metadata base offset for CommonAppResolver;
  uint64_t v115 = (char *)v113 + *(void *)(class metadata base offset for CommonAppResolver + *v113 + 8);
  strcpy(v115, "resolutionType");
  v115[15] = -18;
  sub_157C4((uint64_t)&v200, (uint64_t)v113 + *(void *)(v114 + *v113 + 16));
  sub_157C4((uint64_t)&v203, (uint64_t)v113 + *(void *)(class metadata base offset for CommonAppResolver + *v113 + 24));
  sub_157C4((uint64_t)&v195, (uint64_t)v113 + *(void *)(class metadata base offset for CommonAppResolver + *v113 + 32));
  sub_157C4((uint64_t)v194, (uint64_t)v113 + *(void *)(class metadata base offset for CommonAppResolver + *v113 + 40));
  uint64_t v116 = sub_157C4( (uint64_t)v193,  (uint64_t)v113 + *(void *)(class metadata base offset for CommonAppResolver + *v113 + 48));
  uint64_t v117 = InstrumentedAppResolutionService.init()(v116);
  sub_6C3C(v193);
  sub_6C3C(v194);
  sub_6C3C(&v195);
  sub_6C3C(&v203);
  sub_6C3C(&v200);
  static AceService.current.getter(&v200);
  uint64_t v204 = &type metadata for StringsBackedAppNameResolver;
  BOOL v205 = (_UNKNOWN **)v108;
  *(void *)&__int128 v203 = swift_allocObject(&unk_274428, 96LL, 7LL);
  sub_156E8((uint64_t)&static StringsBackedAppNameResolver.shared, v203 + 16);
  uint64_t v196 = v101;
  id v197 = &protocol witness table for FeatureFlagProvider;
  uint64_t v118 = sub_10974(&v195);
  static FeatureFlagProvider.shared.getter(v118);
  swift_release(v198);
  sub_6C3C(v199);
  uint64_t v119 = sub_6C5C(&qword_28CF18);
  uint64_t v120 = (void *)swift_allocObject(v119, 176LL, 7LL);
  v120[21] = 0LL;
  v120[2] = v117;
  v120[3] = v107;
  v120[4] = sub_ED690;
  v120[5] = 0LL;
  sub_FF54(&v200, (uint64_t)(v120 + 6));
  sub_FF54(&v203, (uint64_t)(v120 + 11));
  sub_FF54(&v195, (uint64_t)(v120 + 16));
  *(void *)&__int128 v200 = v120;
  uint64_t v121 = sub_21318(&qword_28CF20, &qword_28CF18, (uint64_t)&unk_21ACA4);
  uint64_t v122 = v176;
  uint64_t v123 = static RCHChildFlowFactoryHelper.makeAppResolutionFlowProducer<A, B>(strategy:)(&v200, v119, v176, v121);
  uint64_t v125 = v124;
  swift_release(v120);
  uint64_t v126 = v190;
  RCHChildFlowProducers.appResolutionFlowCompletion.setter(v123, v125, v190);
  uint64_t v127 = swift_retain(v107);
  uint64_t v128 = sub_1B8CD4(v127, &qword_28CF28);
  *(void *)&__int128 v200 = v128;
  uint64_t v129 = sub_6C5C(&qword_28CF28);
  uint64_t v130 = sub_21318(&qword_28CF30, &qword_28CF28, (uint64_t)&unk_216828);
  uint64_t v131 = static RCHChildFlowFactoryHelper.makeRequestTCCAcceptanceFlow<A, B>(strategy:)(&v200, v129, v122, v130);
  uint64_t v133 = v132;
  swift_release(v128);
  uint64_t v134 = v126;
  RCHChildFlowProducers.requestTCCAcceptanceFlowCompletion.setter(v131, v133, v126);
  uint64_t v135 = sub_64FAC();
  uint64_t v136 = static AceService.current.getter(&v200);
  uint64_t v137 = static SiriKitTaskLoggingProvider.shared.getter(v136);
  uint64_t v204 = v101;
  BOOL v205 = (_UNKNOWN **)&protocol witness table for FeatureFlagProvider;
  uint64_t v138 = sub_10974(&v203);
  static FeatureFlagProvider.shared.getter(v138);
  uint64_t v139 = v188;
  uint64_t v140 = swift_allocObject(v188, 56LL, 7LL);
  sub_FF54(&v203, v140 + 16);
  uint64_t v204 = (ValueMetadata *)v139;
  BOOL v205 = &off_272868;
  *(void *)&__int128 v203 = v140;
  uint64_t v141 = type metadata accessor for AddMedia.UnsupportedValueStrategy();
  uint64_t v142 = swift_allocObject(v141, 104LL, 7LL);
  uint64_t v143 = sub_1094C((uint64_t)&v203, v139);
  __chkstk_darwin(v143);
  uint64_t v144 = (uint64_t *)((char *)&v164 - v173);
  v174((char *)&v164 - v173);
  uint64_t v145 = *v144;
  swift_retain(v140);
  uint64_t v146 = sub_1B9384(v135, &v200, v137, v145, v142);
  sub_6C3C(&v203);
  swift_release(v140);
  *(void *)&__int128 v200 = v146;
  uint64_t v147 = sub_10430( (unint64_t *)&qword_285EB8,  (uint64_t (*)(uint64_t))type metadata accessor for AddMedia.UnsupportedValueStrategy,  (uint64_t)&protocol conformance descriptor for AddMedia.UnsupportedValueStrategy);
  uint64_t v148 = static RCHChildFlowFactoryHelper.makeUnsupportedValueAndCancelFlowProducer<A>(strategy:)(&v200, v141, v147);
  uint64_t v150 = v149;
  swift_release(v146);
  uint64_t v151 = v192;
  RCHChildFlowProducers.unsupportedValueFlowCompletion.setter(v148, v150, v134);
  uint64_t v152 = sub_6C5C(&qword_28CF38);
  uint64_t v153 = swift_allocObject(v152, 16LL, 7LL);
  *(void *)&__int128 v200 = v153;
  uint64_t v154 = sub_21318(&qword_28CF40, &qword_28CF38, (uint64_t)&unk_217468);
  uint64_t v155 = static RCHChildFlowFactoryHelper.makeContinueInAppFlowWithDialogProducer<A>(strategy:)(&v200, v152, v154);
  uint64_t v157 = v156;
  swift_release(v153);
  RCHChildFlowProducers.continueInAppFlowCompletion.setter(v155, v157, v134);
  uint64_t v159 = v177;
  uint64_t v158 = v178;
  uint64_t v160 = v151;
  (*(void (**)(char *, char *, uint64_t))(v178 + 16))(v177, v151, v134);
  uint64_t v161 = sub_6C5C(&qword_28CF48);
  swift_allocObject(v161, *(unsigned int *)(v161 + 48), *(unsigned __int16 *)(v161 + 52));
  uint64_t v162 = RCHChildFlowFactory.init(producers:)(v159);
  swift_release(v169);
  swift_release(v179);
  swift_release(v185);
  (*(void (**)(char *, uint64_t))(v158 + 8))(v160, v134);
  return v162;
}

uint64_t sub_1B8CC8(uint64_t a1)
{
  return sub_1B8CD4(a1, &qword_284F30);
}

uint64_t sub_1B8CD4(uint64_t a1, uint64_t *a2)
{
  uint64_t v41 = a2;
  uint64_t v45 = a1;
  uint64_t v2 = type metadata accessor for TCCProvider(0LL);
  uint64_t v43 = *(void *)(v2 - 8);
  uint64_t v44 = v2;
  uint64_t v3 = __chkstk_darwin(v2);
  uint64_t v42 = (char *)&v35 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v35 - v5;
  uint64_t v7 = type metadata accessor for FeatureFlagProvider(0LL);
  uint64_t v35 = *(void *)(v7 - 8);
  uint64_t v8 = v35;
  uint64_t v9 = __chkstk_darwin(v7);
  uint64_t v40 = (char *)&v35 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v9);
  uint64_t v39 = (char *)&v35 - v11;
  uint64_t v12 = type metadata accessor for StringsFileResolver(0LL);
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v37 = v12;
  uint64_t v38 = v13;
  uint64_t v14 = __chkstk_darwin(v12);
  uint64_t v16 = (char *)&v35 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v17 = __chkstk_darwin(v14);
  uint64_t v19 = (char *)&v35 - v18;
  uint64_t v36 = (char *)&v35 - v18;
  uint64_t v20 = static StringsFileResolver.shared.getter(v17);
  static FeatureFlagProvider.shared.getter(v20);
  uint64_t v47 = v7;
  uint64_t v48 = &protocol witness table for FeatureFlagProvider;
  uint64_t v21 = sub_10974(&v46);
  static FeatureFlagProvider.shared.getter(v21);
  uint64_t v22 = type metadata accessor for SiriAudioOutputProvider();
  uint64_t v23 = swift_allocObject(v22, 56LL, 7LL);
  sub_FF54(&v46, v23 + 16);
  uint64_t v24 = static AceService.current.getter(&v46);
  static TCCProvider.shared.getter(v24);
  uint64_t v25 = sub_6C5C(v41);
  uint64_t v26 = swift_allocObject(v25, 232LL, 7LL);
  (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v16, v19, v12);
  uint64_t v27 = v39;
  uint64_t v28 = (uint64_t)v40;
  uint64_t v29 = v7;
  (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v40, v39, v7);
  uint64_t v31 = (uint64_t)v42;
  uint64_t v30 = v43;
  uint64_t v32 = v44;
  (*(void (**)(char *, char *, uint64_t))(v43 + 16))(v42, v6, v44);
  swift_retain(v23);
  uint64_t v33 = sub_1B9698(v45, (uint64_t)v16, v28, v23, &v46, v31, v26);
  (*(void (**)(char *, uint64_t))(v30 + 8))(v6, v32);
  swift_release(v23);
  (*(void (**)(char *, uint64_t))(v35 + 8))(v27, v29);
  (*(void (**)(char *, uint64_t))(v38 + 8))(v36, v37);
  return v33;
}

uint64_t sub_1B8F64(uint64_t a1)
{
  return sub_1B8CD4(a1, &qword_28C500);
}

uint64_t sub_1B8F70(uint64_t a1)
{
  return sub_1B8CD4(a1, &qword_288FF0);
}

uint64_t type metadata accessor for AddMedia.ChildFlowFactory()
{
  return objc_opt_self(&OBJC_CLASS____TtCO23AudioFlowDelegatePlugin8AddMedia16ChildFlowFactory);
}

uint64_t sub_1B8FA0()
{
  return swift_deallocObject(v0, 24LL, 7LL);
}

uint64_t sub_1B8FB0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return sub_1BA420(a1, a2, a3, a4, a5, a6);
}

uint64_t sub_1B8FBC(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v56 = a4;
  uint64_t v54 = a2;
  uint64_t v55 = type metadata accessor for StringsFileResolver(0LL);
  uint64_t v7 = *(void *)(v55 - 8);
  uint64_t v8 = __chkstk_darwin(v55);
  uint64_t v53 = (char *)&v49 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v49 - v10;
  uint64_t v12 = type metadata accessor for FeatureFlagProvider(0LL);
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = __chkstk_darwin(v12);
  uint64_t v16 = (char *)&v49 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v14);
  uint64_t v18 = (char *)&v49 - v17;
  uint64_t v19 = sub_6C5C(&qword_284ED0);
  __chkstk_darwin(v19);
  uint64_t v21 = (char *)&v49 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v52 = v21;
  v61[3] = type metadata accessor for SiriKitTaskLoggingProvider(0LL);
  v61[4] = &protocol witness table for SiriKitTaskLoggingProvider;
  v61[0] = a3;
  uint64_t v22 = type metadata accessor for AddMediaCatDialogService();
  uint64_t v23 = swift_allocObject(v22, 56LL, 7LL);
  *(_BYTE *)(v23 + 55) = -18;
  *(void *)(v23 + swift_weakDestroy(v0 + 16) = 0xD000000000000011LL;
  *(void *)(v23 + 24) = 0x800000000021D860LL;
  *(void *)(v23 + 3sub_6C3C(v0 + 2) = a1;
  strcpy((char *)(v23 + 40), "AddMediaIntent");
  sub_157C4((uint64_t)a2, (uint64_t)v60);
  uint64_t v24 = type metadata accessor for DucTemplatingLocalContext(0LL);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v24 - 8) + 56LL))(v21, 1LL, 1LL, v24);
  unint64_t v51 = sub_7F548(&_swiftEmptyArrayStorage);
  uint64_t v25 = a1;
  swift_retain_n(a1, 2LL);
  uint64_t v26 = swift_retain(v23);
  uint64_t v27 = v18;
  uint64_t v50 = v18;
  uint64_t v28 = static FeatureFlagProvider.shared.getter(v26);
  uint64_t v29 = v11;
  static StringsFileResolver.shared.getter(v28);
  uint64_t v30 = type metadata accessor for AddMediaDialogProvider(0LL);
  uint64_t v31 = swift_allocObject(v30, 168LL, 7LL);
  uint64_t v32 = v13;
  uint64_t v33 = v27;
  uint64_t v34 = v12;
  (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v16, v33, v12);
  uint64_t v35 = v7;
  uint64_t v36 = *(void (**)(char *, char *, uint64_t))(v7 + 16);
  uint64_t v37 = v53;
  uint64_t v38 = v29;
  uint64_t v39 = v29;
  uint64_t v40 = v55;
  v36(v53, v38, v55);
  uint64_t v41 = sub_EE3F0(v23, v25, v51, v60, v52, v16, v37, v31);
  swift_release(v23);
  (*(void (**)(char *, uint64_t))(v35 + 8))(v39, v40);
  (*(void (**)(char *, uint64_t))(v32 + 8))(v50, v34);
  sub_157C4((uint64_t)v61, (uint64_t)v60);
  uint64_t v58 = v34;
  uint64_t v59 = (_UNKNOWN **)&protocol witness table for FeatureFlagProvider;
  sub_10974(&v57);
  uint64_t v42 = swift_retain(v41);
  static FeatureFlagProvider.shared.getter(v42);
  uint64_t v43 = type metadata accessor for SiriAudioOutputProvider();
  uint64_t v44 = swift_allocObject(v43, 56LL, 7LL);
  sub_FF54(&v57, v44 + 16);
  uint64_t v58 = v43;
  uint64_t v59 = &off_272868;
  swift_release(v23);
  swift_release(v41);
  swift_release(v25);
  *(void *)&__int128 v57 = v44;
  sub_6C3C(v61);
  sub_6C3C(v54);
  uint64_t v45 = v56;
  uint64_t v46 = v56 + qword_28E118;
  uint64_t v47 = type metadata accessor for ConfirmationResponse(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v47 - 8) + 56LL))(v46, 1LL, 1LL, v47);
  *(void *)(v45 + swift_weakDestroy(v0 + 16) = v41;
  sub_FF54(v60, v45 + 24);
  sub_FF54(&v57, v45 + 64);
  return v45;
}

uint64_t sub_1B9384(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v48 = a5;
  uint64_t v44 = a2;
  uint64_t v9 = type metadata accessor for StringsFileResolver(0LL);
  uint64_t v46 = *(void *)(v9 - 8);
  uint64_t v47 = v9;
  uint64_t v10 = __chkstk_darwin(v9);
  uint64_t v45 = (char *)&v41 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)&v41 - v12;
  uint64_t v14 = type metadata accessor for FeatureFlagProvider(0LL);
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = __chkstk_darwin(v14);
  uint64_t v18 = (char *)&v41 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v16);
  uint64_t v20 = (char *)&v41 - v19;
  uint64_t v21 = sub_6C5C(&qword_284ED0);
  __chkstk_darwin(v21);
  uint64_t v23 = (char *)&v41 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v43 = v23;
  uint64_t v54 = type metadata accessor for SiriKitTaskLoggingProvider(0LL);
  uint64_t v55 = &protocol witness table for SiriKitTaskLoggingProvider;
  *(void *)&__int128 v53 = a3;
  uint64_t v51 = type metadata accessor for SiriAudioOutputProvider();
  uint64_t v52 = &off_272868;
  *(void *)&__int128 v50 = a4;
  uint64_t v24 = type metadata accessor for AddMediaCatDialogService();
  uint64_t v25 = swift_allocObject(v24, 56LL, 7LL);
  *(_BYTE *)(v25 + 55) = -18;
  *(void *)(v25 + swift_weakDestroy(v0 + 16) = 0xD000000000000011LL;
  *(void *)(v25 + 24) = 0x800000000021D860LL;
  *(void *)(v25 + 3sub_6C3C(v0 + 2) = a1;
  strcpy((char *)(v25 + 40), "AddMediaIntent");
  sub_157C4((uint64_t)a2, (uint64_t)v49);
  uint64_t v26 = type metadata accessor for DucTemplatingLocalContext(0LL);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 56LL))(v23, 1LL, 1LL, v26);
  unint64_t v42 = sub_7F548(&_swiftEmptyArrayStorage);
  uint64_t v27 = a1;
  uint64_t v28 = swift_retain(a1);
  uint64_t v29 = v20;
  uint64_t v41 = v20;
  uint64_t v30 = static FeatureFlagProvider.shared.getter(v28);
  static StringsFileResolver.shared.getter(v30);
  uint64_t v31 = type metadata accessor for AddMediaDialogProvider(0LL);
  uint64_t v32 = swift_allocObject(v31, 168LL, 7LL);
  uint64_t v33 = v15;
  uint64_t v34 = v14;
  (*(void (**)(char *, char *, uint64_t))(v15 + 16))(v18, v29, v14);
  uint64_t v36 = v45;
  uint64_t v35 = v46;
  uint64_t v37 = v47;
  (*(void (**)(char *, char *, uint64_t))(v46 + 16))(v45, v13, v47);
  uint64_t v38 = sub_EE3F0(v25, v27, v42, v49, v43, v18, v36, v32);
  swift_release(v25);
  (*(void (**)(char *, uint64_t))(v35 + 8))(v13, v37);
  (*(void (**)(char *, uint64_t))(v33 + 8))(v41, v34);
  sub_6C3C(v44);
  uint64_t v39 = v48;
  *(void *)(v48 + swift_weakDestroy(v0 + 16) = v38;
  sub_FF54(&v53, v39 + 24);
  sub_FF54(&v50, v39 + 64);
  return v39;
}

uint64_t sub_1B9698(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, __int128 *a5, uint64_t a6, uint64_t a7)
{
  uint64_t v30 = a6;
  uint64_t v32 = a5;
  uint64_t v29 = a4;
  uint64_t v31 = a1;
  uint64_t v10 = type metadata accessor for OS_dispatch_queue.Attributes(0LL);
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)&v28 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v14 = type metadata accessor for DispatchQoS(0LL);
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v17 = (char *)&v28 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v18 = type metadata accessor for StringsFileResolver(0LL);
  uint64_t v43 = v18;
  uint64_t v44 = &protocol witness table for StringsFileResolver;
  uint64_t v19 = sub_10974(&v42);
  (*(void (**)(void *, uint64_t, uint64_t))(*(void *)(v18 - 8) + 32LL))(v19, a2, v18);
  uint64_t v20 = type metadata accessor for FeatureFlagProvider(0LL);
  uint64_t v40 = v20;
  uint64_t v41 = &protocol witness table for FeatureFlagProvider;
  uint64_t v21 = sub_10974(&v39);
  (*(void (**)(void *, uint64_t, uint64_t))(*(void *)(v20 - 8) + 32LL))(v21, a3, v20);
  uint64_t v37 = type metadata accessor for SiriAudioOutputProvider();
  uint64_t v38 = &off_272868;
  *(void *)&__int128 v36 = v29;
  uint64_t v22 = type metadata accessor for TCCProvider(0LL);
  uint64_t v34 = v22;
  uint64_t v35 = &protocol witness table for TCCProvider;
  uint64_t v23 = sub_10974(&v33);
  uint64_t v24 = (*(uint64_t (**)(void *, uint64_t, uint64_t))(*(void *)(v22 - 8) + 32LL))(v23, v30, v22);
  uint64_t v25 = static DispatchQoS.userInteractive.getter(v24);
  static OS_dispatch_queue.Attributes.concurrent.getter(v25);
  uint64_t v26 = static DispatchQueues.queue(_:qos:attributes:)(0xD00000000000001ELL, 0x8000000000223030LL, v17, v13);
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
  *(void *)(a7 + 64) = v26;
  *(void *)(a7 + swift_weakDestroy(v0 + 16) = v31;
  sub_FF54(&v42, a7 + 24);
  sub_FF54(&v39, a7 + 72);
  sub_FF54(&v36, a7 + 112);
  sub_FF54(v32, a7 + 152);
  sub_FF54(&v33, a7 + 192);
  return a7;
}

uint64_t sub_1B98D8( uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6, unint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  unint64_t v61 = a3;
  uint64_t v62 = a8;
  unint64_t v67 = a7;
  uint64_t v64 = a6;
  uint64_t v60 = a5;
  uint64_t v59 = a10;
  uint64_t v63 = a9;
  uint64_t v13 = type metadata accessor for FeatureFlagProvider(0LL);
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v65 = v13;
  uint64_t v15 = v14;
  uint64_t v16 = __chkstk_darwin(v13);
  uint64_t v71 = (char *)&v55 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v16);
  uint64_t v19 = (char *)&v55 - v18;
  uint64_t v20 = sub_6C5C(&qword_284ED0);
  __chkstk_darwin(v20);
  uint64_t v22 = (char *)&v55 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v58 = v22;
  uint64_t v23 = type metadata accessor for StringsFileResolver(0LL);
  uint64_t v68 = *(void *)(v23 - 8);
  uint64_t v69 = v23;
  uint64_t v24 = __chkstk_darwin(v23);
  uint64_t v70 = (char *)&v55 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v26 = __chkstk_darwin(v24);
  uint64_t v66 = (char *)&v55 - v27;
  __chkstk_darwin(v26);
  uint64_t v72 = (char *)&v55 - v28;
  (*(void (**)(void))(v29 + 32))();
  uint64_t v90 = v13;
  uint64_t v91 = &protocol witness table for FeatureFlagProvider;
  uint64_t v30 = sub_10974(&v89);
  (*(void (**)(void *, uint64_t, uint64_t))(v15 + 32))(v30, a4, v13);
  uint64_t v87 = type metadata accessor for SiriKitTaskLoggingProvider(0LL);
  uint64_t v88 = &protocol witness table for SiriKitTaskLoggingProvider;
  *(void *)&__int128 v86 = v60;
  uint64_t v31 = type metadata accessor for NowPlayingProvider(0LL);
  uint64_t v84 = v31;
  uint64_t v85 = &protocol witness table for NowPlayingProvider;
  uint64_t v32 = sub_10974(&v83);
  (*(void (**)(void *, uint64_t, uint64_t))(*(void *)(v31 - 8) + 32LL))(v32, v62, v31);
  uint64_t v81 = type metadata accessor for AppIntentInvoker(0LL);
  uint64_t v82 = &protocol witness table for AppIntentInvoker;
  *(void *)&__int128 v80 = v63;
  uint64_t v78 = type metadata accessor for SiriAudioOutputProvider();
  uint64_t v79 = &off_272868;
  *(void *)&__int128 v77 = v64;
  uint64_t v75 = type metadata accessor for AddMediaSnippetProvider();
  uint64_t v76 = &off_26EF48;
  *(void *)&__int128 v74 = v67;
  uint64_t v33 = type metadata accessor for AddMediaCatDialogService();
  uint64_t v34 = swift_allocObject(v33, 56LL, 7LL);
  *(_BYTE *)(v34 + 55) = -18;
  *(void *)(v34 + swift_weakDestroy(v0 + 16) = 0xD000000000000011LL;
  *(void *)(v34 + 24) = 0x800000000021D860LL;
  *(void *)(v34 + 3sub_6C3C(v0 + 2) = a1;
  strcpy((char *)(v34 + 40), "AddMediaIntent");
  uint64_t v57 = a1;
  *(void *)(a10 + swift_weakDestroy(v0 + 16) = v34;
  sub_157C4((uint64_t)a3, (uint64_t)v73);
  uint64_t v35 = type metadata accessor for DucTemplatingLocalContext(0LL);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v35 - 8) + 56LL))(v22, 1LL, 1LL, v35);
  unint64_t v67 = sub_7F548(&_swiftEmptyArrayStorage);
  swift_retain_n(a1, 2LL);
  uint64_t v36 = swift_retain(v34);
  uint64_t v56 = v19;
  uint64_t v37 = static FeatureFlagProvider.shared.getter(v36);
  uint64_t v38 = v66;
  static StringsFileResolver.shared.getter(v37);
  uint64_t v39 = type metadata accessor for AddMediaDialogProvider(0LL);
  uint64_t v40 = swift_allocObject(v39, 168LL, 7LL);
  uint64_t v41 = v15;
  __int128 v42 = *(void (**)(char *, char *, uint64_t))(v15 + 16);
  uint64_t v43 = v71;
  uint64_t v44 = v65;
  v42(v71, v19, v65);
  uint64_t v46 = v68;
  uint64_t v45 = v69;
  uint64_t v47 = v70;
  (*(void (**)(char *, char *, uint64_t))(v68 + 16))(v70, v38, v69);
  uint64_t v48 = sub_EE3F0(v34, v57, v67, v73, v58, v43, v47, v40);
  swift_release(v34);
  uint64_t v49 = *(void (**)(char *, uint64_t))(v46 + 8);
  uint64_t v50 = v45;
  v49(v38, v45);
  (*(void (**)(char *, uint64_t))(v41 + 8))(v56, v44);
  uint64_t v51 = v59;
  *(void *)(v59 + 27sub_6C3C(v0 + 2) = v48;
  uint64_t v52 = type metadata accessor for AddMediaViewProvider(0LL);
  uint64_t v53 = swift_allocObject(v52, 64LL, 7LL);
  swift_retain(v48);
  sub_9E554((uint64_t *)(v53 + 24));
  *(void *)(v53 + swift_weakDestroy(v0 + 16) = v48;
  sub_6C3C(v61);
  v49(v72, v50);
  *(void *)(v51 + 264) = v53;
  sub_FF54(&v89, v51 + 24);
  sub_FF54(&v86, v51 + 64);
  sub_FF54(&v77, v51 + 104);
  sub_FF54(&v74, v51 + 144);
  sub_FF54(&v83, v51 + 184);
  sub_FF54(&v80, v51 + 224);
  return v51;
}

uint64_t sub_1B9D50( uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v61 = a8;
  uint64_t v62 = a5;
  uint64_t v55 = a6;
  uint64_t v56 = a7;
  uint64_t v64 = a1;
  uint64_t v65 = a3;
  uint64_t v63 = a9;
  uint64_t v11 = type metadata accessor for NowPlayingProvider(0LL);
  uint64_t v59 = *(void *)(v11 - 8);
  uint64_t v60 = v11;
  __chkstk_darwin(v11);
  uint64_t v58 = (char *)&v51 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v13 = type metadata accessor for FeatureFlagProvider(0LL);
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = __chkstk_darwin(v13);
  uint64_t v57 = (char *)&v51 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v15);
  uint64_t v18 = (char *)&v51 - v17;
  uint64_t v19 = type metadata accessor for StringsFileResolver(0LL);
  uint64_t v20 = __chkstk_darwin(v19);
  uint64_t v22 = (char *)&v51 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v20);
  uint64_t v24 = (char *)&v51 - v23;
  uint64_t v26 = *(void (**)(char *, uint64_t, uint64_t))(v25 + 32);
  uint64_t v27 = v25;
  uint64_t v54 = v25;
  uint64_t v53 = (char *)&v51 - v23;
  v26((char *)&v51 - v23, a2, v19);
  uint64_t v28 = *(void (**)(char *, uint64_t, uint64_t))(v14 + 32);
  uint64_t v52 = v14;
  uint64_t v51 = v18;
  v28(v18, a4, v13);
  uint64_t v29 = type metadata accessor for SiriAudioOutputProvider();
  v69[3] = v29;
  v69[4] = &off_272868;
  v69[0] = v55;
  uint64_t v67 = type metadata accessor for AddMediaSnippetProvider();
  uint64_t v68 = &off_26EF48;
  v66[0] = v56;
  uint64_t v30 = type metadata accessor for AddMedia.HandleIntentStrategy();
  uint64_t v56 = swift_allocObject(v30, 280LL, 7LL);
  uint64_t v31 = sub_1094C((uint64_t)v69, v29);
  __chkstk_darwin(v31);
  uint64_t v33 = (uint64_t *)((char *)&v51 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  (*(void (**)(uint64_t *))(v34 + 16))(v33);
  uint64_t v35 = sub_1094C((uint64_t)v66, v67);
  __chkstk_darwin(v35);
  uint64_t v37 = (unint64_t *)((char *)&v51 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  (*(void (**)(unint64_t *))(v38 + 16))(v37);
  uint64_t v55 = *v33;
  unint64_t v39 = *v37;
  uint64_t v40 = *(void (**)(char *, char *, uint64_t))(v27 + 16);
  uint64_t v41 = v19;
  v40(v22, v24, v19);
  uint64_t v42 = (uint64_t)v57;
  uint64_t v43 = v13;
  (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v57, v18, v13);
  uint64_t v45 = (uint64_t)v58;
  uint64_t v44 = v59;
  uint64_t v47 = v60;
  uint64_t v46 = v61;
  (*(void (**)(char *, uint64_t, uint64_t))(v59 + 16))(v58, v61, v60);
  uint64_t v48 = v62;
  swift_retain(v62);
  uint64_t v49 = sub_1B98D8(v64, (uint64_t)v22, v65, v42, v48, v55, v39, v45, v63, v56);
  (*(void (**)(uint64_t, uint64_t))(v44 + 8))(v46, v47);
  (*(void (**)(char *, uint64_t))(v52 + 8))(v51, v43);
  (*(void (**)(char *, uint64_t))(v54 + 8))(v53, v41);
  sub_6C3C(v66);
  sub_6C3C(v69);
  return v49;
}

uint64_t sub_1BA0D8()
{
  return swift_deallocObject(v0, 96LL, 7LL);
}

uint64_t sub_1BA104(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v47 = a4;
  uint64_t v48 = a2;
  uint64_t v8 = type metadata accessor for StringsFileResolver(0LL);
  uint64_t v50 = *(void *)(v8 - 8);
  uint64_t v51 = v8;
  uint64_t v9 = __chkstk_darwin(v8);
  uint64_t v49 = (char *)&v44 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v44 - v11;
  uint64_t v13 = type metadata accessor for FeatureFlagProvider(0LL);
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = __chkstk_darwin(v13);
  uint64_t v17 = (char *)&v44 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v15);
  uint64_t v19 = (char *)&v44 - v18;
  uint64_t v20 = sub_6C5C(&qword_284ED0);
  __chkstk_darwin(v20);
  uint64_t v22 = (char *)&v44 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v46 = v22;
  uint64_t v54 = type metadata accessor for SiriKitTaskLoggingProvider(0LL);
  uint64_t v55 = &protocol witness table for SiriKitTaskLoggingProvider;
  *(void *)&__int128 v53 = a3;
  uint64_t v23 = type metadata accessor for AddMediaCatDialogService();
  uint64_t v24 = swift_allocObject(v23, 56LL, 7LL);
  *(_BYTE *)(v24 + 55) = -18;
  *(void *)(v24 + swift_weakDestroy(v0 + 16) = 0xD000000000000011LL;
  *(void *)(v24 + 24) = 0x800000000021D860LL;
  *(void *)(v24 + 3sub_6C3C(v0 + 2) = a1;
  strcpy((char *)(v24 + 40), "AddMediaIntent");
  uint64_t v44 = a1;
  *(void *)(a4 + swift_weakDestroy(v0 + 16) = v24;
  sub_157C4((uint64_t)a2, (uint64_t)v52);
  uint64_t v25 = type metadata accessor for DucTemplatingLocalContext(0LL);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v25 - 8) + 56LL))(v22, 1LL, 1LL, v25);
  unint64_t v45 = sub_7F548(&_swiftEmptyArrayStorage);
  swift_retain_n(a1, 2LL);
  uint64_t v26 = swift_retain(v24);
  uint64_t v27 = static FeatureFlagProvider.shared.getter(v26);
  uint64_t v28 = v12;
  static StringsFileResolver.shared.getter(v27);
  uint64_t v29 = type metadata accessor for AddMediaDialogProvider(0LL);
  uint64_t v30 = swift_allocObject(v29, 168LL, 7LL);
  uint64_t v31 = v14;
  uint64_t v32 = *(void (**)(char *, char *, uint64_t))(v14 + 16);
  uint64_t v33 = v17;
  uint64_t v34 = v13;
  v32(v17, v19, v13);
  uint64_t v35 = v49;
  uint64_t v36 = v50;
  uint64_t v37 = v12;
  uint64_t v38 = v51;
  (*(void (**)(char *, char *, uint64_t))(v50 + 16))(v49, v37, v51);
  uint64_t v39 = sub_EE3F0(v24, v44, v45, v52, v46, v33, v35, v30);
  swift_release(v24);
  (*(void (**)(char *, uint64_t))(v36 + 8))(v28, v38);
  (*(void (**)(char *, uint64_t))(v31 + 8))(v19, v34);
  uint64_t v40 = v47;
  *(void *)(v47 + 24) = v39;
  uint64_t v41 = type metadata accessor for AddMediaViewProvider(0LL);
  uint64_t v42 = swift_allocObject(v41, 64LL, 7LL);
  swift_retain(v39);
  sub_9E554((uint64_t *)(v42 + 24));
  *(void *)(v42 + swift_weakDestroy(v0 + 16) = v39;
  sub_6C3C(v48);
  *(void *)(v40 + 3sub_6C3C(v0 + 2) = v42;
  sub_FF54(&v53, v40 + 40);
  return v40;
}

uint64_t sub_1BA420(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v9 = sub_64FAC();
  static AceService.current.getter(v30);
  uint64_t v10 = type metadata accessor for SiriKitTaskLoggingProvider(0LL);
  uint64_t v11 = static SiriKitTaskLoggingProvider.shared.getter(v10);
  uint64_t v12 = _s27NeedsDisambiguationStrategyCMa();
  uint64_t inited = swift_initStackObject(v12, v29);
  uint64_t v14 = sub_1BA104(v9, v30, v11, inited);
  swift_release(v9);
  if (a5 == 0x657449616964656DLL && a6 == 0xEA0000000000736DLL
    || (_stringCompareWithSmolCheck(_:_:expecting:)(0x657449616964656DLL, 0xEA0000000000736DLL) & 1) != 0)
  {
    uint64_t v15 = sub_3B510();
    uint64_t v28 = (void *)v15;
    uint64_t v16 = sub_6C5C(&qword_284250);
    uint64_t v17 = sub_21318( &qword_28CF58,  &qword_284250,  (uint64_t)&protocol conformance descriptor for MediaItemDisambiguationStrategy<A>);
    uint64_t v18 = static RCHChildFlowFactoryHelper.makeNeedsDisambiguationFlowProducer<A>(strategy:)(&v28, v16, v17);
    uint64_t v20 = v19;
    swift_release(v15);
    uint64_t v21 = &unk_274478;
LABEL_9:
    uint64_t v26 = swift_allocObject(v21, 32LL, 7LL);
    *(void *)(v26 + swift_weakDestroy(v0 + 16) = v18;
    *(void *)(v26 + 24) = v20;
    sub_1BA6F8(a1);
    swift_release(v14);
    return swift_release(v26);
  }

  if (a5 == 0xD000000000000010LL && a6 == 0x800000000021C9F0LL
    || (_stringCompareWithSmolCheck(_:_:expecting:)(0xD000000000000010LL, 0x800000000021C9F0LL) & 1) != 0)
  {
    uint64_t v22 = sub_3B6C0();
    uint64_t v28 = v22;
    uint64_t v23 = sub_6C5C(&qword_284248);
    uint64_t v24 = sub_21318(&qword_28CF50, &qword_284248, (uint64_t)&unk_214E00);
    uint64_t v18 = static RCHChildFlowFactoryHelper.makeNeedsDisambiguationFlowProducer<A>(strategy:)(&v28, v23, v24);
    uint64_t v20 = v25;
    swift_release(v22);
    uint64_t v21 = &unk_274450;
    goto LABEL_9;
  }

  uint64_t result = _assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000003DLL,  0x8000000000223090LL,  "AudioFlowDelegatePlugin/AddMedia+ChildFlowFactory.swift",  55LL,  2LL,  75LL,  0);
  __break(1u);
  return result;
}

uint64_t sub_1BA6D4()
{
  return swift_deallocObject(v0, 32LL, 7LL);
}

uint64_t sub_1BA6F8(uint64_t a1)
{
  return (*(uint64_t (**)(uint64_t))(v1 + 16))(a1);
}

uint64_t sub_1BA72C( uint64_t a1, char a2, void *a3, void (*a4)(id), uint64_t a5, void *a6, void *a7)
{
  uint64_t v139 = a6;
  uint64_t v145 = a5;
  uint64_t v12 = type metadata accessor for Device(0LL);
  uint64_t v146 = *(void *)(v12 - 8);
  uint64_t v147 = v12;
  __chkstk_darwin(v12);
  uint64_t v14 = (char *)v128 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v140 = type metadata accessor for PlaybackControlsFeatureFlagProvider(0LL);
  uint64_t v138 = *(void *)(v140 - 8);
  uint64_t v15 = __chkstk_darwin(v140);
  uint64_t v137 = (char *)v128 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v15);
  uint64_t v136 = (char *)v128 - v17;
  uint64_t v18 = type metadata accessor for OSSignpostID(0LL);
  uint64_t v143 = *(void *)(v18 - 8);
  uint64_t v144 = (uint64_t (*)(void))v18;
  __chkstk_darwin(v18);
  uint64_t v142 = (char **)((char *)v128 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  uint64_t v20 = type metadata accessor for Logger(0LL);
  uint64_t v21 = *(void *)(v20 - 8);
  uint64_t v22 = __chkstk_darwin(v20);
  uint64_t v24 = (char *)v128 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v25 = __chkstk_darwin(v22);
  uint64_t v26 = __chkstk_darwin(v25);
  __chkstk_darwin(v26);
  uint64_t v30 = (char *)v128 - v29;
  if ((a2 & 1) != 0)
  {
    swift_errorRetain(a1);
    if (qword_283888 != -1) {
      swift_once(&qword_283888, sub_BFC5C);
    }
    uint64_t v52 = sub_6960(v20, (uint64_t)qword_2969C8);
    (*(void (**)(char *, uint64_t, uint64_t))(v21 + 16))(v24, v52, v20);
    swift_errorRetain(a1);
    uint64_t v53 = swift_errorRetain(a1);
    uint64_t v54 = (os_log_s *)Logger.logObject.getter(v53);
    uint64_t v55 = v20;
    os_log_type_t v56 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v54, v56))
    {
      uint64_t v147 = v55;
      uint64_t v57 = swift_slowAlloc(12LL, -1LL);
      uint64_t v141 = a3;
      uint64_t v58 = (uint8_t *)v57;
      uint64_t v59 = swift_slowAlloc(32LL, -1LL);
      v148[0] = v59;
      *(_DWORD *)uint64_t v58 = 136315138;
      uint64_t v135 = (uint64_t (**)(char *, uint64_t))v21;
      swift_getErrorValue(a1, v151, v150);
      uint64_t v60 = Error.localizedDescription.getter(v150[1], v150[2]);
      unint64_t v62 = v61;
      uint64_t v149 = sub_6978(v60, v61, v148);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v149, v150);
      swift_bridgeObjectRelease(v62);
      sub_25404(a1, 1);
      sub_25404(a1, 1);
      _os_log_impl( &dword_0,  v54,  v56,  "DetermineIntent#amendTargetDeviceIdsIfWHA Error resolving devices: %s",  v58,  0xCu);
      swift_arrayDestroy(v59, 1LL, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v59, -1LL, -1LL);
      uint64_t v63 = v58;
      a3 = v141;
      swift_slowDealloc(v63, -1LL, -1LL);

      uint64_t v64 = v135[1](v24, v147);
    }

    else
    {
      sub_25404(a1, 1);
      sub_25404(a1, 1);

      uint64_t v64 = (*(uint64_t (**)(char *, uint64_t))(v21 + 8))(v24, v55);
    }

    uint64_t v109 = static os_signpost_type_t.event.getter(v64);
    if (qword_2838D0 != -1) {
      swift_once(&qword_2838D0, sub_1362AC);
    }
    uint64_t v110 = qword_296AA0;
    uint64_t v111 = sub_6C5C((uint64_t *)&unk_289320);
    uint64_t v112 = swift_allocObject(v111, 72LL, 7LL);
    *(_OWORD *)(v112 + swift_weakDestroy(v0 + 16) = xmmword_214510;
    *(void *)(v112 + 56) = &type metadata for Int;
    *(void *)(v112 + 64) = &protocol witness table for Int;
    *(void *)(v112 + 3sub_6C3C(v0 + 2) = -1LL;
    uint64_t v113 = v142;
    static OSSignpostID.exclusive.getter(v112);
    os_signpost(_:dso:log:name:signpostID:_:_:)( v109,  &dword_0,  v110,  "resolveWHADestinationDevicesResponse",  36LL,  2LL,  v113,  "status=%{signpost.telemetry:number1,public}d enableTelemetry=YES ",  65LL,  2,  v112);
    __n128 v114 = swift_bridgeObjectRelease(v112);
    (*(void (**)(char **, uint64_t (*)(void), __n128))(v143 + 8))(v113, v144, v114);
    a4([a3 setWhaError:1]);
    return sub_25404(a1, 1);
  }

  else
  {
    uint64_t v134 = v28;
    uint64_t v131 = v27;
    uint64_t v141 = a3;
    uint64_t v31 = qword_283888;
    swift_bridgeObjectRetain(a1);
    if (v31 != -1) {
      swift_once(&qword_283888, sub_BFC5C);
    }
    uint64_t v32 = sub_6960(v20, (uint64_t)qword_2969C8);
    uint64_t v33 = v21;
    uint64_t v34 = *(void (**)(char *))(v21 + 16);
    uint64_t v132 = v32;
    v34(v30);
    uint64_t v35 = swift_bridgeObjectRetain_n(a1, 2LL);
    uint64_t v36 = (os_log_s *)Logger.logObject.getter(v35);
    os_log_type_t v37 = static os_log_type_t.default.getter();
    BOOL v38 = os_log_type_enabled(v36, v37);
    uint64_t v133 = a7;
    if (v38)
    {
      uint64_t v39 = swift_slowAlloc(12LL, -1LL);
      uint64_t v130 = v34;
      uint64_t v40 = (uint8_t *)v39;
      uint64_t v129 = swift_slowAlloc(32LL, -1LL);
      v148[0] = v129;
      uint64_t v135 = (uint64_t (**)(char *, uint64_t))v33;
      *(_DWORD *)uint64_t v40 = 136446210;
      v128[1] = v40 + 4;
      uint64_t v41 = Array.debugDescription.getter(a1, v147);
      uint64_t v42 = v20;
      uint64_t v43 = a4;
      unint64_t v45 = v44;
      uint64_t v149 = sub_6978(v41, v44, v148);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v149, v150);
      unint64_t v46 = v45;
      a4 = v43;
      uint64_t v20 = v42;
      swift_bridgeObjectRelease(v46);
      sub_25404(a1, 0);
      sub_25404(a1, 0);
      _os_log_impl( &dword_0,  v36,  v37,  "DetermineIntent#amendTargetDeviceIdsIfWHA Resolved devices %{public}s",  v40,  0xCu);
      uint64_t v47 = v129;
      swift_arrayDestroy(v129, 1LL, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v47, -1LL, -1LL);
      uint64_t v48 = v40;
      uint64_t v34 = v130;
      swift_slowDealloc(v48, -1LL, -1LL);

      uint64_t v49 = (uint64_t (**)(char *, uint64_t))v135[1];
      uint64_t v50 = v30;
      uint64_t v51 = v42;
    }

    else
    {
      sub_25404(a1, 0);
      sub_25404(a1, 0);

      uint64_t v49 = *(uint64_t (***)(char *, uint64_t))(v33 + 8);
      uint64_t v50 = v30;
      uint64_t v51 = v20;
    }

    uint64_t v135 = v49;
    uint64_t v65 = ((uint64_t (*)(char *, uint64_t))v49)(v50, v51);
    uint64_t v66 = a4;
    uint64_t v67 = static os_signpost_type_t.event.getter(v65);
    uint64_t v68 = v141;
    if (qword_2838D0 != -1) {
      swift_once(&qword_2838D0, sub_1362AC);
    }
    uint64_t v69 = qword_296AA0;
    uint64_t v70 = sub_6C5C((uint64_t *)&unk_289320);
    uint64_t v71 = swift_allocObject(v70, 72LL, 7LL);
    *(_OWORD *)(v71 + swift_weakDestroy(v0 + 16) = xmmword_214510;
    *(void *)(v71 + 56) = &type metadata for Int;
    *(void *)(v71 + 64) = &protocol witness table for Int;
    *(void *)(v71 + 3sub_6C3C(v0 + 2) = 0LL;
    uint64_t v72 = v142;
    static OSSignpostID.exclusive.getter(v71);
    os_signpost(_:dso:log:name:signpostID:_:_:)( v67,  &dword_0,  v69,  "resolveWHADestinationDevicesResponse",  36LL,  2LL,  v72,  "status=%{signpost.telemetry:number1,public}d enableTelemetry=YES ",  65LL,  2,  v71);
    __n128 v73 = swift_bridgeObjectRelease(v71);
    (*(void (**)(char **, uint64_t (*)(void), __n128))(v143 + 8))(v72, v144, v73);
    if (*(void *)(a1 + 16))
    {
      [v68 setWhaError:0];
      __int128 v74 = v139;
      uint64_t v75 = (void (*)(char *, uint64_t))v139[3];
      uint64_t v76 = v139[4];
      sub_6EA8(v139, (uint64_t)v75);
      if ((sub_171274(v75, v76) & 1) == 0)
      {
        swift_bridgeObjectRetain(a1);
        BOOL v78 = sub_18B4E0(v77);
        sub_25404(a1, 0);
        if (!v78)
        {
          uint64_t v79 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v34)(v131, v132, v20);
          __int128 v80 = (os_log_s *)Logger.logObject.getter(v79);
          os_log_type_t v81 = static os_log_type_t.default.getter();
          if (os_log_type_enabled(v80, v81))
          {
            uint64_t v82 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
            *(_WORD *)uint64_t v82 = 0;
            _os_log_impl( &dword_0,  v80,  v81,  "DetermineIntent#amendTargetDeviceIdsIfWHA TVs were not explicitely targeted in the intent. Pruning from all devices",  v82,  2u);
            swift_slowDealloc(v82, -1LL, -1LL);
          }

          ((void (*)(uint64_t, uint64_t))v135)(v131, v20);
          uint64_t v83 = v74[3];
          uint64_t v84 = v74[4];
          sub_6EA8(v74, v83);
          uint64_t v85 = sub_17235C(v83, v84);
          uint64_t v86 = sub_18B70C(v85, a1);
          swift_bridgeObjectRelease(v85);
          sub_25404(a1, 0);
          a1 = v86;
        }
      }

      uint64_t v144 = (uint64_t (*)(void))v66;
      sub_157C4((uint64_t)v74, (uint64_t)v148);
      __n128 v87 = swift_bridgeObjectRetain(a1);
      uint64_t v88 = v136;
      static PlaybackControlsFeatureFlagProvider.instance.getter(v87);
      uint64_t v89 = v138;
      uint64_t v90 = v140;
      (*(void (**)(char *, char *, uint64_t))(v138 + 16))(v137, v88, v140);
      uint64_t v91 = (char **)sub_18C9C8(v148, a1);
      (*(void (**)(char *, uint64_t))(v89 + 8))(v88, v90);
      sub_1BC9E8(v91);
      uint64_t v93 = v92;
      [v68 setWhaDialogMetadata:v92];

      uint64_t v94 = *(void *)(a1 + 16);
      if (v94)
      {
        unint64_t v95 = a1 + ((*(unsigned __int8 *)(v146 + 80) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(v146 + 80));
        uint64_t v96 = *(void *)(v146 + 72);
        uint64_t v97 = a1;
        uint64_t v98 = *(uint64_t (**)(char *, unint64_t, uint64_t, __n128))(v146 + 16);
        uint64_t v142 = v91;
        uint64_t v143 = v97;
        __n128 v99 = swift_bridgeObjectRetain(v97);
        uint64_t v100 = _swiftEmptyArrayStorage;
        do
        {
          uint64_t v102 = v147;
          uint64_t v103 = v98(v14, v95, v147, v99);
          uint64_t v104 = Device.identifier.getter(v103);
          uint64_t v106 = v105;
          (*(void (**)(char *, uint64_t))(v146 + 8))(v14, v102);
          if (v106)
          {
            if ((swift_isUniquelyReferenced_nonNull_native(v100) & 1) == 0) {
              uint64_t v100 = sub_1FC6C(0LL, v100[2] + 1LL, 1, v100);
            }
            unint64_t v108 = v100[2];
            unint64_t v107 = v100[3];
            if (v108 >= v107 >> 1) {
              uint64_t v100 = sub_1FC6C((void *)(v107 > 1), v108 + 1, 1, v100);
            }
            v100[2] = v108 + 1;
            uint64_t v101 = &v100[2 * v108];
            v101[4] = v104;
            v101[5] = v106;
          }

          v95 += v96;
          --v94;
        }

        while (v94);
        swift_bridgeObjectRelease_n(v143, 2LL);
        uint64_t v68 = v141;
        uint64_t v91 = v142;
      }

      else
      {
        swift_bridgeObjectRelease(a1);
        uint64_t v100 = _swiftEmptyArrayStorage;
      }

      Class isa = Array._bridgeToObjectiveC()().super.isa;
      [v68 setTargetDeviceIds:isa];

      sub_1641C(0LL, (unint64_t *)&qword_289350, &OBJC_CLASS___NSNumber_ptr);
      Class v121 = NSNumber.init(BOOLeanLiteral:)(0).super.super.isa;
      [v68 setWhaIsInHereBasedOnRoutes:v121];

      uint64_t v122 = v133[3];
      uint64_t v123 = v133[4];
      sub_6EA8(v133, v122);
      uint64_t v124 = v68;
      uint64_t v125 = (void *)swift_allocObject(&unk_2744D0, 48LL, 7LL);
      v125[2] = v144;
      uint64_t v126 = v145;
      v125[3] = v145;
      v125[4] = v100;
      v125[5] = v124;
      swift_retain(v126);
      id v127 = v124;
      dispatch thunk of SharedContextProviding.fetchPrimaryDeviceContext(completion:)(sub_1BE64C, v125, v122, v123);

      return swift_release(v125);
    }

    else
    {
      sub_25404(a1, 0);
      uint64_t v116 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v34)(v134, v132, v20);
      uint64_t v117 = (os_log_s *)Logger.logObject.getter(v116);
      os_log_type_t v118 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v117, v118))
      {
        uint64_t v119 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
        *(_WORD *)uint64_t v119 = 0;
        _os_log_impl( &dword_0,  v117,  v118,  "DetermineIntent#amendTargetDeviceIdsIfWHA No resolved devices found",  v119,  2u);
        swift_slowDealloc(v119, -1LL, -1LL);
      }

      ((void (*)(uint64_t, uint64_t))v135)(v134, v20);
      return ((uint64_t (*)(id))v66)([v68 setWhaError:1]);
    }
  }

void sub_1BB3A8(void *a1, void (*a2)(void), uint64_t a3, void *a4, void *a5)
{
  if (!a1) {
    goto LABEL_7;
  }
  id v16 = a1;
  id v8 = [v16 mediaRouteIdentifier];
  if (!v8)
  {

LABEL_7:
    a2();
    return;
  }

  uint64_t v9 = v8;
  uint64_t v10 = static String._unconditionallyBridgeFromObjectiveC(_:)(v8);
  uint64_t v12 = v11;

  char v13 = sub_881D0(v10, v12, a4);
  __n128 v14 = swift_bridgeObjectRelease(v12);
  if ((v13 & 1) != 0)
  {
    sub_1641C(0LL, (unint64_t *)&qword_289350, &OBJC_CLASS___NSNumber_ptr);
    Class isa = NSNumber.init(BOOLeanLiteral:)(1).super.super.isa;
    [a5 setWhaIsInHereBasedOnRoutes:isa];
  }

  ((void (*)(__n128))a2)(v14);
}

uint64_t sub_1BB4C0( uint64_t a1, void *a2, uint64_t a3, void (*a4)(void), uint64_t a5, void *a6, uint64_t a7, uint64_t a8)
{
  uint64_t v42 = a2;
  uint64_t v43 = a3;
  uint64_t v14 = type metadata accessor for Logger(0LL);
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v17 = (char *)v36 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  v48[3] = a7;
  v48[4] = a8;
  uint64_t v18 = sub_10974(v48);
  (*(void (**)(void *, uint64_t, uint64_t))(*(void *)(a7 - 8) + 16LL))(v18, a1, a7);
  if (qword_283888 != -1) {
    swift_once(&qword_283888, sub_BFC5C);
  }
  uint64_t v19 = sub_6960(v14, (uint64_t)qword_2969C8);
  (*(void (**)(char *, uint64_t, uint64_t))(v15 + 16))(v17, v19, v14);
  uint64_t v20 = sub_157C4((uint64_t)v48, (uint64_t)v47);
  uint64_t v21 = (os_log_s *)Logger.logObject.getter(v20);
  os_log_type_t v22 = static os_log_type_t.debug.getter();
  uint64_t v41 = v15;
  os_log_type_t v23 = v22;
  if (os_log_type_enabled(v21, v22))
  {
    uint64_t v40 = a8;
    uint64_t v24 = swift_slowAlloc(12LL, -1LL);
    uint64_t v39 = a6;
    uint64_t v25 = (uint8_t *)v24;
    uint64_t v26 = swift_slowAlloc(32LL, -1LL);
    os_log_type_t v37 = a4;
    uint64_t v27 = v26;
    uint64_t v46 = v26;
    uint64_t v38 = a5;
    *(_DWORD *)uint64_t v25 = 136315138;
    v36[1] = v25 + 4;
    sub_157C4((uint64_t)v47, (uint64_t)&v44);
    uint64_t v28 = sub_6C5C(&qword_28CF60);
    uint64_t v29 = String.init<A>(describing:)(&v44, v28);
    unint64_t v31 = v30;
    uint64_t v44 = sub_6978(v29, v30, &v46);
    a5 = v38;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v44, &v45);
    unint64_t v32 = v31;
    a8 = v40;
    swift_bridgeObjectRelease(v32);
    sub_6C3C(v47);
    _os_log_impl(&dword_0, v21, v23, "DetermineIntent#amend Reached amend logic with audio intent: %s", v25, 0xCu);
    swift_arrayDestroy(v27, 1LL, (char *)&type metadata for Any + 8);
    uint64_t v33 = v27;
    a4 = v37;
    swift_slowDealloc(v33, -1LL, -1LL);
    uint64_t v34 = v25;
    a6 = v39;
    swift_slowDealloc(v34, -1LL, -1LL);
  }

  else
  {
    sub_6C3C(v47);
  }

  (*(void (**)(char *, uint64_t))(v41 + 8))(v17, v14);
  sub_1BB798((uint64_t)v18, a6, a7, a8);
  sub_1BC0D0((uint64_t)v18, a6, a7, a8);
  sub_1BC5E0((uint64_t)v18, v42, v43, a4, a5, a6, a7, a8);
  return sub_6C3C(v48);
}

uint64_t sub_1BB798(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  id v94 = a2;
  uint64_t v98 = a1;
  uint64_t v6 = type metadata accessor for CommonAudio.Attribute(0LL);
  uint64_t v83 = *(void *)(v6 - 8);
  uint64_t v84 = v6;
  __chkstk_darwin(v6);
  uint64_t v82 = (char *)&v80 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v95 = type metadata accessor for Logger(0LL);
  uint64_t v89 = *(void *)(v95 - 8);
  __chkstk_darwin(v95);
  uint64_t v86 = (char *)&v80 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v9 = sub_6C5C(&qword_284DC8);
  __chkstk_darwin(v9);
  uint64_t v90 = (char *)&v80 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v11 = type metadata accessor for CommonAudio.MediaType(0LL);
  uint64_t v92 = *(void *)(v11 - 8);
  uint64_t v93 = (uint64_t (*)(void, void, void))v11;
  uint64_t v12 = __chkstk_darwin(v11);
  __n128 v87 = (char *)&v80 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v14 = __chkstk_darwin(v12);
  __int128 v80 = (char *)&v80 - v15;
  uint64_t v16 = __chkstk_darwin(v14);
  uint64_t v85 = (char *)&v80 - v17;
  __chkstk_darwin(v16);
  uint64_t v88 = (char *)&v80 - v18;
  uint64_t v19 = type metadata accessor for CommonAudio.Verb(0LL);
  uint64_t v20 = *(void *)(v19 - 8);
  __chkstk_darwin(v19);
  os_log_type_t v81 = (char *)&v80 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v22 = sub_6C5C(&qword_284DA8);
  __chkstk_darwin(v22);
  uint64_t v24 = (char *)&v80 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v25 = sub_6C5C(&qword_284DB0);
  uint64_t v26 = __chkstk_darwin(v25);
  uint64_t v28 = (char *)&v80 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v29 = __chkstk_darwin(v26);
  unint64_t v31 = (char *)&v80 - v30;
  uint64_t v32 = __chkstk_darwin(v29);
  uint64_t v34 = (char *)&v80 - v33;
  __chkstk_darwin(v32);
  uint64_t v36 = (char *)&v80 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v96 = v37;
  (*(void (**)(char *, uint64_t, uint64_t))(v37 + 16))(v36, v98, a3);
  uint64_t v97 = v36;
  uint64_t v98 = a3;
  uint64_t v91 = a4;
  dispatch thunk of AudioIntent.verb.getter(a3, a4);
  (*(void (**)(char *, void, uint64_t))(v20 + 104))( v31,  enum case for CommonAudio.Verb.directedAcousticId(_:),  v19);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v20 + 56))(v31, 0LL, 1LL, v19);
  uint64_t v38 = (uint64_t)&v24[*(int *)(v22 + 48)];
  sub_D8208((uint64_t)v34, (uint64_t)v24);
  sub_D8208((uint64_t)v31, v38);
  uint64_t v39 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v20 + 48);
  if (v39((uint64_t)v24, 1LL, v19) == 1)
  {
    sub_1F6CC((uint64_t)v31, &qword_284DB0);
    sub_1F6CC((uint64_t)v34, &qword_284DB0);
    if (v39(v38, 1LL, v19) == 1)
    {
      sub_1F6CC((uint64_t)v24, &qword_284DB0);
      uint64_t v40 = v97;
LABEL_8:
      [v94 setRequestType:7];
      return (*(uint64_t (**)(char *, uint64_t))(v96 + 8))(v40, v98);
    }

    goto LABEL_6;
  }

  sub_D8208((uint64_t)v24, (uint64_t)v28);
  if (v39(v38, 1LL, v19) == 1)
  {
    sub_1F6CC((uint64_t)v31, &qword_284DB0);
    sub_1F6CC((uint64_t)v34, &qword_284DB0);
    (*(void (**)(char *, uint64_t))(v20 + 8))(v28, v19);
LABEL_6:
    sub_1F6CC((uint64_t)v24, &qword_284DA8);
    uint64_t v41 = v93;
    uint64_t v40 = v97;
    uint64_t v42 = v95;
    goto LABEL_9;
  }

  uint64_t v43 = v81;
  (*(void (**)(char *, uint64_t, uint64_t))(v20 + 32))(v81, v38, v19);
  uint64_t v44 = sub_10430( (unint64_t *)&qword_284E08,  (uint64_t (*)(uint64_t))&type metadata accessor for CommonAudio.Verb,  (uint64_t)&protocol conformance descriptor for CommonAudio.Verb);
  char v45 = dispatch thunk of static Equatable.== infix(_:_:)(v28, v43, v19, v44);
  uint64_t v46 = *(void (**)(char *, uint64_t))(v20 + 8);
  v46(v43, v19);
  sub_1F6CC((uint64_t)v31, &qword_284DB0);
  sub_1F6CC((uint64_t)v34, &qword_284DB0);
  v46(v28, v19);
  sub_1F6CC((uint64_t)v24, &qword_284DB0);
  uint64_t v41 = v93;
  uint64_t v40 = v97;
  uint64_t v42 = v95;
  if ((v45 & 1) != 0) {
    goto LABEL_8;
  }
LABEL_9:
  uint64_t v48 = (uint64_t)v90;
  uint64_t v47 = v91;
  dispatch thunk of AudioIntent.mediaType.getter(v98, v91);
  uint64_t v49 = v92;
  if ((*(unsigned int (**)(uint64_t, uint64_t, void))(v92 + 48))(v48, 1LL, v41) != 1)
  {
    os_log_type_t v56 = v88;
    (*(void (**)(char *, uint64_t, uint64_t (*)(void, void, void)))(v49 + 32))(v88, v48, v41);
    if (qword_283888 != -1) {
      swift_once(&qword_283888, sub_BFC5C);
    }
    uint64_t v57 = sub_6960(v42, (uint64_t)qword_2969C8);
    uint64_t v58 = v86;
    (*(void (**)(char *, uint64_t, uint64_t))(v89 + 16))(v86, v57, v42);
    uint64_t v59 = v85;
    uint64_t v60 = v56;
    uint64_t v93 = *(uint64_t (**)(void, void, void))(v49 + 16);
    uint64_t v61 = v93(v85, v56, v41);
    uint64_t v62 = v49;
    uint64_t v63 = (os_log_s *)Logger.logObject.getter(v61);
    os_log_type_t v64 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v63, v64))
    {
      uint64_t v65 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
      uint64_t v91 = swift_slowAlloc(32LL, -1LL);
      v100[0] = v91;
      uint64_t v66 = v62;
      *(_DWORD *)uint64_t v65 = 136315138;
      uint64_t v90 = (char *)(v65 + 4);
      uint64_t v67 = v80;
      v93(v80, v59, v41);
      uint64_t v68 = String.init<A>(describing:)(v67, v41);
      unint64_t v70 = v69;
      uint64_t v99 = sub_6978(v68, v69, v100);
      uint64_t v60 = v88;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v99, v100);
      __n128 v71 = swift_bridgeObjectRelease(v70);
      uint64_t v72 = *(void (**)(void, void, __n128))(v62 + 8);
      uint64_t v73 = v66;
      v72(v59, v41, v71);
      _os_log_impl(&dword_0, v63, v64, "DetermineIntent#amend Checking mediaType: %s", v65, 0xCu);
      uint64_t v74 = v91;
      swift_arrayDestroy(v91, 1LL, (char *)&type metadata for Any + 8);
      uint64_t v40 = v97;
      swift_slowDealloc(v74, -1LL, -1LL);
      swift_slowDealloc(v65, -1LL, -1LL);

      (*(void (**)(char *, uint64_t))(v89 + 8))(v58, v95);
      uint64_t v75 = v73;
    }

    else
    {
      uint64_t v75 = v62;
      uint64_t v72 = *(void (**)(void, void, __n128))(v62 + 8);
      ((void (*)(char *, uint64_t (*)(void, void, void)))v72)(v59, v41);

      (*(void (**)(char *, uint64_t))(v89 + 8))(v58, v42);
    }

    uint64_t v76 = v87;
    v93(v87, v60, v41);
    int v77 = (*(uint64_t (**)(char *, uint64_t (*)(void, void, void)))(v75 + 88))(v76, v41);
    if (v77 == enum case for CommonAudio.MediaType.artist(_:))
    {
      [v94 setRequestType:1];
LABEL_30:
      BOOL v78 = v60;
LABEL_31:
      ((void (*)(char *, uint64_t (*)(void, void, void)))v72)(v78, v41);
      return (*(uint64_t (**)(char *, uint64_t))(v96 + 8))(v40, v98);
    }

    if (v77 == enum case for CommonAudio.MediaType.playlist(_:))
    {
LABEL_20:
      [v94 setRequestType:5];
      goto LABEL_30;
    }

    if (v77 == enum case for CommonAudio.MediaType.radioShow(_:))
    {
LABEL_22:
      [v94 setRequestType:4];
      goto LABEL_30;
    }

    if (v77 != enum case for CommonAudio.MediaType.song(_:) && v77 != enum case for CommonAudio.MediaType.music(_:))
    {
      if (v77 == enum case for CommonAudio.MediaType.album(_:))
      {
        [v94 setRequestType:2];
        goto LABEL_30;
      }

      if (v77 == enum case for CommonAudio.MediaType.radioStation(_:)) {
        goto LABEL_22;
      }
      if (v77 != enum case for CommonAudio.MediaType.single(_:))
      {
        if (v77 != enum case for CommonAudio.MediaType.musicPlaylist(_:))
        {
          [v94 setRequestType:0];
          ((void (*)(char *, uint64_t (*)(void, void, void)))v72)(v60, v41);
          BOOL v78 = v76;
          goto LABEL_31;
        }

        goto LABEL_20;
      }
    }

    [v94 setRequestType:0];
    goto LABEL_30;
  }

  sub_1F6CC(v48, &qword_284DC8);
  uint64_t v50 = dispatch thunk of AudioIntent.attributes.getter(v98, v47);
  uint64_t v52 = (uint64_t)v82;
  uint64_t v51 = v83;
  uint64_t v53 = v84;
  (*(void (**)(char *, void, uint64_t))(v83 + 104))( v82,  enum case for CommonAudio.Attribute.releaseDate(_:),  v84);
  char v54 = sub_1427C0(v52, v50);
  __n128 v55 = swift_bridgeObjectRelease(v50);
  (*(void (**)(uint64_t, uint64_t, __n128))(v51 + 8))(v52, v53, v55);
  if ((v54 & 1) != 0) {
    [v94 setRequestType:3];
  }
  return (*(uint64_t (**)(char *, uint64_t))(v96 + 8))(v40, v98);
}

uint64_t sub_1BC0D0(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  id v57 = a2;
  uint64_t v7 = type metadata accessor for CommonAudio.Attribute(0LL);
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v59 = (char *)v50 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v10 = type metadata accessor for Logger(0LL);
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)v50 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  v64[3] = a3;
  v64[4] = a4;
  uint64_t v14 = a4;
  uint64_t v15 = sub_10974(v64);
  uint64_t v16 = *(void (**)(void *, uint64_t, uint64_t))(*(void *)(a3 - 8) + 16LL);
  uint64_t v58 = v15;
  uint64_t v17 = a3;
  v16(v15, a1, a3);
  if (qword_283888 != -1) {
    swift_once(&qword_283888, sub_BFC5C);
  }
  uint64_t v18 = sub_6960(v10, (uint64_t)qword_2969C8);
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v13, v18, v10);
  uint64_t v19 = sub_157C4((uint64_t)v64, (uint64_t)v62);
  uint64_t v20 = v10;
  uint64_t v21 = (os_log_s *)Logger.logObject.getter(v19);
  os_log_type_t v22 = static os_log_type_t.debug.getter();
  int v23 = v22;
  if (os_log_type_enabled(v21, v22))
  {
    int v53 = v23;
    uint64_t v24 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
    uint64_t v52 = swift_slowAlloc(32LL, -1LL);
    v61[0] = v52;
    uint64_t v54 = v11;
    uint64_t v55 = v20;
    uint64_t v51 = v24;
    *(_DWORD *)uint64_t v24 = 136315138;
    v50[1] = v24 + 4;
    sub_6EA8(v62, v63);
    uint64_t v25 = dispatch thunk of AudioIntent.attributes.getter(v17, v14);
    uint64_t v26 = sub_10430( &qword_287DD0,  (uint64_t (*)(uint64_t))&type metadata accessor for CommonAudio.Attribute,  (uint64_t)&protocol conformance descriptor for CommonAudio.Attribute);
    uint64_t v27 = Set.description.getter(v25, v7, v26);
    uint64_t v56 = v8;
    unint64_t v29 = v28;
    swift_bridgeObjectRelease(v25);
    uint64_t v60 = sub_6978(v27, v29, v61);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v60, v61);
    unint64_t v30 = v29;
    uint64_t v8 = v56;
    swift_bridgeObjectRelease(v30);
    sub_6C3C(v62);
    unint64_t v31 = v51;
    _os_log_impl( &dword_0,  v21,  (os_log_type_t)v53,  "DetermineIntent#amendPreviousAndNextAttributes Checking attributes: %s",  v51,  0xCu);
    uint64_t v32 = v52;
    swift_arrayDestroy(v52, 1LL, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v32, -1LL, -1LL);
    swift_slowDealloc(v31, -1LL, -1LL);

    (*(void (**)(char *, uint64_t))(v54 + 8))(v13, v55);
  }

  else
  {
    sub_6C3C(v62);

    (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v20);
  }

  uint64_t v33 = dispatch thunk of AudioIntent.attributes.getter(v17, v14);
  uint64_t v34 = *(void (**)(char *, void, uint64_t))(v8 + 104);
  uint64_t v35 = (uint64_t)v59;
  v34(v59, enum case for CommonAudio.Attribute.next(_:), v7);
  char v36 = sub_1427C0(v35, v33);
  __n128 v37 = swift_bridgeObjectRelease(v33);
  uint64_t v38 = *(void (**)(uint64_t, uint64_t, __n128))(v8 + 8);
  v38(v35, v7, v37);
  sub_157C4((uint64_t)v64, (uint64_t)v62);
  if ((v36 & 1) == 0)
  {
    sub_6EA8(v62, v63);
    uint64_t v39 = dispatch thunk of AudioIntent.attributes.getter(v17, v14);
    v34((char *)v35, enum case for CommonAudio.Attribute.playNext(_:), v7);
    char v40 = sub_1427C0(v35, v39);
    __n128 v41 = swift_bridgeObjectRelease(v39);
    v38(v35, v7, v41);
    sub_6C3C(v62);
    if ((v40 & 1) != 0) {
      goto LABEL_9;
    }
    uint64_t v42 = dispatch thunk of AudioIntent.attributes.getter(v17, v14);
    v34((char *)v35, enum case for CommonAudio.Attribute.previous(_:), v7);
    char v43 = sub_1427C0(v35, v42);
    __n128 v44 = swift_bridgeObjectRelease(v42);
    v38(v35, v7, v44);
    sub_157C4((uint64_t)v64, (uint64_t)v61);
    if ((v43 & 1) != 0)
    {
      sub_6C3C(v61);
    }

    else
    {
      sub_6EA8(v61, v61[3]);
      uint64_t v45 = dispatch thunk of AudioIntent.attributes.getter(v17, v14);
      v34((char *)v35, enum case for CommonAudio.Attribute.playLast(_:), v7);
      char v46 = sub_1427C0(v35, v45);
      __n128 v47 = swift_bridgeObjectRelease(v45);
      v38(v35, v7, v47);
      sub_6C3C(v61);
      if ((v46 & 1) == 0)
      {
        uint64_t v48 = 1LL;
        goto LABEL_15;
      }
    }

    uint64_t v48 = 3LL;
LABEL_15:
    [v57 setQueueLocation:v48];
    return sub_6C3C(v64);
  }

  sub_6C3C(v62);
LABEL_9:
  [v57 setQueueLocation:2];
  return sub_6C3C(v64);
}

uint64_t sub_1BC5E0( uint64_t a1, void *a2, uint64_t a3, void (*a4)(void), uint64_t a5, void *a6, uint64_t a7, uint64_t a8)
{
  uint64_t v45 = a6;
  uint64_t v47 = a5;
  char v46 = a4;
  uint64_t v44 = a3;
  uint64_t v12 = type metadata accessor for Logger(0LL);
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = __chkstk_darwin(v12);
  uint64_t v16 = (char *)&v44 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v14);
  uint64_t v18 = (char *)&v44 - v17;
  v54[3] = a7;
  v54[4] = a8;
  uint64_t v19 = sub_10974(v54);
  (*(void (**)(void *, uint64_t, uint64_t))(*(void *)(a7 - 8) + 16LL))(v19, a1, a7);
  if (qword_283888 != -1) {
    swift_once(&qword_283888, sub_BFC5C);
  }
  uint64_t v20 = sub_6960(v12, (uint64_t)qword_2969C8);
  uint64_t v21 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v13 + 16);
  uint64_t v22 = v21(v18, v20, v12);
  int v23 = (os_log_s *)Logger.logObject.getter(v22);
  os_log_type_t v24 = ((uint64_t (*)(void))static os_log_type_t.default.getter)();
  if (os_log_type_enabled(v23, v24))
  {
    uint64_t v25 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
    *(_WORD *)uint64_t v25 = 0;
    _os_log_impl(&dword_0, v23, v24, "DetermineIntent#amendTargetDeviceIdsIfWHA Reached logic", v25, 2u);
    swift_slowDealloc(v25, -1LL, -1LL);
  }

  uint64_t v26 = *(void (**)(char *, uint64_t))(v13 + 8);
  v26(v18, v12);
  sub_157C4((uint64_t)v54, (uint64_t)v50);
  uint64_t v27 = sub_6C5C(&qword_28CF60);
  uint64_t v28 = sub_6C5C(&qword_28CF68);
  if (swift_dynamicCast(v48, v50, v27, v28, 6LL))
  {
    sub_FF54(v48, (uint64_t)v51);
    uint64_t v29 = v52;
    uint64_t v30 = v53;
    sub_6EA8(v51, v52);
    if ((HomeAutomationEntityProviding.hasHomeAutomationNodes.getter(v29, v30) & 1) != 0)
    {
      uint64_t v31 = a2[3];
      uint64_t v32 = a2[4];
      sub_6EA8(a2, v31);
      sub_157C4((uint64_t)v51, (uint64_t)v50);
      sub_157C4(v44, (uint64_t)v48);
      uint64_t v33 = (void *)swift_allocObject(&unk_2744A8, 120LL, 7LL);
      uint64_t v34 = v45;
      uint64_t v35 = v46;
      v33[2] = v45;
      v33[3] = v35;
      uint64_t v36 = v47;
      v33[4] = v47;
      sub_FF54(v50, (uint64_t)(v33 + 5));
      sub_FF54(v48, (uint64_t)(v33 + 10));
      id v37 = v34;
      swift_retain(v36);
      dispatch thunk of DeviceResolutionProviding.resolveDevices(for:with:)(v51, sub_1BC9D0, v33, v31, v32);
      swift_release(v33);
      sub_6C3C(v51);
      return sub_6C3C(v54);
    }

    sub_6C3C(v51);
  }

  else
  {
    uint64_t v49 = 0LL;
    memset(v48, 0, sizeof(v48));
    sub_1F6CC((uint64_t)v48, &qword_28C140);
  }

  uint64_t v38 = v21(v16, v20, v12);
  uint64_t v39 = (os_log_s *)Logger.logObject.getter(v38);
  os_log_type_t v40 = static os_log_type_t.default.getter(v39);
  if (os_log_type_enabled(v39, v40))
  {
    __n128 v41 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
    *(_WORD *)__n128 v41 = 0;
    _os_log_impl( &dword_0,  v39,  v40,  "DetermineIntent#amendTargetDeviceIdsIfWHA Non-WHA request because no home automation nodes present, returning completion",  v41,  2u);
    swift_slowDealloc(v41, -1LL, -1LL);
  }

  uint64_t v42 = ((uint64_t (*)(char *, uint64_t))v26)(v16, v12);
  v46(v42);
  return sub_6C3C(v54);
}

uint64_t sub_1BC994()
{
  swift_release(*(void *)(v0 + 32));
  sub_6C3C((void *)(v0 + 40));
  sub_6C3C((void *)(v0 + 80));
  return swift_deallocObject(v0, 120LL, 7LL);
}

uint64_t sub_1BC9D0(uint64_t a1, char a2)
{
  return sub_1BA72C( a1,  a2 & 1,  *(void **)(v2 + 16),  *(void (**)(id))(v2 + 24),  *(void *)(v2 + 32),  (void *)(v2 + 40),  (void *)(v2 + 80));
}

void sub_1BC9E8(char **a1)
{
  uint64_t v2 = type metadata accessor for Logger(0LL);
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = __chkstk_darwin(v2);
  uint64_t v257 = (char *)&v248 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v6 = __chkstk_darwin(v4);
  uint64_t v251 = (char *)&v248 - v7;
  uint64_t v8 = __chkstk_darwin(v6);
  uint64_t v250 = (char *)&v248 - v9;
  uint64_t v10 = __chkstk_darwin(v8);
  uint64_t v252 = (char *)&v248 - v11;
  uint64_t v12 = __chkstk_darwin(v10);
  uint64_t v253 = (char **)((char *)&v248 - v13);
  uint64_t v14 = __chkstk_darwin(v12);
  uint64_t v256 = (char **)((char *)&v248 - v15);
  uint64_t v16 = __chkstk_darwin(v14);
  uint64_t v254 = (char *)&v248 - v17;
  uint64_t v18 = __chkstk_darwin(v16);
  char v261 = (char *)&v248 - v19;
  __chkstk_darwin(v18);
  uint64_t v21 = (char *)&v248 - v20;
  uint64_t v22 = type metadata accessor for WHADialogMetadata();
  id v23 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v22));
  uint64_t v26 = String._bridgeToObjectiveC()();
  id v24 = [v23 initWithIdentifier:0 displayString:v26];

  [a1 numberOfHomeAutomationWords];
  Class isa = Int32._bridgeToObjectiveC()().super.super.isa;
  [v24 setNumberOfHomeAutomationWords:isa];

  LOBYTE(isa) = [a1 isAllSpeakers];
  LODWORD(v26) = sub_1641C(0LL, (unint64_t *)&qword_289350, &OBJC_CLASS___NSNumber_ptr);
  Class v27 = NSNumber.init(BOOLeanLiteral:)((Swift::Bool)isa).super.super.isa;
  [v24 setIsAllSpeakers:v27];

  Class v28 = NSNumber.init(BOOLeanLiteral:)((Swift::Bool)[a1 isPauseOrStop]).super.super.isa;
  [v24 setIsPauseOrStop:v28];

  Class v29 = NSNumber.init(BOOLeanLiteral:)((Swift::Bool)[a1 isWholeHouseAudioCommand]).super.super.isa;
  [v24 setIsWholeHouseAudioCommand:v29];

  Class v30 = NSNumber.init(BOOLeanLiteral:)((Swift::Bool)[a1 isInHere]).super.super.isa;
  [v24 setIsInHere:v30];

  Class v31 = NSNumber.init(BOOLeanLiteral:)((Swift::Bool)[a1 hasExcept]).super.super.isa;
  [v24 setHasExcept:v31];

  uint64_t v32 = &selRef_serviceGroups;
  id v33 = [a1 speakerRooms];
  if (!v33) {
    goto LABEL_5;
  }
  uint64_t v34 = v33;
  uint64_t v35 = sub_1641C(0LL, &qword_286120, &OBJC_CLASS____INPBString_ptr);
  uint64_t v36 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v34, v35);

  if ((unint64_t)v36 >> 62)
  {
    uint64_t v244 = v36 < 0 ? v36 : v36 & 0xFFFFFFFFFFFFFF8LL;
    swift_bridgeObjectRetain(v36);
    uint64_t v37 = _CocoaArrayWrapper.endIndex.getter(v244);
    swift_bridgeObjectRelease(v36);
  }

  else
  {
    uint64_t v37 = *(void *)((char *)&dword_10 + (v36 & 0xFFFFFFFFFFFFF8LL));
  }

  swift_bridgeObjectRelease(v36);
  if (v37 > 2) {
    Swift::Bool v38 = 1;
  }
  else {
LABEL_5:
  }
    Swift::Bool v38 = 0;
  Class v39 = NSNumber.init(BOOLeanLiteral:)(v38).super.super.isa;
  [v24 setHasThreeOrMoreRooms:v39];

  id v40 = [a1 speakerRooms];
  if (!v40) {
    goto LABEL_11;
  }
  __n128 v41 = v40;
  uint64_t v42 = sub_1641C(0LL, &qword_286120, &OBJC_CLASS____INPBString_ptr);
  uint64_t v43 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v41, v42);

  if ((unint64_t)v43 >> 62)
  {
    uint64_t v245 = v43 < 0 ? v43 : v43 & 0xFFFFFFFFFFFFFF8LL;
    swift_bridgeObjectRetain(v43);
    uint64_t v44 = _CocoaArrayWrapper.endIndex.getter(v245);
    swift_bridgeObjectRelease(v43);
  }

  else
  {
    uint64_t v44 = *(void *)((char *)&dword_10 + (v43 & 0xFFFFFFFFFFFFF8LL));
  }

  swift_bridgeObjectRelease(v43);
  if (v44 > 1) {
    Swift::Bool v45 = 1;
  }
  else {
LABEL_11:
  }
    Swift::Bool v45 = 0;
  Class v46 = NSNumber.init(BOOLeanLiteral:)(v45).super.super.isa;
  [v24 setHasTwoOrMoreRooms:v46];

  id v47 = [a1 speakerNames];
  if (!v47) {
    goto LABEL_17;
  }
  uint64_t v48 = v47;
  uint64_t v49 = sub_1641C(0LL, &qword_286120, &OBJC_CLASS____INPBString_ptr);
  uint64_t v50 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v48, v49);

  if ((unint64_t)v50 >> 62)
  {
    uint64_t v246 = v50 < 0 ? v50 : v50 & 0xFFFFFFFFFFFFFF8LL;
    swift_bridgeObjectRetain(v50);
    uint64_t v51 = _CocoaArrayWrapper.endIndex.getter(v246);
    swift_bridgeObjectRelease(v50);
  }

  else
  {
    uint64_t v51 = *(void *)((char *)&dword_10 + (v50 & 0xFFFFFFFFFFFFF8LL));
  }

  swift_bridgeObjectRelease(v50);
  if (v51 > 2) {
    Swift::Bool v52 = 1;
  }
  else {
LABEL_17:
  }
    Swift::Bool v52 = 0;
  Class v53 = NSNumber.init(BOOLeanLiteral:)(v52).super.super.isa;
  [v24 setHasThreeOrMoreDevices:v53];

  id v54 = [a1 permanentNames];
  if (!v54) {
    goto LABEL_24;
  }
  uint64_t v55 = v54;
  uint64_t v56 = sub_1641C(0LL, &qword_286120, &OBJC_CLASS____INPBString_ptr);
  uint64_t v57 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v55, v56);

  if ((unint64_t)v57 >> 62)
  {
    uint64_t v247 = v57 < 0 ? v57 : v57 & 0xFFFFFFFFFFFFFF8LL;
    swift_bridgeObjectRetain(v57);
    uint64_t v58 = _CocoaArrayWrapper.endIndex.getter(v247);
    swift_bridgeObjectRelease(v57);
  }

  else
  {
    uint64_t v58 = *(void *)((char *)&dword_10 + (v57 & 0xFFFFFFFFFFFFF8LL));
  }

  swift_bridgeObjectRelease(v57);
  if (v58 > 0) {
    Swift::Bool v59 = 1;
  }
  else {
LABEL_24:
  }
    Swift::Bool v59 = 0;
  Class v60 = NSNumber.init(BOOLeanLiteral:)(v59).super.super.isa;
  [v24 setHasGroups:v60];

  Class v61 = NSNumber.init(BOOLeanLiteral:)((Swift::Bool)[a1 isParticipatingSpeaker]).super.super.isa;
  [v24 setIsParticipatingSpeaker:v61];

  v270[0] = _swiftEmptyArrayStorage;
  id v62 = [a1 intentSpeakerRooms];
  uint64_t v265 = v2;
  uint64_t v262 = v3;
  id v258 = v24;
  uint64_t v255 = a1;
  if (v62)
  {
    uint64_t v63 = v62;
    uint64_t v64 = sub_1641C(0LL, &qword_286120, &OBJC_CLASS____INPBString_ptr);
    uint64_t v65 = (void *)static Array._unconditionallyBridgeFromObjectiveC(_:)(v63, v64);

    os_log_type_t v266 = v65;
    uint64_t v66 = sub_6C5C(&qword_28CF70);
    unint64_t v67 = sub_1BE658();
    uint64_t v68 = Collection<>.toString()(v66, v67);
    swift_bridgeObjectRelease(v65);
    int64_t v69 = *(void *)(v68 + 16);
    if (v69)
    {
      os_log_type_t v266 = _swiftEmptyArrayStorage;
      sub_C7058(0, v69, 0);
      __n128 v71 = v266;
      if (qword_283888 != -1) {
        swift_once(&qword_283888, sub_BFC5C);
      }
      *(void *)&__int128 v260 = v68;
      uint64_t v72 = (unint64_t *)(v68 + 40);
      *(void *)&__int128 v70 = 136315138LL;
      __int128 v264 = v70;
      uint64_t v263 = (char *)&type metadata for Any + 8;
      do
      {
        uint64_t v32 = (char **)*(v72 - 1);
        unint64_t v73 = *v72;
        uint64_t v74 = sub_6960(v2, (uint64_t)qword_2969C8);
        (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v21, v74, v2);
        uint64_t v75 = swift_bridgeObjectRetain_n(v73, 2LL);
        uint64_t v76 = (os_log_s *)Logger.logObject.getter(v75);
        os_log_type_t v77 = static os_log_type_t.default.getter();
        if (os_log_type_enabled(v76, v77))
        {
          uint64_t v78 = swift_slowAlloc(12LL, -1LL);
          uint64_t v79 = swift_slowAlloc(32LL, -1LL);
          uint64_t v269 = v79;
          *(_DWORD *)uint64_t v78 = v264;
          swift_bridgeObjectRetain(v73);
          *(void *)(v78 + 4) = sub_6978((uint64_t)v32, v73, &v269);
          swift_bridgeObjectRelease_n(v73, 3LL);
          _os_log_impl( &dword_0,  v76,  v77,  "DetermineIntent#constructWHADialogMetadata roomName: %s",  (uint8_t *)v78,  0xCu);
          swift_arrayDestroy(v79, 1LL, v263);
          swift_slowDealloc(v79, -1LL, -1LL);
          uint64_t v80 = v78;
          uint64_t v3 = v262;
          swift_slowDealloc(v80, -1LL, -1LL);

          (*(void (**)(char *, uint64_t))(v3 + 8))(v21, v265);
        }

        else
        {

          swift_bridgeObjectRelease_n(v73, 2LL);
          (*(void (**)(char *, uint64_t))(v3 + 8))(v21, v2);
        }

        os_log_type_t v266 = v71;
        unint64_t v82 = v71[2];
        unint64_t v81 = v71[3];
        swift_bridgeObjectRetain(v73);
        if (v82 >= v81 >> 1)
        {
          sub_C7058(v81 > 1, v82 + 1, 1);
          __n128 v71 = v266;
        }

        v71[2] = v82 + 1;
        uint64_t v83 = &v71[3 * v82];
        v83[4] = v32;
        v83[5] = v73;
        *((_BYTE *)v83 + 48) = 1;
        v72 += 2;
        --v69;
        uint64_t v2 = v265;
      }

      while (v69);
      swift_bridgeObjectRelease(v260);
    }

    else
    {
      swift_bridgeObjectRelease(v68);
      __n128 v71 = _swiftEmptyArrayStorage;
    }

    uint64_t v26 = v270;
    sub_97814((uint64_t)v71);
    id v24 = v258;
    a1 = v255;
  }

  id v84 = [a1 intentSpeakerNames];
  if (v84)
  {
    uint64_t v85 = v84;
    uint64_t v86 = sub_1641C(0LL, &qword_286120, &OBJC_CLASS____INPBString_ptr);
    uint64_t v21 = (char *)static Array._unconditionallyBridgeFromObjectiveC(_:)(v85, v86);

    os_log_type_t v266 = v21;
    uint64_t v87 = sub_6C5C(&qword_28CF70);
    unint64_t v88 = sub_1BE658();
    uint64_t v89 = Collection<>.toString()(v87, v88);
    swift_bridgeObjectRelease(v21);
    int64_t v90 = *(void *)(v89 + 16);
    if (v90)
    {
      uint64_t v249 = v89;
      os_log_type_t v266 = _swiftEmptyArrayStorage;
      sub_C7058(0, v90, 0);
      uint64_t v32 = (char **)v266;
      if (qword_283888 != -1) {
        swift_once(&qword_283888, sub_BFC5C);
      }
      uint64_t v92 = (char **)(v249 + 40);
      *(void *)&__int128 v91 = 136315138LL;
      __int128 v260 = v91;
      uint64_t v259 = (void *)((char *)&type metadata for Any + 8);
      do
      {
        uint64_t v263 = (char *)v32;
        uint64_t v93 = (uint64_t)*(v92 - 1);
        uint64_t v21 = *v92;
        uint64_t v94 = sub_6960(v2, (uint64_t)qword_2969C8);
        uint64_t v95 = v261;
        (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v261, v94, v2);
        uint64_t v96 = swift_bridgeObjectRetain_n(v21, 2LL);
        uint64_t v97 = (os_log_s *)Logger.logObject.getter(v96);
        os_log_type_t v98 = static os_log_type_t.default.getter();
        BOOL v99 = os_log_type_enabled(v97, v98);
        *(void *)&__int128 v264 = v93;
        if (v99)
        {
          uint64_t v100 = swift_slowAlloc(12LL, -1LL);
          uint64_t v101 = swift_slowAlloc(32LL, -1LL);
          uint64_t v269 = v101;
          *(_DWORD *)uint64_t v100 = v260;
          swift_bridgeObjectRetain(v21);
          *(void *)(v100 + 4) = sub_6978(v93, (unint64_t)v21, &v269);
          swift_bridgeObjectRelease_n(v21, 3LL);
          _os_log_impl( &dword_0,  v97,  v98,  "DetermineIntent#constructWHADialogMetadata speakerName: %s",  (uint8_t *)v100,  0xCu);
          swift_arrayDestroy(v101, 1LL, v259);
          swift_slowDealloc(v101, -1LL, -1LL);
          uint64_t v102 = v100;
          uint64_t v2 = v265;
          swift_slowDealloc(v102, -1LL, -1LL);
        }

        else
        {

          swift_bridgeObjectRelease_n(v21, 2LL);
        }

        (*(void (**)(char *, uint64_t))(v3 + 8))(v95, v2);
        uint64_t v32 = (char **)v263;
        os_log_type_t v266 = v263;
        unint64_t v104 = *((void *)v263 + 2);
        unint64_t v103 = *((void *)v263 + 3);
        swift_bridgeObjectRetain(v21);
        if (v104 >= v103 >> 1)
        {
          sub_C7058(v103 > 1, v104 + 1, 1);
          uint64_t v32 = (char **)v266;
        }

        v32[2] = (char *)(v104 + 1);
        uint64_t v105 = &v32[3 * v104];
        v105[4] = (char *)v264;
        v105[5] = v21;
        *((_BYTE *)v105 + 48) = 0;
        v92 += 2;
        --v90;
        uint64_t v3 = v262;
      }

      while (v90);
      swift_bridgeObjectRelease(v249);
      a1 = v255;
    }

    else
    {
      swift_bridgeObjectRelease(v89);
      uint64_t v32 = (char **)_swiftEmptyArrayStorage;
    }

    uint64_t v26 = v270;
    sub_97814((uint64_t)v32);
    id v24 = v258;
  }

  if (*(void *)(v270[0] + 16LL))
  {
    uint64_t v106 = *(void **)(v270[0] + 32LL);
    uint64_t v21 = *(char **)(v270[0] + 40LL);
    char v107 = *(_BYTE *)(v270[0] + 48LL);
    uint64_t v108 = qword_283888;
    swift_bridgeObjectRetain(v21);
    if (v108 != -1) {
      swift_once(&qword_283888, sub_BFC5C);
    }
    uint64_t v109 = sub_6960(v2, (uint64_t)qword_2969C8);
    uint64_t v110 = *(char **)(v3 + 16);
    uint64_t v111 = v254;
    char v261 = (char *)v109;
    uint64_t v263 = v110;
    ((void (*)(char *))v110)(v254);
    uint64_t v112 = swift_bridgeObjectRetain_n(v21, 2LL);
    uint64_t v113 = (os_log_s *)Logger.logObject.getter(v112);
    os_log_type_t v114 = static os_log_type_t.default.getter();
    BOOL v115 = os_log_type_enabled(v113, v114);
    *(void *)&__int128 v264 = v106;
    if (v115)
    {
      uint64_t v116 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
      uint64_t v117 = swift_slowAlloc(32LL, -1LL);
      *(_DWORD *)uint64_t v116 = 136315138;
      uint64_t v269 = v117;
      os_log_type_t v266 = v106;
      int v267 = v21;
      char v268 = v107;
      swift_bridgeObjectRetain(v21);
      uint64_t v118 = String.init<A>(describing:)(&v266, &type metadata for WholeHouseAudioDestination);
      uint64_t v119 = a1;
      unint64_t v121 = v120;
      os_log_type_t v266 = (void *)sub_6978(v118, v120, &v269);
      uint64_t v3 = v262;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v266, &v267);
      swift_bridgeObjectRelease_n(v21, 2LL);
      unint64_t v122 = v121;
      a1 = v119;
      swift_bridgeObjectRelease(v122);
      _os_log_impl(&dword_0, v113, v114, "DetermineIntent#constructWHADialogMetadata firstDestination: %s", v116, 0xCu);
      swift_arrayDestroy(v117, 1LL, (char *)&type metadata for Any + 8);
      uint64_t v123 = v117;
      id v24 = v258;
      swift_slowDealloc(v123, -1LL, -1LL);
      swift_slowDealloc(v116, -1LL, -1LL);

      uint64_t v124 = *(void (**)(char *, uint64_t))(v3 + 8);
      uint64_t v125 = v254;
    }

    else
    {

      swift_bridgeObjectRelease_n(v21, 2LL);
      uint64_t v124 = *(void (**)(char *, uint64_t))(v3 + 8);
      uint64_t v125 = v111;
    }

    uint64_t v2 = v265;
    v124(v125, v265);
    uint64_t v32 = v253;
    if ((v107 & 1) != 0)
    {
      uint64_t v126 = ((uint64_t (*)(char **, char *, uint64_t))v263)(v253, v261, v2);
      uint64_t v26 = (void *)Logger.logObject.getter(v126);
      os_log_type_t v127 = static os_log_type_t.default.getter();
      if (!os_log_type_enabled((os_log_t)v26, v127))
      {
        uint64_t v128 = &selRef_setFirstSpeakerRoom_;
        uint64_t v256 = v32;
        goto LABEL_67;
      }

      uint64_t v32 = (char **)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)uint64_t v32 = 0;
      _os_log_impl( &dword_0,  (os_log_t)v26,  v127,  "DetermineIntent#constructWHADialogMetadata Destination #1: Destination is a room or zone. Setting firstSpeakerRo om to firstDestination.name",  (uint8_t *)v32,  2u);
      uint64_t v128 = &selRef_setFirstSpeakerRoom_;
      uint64_t v256 = v253;
    }

    else
    {
      uint64_t v129 = ((uint64_t (*)(char **, char *, uint64_t))v263)(v256, v261, v2);
      uint64_t v26 = (void *)Logger.logObject.getter(v129);
      os_log_type_t v130 = static os_log_type_t.default.getter();
      if (!os_log_type_enabled((os_log_t)v26, v130))
      {
        uint64_t v128 = &selRef_setFirstSpeakerName_;
        goto LABEL_67;
      }

      uint64_t v32 = (char **)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)uint64_t v32 = 0;
      _os_log_impl( &dword_0,  (os_log_t)v26,  v130,  "DetermineIntent#constructWHADialogMetadata Destination #1: Destination is an accesory. Setting firstSpeakerName to firstDestination.name",  (uint8_t *)v32,  2u);
      uint64_t v128 = &selRef_setFirstSpeakerName_;
    }

    swift_slowDealloc(v32, -1LL, -1LL);
LABEL_67:

    v124((char *)v256, v2);
    swift_bridgeObjectRetain(v21);
    NSString v131 = String._bridgeToObjectiveC()();
    objc_msgSend(v24, *v128, v131, swift_bridgeObjectRelease(v21).n128_f64[0]);

    swift_bridgeObjectRelease(v21);
  }

  uint64_t v132 = (char *)v270[0];
  unint64_t v133 = *(void *)(v270[0] + 16LL);
  unint64_t v134 = v133 != 0;
  if (v133 != v134)
  {
    if (v133 > v134)
    {
      BOOL v135 = v133 == 0;
      uint64_t v136 = 24LL;
      if (v135) {
        uint64_t v136 = 0LL;
      }
      uint64_t v137 = v270[0] + v136;
      uint64_t v32 = *(char ***)(v137 + 32);
      uint64_t v21 = *(char **)(v137 + 40);
      LODWORD(v26) = *(unsigned __int8 *)(v137 + 48);
      uint64_t v138 = qword_283888;
      swift_bridgeObjectRetain(v21);
      if (v138 == -1) {
        goto LABEL_75;
      }
    }

    else
    {
      __break(1u);
    }

    swift_once(&qword_283888, sub_BFC5C);
LABEL_75:
    LODWORD(v264) = (_DWORD)v26;
    uint64_t v139 = sub_6960(v2, (uint64_t)qword_2969C8);
    uint64_t v140 = *(char **)(v3 + 16);
    uint64_t v141 = v252;
    char v261 = (char *)v139;
    uint64_t v263 = v140;
    ((void (*)(char *))v140)(v252);
    uint64_t v142 = swift_bridgeObjectRetain_n(v21, 2LL);
    uint64_t v143 = (os_log_s *)Logger.logObject.getter(v142);
    uint64_t v144 = v2;
    os_log_type_t v145 = static os_log_type_t.default.getter();
    BOOL v146 = os_log_type_enabled(v143, v145);
    *(void *)&__int128 v260 = v32;
    if (v146)
    {
      uint64_t v147 = swift_slowAlloc(12LL, -1LL);
      uint64_t v148 = swift_slowAlloc(32LL, -1LL);
      *(_DWORD *)uint64_t v147 = 136315138;
      uint64_t v269 = v148;
      uint64_t v259 = (void *)(v147 + 4);
      os_log_type_t v266 = v32;
      int v267 = v21;
      char v149 = v264;
      char v268 = v264;
      swift_bridgeObjectRetain(v21);
      uint64_t v150 = String.init<A>(describing:)(&v266, &type metadata for WholeHouseAudioDestination);
      uint64_t v32 = a1;
      unint64_t v152 = v151;
      os_log_type_t v266 = (void *)sub_6978(v150, v151, &v269);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v266, &v267);
      swift_bridgeObjectRelease_n(v21, 2LL);
      unint64_t v153 = v152;
      a1 = v32;
      swift_bridgeObjectRelease(v153);
      _os_log_impl( &dword_0,  v143,  v145,  "DetermineIntent#constructWHADialogMetadata secondDestination: %s",  (uint8_t *)v147,  0xCu);
      swift_arrayDestroy(v148, 1LL, (char *)&type metadata for Any + 8);
      uint64_t v154 = v148;
      id v24 = v258;
      swift_slowDealloc(v154, -1LL, -1LL);
      swift_slowDealloc(v147, -1LL, -1LL);

      uint64_t v155 = *(void (**)(char *, uint64_t))(v262 + 8);
      v155(v252, v144);
      uint64_t v156 = v144;
    }

    else
    {

      swift_bridgeObjectRelease_n(v21, 2LL);
      uint64_t v155 = *(void (**)(char *, uint64_t))(v3 + 8);
      v155(v141, v144);
      uint64_t v156 = v144;
      char v149 = v264;
    }

    uint64_t v157 = v251;
    if ((v149 & 1) != 0)
    {
      uint64_t v158 = ((uint64_t (*)(char *, char *, uint64_t))v263)(v251, v261, v156);
      uint64_t v159 = (os_log_s *)Logger.logObject.getter(v158);
      os_log_type_t v160 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v159, v160))
      {
        uint64_t v32 = (char **)swift_slowAlloc(2LL, -1LL);
        *(_WORD *)uint64_t v32 = 0;
        swift_bridgeObjectRelease(v270[0]);
        _os_log_impl( &dword_0,  v159,  v160,  "DetermineIntent#constructWHADialogMetadata Destination #2: Destination is a room or zone. Setting secondSpeake rRoom to the secondDestination.name",  (uint8_t *)v32,  2u);
        swift_slowDealloc(v32, -1LL, -1LL);

        v155(v157, v156);
      }

      else
      {

        v155(v157, v156);
        swift_bridgeObjectRelease(v270[0]);
      }

      swift_bridgeObjectRetain(v21);
      NSString v165 = String._bridgeToObjectiveC()();
      objc_msgSend(v24, "setSecondSpeakerRoom:", v165, swift_bridgeObjectRelease(v21).n128_f64[0]);
    }

    else
    {
      uint64_t v161 = v250;
      uint64_t v162 = ((uint64_t (*)(char *, char *, uint64_t))v263)(v250, v261, v156);
      uint64_t v163 = (os_log_s *)Logger.logObject.getter(v162);
      os_log_type_t v164 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v163, v164))
      {
        uint64_t v32 = (char **)swift_slowAlloc(2LL, -1LL);
        *(_WORD *)uint64_t v32 = 0;
        swift_bridgeObjectRelease(v270[0]);
        _os_log_impl( &dword_0,  v163,  v164,  "DetermineIntent#constructWHADialogMetadata Destination #2: Destination is an accesory. Setting secondSpeakerNa me to secondDestination.name",  (uint8_t *)v32,  2u);
        swift_slowDealloc(v32, -1LL, -1LL);

        v155(v161, v156);
      }

      else
      {

        v155(v161, v156);
        swift_bridgeObjectRelease(v270[0]);
      }

      swift_bridgeObjectRetain(v21);
      NSString v165 = String._bridgeToObjectiveC()();
      objc_msgSend(v24, "setSecondSpeakerName:", v165, swift_bridgeObjectRelease(v21).n128_f64[0]);
    }

    uint64_t v132 = v21;
  }

  id v166 = objc_msgSend(a1, "spokenEntityNames", swift_bridgeObjectRelease(v132).n128_f64[0]);
  if (v166)
  {
    uint64_t v167 = v166;
    uint64_t v168 = sub_1641C(0LL, &qword_286120, &OBJC_CLASS____INPBString_ptr);
    uint64_t v169 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v167, v168);
  }

  else
  {
    uint64_t v170 = sub_6C5C(&qword_287980);
    uint64_t v171 = (void *)swift_allocObject(v170, 40LL, 7LL);
    *((_OWORD *)v171 + 1) = xmmword_214980;
    sub_1641C(0LL, &qword_286120, &OBJC_CLASS____INPBString_ptr);
    uint64_t v172 = _INPBString.init(from:)(0LL, 0xE000000000000000LL);
    v171[4] = v172;
    os_log_type_t v266 = v171;
    specialized Array._endMutation()(v172);
    uint64_t v169 = (uint64_t)v266;
  }

  id v173 = [a1 spokenEntityTypes];
  if (v173)
  {
    uint64_t v174 = v173;
    uint64_t v175 = sub_1641C(0LL, &qword_286120, &OBJC_CLASS____INPBString_ptr);
    uint64_t v176 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v174, v175);
  }

  else
  {
    uint64_t v177 = sub_6C5C(&qword_287980);
    uint64_t v178 = (void *)swift_allocObject(v177, 40LL, 7LL);
    *((_OWORD *)v178 + 1) = xmmword_214980;
    sub_1641C(0LL, &qword_286120, &OBJC_CLASS____INPBString_ptr);
    uint64_t v179 = _INPBString.init(from:)(0LL, 0xE000000000000000LL);
    v178[4] = v179;
    os_log_type_t v266 = v178;
    specialized Array._endMutation()(v179);
    uint64_t v176 = (uint64_t)v266;
  }

  uint64_t v180 = (uint64_t)sub_1C488C(v169, v176);
  swift_bridgeObjectRelease(v176);
  __n128 v181 = swift_bridgeObjectRelease(v169);
  if ((v180 & 0xC000000000000001LL) != 0)
  {
    if (v180 < 0) {
      uint64_t v182 = v180;
    }
    else {
      uint64_t v182 = v180 & 0xFFFFFFFFFFFFFF8LL;
    }
    uint64_t v183 = __CocoaDictionary.makeIterator()(v182, v181);
    *(void *)&__int128 v264 = 0LL;
    uint64_t v184 = 0LL;
    unint64_t v185 = 0LL;
    uint64_t v180 = v183 | 0x8000000000000000LL;
  }

  else
  {
    uint64_t v186 = -1LL << *(_BYTE *)(v180 + 32);
    uint64_t v187 = *(void *)(v180 + 64);
    *(void *)&__int128 v264 = v180 + 64;
    uint64_t v184 = ~v186;
    uint64_t v188 = -v186;
    if (v188 < 64) {
      uint64_t v189 = ~(-1LL << v188);
    }
    else {
      uint64_t v189 = -1LL;
    }
    unint64_t v185 = v189 & v187;
  }

  uint64_t v190 = 0LL;
  char v261 = (char *)(v180 & 0x7FFFFFFFFFFFFFFFLL);
  uint64_t v256 = (char **)v184;
  uint64_t v263 = (char *)((unint64_t)(v184 + 64) >> 6);
  uint64_t v259 = _swiftEmptyArrayStorage;
  *(void *)&__int128 v260 = _swiftEmptyArrayStorage;
  while (1)
  {
    id v193 = v190;
    uint64_t v194 = v185;
    if ((v180 & 0x8000000000000000LL) == 0) {
      break;
    }
    uint64_t v197 = __CocoaDictionary.Iterator.next()();
    if (!v197) {
      goto LABEL_149;
    }
    uint64_t v199 = v197;
    uint64_t v200 = v198;
    uint64_t v269 = v197;
    uint64_t v201 = sub_1641C(0LL, &qword_286120, &OBJC_CLASS____INPBString_ptr);
    swift_unknownObjectRetain(v199, v202);
    swift_dynamicCast(&v266, &v269, (char *)&type metadata for Swift.AnyObject + 8, v201, 7LL);
    __int128 v203 = v266;
    swift_unknownObjectRelease(v199);
    uint64_t v269 = v200;
    swift_unknownObjectRetain(v200, v204);
    swift_dynamicCast(&v266, &v269, (char *)&type metadata for Swift.AnyObject + 8, v201, 7LL);
    uint64_t v32 = (char **)v266;
    swift_unknownObjectRelease(v200);
    if (!v203) {
      goto LABEL_149;
    }
LABEL_129:
    Swift::String_optional v210 = _INPBString.toString()();
    if (!v210.value._object) {
      goto LABEL_106;
    }
    if (v210.value._countAndFlagsBits == 1297043282 && v210.value._object == (void *)0xE400000000000000LL)
    {
      swift_bridgeObjectRelease(0xE400000000000000LL);
    }

    else
    {
      char v211 = _stringCompareWithSmolCheck(_:_:expecting:)(v210.value._countAndFlagsBits, v210.value._object);
      swift_bridgeObjectRelease(v210.value._object);
      if ((v211 & 1) == 0) {
        goto LABEL_106;
      }
    }

    Swift::String_optional v191 = _INPBString.toString()();
    if (v191.value._object)
    {
      object = v191.value._object;
      uint64_t v219 = v259;
      if (v259)
      {
        uint64_t countAndFlagsBits = v191.value._countAndFlagsBits;
        if ((swift_isUniquelyReferenced_nonNull_native(v259) & 1) == 0) {
          uint64_t v219 = sub_1FC6C(0LL, v219[2] + 1LL, 1, v219);
        }
        unint64_t v216 = v219[2];
        unint64_t v220 = v219[3];
        uint64_t v259 = v219;
        unint64_t v217 = v216 + 1;
        if (v216 >= v220 >> 1) {
          uint64_t v259 = sub_1FC6C((void *)(v220 > 1), v216 + 1, 1, v259);
        }
        uint64_t v218 = v259;
        goto LABEL_146;
      }

      swift_bridgeObjectRelease(v191.value._object);
      uint64_t v259 = 0LL;
    }

    else
    {
LABEL_106:
      Swift::String_optional v192 = _INPBString.toString()();
      if (!v192.value._object) {
        goto LABEL_107;
      }
      object = v192.value._object;
      uint64_t v213 = (void *)v260;
      if ((void)v260)
      {
        uint64_t countAndFlagsBits = v192.value._countAndFlagsBits;
        if ((swift_isUniquelyReferenced_nonNull_native(v260) & 1) == 0) {
          uint64_t v213 = sub_1FC6C(0LL, v213[2] + 1LL, 1, v213);
        }
        unint64_t v216 = v213[2];
        unint64_t v215 = v213[3];
        *(void *)&__int128 v260 = v213;
        unint64_t v217 = v216 + 1;
        if (v216 >= v215 >> 1) {
          *(void *)&__int128 v260 = sub_1FC6C((void *)(v215 > 1), v216 + 1, 1, (void *)v260);
        }
        uint64_t v218 = (void *)v260;
LABEL_146:
        v218[2] = v217;
        uint64_t v221 = &v218[2 * v216];
        v221[4] = countAndFlagsBits;
        v221[5] = object;
LABEL_107:
      }

      else
      {

        swift_bridgeObjectRelease(v192.value._object);
        *(void *)&__int128 v260 = 0LL;
      }
    }
  }

  if (v185)
  {
    unint64_t v195 = __clz(__rbit64(v185));
    v185 &= v185 - 1;
    unint64_t v196 = v195 | ((void)v190 << 6);
    goto LABEL_128;
  }

  uint64_t v205 = (uint64_t)(v190 + 1);
  if (__OFADD__(v190, 1LL))
  {
    __break(1u);
    goto LABEL_165;
  }

  unint64_t v206 = *(void *)(v264 + 8 * v205);
  ++v190;
  if (v206) {
    goto LABEL_127;
  }
  uint64_t v190 = v193 + 2;
  unint64_t v206 = *(void *)(v264 + 8LL * (void)v190);
  if (v206) {
    goto LABEL_127;
  }
  uint64_t v190 = v193 + 3;
  unint64_t v206 = *(void *)(v264 + 8LL * (void)v190);
  if (v206) {
    goto LABEL_127;
  }
  uint64_t v190 = v193 + 4;
  unint64_t v206 = *(void *)(v264 + 8LL * (void)v190);
  if (v206)
  {
LABEL_127:
    unint64_t v185 = (v206 - 1) & v206;
    unint64_t v196 = __clz(__rbit64(v206)) + ((void)v190 << 6);
LABEL_128:
    uint64_t v208 = 8 * v196;
    v209 = *(void **)(*(void *)(v180 + 56) + v208);
    __int128 v203 = *(id *)(*(void *)(v180 + 48) + v208);
    uint64_t v32 = v209;
    if (!v203) {
      goto LABEL_149;
    }
    goto LABEL_129;
  }

  v207 = v193 + 5;
  while (v263 != v207)
  {
    unint64_t v206 = *(void *)(v264 + 8LL * (void)v207++);
    if (v206)
    {
      uint64_t v190 = v207 - 1;
      goto LABEL_127;
    }
  }

LABEL_149:
  sub_A7610(v180);
  uint64_t v194 = v265;
  uint64_t v190 = (char *)v262;
  uint64_t v32 = (char **)v258;
  uint64_t v180 = (uint64_t)v259;
  unint64_t v185 = v260;
  if ((void)v260)
  {
    uint64_t v222 = *(void *)(v260 + 16);
    if (v222)
    {
      if (v222 == 1)
      {
        uint64_t v223 = *(void *)(v260 + 40);
        swift_bridgeObjectRetain(v223);
        NSString v224 = String._bridgeToObjectiveC()();
        uint64_t v225 = &selRef_setFirstPermanentNameFromSpokenEntities_;
      }

      else
      {
        uint64_t v226 = *(void *)(v260 + 40);
        swift_bridgeObjectRetain(v226);
        NSString v227 = String._bridgeToObjectiveC()();
        objc_msgSend(v32, "setFirstPermanentNameFromSpokenEntities:", v227, swift_bridgeObjectRelease(v226).n128_f64[0]);

        if (*(void *)(v185 + 16) < 2uLL)
        {
          __break(1u);
          return;
        }

        uint64_t v223 = *(void *)(v185 + 56);
        swift_bridgeObjectRetain(v223);
        NSString v224 = String._bridgeToObjectiveC()();
        uint64_t v225 = &selRef_setSecondPermanentNameFromSpokenEntities_;
      }

      objc_msgSend(v32, *v225, v224, swift_bridgeObjectRelease(v223).n128_f64[0]);
    }
  }

  if (v180 && *(void *)(v180 + 16) == 1LL)
  {
    uint64_t v228 = *(void *)(v180 + 40);
    swift_bridgeObjectRetain(v228);
    NSString v229 = String._bridgeToObjectiveC()();
    objc_msgSend(v32, "setFirstRoomNameFromSpokenEntities:", v229, swift_bridgeObjectRelease(v228).n128_f64[0]);
  }

  if (qword_283888 != -1) {
LABEL_165:
  }
    swift_once(&qword_283888, sub_BFC5C);
  uint64_t v230 = sub_6960(v194, (uint64_t)qword_2969C8);
  uint64_t v231 = v257;
  (*((void (**)(char *, uint64_t, uint64_t))v190 + 2))(v257, v230, v194);
  v232 = v32;
  id v233 = (os_log_s *)Logger.logObject.getter(v232);
  os_log_type_t v234 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v233, v234))
  {
    uint64_t v235 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
    v236 = (void *)swift_slowAlloc(32LL, -1LL);
    os_log_type_t v266 = v236;
    *(_DWORD *)uint64_t v235 = 136446210;
    *(void *)&__int128 v264 = v235 + 4;
    uint64_t v237 = v232;
    id v238 = [v237 description];
    uint64_t v239 = static String._unconditionallyBridgeFromObjectiveC(_:)(v238);
    unint64_t v241 = v240;

    uint64_t v269 = sub_6978(v239, v241, (uint64_t *)&v266);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v269, v270);

    unint64_t v242 = v241;
    unint64_t v185 = v260;
    swift_bridgeObjectRelease(v242);
    _os_log_impl( &dword_0,  v233,  v234,  "DetermineIntent#amendTargetDeviceIdsIfWHA whaDialogMetadata: %{public}s",  v235,  0xCu);
    swift_arrayDestroy(v236, 1LL, (char *)&type metadata for Any + 8);
    uint64_t v243 = v236;
    uint64_t v180 = (uint64_t)v259;
    swift_slowDealloc(v243, -1LL, -1LL);
    swift_slowDealloc(v235, -1LL, -1LL);

    (*(void (**)(char *, uint64_t))(v262 + 8))(v257, v265);
  }

  else
  {

    (*((void (**)(char *, uint64_t))v190 + 1))(v231, v194);
  }

  swift_bridgeObjectRelease(v180);
  swift_bridgeObjectRelease(v185);
}

uint64_t sub_1BE618()
{
  return swift_deallocObject(v0, 48LL, 7LL);
}

void sub_1BE64C(void *a1)
{
}

unint64_t sub_1BE658()
{
  unint64_t result = qword_28CF78;
  if (!qword_28CF78)
  {
    uint64_t v1 = sub_45D50(&qword_28CF70);
    unint64_t result = swift_getWitnessTable(&protocol conformance descriptor for [A], v1);
    atomic_store(result, (unint64_t *)&qword_28CF78);
  }

  return result;
}

uint64_t sub_1BE6A4(uint64_t a1)
{
  v2[2] = (char *)&value witness table for Builtin.NativeObject + 64;
  v2[3] = (char *)&value witness table for () + 64;
  v2[0] = "(";
  v2[1] = "(";
  v2[4] = (char *)&value witness table for () + 64;
  v2[5] = "(";
  v2[6] = "(";
  v2[7] = &unk_21A908;
  v2[8] = (char *)&value witness table for Builtin.NativeObject + 64;
  void v2[9] = &unk_21A920;
  return swift_initClassMetadata2(a1, 0LL, 10LL, v2, a1 + 104);
}

uint64_t sub_1BE728(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for OSSignpostID(0LL);
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = __chkstk_darwin(v2);
  uint64_t v6 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v7 = static os_signpost_type_t.begin.getter(v4);
  uint64_t v8 = v7;
  if (qword_2838D0 != -1) {
    uint64_t v7 = swift_once(&qword_2838D0, sub_1362AC);
  }
  uint64_t v9 = qword_296AA0;
  static OSSignpostID.exclusive.getter(v7);
  os_signpost(_:dso:log:name:signpostID:_:_:)( v8,  &dword_0,  v9,  "appResolutionOnDeviceResolveApp",  31LL,  2LL,  v6,  " enableTelemetry=YES ",  21LL,  2,  _swiftEmptyArrayStorage);
  uint64_t v10 = *(void (**)(char *, uint64_t))(v3 + 8);
  v10(v6, v2);
  uint64_t v11 = sub_1BE89C(a1);
  uint64_t v13 = static os_signpost_type_t.end.getter(v11, v12);
  uint64_t v14 = qword_296AA0;
  static OSSignpostID.exclusive.getter(v13);
  os_signpost(_:dso:log:name:signpostID:)(v13, &dword_0, v14, "appResolutionOnDeviceResolveApp", 31LL, 2LL, v6);
  v10(v6, v2);
  return v11;
}

uint64_t sub_1BE89C(uint64_t a1)
{
  uint64_t v78 = *v1;
  uint64_t v3 = type metadata accessor for Parse(0LL);
  uint64_t v84 = *(void *)(v3 - 8);
  uint64_t v85 = v3;
  __chkstk_darwin(v3);
  unint64_t v82 = (char *)&v73 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v5 = type metadata accessor for Input(0LL);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v73 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v9 = type metadata accessor for Logger(0LL);
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = __chkstk_darwin(v9);
  os_log_type_t v77 = (char *)&v73 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v13 = __chkstk_darwin(v11);
  uint64_t v76 = (char *)&v73 - v14;
  __chkstk_darwin(v13);
  uint64_t v16 = (char *)&v73 - v15;
  if (qword_283888 != -1) {
    swift_once(&qword_283888, sub_BFC5C);
  }
  uint64_t v17 = sub_6960(v9, (uint64_t)qword_2969C8);
  uint64_t v18 = *(void (**)(char *, uint64_t, uint64_t))(v10 + 16);
  v18(v16, v17, v9);
  uint64_t v19 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v6 + 16);
  uint64_t v83 = a1;
  uint64_t v20 = v19(v8, a1, v5);
  uint64_t v81 = v5;
  uint64_t v21 = (os_log_s *)Logger.logObject.getter(v20);
  os_log_type_t v22 = static os_log_type_t.default.getter(v21);
  if (os_log_type_enabled(v21, v22))
  {
    uint64_t v23 = swift_slowAlloc(12LL, -1LL);
    uint64_t v75 = v9;
    id v24 = (uint8_t *)v23;
    uint64_t v25 = swift_slowAlloc(32LL, -1LL);
    uint64_t v80 = v18;
    uint64_t v26 = v25;
    v90[0] = v25;
    uint64_t v74 = v10;
    *(_DWORD *)id v24 = 136315138;
    uint64_t v79 = v17;
    uint64_t v27 = Input.description.getter();
    unint64_t v29 = v28;
    uint64_t v87 = sub_6978(v27, v28, v90);
    uint64_t v17 = v79;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v87, &v88);
    __n128 v30 = swift_bridgeObjectRelease(v29);
    (*(void (**)(char *, uint64_t, __n128))(v6 + 8))(v8, v81, v30);
    _os_log_impl(&dword_0, v21, v22, "AppResolutionOnDeviceStrategy#resolveApp Resolving app with input: %s", v24, 0xCu);
    swift_arrayDestroy(v26, 1LL, (char *)&type metadata for Any + 8);
    uint64_t v31 = v26;
    uint64_t v18 = v80;
    swift_slowDealloc(v31, -1LL, -1LL);
    uint64_t v32 = v24;
    uint64_t v9 = v75;
    swift_slowDealloc(v32, -1LL, -1LL);

    id v33 = *(uint64_t (**)(char *, uint64_t))(v74 + 8);
  }

  else
  {
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v81);

    id v33 = *(uint64_t (**)(char *, uint64_t))(v10 + 8);
  }

  uint64_t v34 = v33(v16, v9);
  uint64_t v35 = v82;
  Input.parse.getter(v34);
  uint64_t v36 = v86;
  id v37 = Parse.getSiriKitIntent(nowPlayingProvider:featureFlags:)((void *)v86 + 20, (uint64_t)v86 + 16);
  (*(void (**)(char *, uint64_t))(v84 + 8))(v35, v85);
  if (v37)
  {
    uint64_t v38 = swift_dynamicCastUnknownClass( v37,  *(void *)(*(void *)(v78 + 80) + class metadata base offset for CommonAppResolver));
    if (v38)
    {
      Class v39 = (void *)v38;
      uint64_t v79 = v17;
      id v40 = (void *)*((void *)v36 + 25);
      *((void *)v36 + 25) = v38;
      id v41 = v37;

      id v42 = [v39 launchId];
      uint64_t v80 = v18;
      if (v42)
      {
        uint64_t v43 = static String._unconditionallyBridgeFromObjectiveC(_:)(v42);
        Swift::Bool v45 = v44;
      }

      else
      {
        uint64_t v43 = 0LL;
        Swift::Bool v45 = 0LL;
      }

      uint64_t v52 = swift_allocObject(&unk_2745B0, 24LL, 7LL);
      uint64_t v84 = type metadata accessor for AppResolutionAction(0LL);
      *(void *)(v52 + swift_weakDestroy(v0 + 16) = static AppResolutionAction.noAppFound()();
      uint64_t v85 = v52 + 16;
      dispatch_semaphore_t v53 = dispatch_semaphore_create(0LL);
      v90[3] = type metadata accessor for AppResolutionStateProvider(0LL);
      v90[4] = (uint64_t)&protocol witness table for AppResolutionStateProvider;
      sub_10974(v90);
      AppResolutionStateProvider.init(appSelectionState:)(0LL);
      uint64_t v54 = swift_allocObject(&unk_274600, 32LL, 7LL);
      *(void *)(v54 + swift_weakDestroy(v0 + 16) = v52;
      *(void *)(v54 + 24) = v53;
      swift_retain(v52);
      uint64_t v55 = v53;
      InstrumentedAppResolutionService.resolveApp(intent:appResolutionState:_:)(v39, v90, sub_1C12D8, v54);
      swift_release(v54);
      sub_6C3C(v90);
      uint64_t v86 = v55;
      OS_dispatch_semaphore.wait()();
      id v56 = v41;
      v57._object = (void *)0x80000000002231A0LL;
      v58.value._uint64_t countAndFlagsBits = v43;
      v58.value._object = v45;
      v57._uint64_t countAndFlagsBits = 0xD000000000000028LL;
      INIntent.setLaunchId(launchId:caller:)(v58, v57);

      __n128 v59 = swift_bridgeObjectRelease(v45);
      Class v60 = v76;
      ((void (*)(char *, uint64_t, uint64_t, __n128))v80)(v76, v79, v9, v59);
      uint64_t v61 = swift_retain_n(v52, 2LL);
      id v62 = (os_log_s *)Logger.logObject.getter(v61);
      os_log_type_t v63 = static os_log_type_t.default.getter(v62);
      if (os_log_type_enabled(v62, v63))
      {
        uint64_t v64 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
        uint64_t v65 = swift_slowAlloc(32LL, -1LL);
        v90[0] = v65;
        *(_DWORD *)uint64_t v64 = 136315138;
        uint64_t v75 = v9;
        swift_beginAccess(v85, &v87, 0LL, 0LL);
        uint64_t v89 = *(void *)(v52 + 16);
        uint64_t v66 = sub_10430( &qword_28D090,  (uint64_t (*)(uint64_t))&type metadata accessor for AppResolutionAction,  (uint64_t)&protocol conformance descriptor for AppResolutionAction);
        uint64_t v67 = dispatch thunk of CustomStringConvertible.description.getter(v84, v66);
        unint64_t v69 = v68;
        uint64_t v89 = sub_6978(v67, v68, v90);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v89, v90);
        swift_release_n(v52, 2LL);
        swift_bridgeObjectRelease(v69);
        _os_log_impl(&dword_0, v62, v63, "AppResolutionStrategy#resolveApp returning result %s", v64, 0xCu);
        swift_arrayDestroy(v65, 1LL, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v65, -1LL, -1LL);
        swift_slowDealloc(v64, -1LL, -1LL);

        uint64_t v71 = v75;
        __int128 v70 = v76;
      }

      else
      {

        swift_release_n(v52, 2LL);
        __int128 v70 = v60;
        uint64_t v71 = v9;
      }

      v33(v70, v71);
      swift_beginAccess(v85, v90, 0LL, 0LL);
      uint64_t v51 = *(void *)(v52 + 16);
      swift_retain(v51);
      swift_release(v52);
      return v51;
    }
  }

  Class v46 = v77;
  uint64_t v47 = ((uint64_t (*)(char *, uint64_t, uint64_t))v18)(v77, v17, v9);
  uint64_t v48 = (os_log_s *)Logger.logObject.getter(v47);
  os_log_type_t v49 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v48, v49))
  {
    uint64_t v50 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
    *(_WORD *)uint64_t v50 = 0;
    _os_log_impl( &dword_0,  v48,  v49,  "AppResolutionStrategy#resolveApp Unable to get SiriKit intent from parse",  v50,  2u);
    swift_slowDealloc(v50, -1LL, -1LL);
  }

  v33(v46, v9);
  type metadata accessor for AppResolutionAction(0LL);
  return static AppResolutionAction.noAppFound()();
}

Swift::Int sub_1BEFEC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v41 = a2;
  uint64_t v42 = a3;
  uint64_t v4 = type metadata accessor for AppResolutionResult(0LL);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v39 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v8 = type metadata accessor for Logger(0LL);
  uint64_t v40 = *(void *)(v8 - 8);
  uint64_t v9 = __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v39 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v9);
  uint64_t v13 = (char *)&v39 - v12;
  uint64_t v14 = sub_6C5C(&qword_28C0E8);
  __chkstk_darwin(v14);
  uint64_t v16 = (uint64_t *)((char *)&v39 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  sub_FF10(a1, (uint64_t)v16, &qword_28C0E8);
  if (swift_getEnumCaseMultiPayload(v16, v14) == 1)
  {
    uint64_t v17 = *v16;
    if (qword_283888 != -1) {
      swift_once(&qword_283888, sub_BFC5C);
    }
    uint64_t v18 = sub_6960(v8, (uint64_t)qword_2969C8);
    uint64_t v19 = v40;
    (*(void (**)(char *, uint64_t, uint64_t))(v40 + 16))(v13, v18, v8);
    swift_errorRetain(v17);
    uint64_t v20 = swift_errorRetain(v17);
    uint64_t v21 = (os_log_s *)Logger.logObject.getter(v20);
    os_log_type_t v22 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v21, v22))
    {
      uint64_t v23 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
      uint64_t v24 = swift_slowAlloc(32LL, -1LL);
      v46[0] = v24;
      *(_DWORD *)uint64_t v23 = 136315138;
      Class v39 = v23 + 4;
      swift_getErrorValue(v17, v45, v44);
      uint64_t v25 = Error.localizedDescription.getter(v44[1], v44[2]);
      unint64_t v27 = v26;
      uint64_t v43 = sub_6978(v25, v26, v46);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v43, v44);
      swift_bridgeObjectRelease(v27);
      swift_errorRelease(v17);
      swift_errorRelease(v17);
      _os_log_impl( &dword_0,  v21,  v22,  "AppResolutionStrategy#resolveApp App resolution resulted in a failure. Error: %s",  v23,  0xCu);
      swift_arrayDestroy(v24, 1LL, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v24, -1LL, -1LL);
      swift_slowDealloc(v23, -1LL, -1LL);
    }

    else
    {
      swift_errorRelease(v17);
      swift_errorRelease(v17);
    }

    (*(void (**)(char *, uint64_t))(v19 + 8))(v13, v8);
    type metadata accessor for AppResolutionAction(0LL);
    uint64_t v35 = static AppResolutionAction.noAppFound()();
    swift_errorRelease(v17);
  }

  else
  {
    (*(void (**)(char *, uint64_t *, uint64_t))(v5 + 32))(v7, v16, v4);
    uint64_t v28 = v4;
    if (qword_283888 != -1) {
      swift_once(&qword_283888, sub_BFC5C);
    }
    uint64_t v29 = sub_6960(v8, (uint64_t)qword_2969C8);
    uint64_t v30 = v40;
    uint64_t v31 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v40 + 16))(v11, v29, v8);
    uint64_t v32 = (os_log_s *)Logger.logObject.getter(v31);
    os_log_type_t v33 = static os_log_type_t.default.getter(v32);
    if (os_log_type_enabled(v32, v33))
    {
      uint64_t v34 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)uint64_t v34 = 0;
      _os_log_impl(&dword_0, v32, v33, "AppResolutionStrategy#resolveApp success", v34, 2u);
      swift_slowDealloc(v34, -1LL, -1LL);
    }

    (*(void (**)(char *, uint64_t))(v30 + 8))(v11, v8);
    uint64_t v35 = sub_3422C((uint64_t)v7);
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v28);
  }

  uint64_t v36 = v41;
  swift_beginAccess(v41 + 16, v46, 1LL, 0LL);
  uint64_t v37 = *(void *)(v36 + 16);
  *(void *)(v36 + swift_weakDestroy(v0 + 16) = v35;
  swift_release(v37);
  return OS_dispatch_semaphore.signal()();
}

uint64_t sub_1BF43C(uint64_t a1)
{
  uint64_t v3 = *(void **)(v1 + 200);
  id v4 = v3;
  uint64_t v5 = sub_1BF484(v3, a1);

  return v5;
}

uint64_t sub_1BF484(void *a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v111 = a1;
  uint64_t v113 = *v3;
  uint64_t v116 = type metadata accessor for Parse(0LL);
  uint64_t v115 = *(void *)(v116 - 8);
  __chkstk_darwin(v116);
  os_log_type_t v114 = (uint8_t *)v104 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v6 = type metadata accessor for Input(0LL);
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)v104 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v10 = type metadata accessor for Logger(0LL);
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = __chkstk_darwin(v10);
  char v107 = (char *)v104 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v14 = __chkstk_darwin(v12);
  uint64_t v110 = (char *)v104 - v15;
  uint64_t v16 = __chkstk_darwin(v14);
  uint64_t v109 = (char *)v104 - v17;
  uint64_t v18 = __chkstk_darwin(v16);
  uint64_t v117 = (char *)v104 - v19;
  __chkstk_darwin(v18);
  uint64_t v21 = (char *)v104 - v20;
  if (qword_283888 != -1) {
    swift_once(&qword_283888, sub_BFC5C);
  }
  os_log_type_t v22 = (void *)sub_6960(v10, (uint64_t)qword_2969C8);
  uint64_t v23 = *(dispatch_semaphore_s **)(v11 + 16);
  id v118 = v22;
  uint64_t v119 = v23;
  ((void (*)(char *))v23)(v21);
  uint64_t v24 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 16);
  uint64_t v112 = a2;
  uint64_t v25 = v24(v9, a2, v6);
  unint64_t v26 = (os_log_s *)Logger.logObject.getter(v25);
  os_log_type_t v27 = static os_log_type_t.default.getter(v26);
  if (os_log_type_enabled(v26, v27))
  {
    uint64_t v28 = swift_slowAlloc(12LL, -1LL);
    uint64_t v106 = v3;
    uint64_t v29 = (uint8_t *)v28;
    uint64_t v30 = swift_slowAlloc(32LL, -1LL);
    uint64_t v105 = v11;
    uint64_t v31 = v30;
    uint64_t v129 = v30;
    uint64_t v108 = v10;
    *(_DWORD *)uint64_t v29 = 136315138;
    v104[1] = v29 + 4;
    uint64_t v32 = sub_10430( (unint64_t *)&qword_284640,  (uint64_t (*)(uint64_t))&type metadata accessor for Input,  (uint64_t)&protocol conformance descriptor for Input);
    uint64_t v33 = dispatch thunk of CustomStringConvertible.description.getter(v6, v32);
    unint64_t v35 = v34;
    *(void *)&__int128 v127 = sub_6978(v33, v34, &v129);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v127, (char *)&v127 + 8);
    __n128 v36 = swift_bridgeObjectRelease(v35);
    (*(void (**)(char *, uint64_t, __n128))(v7 + 8))(v9, v6, v36);
    _os_log_impl(&dword_0, v26, v27, "AppResolutionStrategy#parseDisambiguationResponse for input: %s", v29, 0xCu);
    swift_arrayDestroy(v31, 1LL, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v31, -1LL, -1LL);
    uint64_t v37 = v29;
    uint64_t v3 = v106;
    swift_slowDealloc(v37, -1LL, -1LL);

    uint64_t v38 = *(uint64_t (**)(char *, uint64_t))(v105 + 8);
    uint64_t v39 = v108;
    uint64_t v40 = v38(v21, v108);
  }

  else
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);

    uint64_t v38 = *(uint64_t (**)(char *, uint64_t))(v11 + 8);
    uint64_t v40 = v38(v21, v10);
    uint64_t v39 = v10;
  }

  *(void *)&__int128 v127 = v3;
  uint64_t v41 = v114;
  Input.parse.getter(v40);
  uint64_t v42 = type metadata accessor for AppResolutionOnDeviceStrategy(0LL, v113[10], v113[11], v113[12]);
  uint64_t WitnessTable = swift_getWitnessTable(&unk_21AA08, v42);
  sub_136558(v41, v42, WitnessTable, &v129);
  (*(void (**)(uint8_t *, uint64_t))(v115 + 8))(v41, v116);
  sub_FF10((uint64_t)&v129, (uint64_t)&v127, &qword_28D080);
  if (v128 == 1)
  {
    uint64_t v44 = v127;
    ((void (*)(char *, id, uint64_t))v119)(v117, v118, v39);
    swift_errorRetain(v44);
    uint64_t v45 = swift_errorRetain(v44);
    Class v46 = (os_log_s *)Logger.logObject.getter(v45);
    os_log_type_t v47 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v46, v47))
    {
      uint64_t v48 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
      os_log_type_t v49 = (uint64_t *)swift_slowAlloc(8LL, -1LL);
      *(_DWORD *)uint64_t v48 = 138412290;
      swift_errorRetain(v44);
      uint64_t v50 = _swift_stdlib_bridgeErrorToNSError(v44);
      uint64_t v125 = v50;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v125, &v126);
      *os_log_type_t v49 = v50;
      swift_errorRelease(v44);
      swift_errorRelease(v44);
      _os_log_impl( &dword_0,  v46,  v47,  "AppResolutionStrategy#parseDisambiguationResponse error getting app: %@",  v48,  0xCu);
      uint64_t v51 = sub_6C5C((uint64_t *)&unk_286BC0);
      swift_arrayDestroy(v49, 1LL, v51);
      swift_slowDealloc(v49, -1LL, -1LL);
      swift_slowDealloc(v48, -1LL, -1LL);
    }

    else
    {
      swift_errorRelease(v44);
      swift_errorRelease(v44);
    }

    v38(v117, v39);
    type metadata accessor for AppDisambiguationResponse(0LL);
    uint64_t v67 = static AppDisambiguationResponse.error(_:)(v44);
    swift_errorRelease(v44);
    sub_1C1200((uint64_t)&v129);
  }

  else
  {
    sub_FF54(&v127, (uint64_t)&v125);
    uint64_t v52 = v111;
    if (v111)
    {
      uint64_t v117 = (char *)v38;
      dispatch_semaphore_t v53 = v109;
      ((void (*)(char *, id, uint64_t))v119)(v109, v118, v39);
      sub_157C4((uint64_t)&v125, (uint64_t)v122);
      id v54 = v52;
      uint64_t v55 = (os_log_s *)Logger.logObject.getter(v54);
      os_log_type_t v56 = static os_log_type_t.default.getter(v55);
      if (os_log_type_enabled(v55, v56))
      {
        Swift::String v57 = v3;
        Swift::String_optional v58 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
        uint64_t v59 = swift_slowAlloc(32LL, -1LL);
        v121[0] = v59;
        *(_DWORD *)Swift::String_optional v58 = 136315138;
        uint64_t v60 = v123;
        uint64_t v61 = v124;
        sub_6EA8(v122, v123);
        uint64_t v62 = dispatch thunk of AppResolutionStateProviding.getRequestedApp()(v60, v61);
        if (!v62 || (uint64_t v63 = v62, v64 = App.appIdentifier.getter(v62), v66 = v65, swift_release(v63), !v66))
        {
          swift_bridgeObjectRelease(0LL);
          unint64_t v66 = 0xE500000000000000LL;
          uint64_t v64 = 0x3E6C696E3CLL;
        }

        uint64_t v120 = sub_6978(v64, v66, v121);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v120, v121);
        swift_bridgeObjectRelease(v66);
        sub_6C3C(v122);
        _os_log_impl( &dword_0,  v55,  v56,  "AppResolutionStrategy#parseDisambiguationResponse App Resolution state found app: %s",  v58,  0xCu);
        swift_arrayDestroy(v59, 1LL, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v59, -1LL, -1LL);
        swift_slowDealloc(v58, -1LL, -1LL);

        ((void (*)(char *, uint64_t))v117)(v109, v39);
        uint64_t v3 = v57;
      }

      else
      {
        sub_6C3C(v122);

        ((void (*)(char *, uint64_t))v117)(v53, v39);
      }

      uint64_t v76 = swift_allocObject(&unk_2745B0, 24LL, 7LL);
      type metadata accessor for AppDisambiguationResponse(0LL);
      unint64_t v77 = sub_1C11BC();
      uint64_t v78 = swift_allocError(&type metadata for AppResolutionError, v77, 0LL, 0LL);
      *uint64_t v79 = 1;
      uint64_t v80 = ((uint64_t (*)(void))static AppDisambiguationResponse.error(_:))();
      swift_errorRelease(v78);
      *(void *)(v76 + swift_weakDestroy(v0 + 16) = v80;
      uint64_t v81 = v76 + 16;
      dispatch_semaphore_t v82 = dispatch_semaphore_create(0LL);
      uint64_t v83 = v3;
      uint64_t v84 = (void *)swift_allocObject(&unk_2745D8, 48LL, 7LL);
      v84[2] = v82;
      v84[3] = v76;
      v84[4] = v83;
      v84[5] = v54;
      id v85 = v54;
      uint64_t v86 = v82;
      swift_retain(v76);
      swift_retain(v83);
      InstrumentedAppResolutionService.resolveApp(intent:appResolutionState:_:)(v85, &v125, sub_1C12A0, v84);
      swift_release(v84);
      OS_dispatch_semaphore.wait()();
      uint64_t v87 = v110;
      ((void (*)(char *, id, uint64_t))v119)(v110, v118, v39);
      uint64_t v88 = swift_retain_n(v76, 2LL);
      uint64_t v89 = (os_log_s *)Logger.logObject.getter(v88);
      os_log_type_t v90 = static os_log_type_t.default.getter(v89);
      if (os_log_type_enabled(v89, v90))
      {
        __int128 v91 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
        uint64_t v92 = swift_slowAlloc(32LL, -1LL);
        uint64_t v108 = v39;
        uint64_t v93 = v92;
        v122[0] = v92;
        uint64_t v119 = v86;
        *(_DWORD *)__int128 v91 = 136315138;
        uint64_t v116 = (uint64_t)(v91 + 4);
        swift_beginAccess(v76 + 16, v121, 0LL, 0LL);
        uint64_t v94 = *(void *)(v76 + 16);
        uint64_t v95 = swift_retain(v94);
        uint64_t v96 = dispatch thunk of AppDisambiguationResponse.debugDescription.getter(v95);
        id v118 = v85;
        uint64_t v97 = v96;
        unint64_t v99 = v98;
        swift_release(v94);
        uint64_t v100 = v97;
        uint64_t v81 = v76 + 16;
        uint64_t v120 = sub_6978(v100, v99, v122);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v120, v121);
        swift_release_n(v76, 2LL);
        swift_bridgeObjectRelease(v99);
        _os_log_impl( &dword_0,  v89,  v90,  "AppResolutionStrategy#parseDisambiguationResponse Done, returning disambiguation response: %s",  v91,  0xCu);
        swift_arrayDestroy(v93, 1LL, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v93, -1LL, -1LL);
        swift_slowDealloc(v91, -1LL, -1LL);

        uint64_t v101 = v110;
        uint64_t v102 = v108;
      }

      else
      {

        swift_release_n(v76, 2LL);
        uint64_t v101 = v87;
        uint64_t v102 = v39;
      }

      ((void (*)(char *, uint64_t))v117)(v101, v102);
      sub_6C3C(&v125);
      sub_1C1200((uint64_t)&v129);
      swift_beginAccess(v81, v122, 0LL, 0LL);
      uint64_t v67 = *(void *)(v76 + 16);
      swift_retain(v67);
      swift_release(v76);
    }

    else
    {
      unint64_t v68 = v107;
      uint64_t v69 = ((uint64_t (*)(char *, id, uint64_t))v119)(v107, v118, v39);
      __int128 v70 = (os_log_s *)Logger.logObject.getter(v69);
      os_log_type_t v71 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v70, v71))
      {
        uint64_t v72 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
        *(_WORD *)uint64_t v72 = 0;
        _os_log_impl(&dword_0, v70, v71, "Unable to get to the original intent, returning error", v72, 2u);
        swift_slowDealloc(v72, -1LL, -1LL);
      }

      v38(v68, v39);
      type metadata accessor for AppDisambiguationResponse(0LL);
      unint64_t v73 = sub_1C11BC();
      uint64_t v74 = swift_allocError(&type metadata for AppResolutionError, v73, 0LL, 0LL);
      *uint64_t v75 = 1;
      uint64_t v67 = ((uint64_t (*)(void))static AppDisambiguationResponse.error(_:))();
      sub_6C3C(&v125);
      sub_1C1200((uint64_t)&v129);
      swift_errorRelease(v74);
    }
  }

  return v67;
}

Swift::Int sub_1C0060(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  id v121 = a5;
  uint64_t v124 = a4;
  uint64_t v129 = a3;
  uint64_t v130 = a2;
  uint64_t v6 = type metadata accessor for AppResolutionResult(0LL);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = __chkstk_darwin(v6);
  uint64_t v123 = (uint64_t *)((char *)&v118 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  uint64_t v10 = __chkstk_darwin(v8);
  uint64_t v12 = (void (***)(char *, uint64_t, uint64_t))((char *)&v118 - v11);
  __chkstk_darwin(v10);
  uint64_t v14 = (char *)&v118 - v13;
  uint64_t v131 = type metadata accessor for Logger(0LL);
  char v128 = *(void (***)(char *, uint64_t, uint64_t))(v131 - 8);
  uint64_t v15 = __chkstk_darwin(v131);
  uint64_t v119 = (char *)&v118 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v17 = __chkstk_darwin(v15);
  __int128 v127 = (char *)&v118 - v18;
  uint64_t v19 = __chkstk_darwin(v17);
  uint64_t v126 = (char *)&v118 - v20;
  uint64_t v21 = __chkstk_darwin(v19);
  uint64_t v23 = (char *)&v118 - v22;
  __chkstk_darwin(v21);
  uint64_t v25 = (char *)&v118 - v24;
  uint64_t v26 = sub_6C5C(&qword_28C0E8);
  __chkstk_darwin(v26);
  uint64_t v28 = (uint64_t *)((char *)&v118 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  sub_FF10(a1, (uint64_t)v28, &qword_28C0E8);
  if (swift_getEnumCaseMultiPayload(v28, v26) == 1)
  {
    uint64_t v29 = *v28;
    if (qword_283888 != -1) {
      swift_once(&qword_283888, sub_BFC5C);
    }
    uint64_t v30 = v131;
    uint64_t v31 = sub_6960(v131, (uint64_t)qword_2969C8);
    uint64_t v32 = v128;
    v128[2](v25, v31, v30);
    swift_errorRetain(v29);
    uint64_t v33 = swift_errorRetain(v29);
    unint64_t v34 = (os_log_s *)Logger.logObject.getter(v33);
    os_log_type_t v35 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v34, v35))
    {
      __n128 v36 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
      uint64_t v37 = swift_slowAlloc(32LL, -1LL);
      uint64_t v135 = v37;
      *(_DWORD *)__n128 v36 = 136315138;
      swift_getErrorValue(v29, v133, v132);
      uint64_t v38 = Error.localizedDescription.getter(v132[1], v132[2]);
      unint64_t v40 = v39;
      uint64_t v134 = sub_6978(v38, v39, &v135);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v134, &v135);
      swift_bridgeObjectRelease(v40);
      swift_errorRelease(v29);
      swift_errorRelease(v29);
      _os_log_impl( &dword_0,  v34,  v35,  "AppResolutionStrategy#parseDisambiguationResponse App resolution resulted in a failure. Error: %s",  v36,  0xCu);
      swift_arrayDestroy(v37, 1LL, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v37, -1LL, -1LL);
      swift_slowDealloc(v36, -1LL, -1LL);

      ((void (*)(char *, uint64_t))v32[1])(v25, v131);
    }

    else
    {
      swift_errorRelease(v29);
      swift_errorRelease(v29);

      ((void (*)(char *, uint64_t))v32[1])(v25, v30);
    }

    type metadata accessor for AppDisambiguationResponse(0LL);
    unint64_t v71 = sub_1C11BC();
    uint64_t v72 = swift_allocError(&type metadata for AppResolutionError, v71, 0LL, 0LL);
    *unint64_t v73 = 1;
    uint64_t v74 = static AppDisambiguationResponse.error(_:)();
    swift_errorRelease(v29);
    uint64_t v75 = v72;
    goto LABEL_21;
  }

  uint64_t v120 = v7;
  uint64_t v41 = *(void (**)(char *, uint64_t *, uint64_t))(v7 + 32);
  uint64_t v125 = v14;
  uint64_t v122 = v6;
  v41(v14, v28, v6);
  if (qword_283888 != -1) {
    swift_once(&qword_283888, sub_BFC5C);
  }
  uint64_t v42 = v131;
  uint64_t v43 = sub_6960(v131, (uint64_t)qword_2969C8);
  uint64_t v44 = v128;
  uint64_t v45 = v128[2];
  uint64_t v46 = ((uint64_t (*)(char *, uint64_t, uint64_t))v45)(v23, v43, v42);
  os_log_type_t v47 = (os_log_s *)Logger.logObject.getter(v46);
  os_log_type_t v48 = static os_log_type_t.default.getter(v47);
  if (os_log_type_enabled(v47, v48))
  {
    os_log_type_t v49 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
    *(_WORD *)os_log_type_t v49 = 0;
    _os_log_impl(&dword_0, v47, v48, "AppResolutionStrategy#parseDisambiguationResponse success", v49, 2u);
    swift_slowDealloc(v49, -1LL, -1LL);
  }

  uint64_t v50 = v44[1];
  uint64_t v51 = v131;
  ((void (*)(char *, uint64_t))v50)(v23, v131);
  uint64_t v52 = v120;
  dispatch_semaphore_t v53 = *(uint64_t (**)(void *, char *, uint64_t))(v120 + 16);
  id v54 = v125;
  uint64_t v55 = v122;
  v53(v12, v125, v122);
  if ((*(unsigned int (**)(void (***)(char *, uint64_t, uint64_t), uint64_t))(v52 + 88))(v12, v55) != enum case for AppResolutionResult.selected(_:))
  {
    uint64_t v76 = *(void (***)(char *, uint64_t, uint64_t))(v52 + 8);
    ((void (*)(void (***)(char *, uint64_t, uint64_t), uint64_t))v76)(v12, v55);
    unint64_t v77 = v126;
    v45(v126, v43, v51);
    uint64_t v78 = v123;
    uint64_t v79 = v53(v123, v54, v55);
    uint64_t v80 = (os_log_s *)Logger.logObject.getter(v79);
    uint64_t v81 = v55;
    os_log_type_t v82 = static os_log_type_t.default.getter(v80);
    if (os_log_type_enabled(v80, v82))
    {
      uint64_t v83 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
      uint64_t v84 = swift_slowAlloc(32LL, -1LL);
      uint64_t v135 = v84;
      char v128 = v76;
      *(_DWORD *)uint64_t v83 = 136315138;
      uint64_t v85 = sub_10430( &qword_28D088,  (uint64_t (*)(uint64_t))&type metadata accessor for AppResolutionResult,  (uint64_t)&protocol conformance descriptor for AppResolutionResult);
      uint64_t v86 = dispatch thunk of CustomStringConvertible.description.getter(v81, v85);
      unint64_t v88 = v87;
      uint64_t v134 = sub_6978(v86, v87, &v135);
      id v54 = v125;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v134, &v135);
      __n128 v89 = swift_bridgeObjectRelease(v88);
      uint64_t v76 = v128;
      ((void (*)(void *, uint64_t, __n128))v128)(v78, v81, v89);
      _os_log_impl( &dword_0,  v80,  v82,  "AppResolutionStrategy#parseDisambiguationResponse unexpected resopnse: %s",  v83,  0xCu);
      swift_arrayDestroy(v84, 1LL, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v84, -1LL, -1LL);
      swift_slowDealloc(v83, -1LL, -1LL);

      os_log_type_t v90 = v126;
      uint64_t v91 = v131;
    }

    else
    {
      ((void (*)(void *, uint64_t))v76)(v78, v81);

      os_log_type_t v90 = v77;
      uint64_t v91 = v51;
    }

    ((void (*)(char *, uint64_t))v50)(v90, v91);
    type metadata accessor for AppDisambiguationResponse(0LL);
    unint64_t v92 = sub_1C11BC();
    uint64_t v93 = swift_allocError(&type metadata for AppResolutionError, v92, 0LL, 0LL);
    *uint64_t v94 = 1;
    uint64_t v74 = static AppDisambiguationResponse.error(_:)();
    ((void (*)(char *, uint64_t))v76)(v54, v81);
    uint64_t v75 = v93;
LABEL_21:
    swift_errorRelease(v75);
    goto LABEL_32;
  }

  uint64_t v126 = (char *)v50;
  (*(void (**)(void (***)(char *, uint64_t, uint64_t), uint64_t))(v52 + 96))(v12, v55);
  os_log_type_t v56 = *v12;
  v45(v127, v43, v51);
  uint64_t v57 = swift_retain(v56);
  Swift::String_optional v58 = (os_log_s *)Logger.logObject.getter(v57);
  os_log_type_t v59 = static os_log_type_t.default.getter(v58);
  BOOL v60 = os_log_type_enabled(v58, v59);
  char v128 = v56;
  if (v60)
  {
    uint64_t v61 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
    uint64_t v62 = swift_slowAlloc(8LL, -1LL);
    uint64_t v123 = (void *)v62;
    *(_DWORD *)uint64_t v61 = 138412290;
    uint64_t v63 = App.appIdentifier.getter(v62);
    if (v64)
    {
      uint64_t v65 = v63;
      uint64_t v66 = v64;
      unint64_t v67 = sub_6C9C();
      uint64_t v68 = swift_allocError(&type metadata for String, v67, 0LL, 0LL);
      *uint64_t v69 = v65;
      v69[1] = v66;
      uint64_t v70 = _swift_stdlib_bridgeErrorToNSError(v68);
      uint64_t v135 = v70;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v135, v136);
    }

    else
    {
      uint64_t v135 = 0LL;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v135, v136);
      uint64_t v70 = 0LL;
    }

    uint64_t v95 = v123;
    *uint64_t v123 = v70;
    swift_release(v128);
    _os_log_impl( &dword_0,  v58,  v59,  "AppResolutionStrategy#parseDisambiguationResponse success with app: %@",  v61,  0xCu);
    uint64_t v96 = sub_6C5C((uint64_t *)&unk_286BC0);
    swift_arrayDestroy(v95, 1LL, v96);
    swift_slowDealloc(v95, -1LL, -1LL);
    swift_slowDealloc(v61, -1LL, -1LL);

    uint64_t v51 = v131;
    uint64_t v55 = v122;
    id v54 = v125;
  }

  else
  {

    swift_release(v56);
  }

  uint64_t v97 = (uint64_t (*)(char *, uint64_t))v126;
  ((void (*)(char *, uint64_t))v126)(v127, v51);
  if (*(_BYTE *)(v124 + 216) == 1)
  {
    uint64_t v98 = objc_opt_self(&OBJC_CLASS___INPlayMediaIntent);
    uint64_t v99 = swift_dynamicCastObjCClass(v121, v98);
    if (v99)
    {
      uint64_t v100 = (void *)v99;
      uint64_t v101 = v119;
      v45(v119, v43, v51);
      id v102 = v121;
      unint64_t v103 = (os_log_s *)Logger.logObject.getter(v102);
      os_log_type_t v104 = static os_log_type_t.default.getter(v103);
      if (os_log_type_enabled(v103, v104))
      {
        uint64_t v105 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
        *(_WORD *)uint64_t v105 = 0;
        _os_log_impl( &dword_0,  v103,  v104,  "AppResolutionStrategy#parseDisambiguationResponse applying app to intent after disambiguation",  v105,  2u);
        swift_slowDealloc(v105, -1LL, -1LL);
      }

      uint64_t v106 = v97(v101, v51);
      v107.value._uint64_t countAndFlagsBits = App.appIdentifier.getter(v106);
      object = v107.value._object;
      v109._object = (void *)0x8000000000223160LL;
      v109._uint64_t countAndFlagsBits = 0xD000000000000039LL;
      INIntent.setLaunchId(launchId:caller:)(v107, v109);
      id v110 = objc_msgSend(v100, "backingStore", swift_bridgeObjectRelease(object).n128_f64[0]);
      uint64_t v111 = objc_opt_self(&OBJC_CLASS____INPBPlayMediaIntent);
      uint64_t v112 = (void *)swift_dynamicCastObjCClass(v110, v111);
      if (v112)
      {
        id v113 = [v112 privatePlayMediaIntentData];

        [v113 setAppInferred:0];
        id v110 = v113;
      }

      uint64_t v55 = v122;
      uint64_t v52 = v120;
    }
  }

  type metadata accessor for AppDisambiguationResponse(0LL);
  os_log_type_t v114 = v128;
  uint64_t v74 = static AppDisambiguationResponse.select(app:)(v128);
  swift_release(v114);
  (*(void (**)(char *, uint64_t))(v52 + 8))(v54, v55);
LABEL_32:
  uint64_t v115 = v129;
  swift_beginAccess(v129 + 16, &v135, 1LL, 0LL);
  uint64_t v116 = *(void *)(v115 + 16);
  *(void *)(v115 + swift_weakDestroy(v0 + 16) = v74;
  swift_release(v116);
  return OS_dispatch_semaphore.signal()();
}

void sub_1C0B20(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = *v3;
  uint64_t v8 = v3[25];
  uint64_t v9 = type metadata accessor for AppResolutionOnDeviceStrategy(0LL, v7[10], v7[11], v7[12]);
  uint64_t v10 = v8;
  uint64_t WitnessTable = swift_getWitnessTable(&unk_21AA08, v9);
  sub_1403A0(a1, a2, a3, v9, WitnessTable);
}

uint64_t sub_1C0BB4(uint64_t a1, void (*a2)(uint64_t *), void (*a3)(uint64_t *))
{
  uint64_t v7 = *v3;
  uint64_t v8 = type metadata accessor for PaginationStyle(0LL);
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)&v22 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v11 = sub_6C5C(&qword_28AA80);
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v14 = (uint64_t *)((char *)&v22 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  __n128 v15 = swift_bridgeObjectRetain(a1);
  static PaginationStyle.noPagination()(v15);
  uint64_t v16 = type metadata accessor for App(0LL);
  PaginatedItemContainer.init(items:paginationStyle:)(a1, v10, v16);
  uint64_t v23 = v3;
  uint64_t v17 = v3[25];
  uint64_t v18 = type metadata accessor for AppResolutionOnDeviceStrategy(0LL, v7[10], v7[11], v7[12]);
  uint64_t v19 = v17;
  uint64_t WitnessTable = swift_getWitnessTable(&unk_21AA08, v18);
  sub_139DB4(v17, v14, a2, a3, v18, WitnessTable);

  return (*(uint64_t (**)(void *, uint64_t))(v12 + 8))(v14, v11);
}

uint64_t sub_1C0D08()
{
  swift_release(*(void *)(v0 + 208));
  return v0;
}

uint64_t sub_1C0D5C()
{
  return swift_deallocClassInstance(v0, 217LL, 7LL);
}

uint64_t type metadata accessor for AppResolutionOnDeviceStrategy( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_20280(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for AppResolutionOnDeviceStrategy);
}

uint64_t sub_1C0D88(uint64_t a1)
{
  return sub_1BE728(a1);
}

uint64_t sub_1C0DB4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v9 = (void *)swift_task_alloc(async function pointer to AppResolutionOnDeviceFlowStrategy.makeAppResolutionSuccessfulResponse(app:)[1]);
  *(void *)(v4 + swift_weakDestroy(v0 + 16) = v9;
  *uint64_t v9 = v4;
  v9[1] = sub_11C64;
  return AppResolutionOnDeviceFlowStrategy.makeAppResolutionSuccessfulResponse(app:)(a1, a2, a3, a4);
}

uint64_t sub_1C0E30(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v9 = (void *)swift_task_alloc(async function pointer to AppResolutionOnDeviceFlowStrategy.makeAppResolutionUnsuccessfulResponse(reason:)[1]);
  *(void *)(v4 + swift_weakDestroy(v0 + 16) = v9;
  *uint64_t v9 = v4;
  v9[1] = sub_3B08C;
  return AppResolutionOnDeviceFlowStrategy.makeAppResolutionUnsuccessfulResponse(reason:)(a1, a2, a3, a4);
}

uint64_t sub_1C0EAC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v9 = (void *)swift_task_alloc(async function pointer to AppResolutionOnDeviceFlowStrategy.makeErrorOutput(error:)[1]);
  *(void *)(v4 + swift_weakDestroy(v0 + 16) = v9;
  *uint64_t v9 = v4;
  v9[1] = sub_3B08C;
  return AppResolutionOnDeviceFlowStrategy.makeErrorOutput(error:)(a1, a2, a3, a4);
}

uint64_t sub_1C0F28@<X0>(uint64_t a1@<X8>)
{
  return sub_157C4(*v1 + 56LL, a1);
}

uint64_t sub_1C0F48()
{
  return swift_retain(*(void *)(*(void *)v0 + 96LL));
}

uint64_t sub_1C0F54@<X0>(uint64_t a1@<X8>)
{
  return sub_157C4(*v1 + 16LL, a1);
}

uint64_t sub_1C0F74()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 104LL);
  swift_retain(*(void *)(*(void *)v0 + 112LL));
  return v1;
}

void sub_1C0FA8(uint64_t a1, uint64_t a2, uint64_t a3)
{
}

uint64_t sub_1C0FDC(uint64_t a1)
{
  return sub_1BF43C(a1);
}

uint64_t sub_1C0FFC(uint64_t a1, void (*a2)(uint64_t *), void (*a3)(uint64_t *))
{
  return sub_1C0BB4(a1, a2, a3);
}

uint64_t sub_1C102C(uint64_t a1)
{
  return swift_getWitnessTable(&unk_21A9B0, a1);
}

uint64_t sub_1C103C(uint64_t a1)
{
  return swift_getWitnessTable(&unk_21A960, a1);
}

uint64_t sub_1C104C()
{
  uint64_t v0 = type metadata accessor for Logger(0LL);
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v14 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  if (qword_283888 != -1) {
    swift_once(&qword_283888, sub_BFC5C);
  }
  uint64_t v4 = sub_6960(v0, (uint64_t)qword_2969C8);
  uint64_t v5 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v1 + 16))(v3, v4, v0);
  uint64_t v6 = (os_log_s *)Logger.logObject.getter(v5);
  os_log_type_t v7 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v6, v7))
  {
    uint64_t v8 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
    *(_WORD *)uint64_t v8 = 0;
    _os_log_impl(&dword_0, v6, v7, "AppResolutionOnDeviceStrategy#parseConfirmationResponse needs implementing", v8, 2u);
    swift_slowDealloc(v8, -1LL, -1LL);
  }

  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  type metadata accessor for AppConfirmationResponse(0LL);
  unint64_t v9 = sub_1C11BC();
  uint64_t v10 = swift_allocError(&type metadata for AppResolutionError, v9, 0LL, 0LL);
  *uint64_t v11 = 0;
  uint64_t v12 = static AppConfirmationResponse.error(_:)();
  swift_errorRelease(v10);
  return v12;
}

unint64_t sub_1C11BC()
{
  unint64_t result = qword_28D078;
  if (!qword_28D078)
  {
    unint64_t result = swift_getWitnessTable(&unk_218B8C, &type metadata for AppResolutionError);
    atomic_store(result, (unint64_t *)&qword_28D078);
  }

  return result;
}

uint64_t sub_1C1200(uint64_t a1)
{
  uint64_t v2 = sub_6C5C(&qword_28D080);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8LL))(a1, v2);
  return a1;
}

uint64_t sub_1C1240()
{
  return swift_deallocObject(v0, 24LL, 7LL);
}

uint64_t sub_1C1264()
{
  swift_release(*(void *)(v0 + 24));
  swift_release(*(void *)(v0 + 32));

  return swift_deallocObject(v0, 48LL, 7LL);
}

Swift::Int sub_1C12A0(uint64_t a1)
{
  return sub_1C0060(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), *(void **)(v1 + 40));
}

uint64_t sub_1C12AC()
{
  return swift_deallocObject(v0, 32LL, 7LL);
}

Swift::Int sub_1C12D8(uint64_t a1)
{
  return sub_1BEFEC(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_1C12E0()
{
  return swift_deallocClassInstance(v0, 72LL, 7LL);
}

uint64_t type metadata accessor for PlayMediaAlternativeSnippetProvider()
{
  return objc_opt_self(&OBJC_CLASS____TtC23AudioFlowDelegatePlugin35PlayMediaAlternativeSnippetProvider);
}

uint64_t DialogService.init(appNameResolver:morphunProvider:aceServiceInvoker:multiUserConnectionProvider:contactsManager:deviceProvider:)( void *a1, void *a2, void *a3, void *a4, uint64_t a5, void *a6)
{
  uint64_t v26 = a5;
  uint64_t v25 = a3;
  uint64_t v11 = a4[3];
  uint64_t v10 = a4[4];
  uint64_t v12 = sub_1094C((uint64_t)a4, v11);
  __chkstk_darwin(v12);
  uint64_t v14 = (char *)&v24 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  (*(void (**)(char *))(v15 + 16))(v14);
  uint64_t v17 = a6[3];
  uint64_t v16 = a6[4];
  uint64_t v18 = sub_1094C((uint64_t)a6, v17);
  __chkstk_darwin(v18);
  uint64_t v20 = (char *)&v24 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  (*(void (**)(char *))(v21 + 16))(v20);
  uint64_t v22 = sub_1C3788(a1, a2, v25, (uint64_t)v14, v26, (uint64_t)v20, v27, v17, v11, v16, v10);
  sub_6C3C(a6);
  sub_6C3C(a4);
  return v22;
}

void *DialogService.deinit()
{
  return v0;
}

uint64_t DialogService.buildParams(with:app:intentDialogContext:completion:)( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v58 = a5;
  uint64_t v56 = a4;
  uint64_t v57 = a1;
  uint64_t v61 = a2;
  uint64_t v6 = sub_6C5C(&qword_28D2E0);
  id v54 = *(char **)(v6 - 8);
  uint64_t v7 = __chkstk_darwin(v6);
  uint64_t v55 = (uint64_t)&v48 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v51 = v8;
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v48 - v9;
  uint64_t v11 = swift_allocObject(&unk_274710, 24LL, 7LL);
  unint64_t v12 = sub_74D54((uint64_t)_swiftEmptyArrayStorage);
  uint64_t v52 = v11;
  *(void *)(v11 + swift_weakDestroy(v0 + 16) = v12;
  uint64_t v13 = swift_allocObject(&unk_274710, 24LL, 7LL);
  *(void *)(v13 + swift_weakDestroy(v0 + 16) = sub_74D54((uint64_t)_swiftEmptyArrayStorage);
  uint64_t v14 = swift_allocObject(&unk_274710, 24LL, 7LL);
  *(void *)(v14 + swift_weakDestroy(v0 + 16) = sub_74D54((uint64_t)_swiftEmptyArrayStorage);
  uint64_t v15 = swift_allocObject(&unk_274710, 24LL, 7LL);
  unint64_t v16 = sub_74D54((uint64_t)_swiftEmptyArrayStorage);
  uint64_t v60 = v15;
  *(void *)(v15 + swift_weakDestroy(v0 + 16) = v16;
  uint64_t v17 = static SiriEnvironmentWrapper.retrieve()(v16);
  if (v17)
  {
    uint64_t v18 = v17;
    uint64_t v19 = SiriEnvironment.currentRequest.getter(v17);
    uint64_t v20 = swift_release(v18);
    CurrentRequest.multiUserState.getter(v20);
    swift_release(v19);
    uint64_t v21 = type metadata accessor for MultiUserState(0LL);
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v21 - 8) + 56LL))(v10, 0LL, 1LL, v21);
  }

  else
  {
    uint64_t v22 = type metadata accessor for MultiUserState(0LL);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 56LL))(v10, 1LL, 1LL, v22);
  }

  if (qword_283970 != -1) {
    swift_once(&qword_283970, sub_1C19DC);
  }
  uint64_t v53 = qword_28D1B0;
  uint64_t v23 = sub_6C5C(&qword_286B90);
  uint64_t v24 = swift_allocObject(v23, 80LL, 7LL);
  *(_OWORD *)(v24 + swift_weakDestroy(v0 + 16) = xmmword_2168F0;
  sub_FF10(a3, (uint64_t)v64, &qword_283FE8);
  uint64_t v25 = (void *)swift_allocObject(&unk_274738, 88LL, 7LL);
  uint64_t v49 = v13;
  uint64_t v26 = v59;
  v25[2] = v13;
  v25[3] = v26;
  sub_45F6C((uint64_t)v64, (uint64_t)(v25 + 4), &qword_283FE8);
  uint64_t v27 = v61;
  v25[9] = v61;
  v25[10] = v14;
  *(void *)(v24 + 3sub_6C3C(v0 + 2) = sub_1C3A5C;
  *(void *)(v24 + 40) = v25;
  sub_FF10(a3, (uint64_t)v63, &qword_283FE8);
  uint64_t v28 = (void *)swift_allocObject(&unk_274760, 80LL, 7LL);
  v28[2] = v26;
  v28[3] = v27;
  sub_45F6C((uint64_t)v63, (uint64_t)(v28 + 4), &qword_283FE8);
  uint64_t v29 = v52;
  v28[9] = v52;
  *(void *)(v24 + 48) = sub_1C3AB0;
  *(void *)(v24 + 56) = v28;
  sub_FF10(a3, (uint64_t)v62, &qword_283FE8);
  uint64_t v30 = swift_allocObject(&unk_274788, 72LL, 7LL);
  sub_45F6C((uint64_t)v62, v30 + 16, &qword_283FE8);
  uint64_t v31 = v60;
  *(void *)(v30 + 56) = v26;
  *(void *)(v30 + 64) = v31;
  uint64_t v50 = v24;
  *(void *)(v24 + 64) = sub_1C3AFC;
  *(void *)(v24 + 7sub_6C3C(v0 + 2) = v30;
  sub_FF10(a3, (uint64_t)v64, &qword_283FE8);
  uint64_t v32 = v55;
  sub_FF10((uint64_t)v10, v55, &qword_28D2E0);
  uint64_t v33 = v54[80];
  uint64_t v34 = (v33 + 88) & ~v33;
  unint64_t v35 = (v51 + v34 + 7) & 0xFFFFFFFFFFFFFFF8LL;
  id v54 = v10;
  unint64_t v36 = (v35 + 15) & 0xFFFFFFFFFFFFFFF8LL;
  unint64_t v37 = (v36 + 15) & 0xFFFFFFFFFFFFFFF8LL;
  uint64_t v38 = (void *)swift_allocObject(&unk_2747B0, v37 + 16, v33 | 7);
  v38[2] = v29;
  v38[3] = v14;
  uint64_t v39 = v14;
  v38[4] = v26;
  uint64_t v40 = v60;
  v38[5] = v60;
  sub_45F6C((uint64_t)v64, (uint64_t)(v38 + 6), &qword_283FE8);
  sub_45F6C(v32, (uint64_t)v38 + v34, &qword_28D2E0);
  uint64_t v41 = v49;
  *(void *)((char *)v38 + v35) = v49;
  uint64_t v42 = v56;
  uint64_t v43 = v57;
  *(void *)((char *)v38 + v36) = v57;
  uint64_t v44 = (void *)((char *)v38 + v37);
  uint64_t v45 = v58;
  *uint64_t v44 = v42;
  v44[1] = v45;
  swift_retain_n(v61, 2LL);
  swift_retain_n(v39, 2LL);
  swift_retain_n(v29, 2LL);
  swift_retain_n(v40, 2LL);
  swift_retain_n(v59, 4LL);
  swift_retain_n(v41, 2LL);
  swift_bridgeObjectRetain(v43);
  swift_retain(v45);
  uint64_t v46 = v50;
  static Tasks.parallelize(queue:tasks:completion:)(v53, v50, sub_1C3C34, v38);
  swift_bridgeObjectRelease(v46);
  swift_release(v38);
  sub_1F6CC((uint64_t)v54, &qword_28D2E0);
  swift_release(v29);
  swift_release(v41);
  swift_release(v39);
  return swift_release(v40);
}

id sub_1C198C()
{
  uint64_t v0 = type metadata accessor for DialogService();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata(v0);
  id result = [(id)objc_opt_self(NSBundle) bundleForClass:ObjCClassFromMetadata];
  qword_296BA0 = (uint64_t)result;
  return result;
}

uint64_t sub_1C19DC()
{
  uint64_t v0 = type metadata accessor for OS_dispatch_queue.Attributes(0LL);
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v12 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v4 = type metadata accessor for DispatchQoS(0LL);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = __chkstk_darwin(v4);
  uint64_t v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v9 = static DispatchQoS.userInteractive.getter(v6);
  static OS_dispatch_queue.Attributes.concurrent.getter(v9);
  uint64_t v10 = static DispatchQueues.queue(_:qos:attributes:)(0xD000000000000012LL, 0x8000000000223510LL, v8, v3);
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v8, v4);
  qword_28D1B0 = v10;
  return result;
}

uint64_t DialogService.__allocating_init(appNameResolver:morphunProvider:aceServiceInvoker:multiUserConnectionProvider:contactsManager:deviceProvider:)( void *a1, void *a2, void *a3, void *a4, uint64_t a5, void *a6)
{
  uint64_t v7 = v6;
  uint64_t v28 = a3;
  uint64_t v29 = a5;
  uint64_t v27 = a2;
  uint64_t v11 = swift_allocObject(v7, 256LL, 7LL);
  uint64_t v13 = a4[3];
  uint64_t v12 = a4[4];
  uint64_t v14 = sub_1094C((uint64_t)a4, v13);
  __chkstk_darwin(v14);
  unint64_t v16 = (char *)&v26 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  (*(void (**)(char *))(v17 + 16))(v16);
  uint64_t v19 = a6[3];
  uint64_t v18 = a6[4];
  uint64_t v20 = sub_1094C((uint64_t)a6, v19);
  __chkstk_darwin(v20);
  uint64_t v22 = (char *)&v26 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  (*(void (**)(char *))(v23 + 16))(v22);
  uint64_t v24 = sub_1C3788(a1, v27, v28, (uint64_t)v16, v29, (uint64_t)v22, v11, v19, v13, v18, v12);
  sub_6C3C(a6);
  sub_6C3C(a4);
  return v24;
}

uint64_t sub_1C1C34( uint64_t (**a1)(uint64_t), uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v9 = *a1;
  uint64_t v10 = a2 + 16;
  unint64_t v11 = DialogService.buildIntentParams(for:with:)(a4, a5);
  swift_beginAccess(v10, v23, 1LL, 0LL);
  uint64_t v12 = *(void *)(a2 + 16);
  *(void *)(a2 + swift_weakDestroy(v0 + 16) = v11;
  swift_bridgeObjectRelease(v12);
  sub_FF10(a4, (uint64_t)v20, &qword_283FE8);
  uint64_t v13 = v21;
  if (v21)
  {
    uint64_t v14 = v22;
    sub_6EA8(v20, v21);
    uint64_t v15 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v14 + 48))(v13, v14);
    sub_6C3C(v20);
  }

  else
  {
    sub_1F6CC((uint64_t)v20, &qword_283FE8);
    uint64_t v15 = 0LL;
  }

  unint64_t v16 = sub_3160C(v15);

  swift_beginAccess(a6 + 16, v20, 1LL, 0LL);
  uint64_t v17 = *(void *)(a6 + 16);
  *(void *)(a6 + swift_weakDestroy(v0 + 16) = v16;
  uint64_t v18 = swift_bridgeObjectRelease(v17);
  return v9(v18);
}

uint64_t sub_1C1D54(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v34 = a2;
  uint64_t v35 = a4;
  uint64_t v8 = type metadata accessor for OSSignpostID(0LL);
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = *(void *)(v9 + 64);
  uint64_t v11 = __chkstk_darwin(v8);
  uint64_t v12 = (char *)&v32 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v11);
  uint64_t v14 = (char *)&v32 - v13;
  uint64_t v16 = *a1;
  uint64_t v15 = a1[1];
  uint64_t v17 = swift_allocObject(&unk_274918, 32LL, 7LL);
  *(void *)(v17 + swift_weakDestroy(v0 + 16) = v16;
  *(void *)(v17 + 24) = v15;
  if (a3)
  {
    uint64_t v18 = swift_retain(v15);
    uint64_t v32 = App.appIdentifier.getter(v18);
    uint64_t v33 = v19;
  }

  else
  {
    swift_retain(v15);
    uint64_t v32 = 0LL;
    uint64_t v33 = 0LL;
  }

  uint64_t v20 = (void *)swift_allocObject(&unk_274940, 40LL, 7LL);
  v20[2] = sub_64F88;
  void v20[3] = v17;
  v20[4] = a5;
  uint64_t v21 = swift_allocObject(&unk_274968, 32LL, 7LL);
  *(void *)(v21 + swift_weakDestroy(v0 + 16) = sub_1C4810;
  *(void *)(v21 + 24) = v20;
  uint64_t v22 = qword_2838D0;
  swift_retain(a5);
  swift_retain(v20);
  if (v22 != -1) {
    swift_once(&qword_2838D0, sub_1362AC);
  }
  OSSignpostID.init(log:)((id)qword_296AA0);
  (*(void (**)(char *, char *, uint64_t))(v9 + 16))(v12, v14, v8);
  uint64_t v23 = *(unsigned __int8 *)(v9 + 80);
  uint64_t v24 = (v23 + 33) & ~v23;
  unint64_t v25 = (v10 + v24 + 7) & 0xFFFFFFFFFFFFFFF8LL;
  uint64_t v26 = swift_allocObject(&unk_274990, v25 + 16, v23 | 7);
  *(void *)(v26 + swift_weakDestroy(v0 + 16) = "catServiceBuildAppParams";
  *(void *)(v26 + 24) = 24LL;
  *(_BYTE *)(v26 + 3sub_6C3C(v0 + 2) = 2;
  (*(void (**)(uint64_t, char *, uint64_t))(v9 + 32))(v26 + v24, v12, v8);
  uint64_t v27 = (void *)(v26 + v25);
  *uint64_t v27 = sub_1C4D84;
  v27[1] = v21;
  uint64_t v28 = swift_retain(v21);
  uint64_t v29 = static os_signpost_type_t.begin.getter(v28);
  os_signpost(_:dso:log:name:signpostID:_:_:)( v29,  &dword_0,  qword_296AA0,  "catServiceBuildAppParams",  24LL,  2LL,  v14,  " enableTelemetry=YES ",  21LL,  2,  _swiftEmptyArrayStorage);
  swift_retain(v26);
  uint64_t v30 = v33;
  sub_1C49C0(v32, v33, v34, v35, (void (*)(void *))sub_33E34, v26);
  swift_release_n(v26, 2LL);
  (*(void (**)(char *, uint64_t))(v9 + 8))(v14, v8);
  swift_release(v20);
  swift_release(v21);
  return swift_bridgeObjectRelease(v30);
}

uint64_t sub_1C2000(uint64_t a1, uint64_t a2, void *a3, uint64_t a4)
{
  uint64_t v8 = *(uint64_t (**)(uint64_t))a1;
  uint64_t v7 = *(void *)(a1 + 8);
  uint64_t v9 = (void *)swift_allocObject(&unk_2747D8, 32LL, 7LL);
  v9[2] = v8;
  v9[3] = v7;
  sub_FF10(a2, (uint64_t)v16, &qword_283FE8);
  uint64_t v10 = v17;
  if (v17)
  {
    uint64_t v11 = v18;
    sub_6EA8(v16, v17);
    uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t))(v11 + 80);
    swift_retain(v7);
    char v13 = v12(v10, v11);
    sub_6C3C(v16);
    if ((v13 & 1) != 0)
    {
      swift_retain(v9);
      swift_retain(a4);
      sub_1C4214(a2, a3, (void (*)(void))sub_1646C, v9, a4);
      swift_release_n(v9, 2LL);
      return swift_release(a4);
    }
  }

  else
  {
    swift_retain(v7);
    sub_1F6CC((uint64_t)v16, &qword_283FE8);
  }

  uint64_t v15 = swift_release(v9);
  return v8(v15);
}

uint64_t sub_1C2130(uint64_t a1, uint64_t (*a2)(uint64_t), uint64_t a3, uint64_t a4)
{
  uint64_t v7 = *(void *)(a4 + 16);
  *(void *)(a4 + swift_weakDestroy(v0 + 16) = a1;
  swift_bridgeObjectRetain(a1);
  uint64_t v8 = swift_bridgeObjectRelease(v7);
  return a2(v8);
}

uint64_t sub_1C21A0( uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void (*a9)(uint64_t), uint64_t a10)
{
  uint64_t v161 = a7;
  uint64_t v162 = a8;
  uint64_t v164 = a6;
  uint64_t v172 = a5;
  uint64_t v14 = type metadata accessor for MeCardOptions(0LL);
  uint64_t v156 = *(void *)(v14 - 8);
  uint64_t v157 = v14;
  __chkstk_darwin(v14);
  uint64_t v155 = (char *)v153 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v171 = type metadata accessor for MultiUserContext(0LL);
  uint64_t v166 = *(void *)(v171 - 8);
  __chkstk_darwin(v171);
  uint64_t v159 = (char *)v153 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v17 = sub_6C5C(&qword_28D2E0);
  uint64_t v18 = __chkstk_darwin(v17);
  uint64_t v160 = (uint64_t)v153 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v18);
  id v173 = (char *)v153 - v20;
  uint64_t v174 = type metadata accessor for Logger(0LL);
  uint64_t v170 = *(void *)(v174 - 8);
  uint64_t v21 = __chkstk_darwin(v174);
  uint64_t v167 = (char *)v153 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v23 = __chkstk_darwin(v21);
  uint64_t v154 = (char *)v153 - v24;
  uint64_t v25 = __chkstk_darwin(v23);
  uint64_t v158 = (char *)v153 - v26;
  uint64_t v27 = __chkstk_darwin(v25);
  uint64_t v163 = (char *)v153 - v28;
  __chkstk_darwin(v27);
  uint64_t v169 = (char *)v153 - v29;
  uint64_t v30 = (uint64_t *)(a4 + 16);
  uint64_t v31 = sub_6C5C(&qword_2844D0);
  uint64_t inited = swift_initStackObject(v31, &v190);
  *(_OWORD *)(inited + swift_weakDestroy(v0 + 16) = xmmword_219310;
  *(void *)(inited + 3sub_6C3C(v0 + 2) = 7368801LL;
  *(void *)(inited + 40) = 0xE300000000000000LL;
  swift_beginAccess(a1 + 16, &v189, 0LL, 0LL);
  uint64_t v33 = *(void *)(a1 + 16);
  uint64_t v34 = sub_6C5C(&qword_284048);
  *(void *)(inited + 48) = v33;
  *(void *)(inited + 7sub_6C3C(v0 + 2) = v34;
  strcpy((char *)(inited + 80), "isDialogDriven");
  *(_BYTE *)(inited + 95) = -18;
  uint64_t v35 = swift_bridgeObjectRetain(v33);
  *(_BYTE *)(inited + 96) = static SiriAudioEnvironment.isDialogDriven.getter(v35) & 1;
  *(void *)(inited + 120) = &type metadata for Bool;
  *(void *)(inited + 128) = 6383735LL;
  *(void *)(inited + 136) = 0xE300000000000000LL;
  swift_beginAccess(a2 + 16, &v188, 0LL, 0LL);
  uint64_t v36 = *(void *)(a2 + 16);
  *(void *)(inited + 144) = v36;
  *(void *)(inited + 168) = v34;
  *(void *)(inited + 176) = 0x6976654445537369LL;
  *(void *)(inited + 184) = 0xEA00000000006563LL;
  uint64_t v37 = a3[10];
  uint64_t v38 = a3[11];
  sub_6EA8(a3 + 7, v37);
  swift_bridgeObjectRetain(v36);
  dispatch thunk of AceServiceInvoker.endpointInfo()(v185, v37, v38);
  uint64_t v39 = v186;
  uint64_t v40 = v187;
  sub_6EA8(v185, v186);
  dispatch thunk of EndpointInfoProviding.getMediaRouteIdentifier()(v39, v40);
  uint64_t v42 = v41;
  if (v41) {
    swift_bridgeObjectRelease(v41);
  }
  sub_6C3C(v185);
  *(_BYTE *)(inited + 19sub_6C3C(v0 + 2) = v42 != 0;
  *(void *)(inited + 2swift_weakDestroy(v0 + 16) = &type metadata for Bool;
  *(void *)(inited + 224) = 0x6F696E61706D6F63LL;
  *(void *)(inited + 23sub_6C3C(v0 + 2) = 0xE90000000000006ELL;
  swift_beginAccess(v30, &v184, 0LL, 0LL);
  uint64_t v43 = *v30;
  *(void *)(inited + 240) = *v30;
  *(void *)(inited + 264) = v34;
  *(void *)(inited + 27sub_6C3C(v0 + 2) = 0xD000000000000018LL;
  *(void *)(inited + 280) = 0x80000000002233A0LL;
  sub_FF10(v172, (uint64_t)v185, &qword_283FE8);
  uint64_t v44 = v186;
  if (v186)
  {
    uint64_t v45 = v187;
    sub_6EA8(v185, v186);
    uint64_t v46 = *(uint64_t (**)(uint64_t, uint64_t))(v45 + 80);
    swift_bridgeObjectRetain(v43);
    char v47 = v46(v44, v45);
    sub_6C3C(v185);
  }

  else
  {
    swift_bridgeObjectRetain(v43);
    sub_1F6CC((uint64_t)v185, &qword_283FE8);
    char v47 = 0;
  }

  uint64_t v48 = v174;
  uint64_t v49 = v169;
  *(void *)(inited + 31sub_6C3C(v0 + 2) = &type metadata for Bool;
  *(_BYTE *)(inited + 288) = v47 & 1;
  v191[0] = sub_74D54(inited);
  if (qword_283888 != -1) {
    swift_once(&qword_283888, sub_BFC5C);
  }
  uint64_t v165 = v34;
  uint64_t v50 = sub_6960(v48, (uint64_t)qword_2969C8);
  uint64_t v51 = v170;
  uint64_t v52 = *(uint64_t (**)(char *))(v170 + 16);
  uint64_t v172 = v50;
  uint64_t v53 = v52(v49);
  id v54 = (os_log_s *)Logger.logObject.getter(v53);
  os_log_type_t v55 = static os_log_type_t.default.getter();
  BOOL v56 = os_log_type_enabled(v54, v55);
  uint64_t v168 = v52;
  if (v56)
  {
    uint64_t v57 = swift_slowAlloc(22LL, -1LL);
    uint64_t v58 = swift_slowAlloc(64LL, -1LL);
    v185[0] = v58;
    *(_DWORD *)uint64_t v57 = 136446466;
    uint64_t v59 = static Insights.cat.getter();
    unint64_t v61 = v60;
    uint64_t v179 = (char *)sub_6978(v59, v60, v185);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v179, v180);
    swift_bridgeObjectRelease(v61);
    *(_WORD *)(v57 + 1sub_6C3C(v0 + 2) = 2080;
    v153[1] = v57 + 14;
    swift_beginAccess(v191, &v175, 0LL, 0LL);
    uint64_t v62 = v191[0];
    uint64_t v63 = swift_bridgeObjectRetain(v191[0]);
    uint64_t v64 = Dictionary.description.getter( v63,  &type metadata for String,  (char *)&type metadata for Any + 8,  &protocol witness table for String);
    unint64_t v66 = v65;
    swift_bridgeObjectRelease(v62);
    uint64_t v179 = (char *)sub_6978(v64, v66, v185);
    uint64_t v48 = v174;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v179, v180);
    swift_bridgeObjectRelease(v66);
    _os_log_impl(&dword_0, v54, v55, "CatService#execute %{public}s default params: %s", (uint8_t *)v57, 0x16u);
    swift_arrayDestroy(v58, 2LL, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v58, -1LL, -1LL);
    uint64_t v67 = v57;
    uint64_t v52 = v168;
    swift_slowDealloc(v67, -1LL, -1LL);

    uint64_t v68 = *(void (**)(char *, uint64_t))(v170 + 8);
    v68(v169, v48);
  }

  else
  {

    uint64_t v68 = *(void (**)(char *, uint64_t))(v51 + 8);
    v68(v49, v48);
  }

  uint64_t v69 = (uint64_t)v173;
  uint64_t v70 = v171;
  unint64_t v71 = v163;
  uint64_t v170 = a10;
  uint64_t v72 = ((uint64_t (*)(char *, uint64_t, uint64_t))v52)(v163, v172, v48);
  unint64_t v73 = (os_log_s *)Logger.logObject.getter(v72);
  os_log_type_t v74 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v73, v74))
  {
    uint64_t v75 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
    uint64_t v76 = v68;
    uint64_t v77 = swift_slowAlloc(32LL, -1LL);
    v185[0] = v77;
    *(_DWORD *)uint64_t v75 = 136446210;
    uint64_t v78 = static Insights.cat.getter();
    unint64_t v80 = v79;
    uint64_t v179 = (char *)sub_6978(v78, v79, v185);
    uint64_t v48 = v174;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v179, v180);
    swift_bridgeObjectRelease(v80);
    _os_log_impl( &dword_0,  v73,  v74,  "CatService#execute %{public}s going to check multiUserState for params",  v75,  0xCu);
    swift_arrayDestroy(v77, 1LL, (char *)&type metadata for Any + 8);
    uint64_t v81 = v77;
    uint64_t v68 = v76;
    swift_slowDealloc(v81, -1LL, -1LL);
    os_log_type_t v82 = v75;
    uint64_t v52 = v168;
    uint64_t v70 = v171;
    uint64_t v69 = (uint64_t)v173;
    swift_slowDealloc(v82, -1LL, -1LL);
  }

  v68(v71, v48);
  uint64_t v83 = v166;
  uint64_t v84 = a9;
  sub_FF10(v164, v69, &qword_28D2E0);
  uint64_t v85 = type metadata accessor for MultiUserState(0LL);
  uint64_t v86 = v69;
  uint64_t v87 = v160;
  sub_FF10(v86, v160, &qword_28D2E0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v83 + 48))(v87, 1LL, v70) == 1)
  {
    sub_30AA4(v87);
LABEL_16:
    unint64_t v88 = v167;
    uint64_t v89 = ((uint64_t (*)(char *, uint64_t, uint64_t))v52)(v167, v172, v48);
    os_log_type_t v90 = (os_log_s *)Logger.logObject.getter(v89);
    os_log_type_t v91 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v90, v91))
    {
      unint64_t v92 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
      uint64_t v93 = swift_slowAlloc(32LL, -1LL);
      v185[0] = v93;
      *(_DWORD *)unint64_t v92 = 136446210;
      uint64_t v94 = static Insights.cat.getter();
      unint64_t v96 = v95;
      uint64_t v179 = (char *)sub_6978(v94, v95, v185);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v179, v180);
      swift_bridgeObjectRelease(v96);
      _os_log_impl( &dword_0,  v90,  v91,  "CatService#execute %{public}s skipped setting user variable because multiUserContext is disabled",  v92,  0xCu);
      swift_arrayDestroy(v93, 1LL, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v93, -1LL, -1LL);
      swift_slowDealloc(v92, -1LL, -1LL);

      v68(v167, v174);
    }

    else
    {

      v68(v88, v48);
    }

    goto LABEL_29;
  }

  uint64_t v97 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v83 + 32))(v159, v87, v70);
  MultiUserContext.meCardProxy.getter(v185, v97);
  sub_FF10((uint64_t)v185, (uint64_t)&v179, &qword_285C80);
  uint64_t v98 = v181;
  if (!v181)
  {
    sub_1F6CC((uint64_t)&v179, &qword_285C80);
    goto LABEL_24;
  }

  uint64_t v99 = v182;
  sub_6EA8(&v179, v181);
  uint64_t v100 = v155;
  static MeCardOptions.ignoreLocalMeCard.getter();
  uint64_t v101 = (void *)dispatch thunk of MeCardProxy.fetchMeCard(options:)(v100, v98, v99);
  (*(void (**)(char *, uint64_t))(v156 + 8))(v100, v157);
  sub_6C3C(&v179);
  if (!v101)
  {
LABEL_24:
    uint64_t v138 = v158;
    uint64_t v139 = ((uint64_t (*)(char *, uint64_t, uint64_t))v168)(v158, v172, v48);
    uint64_t v140 = (os_log_s *)Logger.logObject.getter(v139);
    os_log_type_t v141 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v140, v141))
    {
      uint64_t v142 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
      uint64_t v143 = swift_slowAlloc(32LL, -1LL);
      uint64_t v179 = (char *)v143;
      uint64_t v169 = (char *)v68;
      *(_DWORD *)uint64_t v142 = 136446210;
      uint64_t v144 = static Insights.cat.getter();
      unint64_t v146 = v145;
      uint64_t v176 = sub_6978(v144, v145, (uint64_t *)&v179);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v176, v177);
      swift_bridgeObjectRelease(v146);
      _os_log_impl( &dword_0,  v140,  v141,  "CatService#execute %{public}s didn't receive a valid meCard, though multiUser is enabled",  v142,  0xCu);
      swift_arrayDestroy(v143, 1LL, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v143, -1LL, -1LL);
      swift_slowDealloc(v142, -1LL, -1LL);

      ((void (*)(char *, uint64_t))v169)(v158, v174);
      sub_1F6CC((uint64_t)v185, &qword_285C80);
      (*(void (**)(char *, uint64_t))(v166 + 8))(v159, v70);
LABEL_29:
      uint64_t v136 = v161;
      uint64_t v137 = v162;
      uint64_t v134 = (uint64_t)v173;
      goto LABEL_30;
    }

    v68(v138, v48);
LABEL_28:
    sub_1F6CC((uint64_t)v185, &qword_285C80);
    (*(void (**)(char *, uint64_t))(v83 + 8))(v159, v70);
    goto LABEL_29;
  }

  uint64_t v169 = (char *)v68;
  uint64_t v102 = sub_6C5C(&qword_28C0E0);
  uint64_t v103 = swift_initStackObject(v102, &v178);
  *(_OWORD *)(v103 + swift_weakDestroy(v0 + 16) = xmmword_214FF0;
  *(void *)(v103 + 3sub_6C3C(v0 + 2) = 0x6D614E6E65766967LL;
  *(void *)(v103 + 40) = 0xE900000000000065LL;
  id v104 = [v101 givenName];
  uint64_t v105 = static String._unconditionallyBridgeFromObjectiveC(_:)(v104);
  uint64_t v107 = v106;

  *(void *)(v103 + 48) = v105;
  *(void *)(v103 + 56) = v107;
  *(void *)(v103 + 64) = 0x614E656C6464696DLL;
  *(void *)(v103 + 7sub_6C3C(v0 + 2) = 0xEA0000000000656DLL;
  id v108 = [v101 middleName];
  uint64_t v109 = static String._unconditionallyBridgeFromObjectiveC(_:)(v108);
  uint64_t v111 = v110;

  *(void *)(v103 + 80) = v109;
  *(void *)(v103 + 88) = v111;
  *(void *)(v103 + 96) = 0x656D616E6B63696ELL;
  *(void *)(v103 + 104) = 0xE800000000000000LL;
  id v112 = [v101 nickname];
  uint64_t v113 = static String._unconditionallyBridgeFromObjectiveC(_:)(v112);
  uint64_t v115 = v114;

  *(void *)(v103 + 11sub_6C3C(v0 + 2) = v113;
  *(void *)(v103 + 120) = v115;
  *(void *)(v103 + 128) = 0x614E796C696D6166LL;
  *(void *)(v103 + 136) = 0xEA0000000000656DLL;
  id v116 = [v101 familyName];
  uint64_t v117 = static String._unconditionallyBridgeFromObjectiveC(_:)(v116);
  uint64_t v119 = v118;

  *(void *)(v103 + 144) = v117;
  *(void *)(v103 + 15sub_6C3C(v0 + 2) = v119;
  unint64_t v120 = sub_75678(v103);
  uint64_t v181 = sub_6C5C(&qword_28D2F0);
  uint64_t v179 = (char *)v120;
  swift_beginAccess(v191, &v176, 33LL, 0LL);
  swift_bridgeObjectRetain(v120);
  sub_1CBC04((uint64_t)&v179, 1919251317LL, 0xE400000000000000LL);
  swift_endAccess(&v176);
  id v121 = v154;
  ((void (*)(char *, uint64_t, uint64_t))v168)(v154, v172, v48);
  uint64_t v122 = swift_bridgeObjectRetain(v120);
  uint64_t v123 = (void *)Logger.logObject.getter(v122);
  os_log_type_t v124 = static os_log_type_t.default.getter();
  LODWORD(v17sub_6C3C(v0 + 2) = v124;
  if (!os_log_type_enabled((os_log_t)v123, v124))
  {
    swift_bridgeObjectRelease_n(v120, 2LL);

    ((void (*)(char *, uint64_t))v169)(v121, v48);
    goto LABEL_28;
  }

  uint64_t v125 = swift_slowAlloc(22LL, -1LL);
  uint64_t v167 = (char *)swift_slowAlloc(64LL, -1LL);
  uint64_t v179 = v167;
  *(_DWORD *)uint64_t v125 = 136446466;
  uint64_t v126 = static Insights.cat.getter();
  uint64_t v168 = (uint64_t (*)(char *))a9;
  unint64_t v128 = v127;
  uint64_t v176 = sub_6978(v126, v127, (uint64_t *)&v179);
  UnsafeMutableRawBufferPointer.copyMemory(from:)(&v176, v177);
  swift_bridgeObjectRelease(v128);
  *(_WORD *)(v125 + 1sub_6C3C(v0 + 2) = 2080;
  uint64_t v164 = v125 + 14;
  uint64_t v129 = swift_bridgeObjectRetain(v120);
  uint64_t v130 = Dictionary.description.getter( v129,  &type metadata for String,  &type metadata for String,  &protocol witness table for String);
  unint64_t v132 = v131;
  swift_bridgeObjectRelease(v120);
  uint64_t v133 = v130;
  uint64_t v84 = (void (*)(uint64_t))v168;
  uint64_t v134 = (uint64_t)v173;
  uint64_t v176 = sub_6978(v133, v132, (uint64_t *)&v179);
  UnsafeMutableRawBufferPointer.copyMemory(from:)(&v176, v177);
  swift_bridgeObjectRelease_n(v120, 2LL);
  swift_bridgeObjectRelease(v132);
  _os_log_impl( &dword_0,  (os_log_t)v123,  (os_log_type_t)v172,  "CatService#execute %{public}s just set user variable %s into default params since multiUserContext is enabled and we have a meCard",  (uint8_t *)v125,  0x16u);
  uint64_t v135 = v167;
  swift_arrayDestroy(v167, 2LL, (char *)&type metadata for Any + 8);
  swift_slowDealloc(v135, -1LL, -1LL);
  swift_slowDealloc(v125, -1LL, -1LL);

  ((void (*)(char *, uint64_t))v169)(v154, v174);
  sub_1F6CC((uint64_t)v185, &qword_285C80);
  (*(void (**)(char *, uint64_t))(v166 + 8))(v159, v70);
  uint64_t v136 = v161;
  uint64_t v137 = v162;
LABEL_30:
  sub_1F6CC(v134, &qword_28D2E0);
  swift_beginAccess(v191, v185, 0LL, 0LL);
  uint64_t v147 = v191[0];
  uint64_t v148 = sub_6C5C(&qword_28D2E8);
  uint64_t v149 = swift_initStackObject(v148, &v183);
  *(_OWORD *)(v149 + swift_weakDestroy(v0 + 16) = xmmword_2160E0;
  swift_beginAccess(v136 + 16, &v179, 0LL, 0LL);
  uint64_t v150 = *(void *)(v136 + 16);
  *(void *)(v149 + 3sub_6C3C(v0 + 2) = v150;
  *(void *)(v149 + 40) = v137;
  swift_bridgeObjectRetain(v147);
  swift_bridgeObjectRetain(v150);
  swift_bridgeObjectRetain(v137);
  uint64_t v151 = sub_C169C(v149, v147);
  swift_setDeallocating(v149);
  swift_arrayDestroy(v149 + 32, *(void *)(v149 + 16), v165);
  swift_bridgeObjectRelease(v147);
  v84(v151);
  swift_bridgeObjectRelease(v151);
  return swift_bridgeObjectRelease(v191[0]);
}

uint64_t sub_1C3198( uint64_t a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v14 = a4[15];
  uint64_t v15 = a4[16];
  sub_6EA8(a4 + 12, v14);
  uint64_t v16 = (void *)swift_allocObject(&unk_2748F0, 48LL, 7LL);
  v16[2] = a7;
  void v16[3] = a8;
  v16[4] = a1;
  v16[5] = a2;
  swift_bridgeObjectRetain(a2);
  swift_retain(a8);
  dispatch thunk of MultiUserConnectionProviding.sharedUserInfo(for:completion:)(a5, a6, sub_1C47D4, v16, v14, v15);
  return swift_release(v16);
}

uint64_t sub_1C3254(void *a1, void (*a2)(void), uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9 = sub_6C5C(&qword_2844D0);
  uint64_t inited = swift_initStackObject(v9, &v16);
  *(_OWORD *)(inited + swift_weakDestroy(v0 + 16) = xmmword_2160E0;
  *(void *)(inited + 3sub_6C3C(v0 + 2) = 0xD000000000000011LL;
  *(void *)(inited + 40) = 0x80000000002233E0LL;
  uint64_t v11 = sub_6C5C(&qword_284600);
  *(void *)(inited + 48) = a4;
  *(void *)(inited + 56) = a5;
  *(void *)(inited + 7sub_6C3C(v0 + 2) = v11;
  *(void *)(inited + 80) = 0x7954656369766564LL;
  *(void *)(inited + 88) = 0xEA00000000006570LL;
  swift_bridgeObjectRetain(a5);
  uint64_t v12 = sub_1C3348(a1);
  *(void *)(inited + 120) = v11;
  *(void *)(inited + 96) = v12;
  *(void *)(inited + 104) = v13;
  unint64_t v14 = sub_74D54(inited);
  a2();
  return swift_bridgeObjectRelease(v14);
}

uint64_t sub_1C3348(void *a1)
{
  uint64_t v2 = type metadata accessor for Logger(0LL);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)v26 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  if (!a1)
  {
    type metadata accessor for ErrorFilingProvider(0LL);
    static ErrorFilingProvider.generateABCSnapshot(errorToReport:errorDomain:errorType:)( 0xD000000000000011LL,  0x8000000000223400LL,  0xD000000000000014LL,  0x8000000000223420LL,  0x6553676F6C616944LL,  0xED00006563697672LL);
    return 0LL;
  }

  id v6 = a1;
  id v7 = [v6 companionDeviceInfo];
  if (!v7)
  {
    type metadata accessor for ErrorFilingProvider(0LL);
    static ErrorFilingProvider.generateABCSnapshot(errorToReport:errorDomain:errorType:)( 0xD000000000000016LL,  0x8000000000223440LL,  0xD000000000000014LL,  0x8000000000223420LL,  0x6553676F6C616944LL,  0xED00006563697672LL);

    return 0LL;
  }

  uint64_t v8 = v7;
  id v9 = [v7 productPrefix];
  if (!v9)
  {
    type metadata accessor for ErrorFilingProvider(0LL);
    static ErrorFilingProvider.generateABCSnapshot(errorToReport:errorDomain:errorType:)( 0xD000000000000023LL,  0x8000000000223460LL,  0xD000000000000014LL,  0x8000000000223420LL,  0x6553676F6C616944LL,  0xED00006563697672LL);

    return 0LL;
  }

  uint64_t v10 = v9;
  uint64_t v11 = static String._unconditionallyBridgeFromObjectiveC(_:)(v9);
  unint64_t v13 = v12;

  if (qword_283888 != -1) {
    swift_once(&qword_283888, sub_BFC5C);
  }
  uint64_t v14 = sub_6960(v2, (uint64_t)qword_2969C8);
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, v14, v2);
  uint64_t v15 = swift_bridgeObjectRetain_n(v13, 2LL);
  uint64_t v16 = (os_log_s *)Logger.logObject.getter(v15);
  os_log_type_t v17 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v16, v17))
  {
    uint64_t v18 = swift_slowAlloc(12LL, -1LL);
    uint64_t v28 = v11;
    uint64_t v19 = (uint8_t *)v18;
    uint64_t v20 = swift_slowAlloc(32LL, -1LL);
    uint64_t v30 = v20;
    id v27 = v6;
    *(_DWORD *)uint64_t v19 = 136315138;
    v26[1] = v19 + 4;
    swift_bridgeObjectRetain(v13);
    uint64_t v29 = sub_6978(v28, v13, &v30);
    id v6 = v27;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v29, &v30);
    swift_bridgeObjectRelease_n(v13, 3LL);
    _os_log_impl( &dword_0,  v16,  v17,  "DialogService#buildCompanionParams Retrieved companionDeviceInfo. Product prefix is: %s",  v19,  0xCu);
    swift_arrayDestroy(v20, 1LL, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v20, -1LL, -1LL);
    uint64_t v21 = v19;
    uint64_t v11 = v28;
    swift_slowDealloc(v21, -1LL, -1LL);
  }

  else
  {

    swift_bridgeObjectRelease_n(v13, 2LL);
  }

  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  uint64_t v23 = type metadata accessor for CompanionProductPrefixParser(0LL);
  swift_allocObject(v23, *(unsigned int *)(v23 + 48), *(unsigned __int16 *)(v23 + 52));
  uint64_t v24 = CompanionProductPrefixParser.init(for:)(v11, v13);
  uint64_t v22 = CompanionProductPrefixParser.deviceType.getter();

  swift_release(v24);
  return v22;
}

uint64_t DialogService.__deallocating_deinit()
{
  return swift_deallocClassInstance(v0, 256LL, 7LL);
}

uint64_t sub_1C3788( void *a1, void *a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  v31[3] = a9;
  v31[4] = a11;
  uint64_t v19 = sub_10974(v31);
  (*(void (**)(void *, uint64_t, uint64_t))(*(void *)(a9 - 8) + 32LL))(v19, a4, a9);
  v30[3] = a8;
  v30[4] = a10;
  uint64_t v20 = sub_10974(v30);
  (*(void (**)(void *, uint64_t, uint64_t))(*(void *)(a8 - 8) + 32LL))(v20, a6, a8);
  sub_157C4((uint64_t)a1, a7 + 16);
  sub_157C4((uint64_t)a2, a7 + 216);
  sub_157C4((uint64_t)a3, a7 + 56);
  sub_157C4((uint64_t)v31, a7 + 96);
  sub_157C4((uint64_t)v30, a7 + 176);
  sub_FF10(a5, (uint64_t)&v25, &qword_289E78);
  sub_157C4((uint64_t)a3, (uint64_t)v24);
  if (v26)
  {
    sub_6C3C(v30);
    sub_1F6CC(a5, &qword_289E78);
    sub_6C3C(v31);
    sub_6C3C(a3);
    sub_6C3C(a2);
    sub_6C3C(a1);
    sub_6C3C(v24);
    sub_FF54(&v25, (uint64_t)&v27);
  }

  else
  {
    sub_157C4((uint64_t)v24, (uint64_t)&v27);
    uint64_t v21 = type metadata accessor for ContactsManager(0LL);
    swift_allocObject(v21, *(unsigned int *)(v21 + 48), *(unsigned __int16 *)(v21 + 52));
    uint64_t v22 = ContactsManager.init(aceService:)(&v27);
    uint64_t v28 = v21;
    uint64_t v29 = &protocol witness table for ContactsManager;
    *(void *)&__int128 v27 = v22;
    sub_6C3C(v30);
    sub_1F6CC(a5, &qword_289E78);
    sub_6C3C(v31);
    sub_6C3C(a3);
    sub_6C3C(a2);
    sub_6C3C(a1);
    sub_6C3C(v24);
    sub_1F6CC((uint64_t)&v25, &qword_289E78);
  }

  sub_FF54(&v27, a7 + 136);
  return a7;
}

uint64_t type metadata accessor for DialogService()
{
  return objc_opt_self(&OBJC_CLASS____TtC23AudioFlowDelegatePlugin13DialogService);
}

unint64_t sub_1C39A4()
{
  unint64_t result = qword_28D2D8;
  if (!qword_28D2D8)
  {
    uint64_t v1 = type metadata accessor for SirikitDeviceState(255LL);
    unint64_t result = swift_getWitnessTable(&protocol conformance descriptor for SirikitDeviceState, v1);
    atomic_store(result, (unint64_t *)&qword_28D2D8);
  }

  return result;
}

uint64_t sub_1C39EC()
{
  return swift_deallocObject(v0, 24LL, 7LL);
}

uint64_t sub_1C3A10()
{
  if (v0[7]) {
    sub_6C3C(v0 + 4);
  }
  swift_release(v0[9]);
  swift_release(v0[10]);
  return swift_deallocObject(v0, 88LL, 7LL);
}

uint64_t sub_1C3A5C(uint64_t (**a1)(uint64_t))
{
  return sub_1C1C34(a1, v1[2], v1[3], (uint64_t)(v1 + 4), v1[9], v1[10]);
}

uint64_t sub_1C3A6C()
{
  if (v0[7]) {
    sub_6C3C(v0 + 4);
  }
  swift_release(v0[9]);
  return swift_deallocObject(v0, 80LL, 7LL);
}

uint64_t sub_1C3AB0(uint64_t *a1)
{
  return sub_1C1D54(a1, v1[2], v1[3], (uint64_t)(v1 + 4), v1[9]);
}

uint64_t sub_1C3AC0()
{
  if (v0[5]) {
    sub_6C3C(v0 + 2);
  }
  swift_release(v0[7]);
  swift_release(v0[8]);
  return swift_deallocObject(v0, 72LL, 7LL);
}

uint64_t sub_1C3AFC(uint64_t a1)
{
  return sub_1C2000(a1, v1 + 16, *(void **)(v1 + 56), *(void *)(v1 + 64));
}

uint64_t sub_1C3B08()
{
  uint64_t v1 = *(void *)(sub_6C5C(&qword_28D2E0) - 8);
  uint64_t v2 = *(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = (v2 + 88) & ~v2;
  uint64_t v4 = *(void *)(v1 + 64);
  swift_release(*((void *)v0 + 2));
  swift_release(*((void *)v0 + 3));
  swift_release(*((void *)v0 + 4));
  swift_release(*((void *)v0 + 5));
  if (*((void *)v0 + 9)) {
    sub_6C3C((void *)v0 + 6);
  }
  uint64_t v5 = type metadata accessor for MultiUserState(0LL);
  if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v5 - 8) + 48LL))(&v0[v3], 1LL, v5))
  {
    uint64_t v6 = type metadata accessor for MultiUserContext(0LL);
    uint64_t v7 = *(void *)(v6 - 8);
  }

  unint64_t v8 = (v4 + v3 + 7) & 0xFFFFFFFFFFFFFFF8LL;
  unint64_t v9 = (v8 + 15) & 0xFFFFFFFFFFFFFFF8LL;
  unint64_t v10 = (v9 + 15) & 0xFFFFFFFFFFFFFFF8LL;
  swift_release(*(void *)&v0[v8]);
  swift_bridgeObjectRelease(*(void *)&v0[v9]);
  swift_release(*(void *)&v0[v10 + 8]);
  return swift_deallocObject(v0, v10 + 16, v2 | 7);
}

uint64_t sub_1C3C34()
{
  uint64_t v1 = *(void *)(sub_6C5C(&qword_28D2E0) - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 88LL) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  unint64_t v3 = (*(void *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8LL;
  return sub_1C21A0( *(void *)(v0 + 16),  *(void *)(v0 + 24),  *(void **)(v0 + 32),  *(void *)(v0 + 40),  v0 + 48,  v0 + v2,  *(void *)(v0 + v3),  *(void *)(v0 + ((v3 + 15) & 0xFFFFFFFFFFFFFFF8LL)),  *(void (**)(uint64_t))(v0 + ((((v3 + 15) & 0xFFFFFFFFFFFFFFF8LL) + 15) & 0xFFFFFFFFFFFFFFF8LL)),  *(void *)(v0 + ((((v3 + 15) & 0xFFFFFFFFFFFFFFF8LL) + 15) & 0xFFFFFFFFFFFFFFF8LL) + 8));
}

uint64_t sub_1C3CB0()
{
  return swift_deallocObject(v0, 32LL, 7LL);
}

uint64_t sub_1C3CD4( uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  v35[3] = a8;
  v35[4] = a10;
  uint64_t v19 = sub_10974(v35);
  (*(void (**)(void *, uint64_t, uint64_t))(*(void *)(a8 - 8) + 32LL))(v19, a1, a8);
  v34[3] = a9;
  v34[4] = a11;
  uint64_t v20 = sub_10974(v34);
  (*(void (**)(void *, uint64_t, uint64_t))(*(void *)(a9 - 8) + 32LL))(v20, a2, a9);
  v33[3] = type metadata accessor for MultiUserConnectionProvider(0LL);
  v33[4] = &protocol witness table for MultiUserConnectionProvider;
  v33[0] = a4;
  uint64_t v21 = type metadata accessor for DeviceProvider(0LL);
  v32[3] = v21;
  v32[4] = &protocol witness table for DeviceProvider;
  uint64_t v22 = sub_10974(v32);
  (*(void (**)(void *, uint64_t, uint64_t))(*(void *)(v21 - 8) + 32LL))(v22, a6, v21);
  sub_157C4((uint64_t)v35, a7 + 16);
  sub_157C4((uint64_t)v34, a7 + 216);
  sub_157C4((uint64_t)a3, a7 + 56);
  sub_157C4((uint64_t)v33, a7 + 96);
  sub_157C4((uint64_t)v32, a7 + 176);
  sub_FF10(a5, (uint64_t)&v27, &qword_289E78);
  sub_157C4((uint64_t)a3, (uint64_t)v26);
  if (v28)
  {
    sub_6C3C(v32);
    sub_1F6CC(a5, &qword_289E78);
    sub_6C3C(v33);
    sub_6C3C(a3);
    sub_6C3C(v34);
    sub_6C3C(v35);
    sub_6C3C(v26);
    sub_FF54(&v27, (uint64_t)&v29);
  }

  else
  {
    sub_157C4((uint64_t)v26, (uint64_t)&v29);
    uint64_t v23 = type metadata accessor for ContactsManager(0LL);
    swift_allocObject(v23, *(unsigned int *)(v23 + 48), *(unsigned __int16 *)(v23 + 52));
    uint64_t v24 = ContactsManager.init(aceService:)(&v29);
    uint64_t v30 = v23;
    uint64_t v31 = &protocol witness table for ContactsManager;
    *(void *)&__int128 v29 = v24;
    sub_6C3C(v32);
    sub_1F6CC(a5, &qword_289E78);
    sub_6C3C(v33);
    sub_6C3C(a3);
    sub_6C3C(v34);
    sub_6C3C(v35);
    sub_6C3C(v26);
    sub_1F6CC((uint64_t)&v27, &qword_289E78);
  }

  sub_FF54(&v29, a7 + 136);
  return a7;
}

void *sub_1C3F1C(void *a1)
{
  if (a1)
  {
    uint64_t v1 = a1;
    id v2 = [a1 intentSpeakerRooms];
    if (v2)
    {
      unint64_t v3 = v2;
      uint64_t v4 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v2, &type metadata for String);

      int64_t v5 = *(void *)(v4 + 16);
      if (v5)
      {
        uint64_t v24 = v1;
        sub_C7058(0, v5, 0);
        uint64_t v23 = v4;
        uint64_t v6 = (void *)(v4 + 40);
        do
        {
          uint64_t v7 = *(v6 - 1);
          uint64_t v8 = *v6;
          unint64_t v9 = _swiftEmptyArrayStorage[2];
          unint64_t v10 = _swiftEmptyArrayStorage[3];
          swift_bridgeObjectRetain(*v6);
          if (v9 >= v10 >> 1) {
            sub_C7058(v10 > 1, v9 + 1, 1);
          }
          v6 += 2;
          _swiftEmptyArrayStorage[2] = v9 + 1;
          uint64_t v11 = &_swiftEmptyArrayStorage[3 * v9];
          v11[4] = v7;
          v11[5] = v8;
          *((_BYTE *)v11 + 48) = 1;
          --v5;
        }

        while (v5);
        swift_bridgeObjectRelease(v23);
        uint64_t v1 = v24;
      }

      else
      {
        swift_bridgeObjectRelease(v4);
      }

      sub_97814((uint64_t)_swiftEmptyArrayStorage);
    }

    id v12 = objc_msgSend(v1, "intentSpeakerNames", v23);
    if (v12)
    {
      unint64_t v13 = v12;
      uint64_t v14 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v12, &type metadata for String);

      int64_t v15 = *(void *)(v14 + 16);
      if (v15)
      {
        sub_C7058(0, v15, 0);
        uint64_t v16 = (void *)(v14 + 40);
        do
        {
          uint64_t v18 = *(v16 - 1);
          uint64_t v17 = *v16;
          unint64_t v20 = _swiftEmptyArrayStorage[2];
          unint64_t v19 = _swiftEmptyArrayStorage[3];
          swift_bridgeObjectRetain(*v16);
          if (v20 >= v19 >> 1) {
            sub_C7058(v19 > 1, v20 + 1, 1);
          }
          v16 += 2;
          _swiftEmptyArrayStorage[2] = v20 + 1;
          uint64_t v21 = &_swiftEmptyArrayStorage[3 * v20];
          v21[4] = v18;
          v21[5] = v17;
          *((_BYTE *)v21 + 48) = 0;
          --v15;
        }

        while (v15);
      }

      swift_bridgeObjectRelease(v14);
      sub_97814((uint64_t)_swiftEmptyArrayStorage);
    }
  }

  return _swiftEmptyArrayStorage;
}

void *sub_1C4154(void *a1, void *a2)
{
  if (a2[2] >= a1[2]) {
    uint64_t v4 = a1[2];
  }
  else {
    uint64_t v4 = a2[2];
  }
  if (v4)
  {
    sub_6C5C(&qword_2858A8);
    int64_t v5 = (void *)static _DictionaryStorage.allocate(capacity:)(v4);
  }

  else
  {
    int64_t v5 = &_swiftEmptyDictionarySingleton;
  }

  uint64_t v7 = v5;
  swift_bridgeObjectRetain(a1);
  swift_bridgeObjectRetain(a2);
  sub_333A8(a1, a2, 1, &v7);
  return v7;
}

uint64_t sub_1C4214(uint64_t a1, void *a2, void (*a3)(void), void *a4, uint64_t a5)
{
  uint64_t v10 = type metadata accessor for Logger(0LL);
  uint64_t v61 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  id v12 = (char *)&v57 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v13 = type metadata accessor for OSSignpostID(0LL);
  uint64_t v65 = *(void *)(v13 - 8);
  uint64_t v14 = *(void *)(v65 + 64);
  uint64_t v15 = __chkstk_darwin(v13);
  uint64_t v59 = (char *)&v57 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v15);
  uint64_t v64 = (char *)&v57 - v16;
  uint64_t v17 = (void *)swift_allocObject(&unk_274800, 40LL, 7LL);
  uint64_t v63 = a3;
  v17[2] = a3;
  v17[3] = a4;
  v17[4] = a5;
  sub_FF10(a1, (uint64_t)v66, &qword_283FE8);
  uint64_t v18 = v67;
  uint64_t v62 = a4;
  if (v67)
  {
    uint64_t v58 = a2;
    uint64_t v60 = v13;
    uint64_t v19 = v68;
    sub_6EA8(v66, v67);
    unint64_t v20 = v17;
    uint64_t v21 = *(uint64_t (**)(uint64_t, uint64_t))(v19 + 72);
    swift_retain(a4);
    swift_retain(a5);
    uint64_t v22 = v21(v18, v19);
    uint64_t v17 = v20;
    uint64_t v23 = (void (*)(void))v22;
    uint64_t v25 = v24;
    sub_6C3C(v66);
    if (v25)
    {
      uint64_t v63 = v23;
      uint64_t v26 = swift_allocObject(&unk_274828, 32LL, 7LL);
      *(void *)(v26 + swift_weakDestroy(v0 + 16) = sub_1C4D80;
      *(void *)(v26 + 24) = v17;
      uint64_t v27 = qword_2838D0;
      swift_retain(v17);
      uint64_t v62 = v17;
      if (v27 != -1) {
        swift_once(&qword_2838D0, sub_1362AC);
      }
      id v28 = (id)qword_296AA0;
      __int128 v29 = v64;
      OSSignpostID.init(log:)(v28);
      uint64_t v30 = v65;
      uint64_t v31 = v59;
      uint64_t v32 = v60;
      (*(void (**)(char *, char *, uint64_t))(v65 + 16))(v59, v29, v60);
      uint64_t v33 = *(unsigned __int8 *)(v30 + 80);
      uint64_t v34 = (v33 + 33) & ~v33;
      unint64_t v35 = (v14 + v34 + 7) & 0xFFFFFFFFFFFFFFF8LL;
      uint64_t v36 = swift_allocObject(&unk_274850, v35 + 16, v33 | 7);
      *(void *)(v36 + swift_weakDestroy(v0 + 16) = "catServiceBuildCompanionParams";
      *(void *)(v36 + 24) = 30LL;
      *(_BYTE *)(v36 + 3sub_6C3C(v0 + 2) = 2;
      (*(void (**)(uint64_t, char *, uint64_t))(v30 + 32))(v36 + v34, v31, v32);
      uint64_t v37 = (void *)(v36 + v35);
      *uint64_t v37 = sub_32CF0;
      v37[1] = v26;
      uint64_t v38 = swift_retain(v26);
      uint64_t v39 = static os_signpost_type_t.begin.getter(v38);
      os_signpost(_:dso:log:name:signpostID:_:_:)( v39,  &dword_0,  qword_296AA0,  "catServiceBuildCompanionParams",  30LL,  2LL,  v29,  " enableTelemetry=YES ",  21LL,  2,  _swiftEmptyArrayStorage);
      uint64_t v40 = swift_allocObject(&unk_274878, 32LL, 7LL);
      *(void *)(v40 + swift_weakDestroy(v0 + 16) = sub_33E34;
      *(void *)(v40 + 24) = v36;
      uint64_t v41 = swift_allocObject(&unk_2748A0, 32LL, 7LL);
      *(void *)(v41 + swift_weakDestroy(v0 + 16) = sub_33C70;
      *(void *)(v41 + 24) = v40;
      uint64_t v61 = v26;
      uint64_t v42 = v58;
      uint64_t v43 = v58[15];
      uint64_t v44 = v58[16];
      sub_6EA8(v58 + 12, v43);
      uint64_t v45 = (void *)swift_allocObject(&unk_2748C8, 56LL, 7LL);
      uint64_t v46 = v63;
      v45[2] = v42;
      v45[3] = v46;
      v45[4] = v25;
      v45[5] = sub_32CC0;
      v45[6] = v41;
      swift_retain(v36);
      swift_retain(v40);
      swift_retain(v42);
      swift_bridgeObjectRetain(v25);
      dispatch thunk of MultiUserConnectionProviding.getFirstName(forSharedUserId:completion:)( v46,  v25,  sub_1C4798,  v45,  v43,  v44);
      swift_release(v36);
      swift_release(v40);
      swift_release(v45);
      (*(void (**)(char *, uint64_t))(v65 + 8))(v64, v60);
      swift_release(v62);
      swift_bridgeObjectRelease(v25);
      return swift_release(v61);
    }
  }

  else
  {
    swift_retain(a4);
    swift_retain(a5);
    sub_1F6CC((uint64_t)v66, &qword_283FE8);
  }

  if (qword_283888 != -1) {
    swift_once(&qword_283888, sub_BFC5C);
  }
  uint64_t v48 = sub_6960(v10, (uint64_t)qword_2969C8);
  uint64_t v49 = v61;
  uint64_t v50 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v61 + 16))(v12, v48, v10);
  uint64_t v51 = (os_log_s *)Logger.logObject.getter(v50);
  os_log_type_t v52 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v51, v52))
  {
    uint64_t v53 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
    *(_WORD *)uint64_t v53 = 0;
    _os_log_impl(&dword_0, v51, v52, "SharedUserID not present, padding device type only", v53, 2u);
    swift_slowDealloc(v53, -1LL, -1LL);
  }

  (*(void (**)(char *, uint64_t))(v49 + 8))(v12, v10);
  unint64_t v54 = sub_74D54((uint64_t)_swiftEmptyArrayStorage);
  swift_beginAccess(a5 + 16, v66, 1LL, 0LL);
  uint64_t v55 = *(void *)(a5 + 16);
  *(void *)(a5 + swift_weakDestroy(v0 + 16) = v54;
  swift_bridgeObjectRetain(v54);
  uint64_t v56 = swift_bridgeObjectRelease(v55);
  v63(v56);
  swift_release(v17);
  return swift_bridgeObjectRelease(v54);
}

uint64_t sub_1C4764()
{
  return swift_deallocObject(v0, 56LL, 7LL);
}

uint64_t sub_1C4798(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C3198( a1,  a2,  a3,  *(void **)(v3 + 16),  *(void *)(v3 + 24),  *(void *)(v3 + 32),  *(void *)(v3 + 40),  *(void *)(v3 + 48));
}

uint64_t sub_1C47A8()
{
  return swift_deallocObject(v0, 48LL, 7LL);
}

uint64_t sub_1C47D4(void *a1)
{
  return sub_1C3254(a1, *(void (**)(void))(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), *(void *)(v1 + 40));
}

uint64_t sub_1C47E4()
{
  return swift_deallocObject(v0, 40LL, 7LL);
}

uint64_t sub_1C4810(uint64_t a1)
{
  return sub_1C2130(a1, *(uint64_t (**)(uint64_t))(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32));
}

uint64_t sub_1C4830(uint64_t *a1)
{
  uint64_t v3 = *(void *)(type metadata accessor for OSSignpostID(0LL) - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 33LL) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  return sub_1BB84( a1,  *(void *)(v1 + 16),  *(void *)(v1 + 24),  *(unsigned __int8 *)(v1 + 32),  v1 + v4,  *(uint64_t (**)(uint64_t *))(v1 + ((*(void *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8LL)));
}

void *sub_1C488C(uint64_t a1, uint64_t a2)
{
  if ((unint64_t)a1 >> 62)
  {
    if (a1 < 0) {
      uint64_t v8 = a1;
    }
    else {
      uint64_t v8 = a1 & 0xFFFFFFFFFFFFFF8LL;
    }
    swift_bridgeObjectRetain(a1);
    uint64_t v4 = _CocoaArrayWrapper.endIndex.getter(v8);
    swift_bridgeObjectRelease(a1);
  }

  else
  {
    uint64_t v4 = *(void *)((char *)&dword_10 + (a1 & 0xFFFFFFFFFFFFF8LL));
    if (!((unint64_t)a2 >> 62))
    {
LABEL_3:
      uint64_t v5 = *(void *)((char *)&dword_10 + (a2 & 0xFFFFFFFFFFFFF8LL));
      goto LABEL_4;
    }
  }

  if (a2 < 0) {
    uint64_t v9 = a2;
  }
  else {
    uint64_t v9 = a2 & 0xFFFFFFFFFFFFFF8LL;
  }
  swift_bridgeObjectRetain(a2);
  uint64_t v5 = _CocoaArrayWrapper.endIndex.getter(v9);
  swift_bridgeObjectRelease(a2);
LABEL_4:
  if (v5 < v4) {
    uint64_t v4 = v5;
  }
  if (v4)
  {
    sub_6C5C(qword_28D300);
    uint64_t v6 = (void *)static _DictionaryStorage.allocate(capacity:)(v4);
  }

  else
  {
    uint64_t v6 = &_swiftEmptyDictionarySingleton;
  }

  uint64_t v10 = v6;
  swift_bridgeObjectRetain(a1);
  swift_bridgeObjectRetain(a2);
  sub_32E0C(a1, a2, 1, &v10);
  return v10;
}

uint64_t sub_1C49C0( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(void *), uint64_t a6)
{
  uint64_t v33 = a1;
  uint64_t v11 = type metadata accessor for Logger(0LL);
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v14 = &v34[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0LL) - 8];
  uint64_t v15 = swift_allocObject(&unk_2749B8, 32LL, 7LL);
  *(void *)(v15 + swift_weakDestroy(v0 + 16) = a5;
  *(void *)(v15 + 24) = a6;
  uint64_t v16 = swift_allocObject(&unk_2749E0, 32LL, 7LL);
  *(void *)(v16 + swift_weakDestroy(v0 + 16) = sub_33C70;
  *(void *)(v16 + 24) = v15;
  if (a2)
  {
    sub_157C4(a3 + 16, (uint64_t)v39);
    uint64_t v17 = v40;
    uint64_t v18 = v41;
    sub_6EA8(v39, v40);
    sub_FF10(a4, (uint64_t)v34, &qword_283FE8);
    uint64_t v19 = v35;
    swift_retain(a6);
    swift_retain(v15);
    if (v19)
    {
      uint64_t v20 = sub_6C5C(&qword_285BC8);
      uint64_t v21 = sub_6C5C(&qword_28D2F8);
      if ((swift_dynamicCast(&v36, v34, v20, v21, 6LL) & 1) == 0)
      {
        uint64_t v38 = 0LL;
        __int128 v36 = 0u;
        __int128 v37 = 0u;
      }
    }

    else
    {
      sub_1F6CC((uint64_t)v34, &qword_283FE8);
      __int128 v36 = 0u;
      __int128 v37 = 0u;
      uint64_t v38 = 0LL;
    }

    sub_FF10(a4, (uint64_t)v34, &qword_283FE8);
    uint64_t v31 = (void *)swift_allocObject(&unk_274A08, 88LL, 7LL);
    sub_45F6C((uint64_t)v34, (uint64_t)(v31 + 2), &qword_283FE8);
    v31[7] = sub_1C4DA4;
    v31[8] = v16;
    uint64_t v32 = v33;
    v31[9] = v33;
    v31[10] = a2;
    swift_bridgeObjectRetain(a2);
    dispatch thunk of AppNameResolving.localizedAppName(for:helper:completion:)(v32, a2, &v36, sub_30E8C, v31, v17, v18);
    swift_release(v31);
    sub_1F6CC((uint64_t)&v36, &qword_2860C0);
    sub_6C3C(v39);
    return swift_release(v15);
  }

  else
  {
    uint64_t v22 = a5;
    swift_retain(a6);
    swift_retain(v15);
    swift_release(v16);
    if (qword_283888 != -1) {
      swift_once(&qword_283888, sub_BFC5C);
    }
    uint64_t v23 = sub_6960(v11, (uint64_t)qword_2969C8);
    uint64_t v24 = (*(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v12 + 16))(v14, v23, v11);
    uint64_t v25 = (os_log_s *)Logger.logObject.getter(v24);
    os_log_type_t v26 = static os_log_type_t.default.getter();
    uint64_t v27 = v22;
    if (os_log_type_enabled(v25, v26))
    {
      id v28 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)id v28 = 0;
      _os_log_impl(&dword_0, v25, v26, "No app present, passing empty app parameter values for CAT", v28, 2u);
      swift_slowDealloc(v28, -1LL, -1LL);
    }

    (*(void (**)(_BYTE *, uint64_t))(v12 + 8))(v14, v11);
    unint64_t v29 = sub_74D54((uint64_t)_swiftEmptyArrayStorage);
    v39[0] = v29;
    v27(v39);
    swift_release(v15);
    return swift_bridgeObjectRelease(v29);
  }

uint64_t sub_1C4D10(uint64_t *a1)
{
  id v2 = *(uint64_t (**)(uint64_t *))(v1 + 16);
  uint64_t v4 = *a1;
  return v2(&v4);
}

uint64_t sub_1C4D44()
{
  if (v0[5]) {
    sub_6C3C(v0 + 2);
  }
  swift_release(v0[8]);
  swift_bridgeObjectRelease(v0[10]);
  return swift_deallocObject(v0, 88LL, 7LL);
}

uint64_t sub_1C4DA8(uint64_t a1)
{
  v2[0] = "\b";
  v2[1] = (char *)&value witness table for Builtin.NativeObject + 64;
  v2[2] = (char *)&value witness table for () + 64;
  v2[3] = (char *)&value witness table for () + 64;
  v2[4] = &unk_21AC30;
  v2[5] = &unk_21AC30;
  v2[6] = &unk_21AC30;
  v2[7] = &unk_21AC48;
  return swift_initClassMetadata2(a1, 0LL, 8LL, v2, a1 + 104);
}

uint64_t sub_1C4E28@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v142 = type metadata accessor for Parse.DirectInvocation(0LL);
  uint64_t v144 = *(void *)(v142 - 8);
  uint64_t v4 = __chkstk_darwin(v142);
  uint64_t v133 = (char *)v130 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v6 = __chkstk_darwin(v4);
  uint64_t v8 = (char *)v130 - v7;
  __chkstk_darwin(v6);
  uint64_t v147 = (char *)v130 - v9;
  uint64_t v10 = sub_6C5C(&qword_284630);
  __chkstk_darwin(v10);
  uint64_t v154 = (char *)v130 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v151 = type metadata accessor for CommonAudio.Confirmation(0LL);
  uint64_t v146 = *(void *)(v151 - 8);
  uint64_t v12 = __chkstk_darwin(v151);
  uint64_t v138 = (char *)v130 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v14 = __chkstk_darwin(v12);
  uint64_t v140 = (char *)v130 - v15;
  uint64_t v16 = __chkstk_darwin(v14);
  uint64_t v143 = (char *)v130 - v17;
  __chkstk_darwin(v16);
  unint64_t v145 = (char *)v130 - v18;
  uint64_t v19 = type metadata accessor for Parse(0LL);
  uint64_t v152 = *(void *)(v19 - 8);
  uint64_t v153 = v19;
  uint64_t v20 = __chkstk_darwin(v19);
  uint64_t v150 = (char *)v130 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v20);
  uint64_t v155 = (id *)((char *)v130 - v22);
  uint64_t v23 = type metadata accessor for Input(0LL);
  uint64_t v157 = *(uint64_t (**)(char *, uint64_t))(v23 - 8);
  __chkstk_darwin(v23);
  uint64_t v25 = (char *)v130 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v26 = type metadata accessor for Logger(0LL);
  uint64_t v27 = *(void *)(v26 - 8);
  uint64_t v28 = __chkstk_darwin(v26);
  unint64_t v132 = (char *)v130 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v30 = __chkstk_darwin(v28);
  uint64_t v32 = (char *)v130 - v31;
  uint64_t v33 = __chkstk_darwin(v30);
  uint64_t v139 = (char *)v130 - v34;
  uint64_t v35 = __chkstk_darwin(v33);
  uint64_t v137 = (char *)v130 - v36;
  __chkstk_darwin(v35);
  uint64_t v38 = (char *)v130 - v37;
  if (qword_283888 != -1) {
    swift_once(&qword_283888, sub_BFC5C);
  }
  uint64_t v135 = v32;
  uint64_t v136 = v8;
  uint64_t v39 = sub_6960(v26, (uint64_t)qword_2969C8);
  uint64_t v40 = *(void (**)(char *, uint64_t, uint64_t))(v27 + 16);
  uint64_t v148 = v39;
  uint64_t v149 = v40;
  ((void (*)(char *))v40)(v38);
  uint64_t v41 = (uint64_t (*)(char *, uint64_t, uint64_t))*((void *)v157 + 2);
  uint64_t v156 = a1;
  uint64_t v42 = v41(v25, a1, v23);
  uint64_t v43 = (os_log_s *)Logger.logObject.getter(v42);
  os_log_type_t v44 = static os_log_type_t.default.getter(v43);
  if (os_log_type_enabled(v43, v44))
  {
    uint64_t v45 = swift_slowAlloc(12LL, -1LL);
    uint64_t v134 = v26;
    uint64_t v46 = (uint8_t *)v45;
    uint64_t v47 = swift_slowAlloc(32LL, -1LL);
    uint64_t v131 = v27;
    uint64_t v48 = v47;
    v165[0] = v47;
    uint64_t v141 = a2;
    *(_DWORD *)uint64_t v46 = 136315138;
    v130[1] = v46 + 4;
    uint64_t v49 = sub_10430( (unint64_t *)&qword_284640,  (uint64_t (*)(uint64_t))&type metadata accessor for Input,  (uint64_t)&protocol conformance descriptor for Input);
    uint64_t v50 = dispatch thunk of CustomStringConvertible.description.getter(v23, v49);
    unint64_t v52 = v51;
    *(void *)&__int128 v163 = sub_6978(v50, v51, v165);
    a2 = v141;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v163, (char *)&v163 + 8);
    __n128 v53 = swift_bridgeObjectRelease(v52);
    (*((void (**)(char *, uint64_t, __n128))v157 + 1))(v25, v23, v53);
    _os_log_impl(&dword_0, v43, v44, "AppResolutionStrategy#actionForInput input:%s", v46, 0xCu);
    swift_arrayDestroy(v48, 1LL, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v48, -1LL, -1LL);
    swift_slowDealloc(v46, -1LL, -1LL);

    unint64_t v54 = *(uint64_t (**)(char *, uint64_t))(v131 + 8);
    uint64_t v55 = v38;
    uint64_t v56 = v134;
    uint64_t v57 = v54(v55, v134);
  }

  else
  {
    (*((void (**)(char *, uint64_t))v157 + 1))(v25, v23);

    unint64_t v54 = *(uint64_t (**)(char *, uint64_t))(v27 + 8);
    uint64_t v57 = v54(v38, v26);
    uint64_t v56 = v26;
  }

  uint64_t v58 = v155;
  Input.parse.getter(v57);
  uint64_t v60 = v152;
  uint64_t v59 = v153;
  int v61 = (*(uint64_t (**)(id *, uint64_t))(v152 + 88))(v58, v153);
  uint64_t v62 = (uint64_t)v154;
  if (v61 == enum case for Parse.NLv3IntentPlusServerConversion(_:))
  {
    (*(void (**)(id *, uint64_t))(v60 + 96))(v58, v59);
    uint64_t v63 = sub_6C5C(&qword_284618);
    swift_release(*(id *)((char *)v58 + *(int *)(v63 + 48)));
    uint64_t v64 = type metadata accessor for NLIntent(0LL);
    uint64_t v65 = (*(uint64_t (**)(id *, uint64_t))(*(void *)(v64 - 8) + 8LL))(v58, v64);
  }

  else
  {
    if (v61 == enum case for Parse.directInvocation(_:))
    {
      (*(void (**)(id *, uint64_t))(v60 + 96))(v58, v59);
      uint64_t v73 = (uint64_t)v147;
      uint64_t v74 = v142;
      (*(void (**)(char *, id *, uint64_t))(v144 + 32))(v147, v58, v142);
      sub_1CF340(v73, (uint64_t)v160);
      sub_8747C((uint64_t)v160, (uint64_t)v161);
      if (v162 == 255
        || (sub_45D94((uint64_t)v161, (uint64_t)&v163),
            sub_45D94((uint64_t)&v163, (uint64_t)v165),
            int v75 = v168,
            uint64_t v76 = sub_45DD0((uint64_t)v160),
            uint64_t v74 = v142,
            v75 != 3))
      {
        uint64_t v141 = a2;
        os_log_type_t v90 = v135;
        v149(v135, v148, v56);
        uint64_t v91 = v144;
        unint64_t v92 = *(uint64_t (**)(char *, char *, uint64_t))(v144 + 16);
        uint64_t v93 = v136;
        uint64_t v94 = v92(v136, v147, v74);
        unint64_t v95 = (os_log_s *)Logger.logObject.getter(v94);
        os_log_type_t v96 = static os_log_type_t.error.getter();
        if (os_log_type_enabled(v95, v96))
        {
          uint64_t v134 = v56;
          uint64_t v97 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
          uint64_t v156 = swift_slowAlloc(32LL, -1LL);
          uint64_t v159 = v156;
          *(_DWORD *)uint64_t v97 = 136315138;
          uint64_t v155 = (id *)(v97 + 4);
          uint64_t v157 = v54;
          uint64_t v98 = v133;
          v92(v133, v93, v74);
          uint64_t v99 = String.init<A>(describing:)(v98, v74);
          unint64_t v101 = v100;
          uint64_t v158 = sub_6978(v99, v100, &v159);
          UnsafeMutableRawBufferPointer.copyMemory(from:)(&v158, &v159);
          __n128 v102 = swift_bridgeObjectRelease(v101);
          uint64_t v103 = *(void (**)(char *, uint64_t, __n128))(v144 + 8);
          v103(v93, v74, v102);
          _os_log_impl( &dword_0,  v95,  v96,  "AppResolutionStrategy#actionForInput received unsupported directInvocation: %s",  v97,  0xCu);
          uint64_t v104 = v156;
          swift_arrayDestroy(v156, 1LL, (char *)&type metadata for Any + 8);
          swift_slowDealloc(v104, -1LL, -1LL);
          swift_slowDealloc(v97, -1LL, -1LL);

          uint64_t v105 = v157(v90, v134);
        }

        else
        {
          uint64_t v103 = *(void (**)(char *, uint64_t, __n128))(v91 + 8);
          ((void (*)(char *, uint64_t))v103)(v93, v74);

          uint64_t v105 = v54(v90, v56);
        }

        static ActionForInput.ignore()(v105);
        return ((uint64_t (*)(char *, uint64_t))v103)(v147, v74);
      }

      else
      {
        static ActionForInput.handle()(v76);
        return (*(uint64_t (**)(char *, uint64_t))(v144 + 8))(v147, v74);
      }
    }

    if (v61 == enum case for Parse.pommesResponse(_:))
    {
      (*(void (**)(id *, uint64_t))(v60 + 96))(v58, v59);
    }

    else
    {
      if (v61 != enum case for Parse.uso(_:))
      {
        unint64_t v120 = v132;
        uint64_t v121 = ((uint64_t (*)(char *, uint64_t, uint64_t))v149)(v132, v148, v56);
        uint64_t v122 = (os_log_s *)Logger.logObject.getter(v121);
        os_log_type_t v123 = static os_log_type_t.error.getter();
        if (os_log_type_enabled(v122, v123))
        {
          os_log_type_t v124 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
          *(_WORD *)os_log_type_t v124 = 0;
          _os_log_impl( &dword_0,  v122,  v123,  "AppResolutionStrategy#actionForInput Ignoring unsupported parse",  v124,  2u);
          uint64_t v125 = v124;
          uint64_t v58 = v155;
          swift_slowDealloc(v125, -1LL, -1LL);
        }

        uint64_t v126 = v54(v120, v56);
        static ActionForInput.ignore()(v126);
        return (*(uint64_t (**)(id *, uint64_t))(v60 + 8))(v58, v59);
      }

      uint64_t v65 = (*(uint64_t (**)(id *, uint64_t))(v60 + 8))(v58, v59);
    }
  }

  uint64_t v66 = (uint64_t)v150;
  Input.parse.getter(v65);
  double v67 = sub_B6EF8(v66, &v163);
  (*(void (**)(uint64_t, uint64_t, double))(v60 + 8))(v66, v59, v67);
  if (v164)
  {
    sub_FF54(&v163, (uint64_t)v165);
    uint64_t v68 = v166;
    uint64_t v69 = v167;
    sub_6EA8(v165, v166);
    dispatch thunk of ConfirmableIntent.confirmationState.getter(v68, v69);
    uint64_t v70 = v146;
    uint64_t v71 = v151;
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v146 + 48))(v62, 1LL, v151) == 1)
    {
      uint64_t v72 = sub_1F6CC(v62, &qword_284630);
LABEL_11:
      static ActionForInput.handle()(v72);
      return sub_6C3C(v165);
    }

    uint64_t v84 = v56;
    (*(void (**)(char *, uint64_t, uint64_t))(v70 + 32))(v145, v62, v71);
    uint64_t v85 = *(void (**)(char *, void, uint64_t))(v70 + 104);
    v85(v143, enum case for CommonAudio.Confirmation.cancel(_:), v71);
    uint64_t v86 = sub_10430( qword_286CD0,  (uint64_t (*)(uint64_t))&type metadata accessor for CommonAudio.Confirmation,  (uint64_t)&protocol conformance descriptor for CommonAudio.Confirmation);
    dispatch thunk of RawRepresentable.rawValue.getter(&v163, v71, v86);
    dispatch thunk of RawRepresentable.rawValue.getter(v161, v71, v86);
    uint64_t v87 = *((void *)&v163 + 1);
    uint64_t v88 = *((void *)&v161[0] + 1);
    if (v163 == v161[0])
    {
      char v89 = 1;
      uint64_t v88 = *((void *)&v163 + 1);
    }

    else
    {
      char v89 = _stringCompareWithSmolCheck(_:_:expecting:)(v163, *((void *)&v163 + 1));
    }

    swift_bridgeObjectRelease(v87);
    __n128 v106 = swift_bridgeObjectRelease(v88);
    uint64_t v107 = v146;
    id v108 = *(void (**)(char *, uint64_t, __n128))(v146 + 8);
    uint64_t v109 = v151;
    v108(v143, v151, v106);
    uint64_t v110 = *(void (**)(char *, char *, uint64_t))(v107 + 16);
    uint64_t v111 = v140;
    v110(v140, v145, v109);
    if ((v89 & 1) == 0)
    {
      v85(v138, enum case for CommonAudio.Confirmation.no(_:), v109);
      dispatch thunk of RawRepresentable.rawValue.getter(&v163, v109, v86);
      dispatch thunk of RawRepresentable.rawValue.getter(v161, v109, v86);
      uint64_t v112 = *((void *)&v163 + 1);
      uint64_t v113 = *((void *)&v161[0] + 1);
      if (v163 != v161[0])
      {
        uint64_t v127 = v109;
        char v128 = _stringCompareWithSmolCheck(_:_:expecting:)(v163, *((void *)&v163 + 1));
        swift_bridgeObjectRelease(v112);
        __n128 v129 = swift_bridgeObjectRelease(v113);
        v108(v138, v127, v129);
        ((void (*)(char *, uint64_t))v108)(v140, v127);
        if ((v128 & 1) == 0)
        {
          uint64_t v72 = ((uint64_t (*)(char *, uint64_t))v108)(v145, v151);
          goto LABEL_11;
        }

uint64_t sub_1C5AD8(void *a1, void *a2, void (*a3)(uint64_t *), void (*a4)(uint64_t *))
{
  uint64_t v9 = type metadata accessor for AppResolutionStrategy( 0LL,  *(void *)(*(void *)v4 + 80LL),  *(void *)(*(void *)v4 + 88LL),  *(void *)(*(void *)v4 + 96LL));
  uint64_t WitnessTable = swift_getWitnessTable(&unk_21AC88, v9);
  return sub_139DB4(a1, a2, a3, a4, v9, WitnessTable);
}

uint64_t sub_1C5B64(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v9 = type metadata accessor for AppResolutionStrategy( 0LL,  *(void *)(*(void *)v4 + 80LL),  *(void *)(*(void *)v4 + 88LL),  *(void *)(*(void *)v4 + 96LL));
  uint64_t WitnessTable = swift_getWitnessTable(&unk_21AC88, v9);
  return sub_13D64C(a1, a2, a3, a4, v9, WitnessTable);
}

uint64_t sub_1C5BF0()
{
  return v0;
}

uint64_t sub_1C5C3C()
{
  return swift_deallocClassInstance(v0, 176LL, 7LL);
}

uint64_t sub_1C5C5C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1C4E28(a1, a2);
}

uint64_t sub_1C5C70(uint8_t *a1, void (*a2)(void), uint64_t a3, uint64_t *a4)
{
  return sub_1F3C4(a1, a2, a3, a4[10], a4[11], a4[12]);
}

uint64_t sub_1C5C80(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1C5E00(a1, a3, a4);
}

uint64_t sub_1C5CA8(void *a1, void *a2, void (*a3)(uint64_t *), void (*a4)(uint64_t *))
{
  return sub_1C5AD8(a1, a2, a3, a4);
}

uint64_t sub_1C5CC8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t *a5, uint64_t a6)
{
  return sub_1C5D00( a1,  a2,  a3,  a4,  a5,  a6,  (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))&AppResolutionFlowStrategy.makeAppResolutionSuccessfulResponse(app:intent:completion:));
}

uint64_t sub_1C5CD4(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1C5B64(a1, a2, a3, a4);
}

uint64_t sub_1C5CF4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t *a5, uint64_t a6)
{
  return sub_1C5D00( a1,  a2,  a3,  a4,  a5,  a6,  (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))&AppResolutionFlowStrategy.makeErrorOutput(intent:error:completion:));
}

uint64_t sub_1C5D00( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t *a5, uint64_t a6, uint64_t (*a7)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v12 = type metadata accessor for AppResolutionStrategy(0LL, a5[10], a5[11], a5[12]);
  return a7(a1, a2, a3, a4, v12, a6);
}

uint64_t sub_1C5D74@<X0>(uint64_t a1@<X8>)
{
  return sub_157C4(*v1 + 88LL, a1);
}

uint64_t sub_1C5D94()
{
  return swift_retain(*(void *)(*(void *)v0 + 24LL));
}

uint64_t sub_1C5DA0@<X0>(uint64_t a1@<X8>)
{
  return sub_157C4(*v1 + 128LL, a1);
}

uint64_t sub_1C5DC0()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 32LL);
  swift_retain(*(void *)(*(void *)v0 + 40LL));
  return v1;
}

uint64_t sub_1C5DF0(uint64_t a1)
{
  return swift_getWitnessTable(&protocol conformance descriptor for AppResolutionService<A>, a1);
}

uint64_t sub_1C5E00(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = type metadata accessor for AppResolutionStrategy( 0LL,  *(void *)(*(void *)v3 + 80LL),  *(void *)(*(void *)v3 + 88LL),  *(void *)(*(void *)v3 + 96LL));
  uint64_t WitnessTable = swift_getWitnessTable(&unk_21AC88, v7);
  return sub_1403A0(a1, a2, a3, v7, WitnessTable);
}

void sub_1C5E84(char a1)
{
  __asm { BR              X10 }

uint64_t sub_1C5EB0()
{
  uint64_t v1 = enum case for CommonAudio.MediaType.music(_:);
  uint64_t v2 = ((uint64_t (*)(void))type metadata accessor for CommonAudio.MediaType)(0LL);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 104LL))(v0, v1, v2);
}

uint64_t getEnumTagSinglePayload for MediaType(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0LL;
  }
  if (a2 < 0xE8) {
    goto LABEL_17;
  }
  if (a2 + 24 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 24) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 24;
    }
  }

  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 24;
    }

    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 24;
    }
  }

uint64_t storeEnumTagSinglePayload for MediaType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  if (a3 + 24 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 24) >> 8 < 0xFF) {
    LODWORD(v4) = 1;
  }
  else {
    LODWORD(v4) = v3;
  }
  if (a3 >= 0xE8) {
    uint64_t v4 = v4;
  }
  else {
    uint64_t v4 = 0LL;
  }
  if (a2 <= 0xE7) {
    return ((uint64_t (*)(void))((char *)&loc_1C60E0 + 4 * byte_21AD3E[v4]))();
  }
  *a1 = a2 + 24;
  return ((uint64_t (*)(void))((char *)sub_1C6114 + 4 * byte_21AD39[v4]))();
}

uint64_t sub_1C6114(uint64_t result)
{
  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C611C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2) {
    JUMPOUT(0x1C6124LL);
  }
  return result;
}

uint64_t sub_1C6130(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2) {
    JUMPOUT(0x1C6138LL);
  }
  *(_BYTE *)unint64_t result = a2 + 24;
  return result;
}

uint64_t sub_1C613C(uint64_t result)
{
  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C6144(uint64_t result)
{
  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for MediaType()
{
  return &type metadata for MediaType;
}

unint64_t sub_1C6164()
{
  unint64_t result = qword_28D3E8;
  if (!qword_28D3E8)
  {
    unint64_t result = swift_getWitnessTable(&unk_21AE5C, &type metadata for MediaType);
    atomic_store(result, (unint64_t *)&qword_28D3E8);
  }

  return result;
}

uint64_t sub_1C61A8(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1C61D8 + 4 * byte_21AD43[a1]))( 0x636973756DLL,  0xE500000000000000LL);
}

uint64_t sub_1C61D8()
{
  return 0x74736163646F70LL;
}

uint64_t sub_1C61F0()
{
  return 0x7473696C79616C70LL;
}

uint64_t sub_1C6208()
{
  return 0x646956636973756DLL;
}

uint64_t sub_1C6224()
{
  return 1735290739LL;
}

uint64_t sub_1C6234()
{
  return 0x6F6F426F69647561LL;
}

uint64_t sub_1C6250()
{
  return 0x6F65646976LL;
}

uint64_t sub_1C6260()
{
  return 0x5573656E755469LL;
}

uint64_t sub_1C6278()
{
  return 0x74616C69706D6F63LL;
}

uint64_t sub_1C6298()
{
  return 0x6D75626C61LL;
}

uint64_t sub_1C62A8()
{
  return 0x776F68537674LL;
}

uint64_t sub_1C62BC()
{
  return 2003789939LL;
}

uint64_t sub_1C62CC()
{
  return 0x6F68536F69646172LL;
}

uint64_t sub_1C62EC()
{
  return 0x5374736163646F70LL;
}

uint64_t sub_1C6310()
{
  return 0x616C50636973756DLL;
}

uint64_t sub_1C6334()
{
  return 0x6E6F6974617473LL;
}

uint64_t sub_1C634C()
{
  return 0x65646F73697065LL;
}

uint64_t sub_1C6364()
{
  return 28773LL;
}

uint64_t sub_1C6370()
{
  return 28780LL;
}

uint64_t sub_1C637C()
{
  return 0x656C676E6973LL;
}

uint64_t sub_1C6390()
{
  return 0x65726E6567LL;
}

uint64_t sub_1C63A0()
{
  return 1937204590LL;
}

uint64_t sub_1C63B0()
{
  return 0x656E6F74676E6972LL;
}

uint64_t sub_1C63C8()
{
  return 0x73646E756F73LL;
}

uint64_t sub_1C63DC()
{
  return 0x6569766F6DLL;
}

uint64_t sub_1C63EC(unsigned __int8 *a1, unsigned __int8 *a2)
{
  unsigned __int8 v2 = *a2;
  uint64_t v3 = sub_1C61A8(*a1);
  uint64_t v5 = v4;
  if (v3 == sub_1C61A8(v2) && v5 == v6)
  {
    char v9 = 1;
    uint64_t v8 = v5;
  }

  else
  {
    uint64_t v8 = v6;
    char v9 = _stringCompareWithSmolCheck(_:_:expecting:)(v3, v5);
  }

  swift_bridgeObjectRelease(v5);
  swift_bridgeObjectRelease(v8);
  return v9 & 1;
}

Swift::Int sub_1C6474()
{
  unsigned __int8 v1 = *v0;
  Hasher.init(_seed:)(v6, 0LL);
  uint64_t v2 = sub_1C61A8(v1);
  uint64_t v4 = v3;
  String.hash(into:)(v6, v2, v3);
  swift_bridgeObjectRelease(v4);
  return Hasher._finalize()();
}

double sub_1C64D4(uint64_t a1)
{
  uint64_t v3 = sub_1C61A8(*v1);
  uint64_t v5 = v4;
  String.hash(into:)(a1, v3, v4);
  *(void *)&double result = swift_bridgeObjectRelease(v5).n128_u64[0];
  return result;
}

Swift::Int sub_1C6514(uint64_t a1)
{
  unsigned __int8 v2 = *v1;
  Hasher.init(_seed:)(v7, a1);
  uint64_t v3 = sub_1C61A8(v2);
  uint64_t v5 = v4;
  String.hash(into:)(v7, v3, v4);
  swift_bridgeObjectRelease(v5);
  return Hasher._finalize()();
}

uint64_t sub_1C6570@<X0>(uint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t result = sub_1C6714(*a1, a1[1]);
  *a2 = result;
  return result;
}

uint64_t sub_1C659C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1C61A8(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

void sub_1C65C4(void *a1@<X8>)
{
  *a1 = &off_26B6D8;
}

uint64_t sub_1C65D4(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = sub_1C6764();
  unint64_t v5 = sub_1C67A8();
  unint64_t v6 = sub_1C67EC();
  return static TerminalNodeBoundedSemanticValue<>.fromIntentNodeValue(_:)(a1, a2, v4, v5, v6);
}

unint64_t sub_1C6638()
{
  unint64_t result = qword_28D3F0;
  if (!qword_28D3F0)
  {
    uint64_t v1 = sub_45D50(&qword_28D3F8);
    unint64_t result = swift_getWitnessTable(&protocol conformance descriptor for [A], v1);
    atomic_store(result, (unint64_t *)&qword_28D3F0);
  }

  return result;
}

unint64_t sub_1C6688()
{
  unint64_t result = qword_28D400;
  if (!qword_28D400)
  {
    unint64_t result = swift_getWitnessTable(&unk_21AD84, &type metadata for MediaType);
    atomic_store(result, (unint64_t *)&qword_28D400);
  }

  return result;
}

unint64_t sub_1C66D0()
{
  unint64_t result = qword_28D408;
  if (!qword_28D408)
  {
    unint64_t result = swift_getWitnessTable(&unk_21AE9C, &type metadata for MediaType);
    atomic_store(result, (unint64_t *)&qword_28D408);
  }

  return result;
}

uint64_t sub_1C6714(uint64_t a1, uint64_t a2)
{
  unint64_t v3 = _findStringSwitchCaseWithCache(cases:string:cache:)(&off_26B460, a1, a2, &unk_283A88);
  swift_bridgeObjectRelease(a2);
  if (v3 >= 0x19) {
    return 25LL;
  }
  else {
    return v3;
  }
}

unint64_t sub_1C6764()
{
  unint64_t result = qword_28D410;
  if (!qword_28D410)
  {
    unint64_t result = swift_getWitnessTable(&unk_21ADEC, &type metadata for MediaType);
    atomic_store(result, (unint64_t *)&qword_28D410);
  }

  return result;
}

unint64_t sub_1C67A8()
{
  unint64_t result = qword_28D418;
  if (!qword_28D418)
  {
    unint64_t result = swift_getWitnessTable(&unk_21ADB4, &type metadata for MediaType);
    atomic_store(result, (unint64_t *)&qword_28D418);
  }

  return result;
}

unint64_t sub_1C67EC()
{
  unint64_t result = qword_28D420;
  if (!qword_28D420)
  {
    unint64_t result = swift_getWitnessTable(&unk_21AE24, &type metadata for MediaType);
    atomic_store(result, (unint64_t *)&qword_28D420);
  }

  return result;
}

id sub_1C6830(uint8_t *a1)
{
  unint64_t v80 = a1;
  uint64_t v1 = type metadata accessor for Apple_Parsec_Siri_V2alpha_AudioClientComponent(0LL);
  os_log_type_t v81 = *(void (***)(void, void))(v1 - 8);
  os_log_type_t v82 = (void (*)(char *, char *))v1;
  __chkstk_darwin(v1);
  uint64_t v79 = (char *)&v75 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v3 = sub_6C5C(&qword_28B5E8);
  __chkstk_darwin(v3);
  uint64_t v83 = (char *)&v75 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v5 = type metadata accessor for Logger(0LL);
  unint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = __chkstk_darwin(v5);
  uint64_t v84 = (char *)&v75 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v9 = __chkstk_darwin(v7);
  uint64_t v11 = (char *)&v75 - v10;
  unint64_t v12 = PommesAudioPluginResults.audioResults.getter(v9);
  uint64_t v13 = v12;
  uint64_t v86 = (uint64_t)_swiftEmptyArrayStorage;
  if (v12 >> 62) {
    goto LABEL_14;
  }
  uint64_t v14 = *(void *)((char *)&dword_10 + (v12 & 0xFFFFFFFFFFFFF8LL));
  swift_bridgeObjectRetain(v12);
  while (v14)
  {
    uint64_t v78 = v11;
    uint64_t v11 = (char *)v6;
    unint64_t v6 = v13 & 0xC000000000000001LL;
    uint64_t v15 = 4LL;
    while (1)
    {
      uint64_t v16 = v15 - 4;
      if (!v6) {
        break;
      }
      uint64_t v17 = specialized _ArrayBuffer._getElementSlowPath(_:)(v15 - 4, v13);
      uint64_t v18 = v15 - 3;
      if (__OFADD__(v16, 1LL)) {
        goto LABEL_13;
      }
LABEL_9:
      id v19 = sub_16E20();
      uint64_t v20 = swift_release(v17);
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v20);
      unint64_t v22 = *(void *)((char *)&dword_10 + (v86 & 0xFFFFFFFFFFFFFF8LL));
      unint64_t v21 = *(void *)((char *)&dword_18 + (v86 & 0xFFFFFFFFFFFFFF8LL));
      if (v22 >= v21 >> 1) {
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v21 > 1, v22 + 1, 1LL);
      }
      uint64_t v23 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v22, v19);
      specialized Array._endMutation()(v23);
      ++v15;
      if (v18 == v14)
      {
        swift_bridgeObjectRelease(v13);
        uint64_t v24 = (void *)v86;
        unint64_t v6 = (unint64_t)v11;
        uint64_t v11 = v78;
        goto LABEL_19;
      }
    }

    uint64_t v17 = *(void *)(v13 + 8 * v15);
    swift_retain(v17);
    uint64_t v18 = v15 - 3;
    if (!__OFADD__(v16, 1LL)) {
      goto LABEL_9;
    }
LABEL_13:
    __break(1u);
LABEL_14:
    if (v13 < 0) {
      uint64_t v25 = v13;
    }
    else {
      uint64_t v25 = v13 & 0xFFFFFFFFFFFFFF8LL;
    }
    swift_bridgeObjectRetain(v13);
    uint64_t v14 = _CocoaArrayWrapper.endIndex.getter(v25);
  }

  swift_bridgeObjectRelease(v13);
  uint64_t v24 = _swiftEmptyArrayStorage;
LABEL_19:
  swift_bridgeObjectRelease(v13);
  if (qword_283888 != -1) {
    swift_once(&qword_283888, sub_BFC5C);
  }
  uint64_t v26 = sub_6960(v5, (uint64_t)qword_2969C8);
  uint64_t v27 = *(char **)(v6 + 16);
  uint64_t v77 = v26;
  uint64_t v78 = v27;
  ((void (*)(char *))v27)(v11);
  uint64_t v28 = swift_bridgeObjectRetain_n(v24, 2LL);
  uint64_t v29 = (os_log_s *)Logger.logObject.getter(v28);
  os_log_type_t v30 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v29, v30))
  {
    unint64_t v76 = v6;
    uint64_t v31 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
    uint64_t v32 = swift_slowAlloc(32LL, -1LL);
    uint64_t v86 = v32;
    *(_DWORD *)uint64_t v31 = 136315138;
    int v75 = v31 + 4;
    uint64_t v33 = v11;
    uint64_t v34 = v5;
    uint64_t v35 = sub_1641C(0LL, (unint64_t *)&qword_289310, &OBJC_CLASS___INMediaItem_ptr);
    uint64_t v36 = swift_bridgeObjectRetain(v24);
    uint64_t v37 = Array.description.getter(v36, v35);
    unint64_t v39 = v38;
    swift_bridgeObjectRelease(v24);
    uint64_t v40 = v37;
    uint64_t v5 = v34;
    uint64_t v85 = sub_6978(v40, v39, &v86);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v85, &v86);
    swift_bridgeObjectRelease_n(v24, 2LL);
    swift_bridgeObjectRelease(v39);
    _os_log_impl( &dword_0,  v29,  v30,  "ConverterHelpers#convertPrivateSearchForMediaIntentData audioSearchResults: %s",  v31,  0xCu);
    swift_arrayDestroy(v32, 1LL, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v32, -1LL, -1LL);
    swift_slowDealloc(v31, -1LL, -1LL);

    uint64_t v41 = *(uint64_t (**)(char *, uint64_t))(v76 + 8);
    uint64_t v42 = v41(v33, v34);
  }

  else
  {

    swift_bridgeObjectRelease_n(v24, 2LL);
    uint64_t v41 = *(uint64_t (**)(char *, uint64_t))(v6 + 8);
    uint64_t v42 = v41(v11, v5);
  }

  uint64_t v43 = v80;
  os_log_type_t v44 = (void *)dispatch thunk of AudioExperience.internalSignals.getter(v42);
  uint64_t v45 = swift_bridgeObjectRetain(v44);
  uint64_t v46 = v44;
  if ((swift_isUniquelyReferenced_nonNull_native(v45) & 1) == 0) {
    uint64_t v46 = sub_1FC6C(0LL, v44[2] + 1LL, 1, v44);
  }
  unint64_t v48 = v46[2];
  unint64_t v47 = v46[3];
  if (v48 >= v47 >> 1) {
    uint64_t v46 = sub_1FC6C((void *)(v47 > 1), v48 + 1, 1, v46);
  }
  v46[2] = v48 + 1;
  uint64_t v49 = (char *)&v46[2 * v48];
  strcpy(v49 + 32, "PommesResponse");
  v49[47] = -18;
  swift_bridgeObjectRelease(v44);
  id v50 = sub_184E0(v43);
  unint64_t v51 = v79;
  uint64_t v52 = AudioExperience.audioClientComponent.getter();
  uint64_t v53 = (uint64_t)v83;
  Apple_Parsec_Siri_V2alpha_AudioClientComponent.audioIntentDetails.getter(v52);
  ((void (**)(char *, void))v81)[1](v51, v82);
  uint64_t v54 = type metadata accessor for Apple_Parsec_Siri_V2alpha_AudioIntentDetails(0LL);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v54 - 8) + 56LL))(v53, 0LL, 1LL, v54);
  uint64_t v55 = sub_1C7E0C(v53);
  unint64_t v57 = v56;
  sub_1F6CC(v53, &qword_28B5E8);
  sub_1641C(0LL, (unint64_t *)&qword_289310, &OBJC_CLASS___INMediaItem_ptr);
  v58.super.Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v24);
  v59.super.Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v46);
  Class isa = 0LL;
  if (v57 >> 60 != 15)
  {
    Class isa = Data._bridgeToObjectiveC()().super.isa;
    sub_16B6A0(v55, v57);
  }

  id v61 = [objc_allocWithZone(INPrivateSearchForMediaIntentData) initWithPrivateMediaIntentData:v50 audioSearchResults:v58.super.isa internalSignals:v59.super.isa appInferred:0 pegasusMetaData:isa];

  ((void (*)(char *, uint64_t, uint64_t))v78)(v84, v77, v5);
  id v62 = v61;
  uint64_t v63 = (os_log_s *)Logger.logObject.getter(v62);
  os_log_type_t v64 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v63, v64))
  {
    uint64_t v83 = (char *)v5;
    uint64_t v65 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
    uint64_t v66 = swift_slowAlloc(32LL, -1LL);
    uint64_t v86 = v66;
    *(_DWORD *)uint64_t v65 = 136315138;
    unint64_t v80 = v65 + 4;
    id v67 = v62;
    os_log_type_t v82 = (void (*)(char *, char *))v41;
    id v68 = v67;
    id v69 = [v67 description];
    uint64_t v70 = static String._unconditionallyBridgeFromObjectiveC(_:)(v69);
    os_log_type_t v81 = (void (**)(void, void))v50;
    uint64_t v71 = v70;
    unint64_t v73 = v72;

    uint64_t v85 = sub_6978(v71, v73, &v86);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v85, &v86);

    swift_bridgeObjectRelease(v73);
    _os_log_impl( &dword_0,  v63,  v64,  "ConverterHelpers#convertPrivateSearchForMediaIntentData privateSearchForMediaIntentData: %s",  v65,  0xCu);
    swift_arrayDestroy(v66, 1LL, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v66, -1LL, -1LL);
    swift_slowDealloc(v65, -1LL, -1LL);

    v82(v84, v83);
  }

  else
  {

    v41(v84, v5);
  }

  return v62;
}

id sub_1C6FCC(uint8_t *a1)
{
  uint64_t v2 = type metadata accessor for Logger(0LL);
  uint64_t v59 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  NSArray v58 = (char *)&v55 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  unint64_t v4 = type metadata accessor for Apple_Parsec_Siri_V2alpha_AudioClientComponent(0LL);
  unint64_t v57 = *(void (***)(void, void))(v4 - 8);
  __chkstk_darwin(v4);
  unint64_t v6 = (char *)&v55 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v7 = sub_6C5C(&qword_28B5E8);
  uint64_t v8 = __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v55 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  unint64_t v11 = PommesAudioPluginResults.audioResults.getter(v8);
  uint64_t v12 = v11;
  uint64_t v62 = (uint64_t)_swiftEmptyArrayStorage;
  if (v11 >> 62) {
    goto LABEL_14;
  }
  uint64_t v13 = *(void *)((char *)&dword_10 + (v11 & 0xFFFFFFFFFFFFF8LL));
  swift_bridgeObjectRetain(v11);
  uint64_t v60 = v2;
  while (v13)
  {
    unint64_t v55 = v4;
    unint64_t v56 = a1;
    unint64_t v4 = v12 & 0xC000000000000001LL;
    uint64_t v2 = 4LL;
    while (1)
    {
      uint64_t v14 = v2 - 4;
      if (!v4) {
        break;
      }
      uint64_t v15 = specialized _ArrayBuffer._getElementSlowPath(_:)(v2 - 4, v12);
      a1 = (uint8_t *)(v2 - 3);
      if (__OFADD__(v14, 1LL)) {
        goto LABEL_13;
      }
LABEL_9:
      id v16 = sub_16E20();
      uint64_t v17 = swift_release(v15);
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v17);
      unint64_t v19 = *(void *)((char *)&dword_10 + (v62 & 0xFFFFFFFFFFFFFF8LL));
      unint64_t v18 = *(void *)((char *)&dword_18 + (v62 & 0xFFFFFFFFFFFFFF8LL));
      if (v19 >= v18 >> 1) {
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v18 > 1, v19 + 1, 1LL);
      }
      uint64_t v20 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v19, v16);
      specialized Array._endMutation()(v20);
      ++v2;
      if (a1 == (uint8_t *)v13)
      {
        swift_bridgeObjectRelease(v12);
        unint64_t v21 = (void *)v62;
        unint64_t v4 = v55;
        a1 = v56;
        goto LABEL_19;
      }
    }

    uint64_t v15 = *(void *)(v12 + 8 * v2);
    swift_retain(v15);
    a1 = (uint8_t *)(v2 - 3);
    if (!__OFADD__(v14, 1LL)) {
      goto LABEL_9;
    }
LABEL_13:
    __break(1u);
LABEL_14:
    if (v12 < 0) {
      uint64_t v22 = v12;
    }
    else {
      uint64_t v22 = v12 & 0xFFFFFFFFFFFFFF8LL;
    }
    swift_bridgeObjectRetain(v12);
    uint64_t v13 = _CocoaArrayWrapper.endIndex.getter(v22);
    uint64_t v60 = v2;
  }

  swift_bridgeObjectRelease(v12);
  unint64_t v21 = _swiftEmptyArrayStorage;
LABEL_19:
  uint64_t v23 = swift_bridgeObjectRelease(v12);
  uint64_t v24 = (void *)dispatch thunk of AudioExperience.internalSignals.getter(v23);
  uint64_t v25 = swift_bridgeObjectRetain(v24);
  uint64_t v26 = v24;
  if ((swift_isUniquelyReferenced_nonNull_native(v25) & 1) == 0) {
    uint64_t v26 = sub_1FC6C(0LL, v24[2] + 1LL, 1, v24);
  }
  unint64_t v28 = v26[2];
  unint64_t v27 = v26[3];
  uint64_t v29 = v60;
  if (v28 >= v27 >> 1) {
    uint64_t v26 = sub_1FC6C((void *)(v27 > 1), v28 + 1, 1, v26);
  }
  void v26[2] = v28 + 1;
  os_log_type_t v30 = (char *)&v26[2 * v28];
  strcpy(v30 + 32, "PommesResponse");
  v30[47] = -18;
  swift_bridgeObjectRelease(v24);
  id v31 = sub_184E0(a1);
  uint64_t v32 = AudioExperience.audioClientComponent.getter();
  Apple_Parsec_Siri_V2alpha_AudioClientComponent.audioIntentDetails.getter(v32);
  ((void (**)(char *, unint64_t))v57)[1](v6, v4);
  uint64_t v33 = type metadata accessor for Apple_Parsec_Siri_V2alpha_AudioIntentDetails(0LL);
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v33 - 8) + 56LL))(v10, 0LL, 1LL, v33);
  uint64_t v34 = sub_1C7E0C((uint64_t)v10);
  unint64_t v36 = v35;
  sub_1F6CC((uint64_t)v10, &qword_28B5E8);
  sub_1641C(0LL, (unint64_t *)&qword_289310, &OBJC_CLASS___INMediaItem_ptr);
  v37.super.Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v21);
  v38.super.Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v26);
  Class isa = 0LL;
  if (v36 >> 60 != 15)
  {
    Class isa = Data._bridgeToObjectiveC()().super.isa;
    sub_16B6A0(v34, v36);
  }

  id v40 = [objc_allocWithZone(INPrivateAddMediaIntentData) initWithPrivateMediaIntentData:v31 audioSearchResults:v37.super.isa internalSignals:v38.super.isa pegasusMetaData:isa];

  unint64_t v57 = (void (**)(void, void))v31;
  uint64_t v41 = v59;
  if (qword_283888 != -1) {
    swift_once(&qword_283888, sub_BFC5C);
  }
  uint64_t v42 = sub_6960(v29, (uint64_t)qword_2969C8);
  uint64_t v43 = v58;
  (*(void (**)(char *, uint64_t, uint64_t))(v41 + 16))(v58, v42, v29);
  id v44 = v40;
  uint64_t v45 = (os_log_s *)Logger.logObject.getter(v44);
  os_log_type_t v46 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v45, v46))
  {
    unint64_t v47 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
    uint64_t v48 = swift_slowAlloc(32LL, -1LL);
    uint64_t v62 = v48;
    *(_DWORD *)unint64_t v47 = 136315138;
    unint64_t v56 = v47 + 4;
    id v49 = v44;
    id v50 = [v49 description];
    uint64_t v51 = static String._unconditionallyBridgeFromObjectiveC(_:)(v50);
    unint64_t v53 = v52;

    uint64_t v61 = sub_6978(v51, v53, &v62);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v61, &v62);

    swift_bridgeObjectRelease(v53);
    _os_log_impl( &dword_0,  v45,  v46,  "ConverterHelpers#convertPrivateAddMediaIntentData privateAddMediaIntentData: %s",  v47,  0xCu);
    swift_arrayDestroy(v48, 1LL, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v48, -1LL, -1LL);
    swift_slowDealloc(v47, -1LL, -1LL);

    (*(void (**)(char *, uint64_t))(v59 + 8))(v58, v60);
  }

  else
  {

    (*(void (**)(char *, uint64_t))(v41 + 8))(v43, v29);
  }

  return v44;
}

uint64_t sub_1C75B0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = swift_bridgeObjectRetain(a2);
  sub_97AE4(v3);
  return a1;
}

uint64_t sub_1C75F0@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = type metadata accessor for Logger(0LL);
  __chkstk_darwin(v6);
  uint64_t v7 = type metadata accessor for BinaryDecodingOptions(0LL);
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  if (a2 >> 60 == 15)
  {
    uint64_t v14 = type metadata accessor for Apple_Parsec_Siri_V2alpha_AudioIntentDetails(0LL);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56LL))( a3,  1LL,  1LL,  v14);
  }

  else
  {
    uint64_t v10 = type metadata accessor for Apple_Parsec_Siri_V2alpha_AudioIntentDetails(0LL);
    v18[0] = a1;
    v18[1] = a2;
    uint64_t v17 = 0LL;
    memset(v16, 0, sizeof(v16));
    sub_92560(a1, a2);
    uint64_t v11 = sub_92560(a1, a2);
    BinaryDecodingOptions.init()(v11);
    uint64_t v12 = sub_10430( &qword_28D428,  (uint64_t (*)(uint64_t))&type metadata accessor for Apple_Parsec_Siri_V2alpha_AudioIntentDetails,  (uint64_t)&protocol conformance descriptor for Apple_Parsec_Siri_V2alpha_AudioIntentDetails);
    Message.init<A>(contiguousBytes:extensions:partial:options:)( v18,  v16,  0LL,  v9,  v10,  &type metadata for Data,  v12,  &protocol witness table for Data);
    sub_16B6A0(a1, a2);
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56LL))( a3,  0LL,  1LL,  v10);
  }

id sub_1C7890( void *a1, void *a2, uint64_t a3, void *a4, void *a5, void *a6, void *a7, void *a8, void *a9, void *a10, uint64_t a11, void *a12, void *a13, void *a14, void *a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, unint64_t a21)
{
  if (a3)
  {
    sub_1641C(0LL, (unint64_t *)&qword_289310, &OBJC_CLASS___INMediaItem_ptr);
    v43.super.Class isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease(a3);
    uint64_t v23 = a17;
    if (a11) {
      goto LABEL_3;
    }
  }

  else
  {
    v43.super.Class isa = 0LL;
    uint64_t v23 = a17;
    if (a11)
    {
LABEL_3:
      v24.super.Class isa = Array._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease(a11);
      uint64_t v25 = a19;
      if (v23) {
        goto LABEL_4;
      }
LABEL_8:
      NSString v26 = 0LL;
      unint64_t v27 = a21;
      if (v25) {
        goto LABEL_5;
      }
      goto LABEL_9;
    }
  }

  v24.super.Class isa = 0LL;
  uint64_t v25 = a19;
  if (!v23) {
    goto LABEL_8;
  }
LABEL_4:
  NSString v26 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v23);
  unint64_t v27 = a21;
  if (v25)
  {
LABEL_5:
    NSString v28 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v25);
    goto LABEL_10;
  }

id sub_1C7AF4( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9, uint64_t a10, uint64_t a11, void *a12, void *a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, void *a21, uint64_t a22, uint64_t a23, unint64_t a24, uint64_t a25)
{
  if (a2)
  {
    NSString v49 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(a2);
    if (a4) {
      goto LABEL_3;
    }
  }

  else
  {
    NSString v49 = 0LL;
    if (a4)
    {
LABEL_3:
      NSString v29 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease(a4);
      if (a6) {
        goto LABEL_4;
      }
      goto LABEL_13;
    }
  }

  NSString v29 = 0LL;
  if (a6)
  {
LABEL_4:
    NSString v30 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(a6);
    uint64_t v31 = a11;
    if (a8) {
      goto LABEL_5;
    }
    goto LABEL_14;
  }

uint64_t sub_1C7E0C(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for Logger(0LL);
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = __chkstk_darwin(v2);
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)&v23 - v5;
  uint64_t v7 = sub_6C5C(&qword_28B5E8);
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)&v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v10 = type metadata accessor for Apple_Parsec_Siri_V2alpha_AudioIntentDetails(0LL);
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)&v23 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  sub_FF10(a1, (uint64_t)v9, &qword_28B5E8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1LL, v10) == 1)
  {
    sub_1F6CC((uint64_t)v9, &qword_28B5E8);
    return 0LL;
  }

  else
  {
    uint64_t v24 = v3;
    (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v13, v9, v10);
    uint64_t v14 = sub_10430( &qword_28D428,  (uint64_t (*)(uint64_t))&type metadata accessor for Apple_Parsec_Siri_V2alpha_AudioIntentDetails,  (uint64_t)&protocol conformance descriptor for Apple_Parsec_Siri_V2alpha_AudioIntentDetails);
    uint64_t v15 = Message.serializedData(partial:)(0LL, v10, v14);
    unint64_t v18 = v17;
    if (qword_283888 != -1) {
      swift_once(&qword_283888, sub_BFC5C);
    }
    uint64_t v19 = sub_6960(v2, (uint64_t)qword_2969C8);
    (*(void (**)(char *, uint64_t, uint64_t))(v24 + 16))(v6, v19, v2);
    uint64_t v20 = sub_92560(v15, v18);
    unint64_t v21 = (os_log_s *)Logger.logObject.getter(v20);
    os_log_type_t v22 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v21, v22))
    {
      unint64_t v23 = v18 >> 62;
      *(_DWORD *)swift_slowAlloc(12LL, -1LL) = 134217984;
      __asm { BR              X10 }
    }

    sub_925A4(v15, v18);
    (*(void (**)(char *, uint64_t))(v24 + 8))(v6, v2);
    (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  }

  return v15;
}

uint64_t sub_1C8248(uint64_t a1, uint64_t a2)
{
  uint64_t v230 = a2;
  uint64_t v3 = type metadata accessor for Apple_Parsec_Siri_V2alpha_AudioItemType(0LL);
  uint64_t v201 = *(void *)(v3 - 8);
  uint64_t v4 = __chkstk_darwin(v3);
  uint64_t v200 = (char *)&v196 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v4);
  uint64_t v199 = (char *)&v196 - v6;
  uint64_t v204 = type metadata accessor for Apple_Parsec_Siri_V2alpha_AudioItem(0LL);
  uint64_t v198 = *(void *)(v204 - 8);
  __chkstk_darwin(v204);
  __int128 v203 = (char *)&v196 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v8 = type metadata accessor for AudioResult.ItemSource(0LL);
  uint64_t v211 = *(void *)(v8 - 8);
  uint64_t v9 = __chkstk_darwin(v8);
  Swift::String_optional v210 = (char *)&v196 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v9);
  v209 = (char *)&v196 - v11;
  uint64_t v12 = type metadata accessor for Logger(0LL);
  uint64_t v237 = *(void *)(v12 - 8);
  uint64_t v238 = v12;
  uint64_t v13 = __chkstk_darwin(v12);
  uint64_t v235 = (char *)&v196 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v15 = __chkstk_darwin(v13);
  uint64_t v197 = (char *)&v196 - v16;
  __chkstk_darwin(v15);
  uint64_t v225 = (char *)&v196 - v17;
  uint64_t v207 = type metadata accessor for CommonAudio.Attribute(0LL);
  uint64_t v206 = *(void *)(v207 - 8);
  __chkstk_darwin(v207);
  uint64_t v205 = (char *)&v196 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v223 = type metadata accessor for CommonAudio.Noun(0LL);
  uint64_t v228 = *(void *)(v223 - 8);
  __chkstk_darwin(v223);
  uint64_t v212 = (char *)&v196 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v222 = sub_6C5C(&qword_284D80);
  __chkstk_darwin(v222);
  v232 = (void (*)(char *, uint64_t))((char *)&v196 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  uint64_t v21 = sub_6C5C(&qword_284D88);
  uint64_t v22 = __chkstk_darwin(v21);
  uint64_t v221 = (uint64_t)&v196 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v24 = __chkstk_darwin(v22);
  uint64_t v227 = (uint64_t)&v196 - v25;
  __chkstk_darwin(v24);
  uint64_t v229 = (uint64_t)&v196 - v26;
  uint64_t v27 = type metadata accessor for CommonAudio.Verb(0LL);
  id v233 = *(uint64_t (**)(char *, uint64_t))(v27 - 8);
  __chkstk_darwin(v27);
  uint64_t v214 = (char *)&v196 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v29 = sub_6C5C(&qword_284DA8);
  uint64_t v30 = __chkstk_darwin(v29);
  unint64_t v220 = (char *)&v196 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v30);
  uint64_t v33 = (char *)&v196 - v32;
  uint64_t v34 = sub_6C5C(&qword_284DB0);
  uint64_t v35 = __chkstk_darwin(v34);
  uint64_t v213 = (uint64_t)&v196 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v37 = __chkstk_darwin(v35);
  uint64_t v219 = (char *)&v196 - v38;
  uint64_t v39 = __chkstk_darwin(v37);
  uint64_t v224 = (uint64_t)&v196 - v40;
  uint64_t v41 = __chkstk_darwin(v39);
  NSArray v43 = (char *)&v196 - v42;
  uint64_t v44 = __chkstk_darwin(v41);
  NSString v46 = (char *)&v196 - v45;
  __chkstk_darwin(v44);
  uint64_t v48 = (char *)&v196 - v47;
  id v234 = [objc_allocWithZone(_INPBMediaDestination) init];
  uint64_t v236 = a1;
  NSString v49 = (void *)dispatch thunk of AudioUsoIntent.playlistTitles.getter();
  id v50 = v49;
  uint64_t v51 = v49[2];
  uint64_t v202 = v3;
  uint64_t v208 = v8;
  if (v51)
  {
    uint64_t v53 = v49[4];
    unint64_t v52 = v49[5];
    uint64_t v226 = v53;
    unint64_t v231 = v52;
    swift_bridgeObjectRetain(v52);
    uint64_t v54 = swift_bridgeObjectRelease(v50);
    goto LABEL_11;
  }

  uint64_t v55 = swift_bridgeObjectRelease(v49);
  unint64_t v56 = (void *)dispatch thunk of AudioUsoIntent.appPlaylistTitles.getter(v55);
  unint64_t v57 = v56;
  if (v56[2])
  {
    uint64_t v59 = v56[4];
    unint64_t v58 = v56[5];
    swift_bridgeObjectRetain(v58);
    uint64_t v54 = swift_bridgeObjectRelease(v57);
    uint64_t v60 = HIBYTE(v58) & 0xF;
    uint64_t v226 = v59;
    if ((v58 & 0x2000000000000000LL) == 0) {
      uint64_t v60 = v59 & 0xFFFFFFFFFFFFLL;
    }
    if (v60)
    {
      unint64_t v231 = v58;
      goto LABEL_11;
    }

    unint64_t v56 = (void *)v58;
  }

  uint64_t v54 = swift_bridgeObjectRelease(v56);
  uint64_t v226 = 0LL;
  unint64_t v231 = 0LL;
LABEL_11:
  dispatch thunk of AudioUsoIntent.verb.getter(v54);
  uint64_t v61 = v233;
  uint64_t v62 = (void (*)(void))*((void *)v233 + 13);
  unsigned int v215 = enum case for CommonAudio.Verb.update(_:);
  unint64_t v216 = (void (*)(uint64_t, void, uint64_t))v62;
  v62(v46);
  unint64_t v217 = (void (*)(char *, void, uint64_t, uint64_t))*((void *)v61 + 7);
  v217(v46, 0LL, 1LL, v27);
  uint64_t v63 = (uint64_t)&v33[*(int *)(v29 + 48)];
  sub_FF10((uint64_t)v48, (uint64_t)v33, &qword_284DB0);
  sub_FF10((uint64_t)v46, v63, &qword_284DB0);
  os_log_type_t v64 = (unsigned int (*)(char *, uint64_t, uint64_t))*((void *)v61 + 6);
  unsigned int v65 = v64(v33, 1LL, v27);
  uint64_t v66 = (void *)&unk_283000;
  uint64_t v218 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))v64;
  if (v65 == 1)
  {
    sub_1F6CC((uint64_t)v46, &qword_284DB0);
    sub_1F6CC((uint64_t)v48, &qword_284DB0);
    unsigned int v67 = v64((char *)v63, 1LL, v27);
    unint64_t v68 = v231;
    if (v67 == 1)
    {
      uint64_t v69 = sub_1F6CC((uint64_t)v33, &qword_284DB0);
      uint64_t v70 = v232;
      uint64_t v71 = v229;
      if (!v68) {
        goto LABEL_18;
      }
LABEL_26:
      id v92 = v234;
      [v234 setMediaDestinationType:2];
      goto LABEL_43;
    }

LABEL_72:
    if (v92)
    {
      sub_1641C(0LL, &qword_286120, &OBJC_CLASS____INPBString_ptr);
      id v181 = v92;
      unint64_t v68 = v231;
      uint64_t v182 = (void *)_INPBString.init(from:)(v226, v231);
      [v181 setPlaylistName:v182];
    }

    else
    {
      unint64_t v68 = v231;
      swift_bridgeObjectRelease(v231);
    }

    uint64_t v66 = &unk_283000;
  }

id sub_1C97C0(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for CommonAudio.MediaType(0LL);
  uint64_t v163 = *(void *)(v2 - 8);
  uint64_t v164 = v2;
  __chkstk_darwin(v2);
  uint64_t v155 = (char *)&v154 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v167 = sub_6C5C(&qword_284DA0);
  uint64_t v4 = __chkstk_darwin(v167);
  uint64_t v156 = (uint64_t)&v154 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v4);
  uint64_t v172 = (char *)&v154 - v6;
  uint64_t v7 = sub_6C5C(&qword_284DC8);
  uint64_t v8 = __chkstk_darwin(v7);
  uint64_t v154 = (uint64_t)&v154 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v10 = __chkstk_darwin(v8);
  uint64_t v160 = (char *)&v154 - v11;
  uint64_t v12 = __chkstk_darwin(v10);
  uint64_t v159 = (uint64_t)&v154 - v13;
  uint64_t v14 = __chkstk_darwin(v12);
  uint64_t v158 = (char *)&v154 - v15;
  uint64_t v16 = __chkstk_darwin(v14);
  uint64_t v165 = (uint64_t)&v154 - v17;
  __chkstk_darwin(v16);
  uint64_t v162 = (char *)&v154 - v18;
  uint64_t v19 = type metadata accessor for CommonAudio.Attribute(0LL);
  uint64_t v169 = *(void *)(v19 - 8);
  uint64_t v170 = v19;
  __chkstk_darwin(v19);
  uint64_t v161 = (char *)&v154 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v21 = type metadata accessor for Logger(0LL);
  uint64_t v173 = *(void *)(v21 - 8);
  uint64_t v174 = v21;
  uint64_t v22 = __chkstk_darwin(v21);
  uint64_t v157 = (char *)&v154 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v24 = __chkstk_darwin(v22);
  uint64_t v166 = (char *)&v154 - v25;
  __chkstk_darwin(v24);
  uint64_t v168 = (char *)&v154 - v26;
  uint64_t v27 = type metadata accessor for CommonAudio.Noun(0LL);
  uint64_t v28 = *(void *)(v27 - 8);
  __chkstk_darwin(v27);
  uint64_t v30 = (char *)&v154 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v31 = sub_6C5C(&qword_284D80);
  __chkstk_darwin(v31);
  uint64_t v33 = (char *)&v154 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v34 = sub_6C5C(&qword_284D88);
  uint64_t v35 = __chkstk_darwin(v34);
  uint64_t v37 = (char *)&v154 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v38 = __chkstk_darwin(v35);
  uint64_t v40 = (char *)&v154 - v39;
  uint64_t v41 = __chkstk_darwin(v38);
  NSArray v43 = (char *)&v154 - v42;
  uint64_t v171 = a1;
  dispatch thunk of AudioUsoIntent.noun.getter(v41);
  (*(void (**)(char *, void, uint64_t))(v28 + 104))(v40, enum case for CommonAudio.Noun.library(_:), v27);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v28 + 56))(v40, 0LL, 1LL, v27);
  uint64_t v44 = (uint64_t)&v33[*(int *)(v31 + 48)];
  sub_FF10((uint64_t)v43, (uint64_t)v33, &qword_284D88);
  sub_FF10((uint64_t)v40, v44, &qword_284D88);
  uint64_t v45 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v28 + 48);
  if (v45((uint64_t)v33, 1LL, v27) == 1)
  {
    sub_1F6CC((uint64_t)v40, &qword_284D88);
    sub_1F6CC((uint64_t)v43, &qword_284D88);
    if (v45(v44, 1LL, v27) == 1)
    {
      sub_1F6CC((uint64_t)v33, &qword_284D88);
      goto LABEL_8;
    }

    goto LABEL_6;
  }

  sub_FF10((uint64_t)v33, (uint64_t)v37, &qword_284D88);
  if (v45(v44, 1LL, v27) == 1)
  {
    sub_1F6CC((uint64_t)v40, &qword_284D88);
    sub_1F6CC((uint64_t)v43, &qword_284D88);
    (*(void (**)(char *, uint64_t))(v28 + 8))(v37, v27);
LABEL_6:
    sub_1F6CC((uint64_t)v33, &qword_284D80);
    uint64_t v46 = (uint64_t)v172;
    goto LABEL_12;
  }

  (*(void (**)(char *, uint64_t, uint64_t))(v28 + 32))(v30, v44, v27);
  uint64_t v47 = sub_10430( &qword_284DE8,  (uint64_t (*)(uint64_t))&type metadata accessor for CommonAudio.Noun,  (uint64_t)&protocol conformance descriptor for CommonAudio.Noun);
  char v48 = dispatch thunk of static Equatable.== infix(_:_:)(v37, v30, v27, v47);
  NSString v49 = *(void (**)(char *, uint64_t))(v28 + 8);
  v49(v30, v27);
  sub_1F6CC((uint64_t)v40, &qword_284D88);
  sub_1F6CC((uint64_t)v43, &qword_284D88);
  v49(v37, v27);
  sub_1F6CC((uint64_t)v33, &qword_284D88);
  uint64_t v46 = (uint64_t)v172;
  if ((v48 & 1) != 0)
  {
LABEL_8:
    id v50 = objc_allocWithZone(&OBJC_CLASS___INMediaItem);
    NSString v51 = String._bridgeToObjectiveC()();
    id v52 = [v50 initWithIdentifier:v51 title:0 type:0 artwork:0];

    if (qword_283888 != -1) {
      swift_once(&qword_283888, sub_BFC5C);
    }
    uint64_t v53 = v174;
    uint64_t v54 = sub_6960(v174, (uint64_t)qword_2969C8);
    uint64_t v55 = v173;
    unint64_t v56 = v168;
    (*(void (**)(char *, uint64_t, uint64_t))(v173 + 16))(v168, v54, v53);
    id v57 = v52;
    unint64_t v58 = (os_log_s *)Logger.logObject.getter(v57);
    os_log_type_t v59 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v58, v59))
    {
      uint64_t v60 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
      uint64_t v61 = swift_slowAlloc(32LL, -1LL);
      v176[0] = v61;
      *(_DWORD *)uint64_t v60 = 136315138;
      uint64_t v172 = (char *)(v60 + 4);
      id v62 = v57;
      id v63 = [v62 description];
      uint64_t v64 = static String._unconditionallyBridgeFromObjectiveC(_:)(v63);
      unint64_t v66 = v65;

      uint64_t v175 = sub_6978(v64, v66, v176);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v175, v176);

      swift_bridgeObjectRelease(v66);
      _os_log_impl(&dword_0, v58, v59, "ConverterHelpers#convertMediaContainer library noun found item: %s", v60, 0xCu);
      swift_arrayDestroy(v61, 1LL, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v61, -1LL, -1LL);
      swift_slowDealloc(v60, -1LL, -1LL);

      (*(void (**)(char *, uint64_t))(v173 + 8))(v168, v174);
      return v57;
    }

uint64_t sub_1CA96C()
{
  uint64_t v0 = type metadata accessor for Logger(0LL);
  __chkstk_darwin(v0);
  uint64_t v1 = type metadata accessor for Apple_Parsec_Siri_V2alpha_AudioItemDetails(0LL);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = __chkstk_darwin(v1);
  uint64_t v5 = (char *)&v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  Apple_Parsec_Siri_V2alpha_AudioItem.details.getter(v3);
  uint64_t v6 = sub_10430( &qword_28D450,  (uint64_t (*)(uint64_t))&type metadata accessor for Apple_Parsec_Siri_V2alpha_AudioItemDetails,  (uint64_t)&protocol conformance descriptor for Apple_Parsec_Siri_V2alpha_AudioItemDetails);
  uint64_t v7 = Message.serializedData(partial:)(0LL, v1, v6);
  (*(void (**)(char *, uint64_t))(v2 + 8))(v5, v1);
  return v7;
}

void destroy for DirectInvocationUseCase(uint64_t a1)
{
}

uint64_t initializeWithCopy for DirectInvocationUseCase(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void **)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 24);
  uint64_t v7 = *(void *)(a2 + 32);
  uint64_t v8 = *(void *)(a2 + 40);
  uint64_t v9 = *(void *)(a2 + 48);
  char v10 = *(_BYTE *)(a2 + 56);
  sub_45EC0(*(void *)a2, v4, v5, v6, v7, v8, v9, v10);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + swift_weakDestroy(v0 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  *(void *)(a1 + 3sub_6C3C(v0 + 2) = v7;
  *(void *)(a1 + 40) = v8;
  *(void *)(a1 + 48) = v9;
  *(_BYTE *)(a1 + 56) = v10;
  return a1;
}

uint64_t assignWithCopy for DirectInvocationUseCase(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void **)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 24);
  uint64_t v7 = *(void *)(a2 + 32);
  uint64_t v8 = *(void *)(a2 + 40);
  uint64_t v9 = *(void *)(a2 + 48);
  char v10 = *(_BYTE *)(a2 + 56);
  sub_45EC0(*(void *)a2, v4, v5, v6, v7, v8, v9, v10);
  uint64_t v11 = *(void **)a1;
  uint64_t v12 = *(void *)(a1 + 8);
  uint64_t v13 = *(void **)(a1 + 16);
  uint64_t v14 = *(void *)(a1 + 24);
  uint64_t v15 = *(void *)(a1 + 32);
  uint64_t v16 = *(void *)(a1 + 40);
  uint64_t v17 = *(void *)(a1 + 48);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + swift_weakDestroy(v0 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  *(void *)(a1 + 3sub_6C3C(v0 + 2) = v7;
  *(void *)(a1 + 40) = v8;
  *(void *)(a1 + 48) = v9;
  char v18 = *(_BYTE *)(a1 + 56);
  *(_BYTE *)(a1 + 56) = v10;
  sub_45E1C(v11, v12, v13, v14, v15, v16, v17, v18);
  return a1;
}

__n128 initializeWithTake for DirectInvocationUseCase(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  __int128 v3 = *(_OWORD *)(a2 + 16);
  __int128 v4 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 41) = *(_OWORD *)(a2 + 41);
  *(_OWORD *)(a1 + swift_weakDestroy(v0 + 16) = v3;
  *(_OWORD *)(a1 + 3sub_6C3C(v0 + 2) = v4;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for DirectInvocationUseCase(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 48);
  char v4 = *(_BYTE *)(a2 + 56);
  uint64_t v5 = *(void **)a1;
  uint64_t v7 = *(void *)(a1 + 8);
  uint64_t v6 = *(void **)(a1 + 16);
  uint64_t v8 = *(void *)(a1 + 24);
  uint64_t v9 = *(void *)(a1 + 32);
  uint64_t v10 = *(void *)(a1 + 40);
  uint64_t v11 = *(void *)(a1 + 48);
  __int128 v12 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + swift_weakDestroy(v0 + 16) = v12;
  *(_OWORD *)(a1 + 3sub_6C3C(v0 + 2) = *(_OWORD *)(a2 + 32);
  *(void *)(a1 + 48) = v3;
  char v13 = *(_BYTE *)(a1 + 56);
  *(_BYTE *)(a1 + 56) = v4;
  sub_45E1C(v5, v7, v6, v8, v9, v10, v11, v13);
  return a1;
}

uint64_t getEnumTagSinglePayload for DirectInvocationUseCase(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0LL;
  }
  if (a2 >= 0xFC && *(_BYTE *)(a1 + 57)) {
    return (*(_DWORD *)a1 + 252);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 56);
  if (v3 <= 4) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for DirectInvocationUseCase( uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFB)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 56) = 0;
    *(void *)__n128 result = a2 - 252;
    if (a3 >= 0xFC) {
      *(_BYTE *)(result + 5sub_6C3C(v0 + 7) = 1;
    }
  }

  else
  {
    if (a3 >= 0xFC) {
      *(_BYTE *)(result + 5sub_6C3C(v0 + 7) = 0;
    }
    if (a2) {
      *(_BYTE *)(result + 56) = -(char)a2;
    }
  }

  return result;
}

uint64_t sub_1CADD4(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 56);
}

uint64_t sub_1CADDC(uint64_t result, char a2)
{
  *(_BYTE *)(result + 56) = a2;
  return result;
}

ValueMetadata *type metadata accessor for DirectInvocationUseCase()
{
  return &type metadata for DirectInvocationUseCase;
}

void sub_1CADF4(uint64_t a1)
{
  uint64_t v1 = a1;
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2)
  {
    sub_6C5C(&qword_2858E8);
    unsigned int v3 = (void *)static _DictionaryStorage.allocate(capacity:)(v2);
  }

  else
  {
    unsigned int v3 = &_swiftEmptyDictionarySingleton;
  }

  uint64_t v37 = v1 + 64;
  uint64_t v4 = -1LL << *(_BYTE *)(v1 + 32);
  if (-v4 < 64) {
    uint64_t v5 = ~(-1LL << -(char)v4);
  }
  else {
    uint64_t v5 = -1LL;
  }
  unint64_t v6 = v5 & *(void *)(v1 + 64);
  int64_t v36 = (unint64_t)(63 - v4) >> 6;
  uint64_t v7 = &v43;
  uint64_t v8 = &v45;
  swift_bridgeObjectRetain(v1);
  int64_t i = 0LL;
  uint64_t v10 = (char *)&type metadata for Any + 8;
  uint64_t v11 = &type metadata for Bool;
  if (v6) {
    goto LABEL_10;
  }
LABEL_11:
  int64_t v20 = i + 1;
  if (__OFADD__(i, 1LL)) {
    goto LABEL_35;
  }
  if (v20 >= v36) {
    goto LABEL_32;
  }
  unint64_t v21 = *(void *)(v37 + 8 * v20);
  int64_t v22 = i + 1;
  if (!v21)
  {
    int64_t v22 = i + 2;
    if (i + 2 >= v36) {
      goto LABEL_32;
    }
    unint64_t v21 = *(void *)(v37 + 8 * v22);
    if (!v21)
    {
      int64_t v22 = i + 3;
      if (i + 3 >= v36) {
        goto LABEL_32;
      }
      unint64_t v21 = *(void *)(v37 + 8 * v22);
      if (!v21)
      {
        int64_t v22 = i + 4;
        if (i + 4 >= v36) {
          goto LABEL_32;
        }
        unint64_t v21 = *(void *)(v37 + 8 * v22);
        if (!v21)
        {
          int64_t v23 = i + 5;
          if (i + 5 < v36)
          {
            unint64_t v21 = *(void *)(v37 + 8 * v23);
            if (v21)
            {
              int64_t v22 = i + 5;
              goto LABEL_26;
            }

            while (1)
            {
              int64_t v22 = v23 + 1;
              if (__OFADD__(v23, 1LL)) {
                goto LABEL_36;
              }
              if (v22 >= v36) {
                break;
              }
              unint64_t v21 = *(void *)(v37 + 8 * v22);
              ++v23;
              if (v21) {
                goto LABEL_26;
              }
            }
          }

id sub_1CB14C()
{
  uint64_t v0 = type metadata accessor for Logger(0LL);
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  unsigned int v3 = (char *)&v14 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  sub_1CB3B8();
  if (v4)
  {
    uint64_t v5 = v4;
    id v6 = [objc_allocWithZone(SKIDirectInvocationContext) init];
    [v6 setInputOrigin:SAInputOriginDialogButtonTapValue];
    [v6 setInteractionType:SAIntentGroupAceInteractionTypeDisplayDrivenValue];
    id v7 =  [(id)objc_opt_self(SKIDirectInvocation) runSiriKitExecutorCommandWithContext:v6 payload:v5];
  }

  else
  {
    if (qword_283888 != -1) {
      swift_once(&qword_283888, sub_BFC5C);
    }
    uint64_t v8 = sub_6960(v0, (uint64_t)qword_2969C8);
    uint64_t v9 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v1 + 16))(v3, v8, v0);
    uint64_t v10 = (os_log_s *)Logger.logObject.getter(v9);
    os_log_type_t v11 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v10, v11))
    {
      __int128 v12 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)__int128 v12 = 0;
      _os_log_impl( &dword_0,  v10,  v11,  "DirectInvocationUseCase#runSiriKitExecutorCommand could not build DirectInvocationPayload",  v12,  2u);
      swift_slowDealloc(v12, -1LL, -1LL);
    }

    (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
    return 0LL;
  }

  return v7;
}

uint64_t sub_1CB318(unsigned __int8 a1)
{
  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_1CB354 + 4 * byte_21AEDA[a1]))( 0xD000000000000033LL,  0x8000000000223640LL);
}

uint64_t sub_1CB354()
{
  return v0 + 3;
}

unint64_t sub_1CB39C()
{
  return 0xD000000000000029LL;
}

void sub_1CB3B8()
{
  uint64_t v1 = type metadata accessor for Logger(0LL);
  __chkstk_darwin(v1);
  sub_45D94(v0, (uint64_t)v3);
  __asm { BR              X10 }

id sub_1CB46C()
{
  uint64_t v3 = *(void *)(v1 - 160);
  uint64_t v2 = *(void *)(v1 - 152);
  uint64_t v4 = *(void **)(v1 - 144);
  uint64_t v5 = sub_6C5C(&qword_2844D0);
  uint64_t inited = swift_initStackObject(v5, v0 + 64);
  *(_OWORD *)(inited + swift_weakDestroy(v0 + 16) = xmmword_214510;
  *(void *)(inited + 3sub_6C3C(v0 + 2) = 0x6C646E7542707061LL;
  *(void *)(inited + 40) = 0xEB00000000644965LL;
  *(void *)(inited + 7sub_6C3C(v0 + 2) = sub_6C5C(&qword_284600);
  *(void *)(inited + 48) = v3;
  *(void *)(inited + 56) = v2;
  id v7 = v4;
  swift_bridgeObjectRetain(v2);
  unint64_t v8 = sub_74D54(inited);
  if (v4)
  {
    uint64_t v9 = (void *)objc_opt_self(&OBJC_CLASS___NSKeyedArchiver);
    *(void *)(v0 + 336) = 0LL;
    id v10 = v7;
    id v11 = [v9 archivedDataWithRootObject:v10 requiringSecureCoding:1 error:v0 + 336];
    id v12 = *(id *)(v0 + 336);
    if (v11)
    {
      uint64_t v13 = static Data._unconditionallyBridgeFromObjectiveC(_:)(v11);
      unint64_t v15 = v14;

      *(void *)(v0 + 360) = &type metadata for Data;
      *(void *)(v0 + 336) = v13;
      *(void *)(v0 + 344) = v15;
      sub_21964((_OWORD *)(v0 + 336), (_OWORD *)(v0 + 144));
      sub_92560(v13, v15);
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v8);
      *(void *)(v0 + 56) = v8;
      sub_33808((_OWORD *)(v0 + 144), 0x746E65746E69LL, 0xE600000000000000LL, isUniquelyReferenced_nonNull_native);
      unint64_t v8 = *(void *)(v0 + 56);

      swift_bridgeObjectRelease(0x8000000000000000LL);
      sub_925A4(v13, v15);
    }

    else
    {
      uint64_t v17 = v12;
      uint64_t v18 = _convertNSErrorToError(_:)(v12);

      swift_willThrow(v19);
      swift_errorRelease(v18);
    }
  }

  id v20 = sub_1CDDB8(0xD000000000000033LL, 0x8000000000223640LL, v8);
  swift_bridgeObjectRelease(v8);

  return v20;
}

id sub_1CBA90()
{
  uint64_t v0 = type metadata accessor for Logger(0LL);
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v13 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  id v4 = sub_1CB14C();
  if (v4)
  {
    uint64_t v5 = v4;
    id v6 = [(id)objc_opt_self(SKIDirectInvocation) wrapCommandInStartLocalRequest:v4];
  }

  else
  {
    if (qword_283888 != -1) {
      swift_once(&qword_283888, sub_BFC5C);
    }
    uint64_t v7 = sub_6960(v0, (uint64_t)qword_2969C8);
    uint64_t v8 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v1 + 16))(v3, v7, v0);
    uint64_t v9 = (os_log_s *)Logger.logObject.getter(v8);
    os_log_type_t v10 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v9, v10))
    {
      id v11 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)id v11 = 0;
      _os_log_impl( &dword_0,  v9,  v10,  "DirectInvocationUseCase#startLocalRequestWithRunSiriKitExecutorCommand could not build RSKE",  v11,  2u);
      swift_slowDealloc(v11, -1LL, -1LL);
    }

    (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
    return 0LL;
  }

  return v6;
}

uint64_t sub_1CBC04(uint64_t a1, uint64_t a2, uint64_t a3)
{
  id v4 = v3;
  if (*(void *)(a1 + 24))
  {
    sub_21964((_OWORD *)a1, v11);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v3);
    uint64_t v10 = *v3;
    *uint64_t v3 = 0x8000000000000000LL;
    sub_33808(v11, a2, a3, isUniquelyReferenced_nonNull_native);
    uint64_t v8 = *v3;
    *id v4 = v10;
    swift_bridgeObjectRelease(a3);
    return swift_bridgeObjectRelease(v8);
  }

  else
  {
    sub_2E888(a1);
    sub_1CBFB0(a2, a3, v11);
    swift_bridgeObjectRelease(a3);
    return sub_2E888((uint64_t)v11);
  }

void sub_1CBCC0(char *a1)
{
}

void sub_1CBCCC()
{
  uint64_t v1 = *v0;
  Hasher.init(_seed:)(v2, 0LL);
  __asm { BR              X9 }

Swift::Int sub_1CBD18()
{
  return Hasher._finalize()();
}

void sub_1CBD80()
{
  __asm { BR              X10 }

uint64_t sub_1CBDBC(uint64_t a1)
{
  return swift_bridgeObjectRelease(0xE600000000000000LL);
}

void sub_1CBE10(uint64_t a1)
{
  uint64_t v2 = *v1;
  Hasher.init(_seed:)(v3, a1);
  __asm { BR              X9 }

Swift::Int sub_1CBE58()
{
  return Hasher._finalize()();
}

unint64_t sub_1CBEC0@<X0>(Swift::String *a1@<X0>, _BYTE *a2@<X8>)
{
  unint64_t result = sub_1CE5E4(*a1);
  *a2 = result;
  return result;
}

uint64_t sub_1CBEEC()
{
  return ((uint64_t (*)(void))((char *)sub_1CBF1C + 4 * byte_21AEEC[*v0]))();
}

void sub_1CBF1C(void *a1@<X8>)
{
  *a1 = 0x7463656A6572LL;
  a1[1] = 0xE600000000000000LL;
}

void sub_1CBF34(void *a1@<X8>)
{
  *a1 = 0x6F666E4965726F6DLL;
  a1[1] = 0xE800000000000000LL;
}

void sub_1CBF50(void *a1@<X8>)
{
  *a1 = 0x6C65636E6163LL;
  a1[1] = 0xE600000000000000LL;
}

uint64_t sub_1CBF68(uint64_t a1, uint64_t a2)
{
  return v3 & 1;
}

double sub_1CBFB0@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _OWORD *a3@<X8>)
{
  id v4 = v3;
  uint64_t v8 = *v4;
  swift_bridgeObjectRetain(*v4);
  unint64_t v9 = sub_9A744(a1, a2);
  LOBYTE(asub_6C3C(v0 + 2) = v10;
  swift_bridgeObjectRelease(v8);
  if ((a2 & 1) != 0)
  {
    int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v4);
    uint64_t v12 = *v4;
    uint64_t v15 = *v4;
    *id v4 = 0x8000000000000000LL;
    if (!isUniquelyReferenced_nonNull_native)
    {
      sub_1CC258();
      uint64_t v12 = v15;
    }

    swift_bridgeObjectRelease(*(void *)(*(void *)(v12 + 48) + 16 * v9 + 8));
    sub_21964((_OWORD *)(*(void *)(v12 + 56) + 32 * v9), a3);
    sub_1CD6A4(v9, v12);
    uint64_t v13 = *v4;
    *id v4 = v12;
    swift_bridgeObjectRelease(v13);
  }

  else
  {
    double result = 0.0;
    *a3 = 0u;
    a3[1] = 0u;
  }

  return result;
}

void *sub_1CC0A0()
{
  uint64_t v1 = v0;
  sub_6C5C(&qword_2858A8);
  uint64_t v2 = *v0;
  uint64_t v3 = static _DictionaryStorage.copy(original:)(*v0);
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    double result = (void *)swift_release(v2);
    *uint64_t v1 = v4;
    return result;
  }

  double result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1LL << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  int64_t v9 = 0LL;
  *(void *)(v4 + swift_weakDestroy(v0 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1LL << *(_BYTE *)(v2 + 32);
  uint64_t v11 = -1LL;
  if (v10 < 64) {
    uint64_t v11 = ~(-1LL << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }

    int64_t v25 = v9 + 1;
    if (__OFADD__(v9, 1LL))
    {
      __break(1u);
      goto LABEL_28;
    }

    if (v25 >= v13) {
      goto LABEL_26;
    }
    unint64_t v26 = *(void *)(v6 + 8 * v25);
    ++v9;
    if (!v26)
    {
      int64_t v9 = v25 + 1;
      if (v25 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v26 = *(void *)(v6 + 8 * v9);
      if (!v26) {
        break;
      }
    }

void *sub_1CC258()
{
  uint64_t v1 = v0;
  sub_6C5C(&qword_2858E8);
  uint64_t v2 = *v0;
  uint64_t v3 = static _DictionaryStorage.copy(original:)(*v0);
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
    double result = (void *)swift_release(v2);
LABEL_28:
    *uint64_t v1 = v4;
    return result;
  }

  int64_t v25 = v1;
  double result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1LL << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  int64_t v9 = 0LL;
  *(void *)(v4 + swift_weakDestroy(v0 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1LL << *(_BYTE *)(v2 + 32);
  uint64_t v11 = -1LL;
  if (v10 < 64) {
    uint64_t v11 = ~(-1LL << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }

    int64_t v22 = v9 + 1;
    if (__OFADD__(v9, 1LL))
    {
      __break(1u);
      goto LABEL_30;
    }

    if (v22 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      int64_t v9 = v22 + 1;
      if (v22 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v23 = *(void *)(v6 + 8 * v9);
      if (!v23) {
        break;
      }
    }

void *sub_1CC43C()
{
  uint64_t v1 = v0;
  sub_6C5C(&qword_285898);
  uint64_t v2 = *v0;
  uint64_t v3 = static _DictionaryStorage.copy(original:)(*v0);
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    double result = (void *)swift_release(v2);
    *uint64_t v1 = v4;
    return result;
  }

  double result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1LL << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  int64_t v9 = 0LL;
  *(void *)(v4 + swift_weakDestroy(v0 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1LL << *(_BYTE *)(v2 + 32);
  uint64_t v11 = -1LL;
  if (v10 < 64) {
    uint64_t v11 = ~(-1LL << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }

    int64_t v23 = v9 + 1;
    if (__OFADD__(v9, 1LL))
    {
      __break(1u);
      goto LABEL_28;
    }

    if (v23 >= v13) {
      goto LABEL_26;
    }
    unint64_t v24 = *(void *)(v6 + 8 * v23);
    ++v9;
    if (!v24)
    {
      int64_t v9 = v23 + 1;
      if (v23 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v24 = *(void *)(v6 + 8 * v9);
      if (!v24) {
        break;
      }
    }

id sub_1CC5E8()
{
  uint64_t v1 = v0;
  sub_6C5C(qword_28D300);
  uint64_t v2 = *v0;
  uint64_t v3 = static _DictionaryStorage.copy(original:)(*v0);
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (id)swift_release(v2);
    *uint64_t v1 = v4;
    return result;
  }

  id result = (id)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1LL << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  int64_t v9 = 0LL;
  *(void *)(v4 + swift_weakDestroy(v0 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1LL << *(_BYTE *)(v2 + 32);
  uint64_t v11 = -1LL;
  if (v10 < 64) {
    uint64_t v11 = ~(-1LL << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }

    int64_t v20 = v9 + 1;
    if (__OFADD__(v9, 1LL))
    {
      __break(1u);
      goto LABEL_28;
    }

    if (v20 >= v13) {
      goto LABEL_26;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v20);
    ++v9;
    if (!v21)
    {
      int64_t v9 = v20 + 1;
      if (v20 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v21 = *(void *)(v6 + 8 * v9);
      if (!v21) {
        break;
      }
    }

Swift::Int sub_1CC78C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  if (*(void *)(*v2 + 24) <= a1) {
    uint64_t v6 = a1;
  }
  else {
    uint64_t v6 = *(void *)(*v2 + 24);
  }
  sub_6C5C(&qword_2858A8);
  char v43 = a2;
  uint64_t v7 = static _DictionaryStorage.resize(original:capacity:move:)(v5, v6, a2);
  uint64_t v8 = v7;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_43;
  }
  uint64_t v9 = 1LL << *(_BYTE *)(v5 + 32);
  uint64_t v42 = v5 + 64;
  if (v9 < 64) {
    uint64_t v10 = ~(-1LL << v9);
  }
  else {
    uint64_t v10 = -1LL;
  }
  unint64_t v11 = v10 & *(void *)(v5 + 64);
  char v40 = v3;
  int64_t v41 = (unint64_t)(v9 + 63) >> 6;
  uint64_t v12 = v7 + 64;
  Swift::Int result = swift_retain(v5);
  int64_t v14 = 0LL;
  while (1)
  {
    if (v11)
    {
      unint64_t v22 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      unint64_t v23 = v22 | (v14 << 6);
      goto LABEL_34;
    }

    int64_t v24 = v14 + 1;
    if (__OFADD__(v14, 1LL))
    {
LABEL_44:
      __break(1u);
LABEL_45:
      __break(1u);
      return result;
    }

    if (v24 >= v41) {
      break;
    }
    int64_t v25 = (void *)(v5 + 64);
    unint64_t v26 = *(void *)(v42 + 8 * v24);
    ++v14;
    if (!v26)
    {
      int64_t v14 = v24 + 1;
      if (v24 + 1 >= v41) {
        goto LABEL_36;
      }
      unint64_t v26 = *(void *)(v42 + 8 * v14);
      if (!v26)
      {
        int64_t v27 = v24 + 2;
        if (v27 >= v41)
        {
LABEL_36:
          swift_release(v5);
          uint64_t v3 = v40;
          if ((v43 & 1) == 0) {
            goto LABEL_43;
          }
          goto LABEL_39;
        }

        unint64_t v26 = *(void *)(v42 + 8 * v27);
        if (!v26)
        {
          while (1)
          {
            int64_t v14 = v27 + 1;
            if (__OFADD__(v27, 1LL)) {
              goto LABEL_45;
            }
            if (v14 >= v41) {
              goto LABEL_36;
            }
            unint64_t v26 = *(void *)(v42 + 8 * v14);
            ++v27;
            if (v26) {
              goto LABEL_33;
            }
          }
        }

        int64_t v14 = v27;
      }
    }

uint64_t sub_1CCAB0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  if (*(void *)(*v2 + 24) <= a1) {
    uint64_t v6 = a1;
  }
  else {
    uint64_t v6 = *(void *)(*v2 + 24);
  }
  sub_6C5C(&qword_2858E8);
  uint64_t v7 = static _DictionaryStorage.resize(original:capacity:move:)(v5, v6, a2);
  uint64_t v8 = v7;
  if (*(void *)(v5 + 16))
  {
    uint64_t v34 = v3;
    uint64_t v9 = 1LL << *(_BYTE *)(v5 + 32);
    int64_t v36 = (void *)(v5 + 64);
    if (v9 < 64) {
      uint64_t v10 = ~(-1LL << v9);
    }
    else {
      uint64_t v10 = -1LL;
    }
    unint64_t v11 = v10 & *(void *)(v5 + 64);
    int64_t v35 = (unint64_t)(v9 + 63) >> 6;
    uint64_t v12 = v7 + 64;
    uint64_t result = swift_retain(v5);
    int64_t v14 = 0LL;
    while (1)
    {
      if (v11)
      {
        unint64_t v17 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        unint64_t v18 = v17 | (v14 << 6);
      }

      else
      {
        int64_t v19 = v14 + 1;
        if (__OFADD__(v14, 1LL))
        {
LABEL_43:
          __break(1u);
LABEL_44:
          __break(1u);
          return result;
        }

        if (v19 >= v35) {
          goto LABEL_37;
        }
        unint64_t v20 = v36[v19];
        ++v14;
        if (!v20)
        {
          int64_t v14 = v19 + 1;
          if (v19 + 1 >= v35) {
            goto LABEL_37;
          }
          unint64_t v20 = v36[v14];
          if (!v20)
          {
            int64_t v21 = v19 + 2;
            if (v21 >= v35)
            {
LABEL_37:
              swift_release(v5);
              uint64_t v3 = v34;
              if ((a2 & 1) != 0)
              {
                uint64_t v33 = 1LL << *(_BYTE *)(v5 + 32);
                if (v33 >= 64) {
                  bzero(v36, ((unint64_t)(v33 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8LL);
                }
                else {
                  *int64_t v36 = -1LL << v33;
                }
                *(void *)(v5 + swift_weakDestroy(v0 + 16) = 0LL;
              }

              break;
            }

            unint64_t v20 = v36[v21];
            if (!v20)
            {
              while (1)
              {
                int64_t v14 = v21 + 1;
                if (__OFADD__(v21, 1LL)) {
                  goto LABEL_44;
                }
                if (v14 >= v35) {
                  goto LABEL_37;
                }
                unint64_t v20 = v36[v14];
                ++v21;
                if (v20) {
                  goto LABEL_24;
                }
              }
            }

            int64_t v14 = v21;
          }
        }

Swift::Int sub_1CCDAC(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  if (*(void *)(*v2 + 24) <= a1) {
    uint64_t v6 = a1;
  }
  else {
    uint64_t v6 = *(void *)(*v2 + 24);
  }
  sub_6C5C(&qword_285898);
  char v38 = a2;
  uint64_t v7 = static _DictionaryStorage.resize(original:capacity:move:)(v5, v6, a2);
  uint64_t v8 = v7;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_43;
  }
  uint64_t v9 = 1LL << *(_BYTE *)(v5 + 32);
  uint64_t v37 = v5 + 64;
  if (v9 < 64) {
    uint64_t v10 = ~(-1LL << v9);
  }
  else {
    uint64_t v10 = -1LL;
  }
  unint64_t v11 = v10 & *(void *)(v5 + 64);
  int64_t v35 = v3;
  int64_t v36 = (unint64_t)(v9 + 63) >> 6;
  uint64_t v12 = v7 + 64;
  Swift::Int result = swift_retain(v5);
  int64_t v14 = 0LL;
  while (1)
  {
    if (v11)
    {
      unint64_t v20 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      unint64_t v21 = v20 | (v14 << 6);
      goto LABEL_34;
    }

    int64_t v22 = v14 + 1;
    if (__OFADD__(v14, 1LL))
    {
LABEL_44:
      __break(1u);
LABEL_45:
      __break(1u);
      return result;
    }

    if (v22 >= v36) {
      break;
    }
    uint64_t v23 = (void *)(v5 + 64);
    unint64_t v24 = *(void *)(v37 + 8 * v22);
    ++v14;
    if (!v24)
    {
      int64_t v14 = v22 + 1;
      if (v22 + 1 >= v36) {
        goto LABEL_36;
      }
      unint64_t v24 = *(void *)(v37 + 8 * v14);
      if (!v24)
      {
        int64_t v25 = v22 + 2;
        if (v25 >= v36)
        {
LABEL_36:
          swift_release(v5);
          uint64_t v3 = v35;
          if ((v38 & 1) == 0) {
            goto LABEL_43;
          }
          goto LABEL_39;
        }

        unint64_t v24 = *(void *)(v37 + 8 * v25);
        if (!v24)
        {
          while (1)
          {
            int64_t v14 = v25 + 1;
            if (__OFADD__(v25, 1LL)) {
              goto LABEL_45;
            }
            if (v14 >= v36) {
              goto LABEL_36;
            }
            unint64_t v24 = *(void *)(v37 + 8 * v14);
            ++v25;
            if (v24) {
              goto LABEL_33;
            }
          }
        }

        int64_t v14 = v25;
      }
    }

Swift::Int sub_1CD0B4(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  if (*(void *)(*v2 + 24) <= a1) {
    uint64_t v6 = a1;
  }
  else {
    uint64_t v6 = *(void *)(*v2 + 24);
  }
  sub_6C5C(&qword_28D480);
  uint64_t v7 = static _DictionaryStorage.resize(original:capacity:move:)(v5, v6, a2);
  uint64_t v8 = v7;
  if (*(void *)(v5 + 16))
  {
    uint64_t v32 = v3;
    uint64_t v9 = 1LL << *(_BYTE *)(v5 + 32);
    uint64_t v34 = (void *)(v5 + 64);
    if (v9 < 64) {
      uint64_t v10 = ~(-1LL << v9);
    }
    else {
      uint64_t v10 = -1LL;
    }
    unint64_t v11 = v10 & *(void *)(v5 + 64);
    int64_t v33 = (unint64_t)(v9 + 63) >> 6;
    uint64_t v12 = v7 + 64;
    Swift::Int result = swift_retain(v5);
    int64_t v14 = 0LL;
    while (1)
    {
      if (v11)
      {
        unint64_t v16 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        unint64_t v17 = v16 | (v14 << 6);
      }

      else
      {
        int64_t v18 = v14 + 1;
        if (__OFADD__(v14, 1LL))
        {
LABEL_45:
          __break(1u);
LABEL_46:
          __break(1u);
          return result;
        }

        if (v18 >= v33) {
          goto LABEL_39;
        }
        unint64_t v19 = v34[v18];
        ++v14;
        if (!v19)
        {
          int64_t v14 = v18 + 1;
          if (v18 + 1 >= v33) {
            goto LABEL_39;
          }
          unint64_t v19 = v34[v14];
          if (!v19)
          {
            int64_t v20 = v18 + 2;
            if (v20 >= v33)
            {
LABEL_39:
              swift_release(v5);
              uint64_t v3 = v32;
              if ((a2 & 1) != 0)
              {
                uint64_t v31 = 1LL << *(_BYTE *)(v5 + 32);
                if (v31 >= 64) {
                  bzero(v34, ((unint64_t)(v31 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8LL);
                }
                else {
                  *uint64_t v34 = -1LL << v31;
                }
                *(void *)(v5 + swift_weakDestroy(v0 + 16) = 0LL;
              }

              break;
            }

            unint64_t v19 = v34[v20];
            if (!v19)
            {
              while (1)
              {
                int64_t v14 = v20 + 1;
                if (__OFADD__(v20, 1LL)) {
                  goto LABEL_46;
                }
                if (v14 >= v33) {
                  goto LABEL_39;
                }
                unint64_t v19 = v34[v14];
                ++v20;
                if (v19) {
                  goto LABEL_24;
                }
              }
            }

            int64_t v14 = v20;
          }
        }

Swift::Int sub_1CD3D4(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  if (*(void *)(*v2 + 24) <= a1) {
    uint64_t v6 = a1;
  }
  else {
    uint64_t v6 = *(void *)(*v2 + 24);
  }
  sub_6C5C(qword_28D300);
  uint64_t v7 = static _DictionaryStorage.resize(original:capacity:move:)(v5, v6, a2);
  uint64_t v8 = v7;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_43;
  }
  uint64_t v9 = 1LL << *(_BYTE *)(v5 + 32);
  uint64_t v37 = v3;
  uint64_t v38 = v5 + 64;
  if (v9 < 64) {
    uint64_t v10 = ~(-1LL << v9);
  }
  else {
    uint64_t v10 = -1LL;
  }
  unint64_t v11 = v10 & *(void *)(v5 + 64);
  int64_t v12 = (unint64_t)(v9 + 63) >> 6;
  uint64_t v13 = v7 + 64;
  Swift::Int result = swift_retain(v5);
  int64_t v15 = 0LL;
  while (1)
  {
    if (v11)
    {
      unint64_t v21 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      unint64_t v22 = v21 | (v15 << 6);
      goto LABEL_34;
    }

    int64_t v23 = v15 + 1;
    if (__OFADD__(v15, 1LL))
    {
LABEL_44:
      __break(1u);
LABEL_45:
      __break(1u);
      return result;
    }

    if (v23 >= v12) {
      break;
    }
    uint64_t v24 = (void *)(v5 + 64);
    unint64_t v25 = *(void *)(v38 + 8 * v23);
    ++v15;
    if (!v25)
    {
      int64_t v15 = v23 + 1;
      if (v23 + 1 >= v12) {
        goto LABEL_36;
      }
      unint64_t v25 = *(void *)(v38 + 8 * v15);
      if (!v25)
      {
        int64_t v26 = v23 + 2;
        if (v26 >= v12)
        {
LABEL_36:
          swift_release(v5);
          uint64_t v3 = v37;
          if ((a2 & 1) == 0) {
            goto LABEL_43;
          }
          goto LABEL_39;
        }

        unint64_t v25 = *(void *)(v38 + 8 * v26);
        if (!v25)
        {
          while (1)
          {
            int64_t v15 = v26 + 1;
            if (__OFADD__(v26, 1LL)) {
              goto LABEL_45;
            }
            if (v15 >= v12) {
              goto LABEL_36;
            }
            unint64_t v25 = *(void *)(v38 + 8 * v15);
            ++v26;
            if (v25) {
              goto LABEL_33;
            }
          }
        }

        int64_t v15 = v26;
      }
    }

unint64_t sub_1CD6A4(unint64_t result, uint64_t a2)
{
  int64_t v3 = result;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1LL << *(_BYTE *)(a2 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1LL << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    Swift::Int result = _HashTable.previousHole(before:)(result, a2 + 64, ~v5);
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1LL << v6)) != 0)
    {
      unint64_t v8 = (result + 1) & v7;
      do
      {
        uint64_t v10 = (uint64_t *)(*(void *)(a2 + 48) + 16 * v6);
        uint64_t v11 = *v10;
        uint64_t v12 = v10[1];
        Hasher.init(_seed:)(v27, *(void *)(a2 + 40));
        swift_bridgeObjectRetain(v12);
        String.hash(into:)(v27, v11, v12);
        Swift::Int v13 = Hasher._finalize()();
        Swift::Int result = swift_bridgeObjectRelease(v12);
        unint64_t v14 = v13 & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v14 < v8) {
            goto LABEL_5;
          }
        }

        else if (v14 >= v8)
        {
          goto LABEL_11;
        }

        if (v3 >= (uint64_t)v14)
        {
LABEL_11:
          uint64_t v15 = *(void *)(a2 + 48);
          uint64_t v16 = (_OWORD *)(v15 + 16 * v3);
          unint64_t v17 = (_OWORD *)(v15 + 16 * v6);
          if (v3 != v6 || v16 >= v17 + 1) {
            *uint64_t v16 = *v17;
          }
          uint64_t v18 = *(void *)(a2 + 56);
          unint64_t v19 = (_OWORD *)(v18 + 32 * v3);
          uint64_t v20 = (_OWORD *)(v18 + 32 * v6);
          if (v3 != v6 || (int64_t v3 = v6, v19 >= v20 + 2))
          {
            __int128 v9 = v20[1];
            *unint64_t v19 = *v20;
            v19[1] = v9;
            int64_t v3 = v6;
          }
        }

void sub_1CD878(uint64_t a1, uint64_t a2)
{
  __asm { BR              X10 }

uint64_t sub_1CD8D8()
{
  uint64_t v3 = *(void *)(v1 - 152);
  uint64_t v2 = *(void *)(v1 - 144);
  uint64_t v4 = *(void **)(v1 - 136);
  sub_45D94(v0, (uint64_t)&v12);
  if (v15) {
    goto LABEL_14;
  }
  uint64_t v5 = v14;
  if (!v2)
  {
    if (v13) {
      goto LABEL_14;
    }
    goto LABEL_9;
  }

  if (!v13) {
    goto LABEL_14;
  }
  if (v3 == v12 && v2 == v13 || (char v6 = _stringCompareWithSmolCheck(_:_:expecting:)(v3, v2), v7 = 0, (v6 & 1) != 0))
  {
LABEL_9:
    if (v4)
    {
      if (v5)
      {
        sub_1641C(0LL, (unint64_t *)&qword_286618, &OBJC_CLASS___INIntent_ptr);
        id v8 = v4;
        id v9 = v5;
        char v10 = static NSObject.== infix(_:_:)(v8, v9);

        if ((v10 & 1) != 0) {
          goto LABEL_16;
        }
      }
    }

    else if (!v5)
    {
LABEL_16:
      char v7 = 1;
      return v7 & 1;
    }

id sub_1CDDB8(uint64_t a1, unint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for Logger(0LL);
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  id v9 = (char *)&v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  if (qword_283888 != -1) {
    swift_once(&qword_283888, sub_BFC5C);
  }
  uint64_t v10 = sub_6960(v6, (uint64_t)qword_2969C8);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, v10, v6);
  swift_bridgeObjectRetain_n(a3, 2LL);
  uint64_t v11 = swift_bridgeObjectRetain_n(a2, 2LL);
  uint64_t v12 = (os_log_s *)Logger.logObject.getter(v11);
  int v13 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v12, (os_log_type_t)v13))
  {
    int v29 = v13;
    uint64_t v30 = v7;
    uint64_t v14 = swift_slowAlloc(22LL, -1LL);
    uint64_t v28 = swift_slowAlloc(64LL, -1LL);
    uint64_t v33 = v28;
    *(_DWORD *)uint64_t v14 = 136315394;
    swift_bridgeObjectRetain(a2);
    uint64_t v31 = a1;
    uint64_t v32 = sub_6978(a1, a2, &v33);
    char v27 = &v33;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v32, &v33);
    swift_bridgeObjectRelease_n(a2, 3LL);
    *(_WORD *)(v14 + 1sub_6C3C(v0 + 2) = 2080;
    unint64_t v15 = a3;
    if (!a3) {
      unint64_t v15 = sub_74D54((uint64_t)_swiftEmptyArrayStorage);
    }
    uint64_t v26 = v14 + 14;
    swift_bridgeObjectRetain(a3);
    uint64_t v16 = Dictionary.description.getter( v15,  &type metadata for String,  (char *)&type metadata for Any + 8,  &protocol witness table for String);
    unint64_t v18 = v17;
    swift_bridgeObjectRelease(v15);
    uint64_t v32 = sub_6978(v16, v18, &v33);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v32, v27);
    swift_bridgeObjectRelease_n(a3, 2LL);
    swift_bridgeObjectRelease(v18);
    _os_log_impl( &dword_0,  v12,  (os_log_type_t)v29,  "Building direct invocation payload with identifier: %s, userData: %s",  (uint8_t *)v14,  0x16u);
    uint64_t v19 = v28;
    swift_arrayDestroy(v28, 2LL, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v19, -1LL, -1LL);
    swift_slowDealloc(v14, -1LL, -1LL);

    (*(void (**)(char *, uint64_t))(v30 + 8))(v9, v6);
  }

  else
  {

    swift_bridgeObjectRelease_n(a3, 2LL);
    swift_bridgeObjectRelease_n(a2, 2LL);
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  }

  id v20 = objc_allocWithZone(&OBJC_CLASS___SKIDirectInvocationPayload);
  swift_bridgeObjectRetain(a2);
  NSString v21 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(a2);
  id v22 = [v20 initWithIdentifier:v21];

  if (a3)
  {
    uint64_t v23 = sub_2607C(a3);
    v24.super.Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease(v23);
  }

  else
  {
    v24.super.Class isa = 0LL;
  }

  [v22 setUserData:v24.super.isa];

  return v22;
}

double sub_1CE138@<D0>(unint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = type metadata accessor for Logger(0LL);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)v30 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  if (qword_283888 != -1) {
    swift_once(&qword_283888, sub_BFC5C);
  }
  uint64_t v8 = sub_6960(v4, (uint64_t)qword_2969C8);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, v8, v4);
  uint64_t v9 = swift_bridgeObjectRetain_n(a1, 2LL);
  uint64_t v10 = (void *)Logger.logObject.getter(v9);
  os_log_type_t v11 = static os_log_type_t.default.getter();
  if (!os_log_type_enabled((os_log_t)v10, v11))
  {

    swift_bridgeObjectRelease_n(a1, 2LL);
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    if (a1) {
      goto LABEL_7;
    }
LABEL_18:
    unint64_t v22 = 0LL;
    uint64_t v21 = 0LL;
    goto LABEL_23;
  }

  uint64_t v32 = v5;
  uint64_t v33 = a2;
  uint64_t v12 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
  uint64_t v31 = swift_slowAlloc(32LL, -1LL);
  v36[0] = v31;
  *(_DWORD *)uint64_t v12 = 136315138;
  unint64_t v13 = a1;
  if (!a1) {
    unint64_t v13 = sub_74D54((uint64_t)&_swiftEmptyArrayStorage);
  }
  v30[1] = v12 + 4;
  swift_bridgeObjectRetain(a1);
  uint64_t v14 = Dictionary.description.getter( v13,  &type metadata for String,  (char *)&type metadata for Any + 8,  &protocol witness table for String);
  unint64_t v16 = v15;
  swift_bridgeObjectRelease(v13);
  uint64_t v34 = sub_6978(v14, v16, v36);
  UnsafeMutableRawBufferPointer.copyMemory(from:)(&v34, &v35);
  swift_bridgeObjectRelease_n(a1, 2LL);
  swift_bridgeObjectRelease(v16);
  _os_log_impl(&dword_0, (os_log_t)v10, v11, "Parsing replay request data with user data: %s", v12, 0xCu);
  uint64_t v17 = v31;
  swift_arrayDestroy(v31, 1LL, (char *)&type metadata for Any + 8);
  swift_slowDealloc(v17, -1LL, -1LL);
  swift_slowDealloc(v12, -1LL, -1LL);

  (*(void (**)(char *, uint64_t))(v32 + 8))(v7, v4);
  a2 = v33;
  if (!a1) {
    goto LABEL_18;
  }
LABEL_7:
  if (!*(void *)(a1 + 16) || (unint64_t v18 = sub_9A744(0x6C646E7542707061LL, 0xEB00000000644965LL), (v19 & 1) == 0))
  {
    uint64_t v21 = 0LL;
    unint64_t v22 = 0LL;
    if (*(void *)(a1 + 16)) {
      goto LABEL_20;
    }
LABEL_23:
    uint64_t v29 = 0LL;
    goto LABEL_24;
  }

  sub_6C00(*(void *)(a1 + 56) + 32 * v18, (uint64_t)v36);
  int v20 = swift_dynamicCast(&v34, v36, (char *)&type metadata for Any + 8, &type metadata for String, 6LL);
  if (v20) {
    uint64_t v21 = v34;
  }
  else {
    uint64_t v21 = 0LL;
  }
  if (v20) {
    unint64_t v22 = v35;
  }
  else {
    unint64_t v22 = 0LL;
  }
  if (!*(void *)(a1 + 16)) {
    goto LABEL_23;
  }
LABEL_20:
  unint64_t v23 = sub_9A744(0x746E65746E69LL, 0xE600000000000000LL);
  if ((v24 & 1) == 0) {
    goto LABEL_23;
  }
  sub_6C00(*(void *)(a1 + 56) + 32 * v23, (uint64_t)v36);
  uint64_t v25 = v34;
  unint64_t v26 = v35;
  sub_1641C(0LL, &qword_28D490, &OBJC_CLASS___NSKeyedUnarchiver_ptr);
  uint64_t v27 = sub_1641C(0LL, (unint64_t *)&qword_286618, &OBJC_CLASS___INIntent_ptr);
  uint64_t v29 = static NSKeyedUnarchiver.unarchivedObject<A>(ofClass:from:)(v27, v25, v26, v27);
  sub_925A4(v25, v26);
LABEL_24:
  *(void *)a2 = v21;
  *(void *)(a2 + 8) = v22;
  *(void *)(a2 + swift_weakDestroy(v0 + 16) = v29;
  double result = 0.0;
  *(_OWORD *)(a2 + 24) = 0u;
  *(_OWORD *)(a2 + 40) = 0u;
  *(_BYTE *)(a2 + 56) = 0;
  return result;
}

double sub_1CE524@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  if (!a1) {
    goto LABEL_6;
  }
  uint64_t v4 = *(void *)(a1 + 16);
  if (!v4)
  {
LABEL_7:
    uint64_t v8 = 0LL;
    goto LABEL_8;
  }

  unint64_t v5 = sub_9A744(0x6C646E7542707061LL, 0xEB00000000644965LL);
  if ((v6 & 1) == 0)
  {
LABEL_6:
    uint64_t v4 = 0LL;
    goto LABEL_7;
  }

  sub_6C00(*(void *)(a1 + 56) + 32 * v5, (uint64_t)v11);
  int v7 = swift_dynamicCast(v10, v11, (char *)&type metadata for Any + 8, &type metadata for String, 6LL);
  uint64_t v4 = v10[0];
  uint64_t v8 = v10[1];
  if (!v7)
  {
    uint64_t v4 = 0LL;
    uint64_t v8 = 0LL;
  }

unint64_t sub_1CE5E4(Swift::String string)
{
  object = string._object;
  v2._uint64_t countAndFlagsBits = string._countAndFlagsBits;
  v2._object = object;
  unint64_t v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_269E10, v2);
  swift_bridgeObjectRelease(object);
  if (v3 >= 4) {
    return 4LL;
  }
  else {
    return v3;
  }
}

double sub_1CE62C@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = type metadata accessor for Logger(0LL);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = __chkstk_darwin(v4);
  uint64_t v8 = (char *)v37 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v6);
  uint64_t v10 = (char *)v37 - v9;
  if (a1
    && *(void *)(a1 + 16)
    && (unint64_t v11 = sub_9A744(0x6E6F74747562LL, 0xE600000000000000LL), (v12 & 1) != 0)
    && (sub_6C00(*(void *)(a1 + 56) + 32 * v11, (uint64_t)v42),
        (swift_dynamicCast(&v40, v42, (char *)&type metadata for Any + 8, &type metadata for String, 6LL) & 1) != 0))
  {
    uint64_t v14 = v40;
    unint64_t v13 = v41;
    swift_bridgeObjectRetain(v41);
    v43._uint64_t countAndFlagsBits = v14;
    v43._object = v13;
    unsigned __int8 v15 = sub_1CE5E4(v43);
    if (v15 != 4)
    {
      unsigned __int8 v36 = v15;
      swift_bridgeObjectRelease(v13);
      uint64_t v33 = v36;
      char v34 = 2;
      goto LABEL_16;
    }

    if (qword_283888 != -1) {
      swift_once(&qword_283888, sub_BFC5C);
    }
    uint64_t v16 = sub_6960(v4, (uint64_t)qword_2969C8);
    (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v10, v16, v4);
    uint64_t v17 = swift_bridgeObjectRetain(v13);
    unint64_t v18 = (os_log_s *)Logger.logObject.getter(v17);
    os_log_type_t v19 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v18, v19))
    {
      int v20 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
      uint64_t v21 = swift_slowAlloc(32LL, -1LL);
      uint64_t v39 = v4;
      uint64_t v22 = v21;
      v42[0] = v21;
      uint64_t v38 = v5;
      *(_DWORD *)int v20 = 136315138;
      v37[1] = v20 + 4;
      swift_bridgeObjectRetain(v13);
      uint64_t v40 = sub_6978(v14, (unint64_t)v13, v42);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v40, &v41);
      swift_bridgeObjectRelease_n(v13, 3LL);
      _os_log_impl( &dword_0,  v18,  v19,  "DirectInvocationUseCase#parseButtonPress unrecognized buttonPressed value: %s",  v20,  0xCu);
      swift_arrayDestroy(v22, 1LL, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v22, -1LL, -1LL);
      swift_slowDealloc(v20, -1LL, -1LL);

      (*(void (**)(char *, uint64_t))(v38 + 8))(v10, v39);
    }

    else
    {

      swift_bridgeObjectRelease_n(v13, 2LL);
      (*(void (**)(char *, uint64_t))(v5 + 8))(v10, v4);
    }
  }

  else
  {
    if (qword_283888 != -1) {
      swift_once(&qword_283888, sub_BFC5C);
    }
    uint64_t v23 = sub_6960(v4, (uint64_t)qword_2969C8);
    (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v8, v23, v4);
    uint64_t v24 = swift_bridgeObjectRetain_n(a1, 2LL);
    uint64_t v25 = (os_log_s *)Logger.logObject.getter(v24);
    os_log_type_t v26 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v25, v26))
    {
      uint64_t v27 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
      uint64_t v28 = swift_slowAlloc(32LL, -1LL);
      v42[0] = v28;
      uint64_t v38 = v5;
      uint64_t v39 = v4;
      *(_DWORD *)uint64_t v27 = 136315138;
      uint64_t v40 = a1;
      swift_bridgeObjectRetain(a1);
      uint64_t v29 = sub_6C5C(&qword_28D488);
      uint64_t v30 = String.init<A>(describing:)(&v40, v29);
      unint64_t v32 = v31;
      uint64_t v40 = sub_6978(v30, v31, v42);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v40, &v41);
      swift_bridgeObjectRelease_n(a1, 2LL);
      swift_bridgeObjectRelease(v32);
      _os_log_impl( &dword_0,  v25,  v26,  "DirectInvocationUseCase#parseButtonPress invalid user data for buttonPress: %s",  v27,  0xCu);
      swift_arrayDestroy(v28, 1LL, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v28, -1LL, -1LL);
      swift_slowDealloc(v27, -1LL, -1LL);

      (*(void (**)(char *, uint64_t))(v38 + 8))(v8, v39);
    }

    else
    {

      swift_bridgeObjectRelease_n(a1, 2LL);
      (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
    }
  }

  uint64_t v33 = 0LL;
  char v34 = -1;
LABEL_16:
  *(void *)a2 = v33;
  double result = 0.0;
  *(_OWORD *)(a2 + 8) = 0u;
  *(_OWORD *)(a2 + 24) = 0u;
  *(_OWORD *)(a2 + 40) = 0u;
  *(_BYTE *)(a2 + 56) = v34;
  return result;
}

double sub_1CEAB4@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  if (a1
    && *(void *)(a1 + 16)
    && (unint64_t v4 = sub_9A744(0x64496D657469LL, 0xE600000000000000LL), (v5 & 1) != 0)
    && (sub_6C00(*(void *)(a1 + 56) + 32 * v4, (uint64_t)v11),
        (swift_dynamicCast(v10, v11, (char *)&type metadata for Any + 8, &type metadata for String, 6LL) & 1) != 0))
  {
    uint64_t v6 = v10[0];
    uint64_t v7 = v10[1];
    char v8 = 3;
  }

  else
  {
    uint64_t v6 = 0LL;
    uint64_t v7 = 0LL;
    char v8 = -1;
  }

  *(void *)a2 = v6;
  *(void *)(a2 + 8) = v7;
  double result = 0.0;
  *(_OWORD *)(a2 + swift_weakDestroy(v0 + 16) = 0u;
  *(_OWORD *)(a2 + 3sub_6C3C(v0 + 2) = 0u;
  *(void *)(a2 + 48) = 0LL;
  *(_BYTE *)(a2 + 56) = v8;
  return result;
}

uint64_t sub_1CEB64@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = type metadata accessor for Logger(0LL);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = __chkstk_darwin(v4);
  uint64_t result = __chkstk_darwin(v6);
  uint64_t v9 = (char *)v48 - v8;
  if (!a1)
  {
    unint64_t v16 = 0LL;
    uint64_t v17 = 0LL;
    id v18 = 0LL;
    uint64_t v19 = 0LL;
    unint64_t v20 = 0LL;
LABEL_46:
    uint64_t v43 = 0LL;
    goto LABEL_47;
  }

  if (!*(void *)(a1 + 16)
    || (uint64_t result = sub_9A744(0x7078456F69647561LL, 0xEF65636E65697265LL), (v10 & 1) == 0)
    || (sub_6C00(*(void *)(a1 + 56) + 32 * result, (uint64_t)v58),
        uint64_t result = swift_dynamicCast(&v56, v58, (char *)&type metadata for Any + 8, &type metadata for Data, 6LL),
        (result & 1) == 0))
  {
LABEL_13:
    id v18 = 0LL;
    if (!*(void *)(a1 + 16)) {
      goto LABEL_32;
    }
LABEL_14:
    uint64_t result = sub_9A744(0x656D616E656C6966LL, 0xE800000000000000LL);
    if ((v38 & 1) != 0)
    {
      sub_6C00(*(void *)(a1 + 56) + 32 * result, (uint64_t)v58);
      uint64_t result = swift_dynamicCast(&v56, v58, (char *)&type metadata for Any + 8, &type metadata for String, 6LL);
      if ((_DWORD)result) {
        uint64_t v19 = v56;
      }
      else {
        uint64_t v19 = 0LL;
      }
      if ((_DWORD)result) {
        unint64_t v20 = v57;
      }
      else {
        unint64_t v20 = 0LL;
      }
      if (!*(void *)(a1 + 16)) {
        goto LABEL_42;
      }
      goto LABEL_33;
    }

LABEL_42:
    uint64_t v17 = 0LL;
    unint64_t v16 = 0LL;
    uint64_t v43 = *(void *)(a1 + 16);
    if (!v43)
    {
LABEL_47:
      unint64_t v45 = 0LL;
LABEL_48:
      *(void *)a2 = v18;
      *(void *)(a2 + 8) = v19;
      *(void *)(a2 + swift_weakDestroy(v0 + 16) = v20;
      *(void *)(a2 + 24) = v17;
      *(void *)(a2 + 3sub_6C3C(v0 + 2) = v16;
      *(void *)(a2 + 40) = v43;
      *(void *)(a2 + 48) = v45;
      *(_BYTE *)(a2 + 56) = 4;
      return result;
    }

    goto LABEL_43;
  }

  uint64_t v54 = v4;
  uint64_t v55 = v5;
  uint64_t v12 = v56;
  unint64_t v11 = v57;
  sub_1641C(0LL, &qword_28D490, &OBJC_CLASS___NSKeyedUnarchiver_ptr);
  uint64_t v13 = sub_6C5C(&qword_28D498);
  uint64_t v14 = swift_allocObject(v13, 48LL, 7LL);
  *(_OWORD *)(v14 + swift_weakDestroy(v0 + 16) = xmmword_2160E0;
  *(void *)(v14 + 3sub_6C3C(v0 + 2) = sub_1641C(0LL, &qword_28D4A0, &OBJC_CLASS___NSArray_ptr);
  uint64_t v15 = type metadata accessor for AudioExperience(0LL);
  *(void *)(v14 + 40) = v15;
  static NSKeyedUnarchiver.unarchivedObject(ofClasses:from:)(v58, v14, v12, v11);
  unint64_t v52 = v11;
  uint64_t v53 = v12;
  swift_bridgeObjectRelease(v14);
  if (!v58[3])
  {
    sub_925A4(v53, v52);
    uint64_t result = sub_2E888((uint64_t)v58);
    goto LABEL_13;
  }

  uint64_t v21 = sub_6C5C(&qword_28D4A8);
  if ((swift_dynamicCast(&v56, v58, (char *)&type metadata for Any + 8, v21, 6LL) & 1) == 0)
  {
    uint64_t result = sub_925A4(v53, v52);
    goto LABEL_13;
  }

  uint64_t v22 = v56;
  if (qword_283888 != -1) {
    swift_once(&qword_283888, sub_BFC5C);
  }
  uint64_t v23 = v54;
  uint64_t v24 = sub_6960(v54, (uint64_t)qword_2969C8);
  uint64_t v25 = v55;
  (*(void (**)(char *, uint64_t, uint64_t))(v55 + 16))(v9, v24, v23);
  uint64_t v26 = swift_bridgeObjectRetain_n(v22, 2LL);
  uint64_t v27 = (os_log_s *)Logger.logObject.getter(v26);
  os_log_type_t v28 = static os_log_type_t.debug.getter();
  int v29 = v28;
  if (os_log_type_enabled(v27, v28))
  {
    uint64_t v30 = swift_slowAlloc(12LL, -1LL);
    int v51 = v29;
    unint64_t v31 = (uint8_t *)v30;
    uint64_t v50 = swift_slowAlloc(32LL, -1LL);
    v58[0] = v50;
    *(_DWORD *)unint64_t v31 = 136315138;
    v48[1] = v31 + 4;
    NSString v49 = v31;
    uint64_t v32 = swift_bridgeObjectRetain(v22);
    uint64_t v33 = Array.description.getter(v32, v15);
    unint64_t v35 = v34;
    swift_bridgeObjectRelease(v22);
    uint64_t v56 = sub_6978(v33, v35, v58);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v56, &v57);
    swift_bridgeObjectRelease_n(v22, 2LL);
    swift_bridgeObjectRelease(v35);
    unsigned __int8 v36 = v49;
    _os_log_impl(&dword_0, v27, (os_log_type_t)v51, "PlayMediaShim audioExperience %s", v49, 0xCu);
    uint64_t v37 = v50;
    swift_arrayDestroy(v50, 1LL, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v37, -1LL, -1LL);
    swift_slowDealloc(v36, -1LL, -1LL);
  }

  else
  {

    swift_bridgeObjectRelease_n(v22, 2LL);
  }

  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v25 + 8))(v9, v23);
  unint64_t v39 = v52;
  uint64_t v40 = v53;
  if (!((unint64_t)v22 >> 62))
  {
    goto LABEL_53;
  }

  if (v22 < 0) {
    uint64_t v46 = v22;
  }
  else {
    uint64_t v46 = v22 & 0xFFFFFFFFFFFFFF8LL;
  }
  swift_bridgeObjectRetain(v22);
  uint64_t v47 = _CocoaArrayWrapper.endIndex.getter(v46);
  uint64_t result = swift_bridgeObjectRelease(v22);
  if (!v47)
  {
LABEL_53:
    sub_925A4(v40, v39);
    uint64_t result = swift_bridgeObjectRelease(v22);
    goto LABEL_13;
  }

uint64_t sub_1CF340@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = type metadata accessor for Parse.DirectInvocation(0LL);
  uint64_t v70 = *(void *)(v4 - 8);
  *(void *)&__int128 v71 = v4;
  uint64_t v5 = __chkstk_darwin(v4);
  uint64_t v7 = (char *)v66 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v5);
  uint64_t v9 = (char *)v66 - v8;
  uint64_t v10 = type metadata accessor for Logger(0LL);
  *(void *)&__int128 v72 = *(void *)(v10 - 8);
  uint64_t v11 = __chkstk_darwin(v10);
  uint64_t v13 = (char *)v66 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v14 = __chkstk_darwin(v11);
  unint64_t v16 = (char *)v66 - v15;
  uint64_t v18 = Parse.DirectInvocation.identifier.getter(v14);
  unint64_t v19 = v17;
  if (v18 == 0xD000000000000033LL && v17 == 0x8000000000223640LL)
  {
    unint64_t v20 = 0x8000000000223640LL;
LABEL_6:
    uint64_t v21 = swift_bridgeObjectRelease(v20);
    uint64_t v22 = Parse.DirectInvocation.userData.getter(v21);
    sub_1CE138(v22, (uint64_t)v74);
LABEL_7:
    __int128 v71 = v74[0];
    __int128 v72 = v74[1];
    uint64_t v23 = v75;
    uint64_t v24 = v76;
    uint64_t v25 = v77;
    char v26 = v78;
    uint64_t result = swift_bridgeObjectRelease(v22);
    __int128 v28 = v71;
    __int128 v29 = v72;
    goto LABEL_8;
  }

  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0xD000000000000033LL, 0x8000000000223640LL) & 1) != 0)
  {
    unint64_t v20 = v19;
    goto LABEL_6;
  }

  if (v18 == 0xD00000000000002CLL && v19 == 0x800000000021CFC0LL)
  {
    unint64_t v30 = 0x800000000021CFC0LL;
LABEL_14:
    uint64_t v31 = swift_bridgeObjectRelease(v30);
    uint64_t v22 = Parse.DirectInvocation.userData.getter(v31);
    sub_1CE524(v22, (uint64_t)v74);
    goto LABEL_7;
  }

  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0xD00000000000002CLL, 0x800000000021CFC0LL) & 1) != 0)
  {
    unint64_t v30 = v19;
    goto LABEL_14;
  }

  if (v18 == 0xD000000000000031LL && v19 == 0x8000000000223600LL)
  {
    unint64_t v32 = 0x8000000000223600LL;
LABEL_20:
    uint64_t v33 = swift_bridgeObjectRelease(v32);
    uint64_t v22 = Parse.DirectInvocation.userData.getter(v33);
    sub_1CE62C(v22, (uint64_t)v74);
    goto LABEL_7;
  }

  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0xD000000000000031LL, 0x8000000000223600LL) & 1) != 0)
  {
    unint64_t v32 = v19;
    goto LABEL_20;
  }

  if (v18 == 0xD000000000000034LL && v19 == 0x800000000021D8A0LL)
  {
    unint64_t v34 = 0x800000000021D8A0LL;
LABEL_26:
    uint64_t v35 = swift_bridgeObjectRelease(v34);
    uint64_t v22 = Parse.DirectInvocation.userData.getter(v35);
    sub_1CEAB4(v22, (uint64_t)v74);
    goto LABEL_7;
  }

  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0xD000000000000034LL, 0x800000000021D8A0LL) & 1) != 0)
  {
    unint64_t v34 = v19;
    goto LABEL_26;
  }

  if (v18 == 0xD000000000000029LL && v19 == 0x8000000000223590LL)
  {
    swift_bridgeObjectRelease(0x8000000000223590LL);
    uint64_t v36 = v10;
LABEL_31:
    uint64_t v38 = v72;
    if (qword_283888 != -1) {
      swift_once(&qword_283888, sub_BFC5C);
    }
    uint64_t v39 = sub_6960(v36, (uint64_t)qword_2969C8);
    (*(void (**)(char *, uint64_t, uint64_t))(v38 + 16))(v16, v39, v36);
    uint64_t v40 = v70;
    uint64_t v41 = v71;
    uint64_t v42 = (*(uint64_t (**)(char *, uint64_t, void))(v70 + 16))(v9, a1, v71);
    uint64_t v43 = (os_log_s *)Logger.logObject.getter(v42);
    os_log_type_t v44 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v43, v44))
    {
      unint64_t v45 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
      uint64_t v68 = swift_slowAlloc(32LL, -1LL);
      *(void *)&v74[0] = v68;
      *(_DWORD *)unint64_t v45 = 136315138;
      v66[1] = v45 + 4;
      uint64_t v67 = v45;
      uint64_t v73 = ((uint64_t (*)(void))Parse.DirectInvocation.userData.getter)();
      uint64_t v46 = sub_6C5C(&qword_28D488);
      uint64_t v69 = v36;
      uint64_t v47 = String.init<A>(describing:)(&v73, v46);
      unint64_t v49 = v48;
      uint64_t v73 = sub_6978(v47, v48, (uint64_t *)v74);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v73, v74);
      swift_bridgeObjectRelease(v49);
      (*(void (**)(char *, void))(v40 + 8))(v9, v71);
      uint64_t v50 = v67;
      _os_log_impl(&dword_0, v43, v44, "DirectInvocationUseCase#from shim: %s", v67, 0xCu);
      uint64_t v51 = v68;
      swift_arrayDestroy(v68, 1LL, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v51, -1LL, -1LL);
      swift_slowDealloc(v50, -1LL, -1LL);

      uint64_t v52 = (*(uint64_t (**)(char *, uint64_t))(v72 + 8))(v16, v69);
    }

    else
    {
      (*(void (**)(char *, uint64_t))(v40 + 8))(v9, v41);

      uint64_t v52 = (*(uint64_t (**)(char *, uint64_t))(v72 + 8))(v16, v36);
    }

    uint64_t v22 = Parse.DirectInvocation.userData.getter(v52);
    sub_1CEB64(v22, (uint64_t)v74);
    goto LABEL_7;
  }

  char v37 = _stringCompareWithSmolCheck(_:_:expecting:)(0xD000000000000029LL, 0x8000000000223590LL);
  swift_bridgeObjectRelease(v19);
  uint64_t v36 = v10;
  if ((v37 & 1) != 0) {
    goto LABEL_31;
  }
  uint64_t v53 = v72;
  if (qword_283888 != -1) {
    swift_once(&qword_283888, sub_BFC5C);
  }
  uint64_t v54 = sub_6960(v10, (uint64_t)qword_2969C8);
  (*(void (**)(char *, uint64_t, uint64_t))(v53 + 16))(v13, v54, v10);
  uint64_t v56 = v70;
  uint64_t v55 = v71;
  uint64_t v57 = (*(uint64_t (**)(char *, uint64_t, void))(v70 + 16))(v7, a1, v71);
  unint64_t v58 = (os_log_s *)Logger.logObject.getter(v57);
  os_log_type_t v59 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v58, v59))
  {
    uint64_t v60 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
    uint64_t v61 = swift_slowAlloc(32LL, -1LL);
    uint64_t v69 = v61;
    *(void *)&v74[0] = v61;
    *(_DWORD *)uint64_t v60 = 136315138;
    uint64_t v68 = (uint64_t)(v60 + 4);
    uint64_t v62 = Parse.DirectInvocation.identifier.getter(v61);
    unint64_t v64 = v63;
    uint64_t v73 = sub_6978(v62, v63, (uint64_t *)v74);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v73, v74);
    swift_bridgeObjectRelease(v64);
    (*(void (**)(char *, uint64_t))(v70 + 8))(v7, v55);
    _os_log_impl(&dword_0, v58, v59, "DirectInvocationUseCase#from unsupported identifier: %s", v60, 0xCu);
    uint64_t v65 = v69;
    swift_arrayDestroy(v69, 1LL, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v65, -1LL, -1LL);
    swift_slowDealloc(v60, -1LL, -1LL);

    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v72 + 8))(v13, v36);
  }

  else
  {
    (*(void (**)(char *, uint64_t))(v56 + 8))(v7, v55);

    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v53 + 8))(v13, v36);
  }

  uint64_t v23 = 0LL;
  uint64_t v24 = 0LL;
  uint64_t v25 = 0LL;
  __int128 v28 = 0uLL;
  char v26 = -1;
  __int128 v29 = 0uLL;
LABEL_8:
  *(_OWORD *)a2 = v28;
  *(_OWORD *)(a2 + swift_weakDestroy(v0 + 16) = v29;
  *(void *)(a2 + 3sub_6C3C(v0 + 2) = v23;
  *(void *)(a2 + 40) = v24;
  *(void *)(a2 + 48) = v25;
  *(_BYTE *)(a2 + 56) = v26;
  return result;
}

uint64_t storeEnumTagSinglePayload for DirectButton(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    LODWORD(v4) = 1;
  }
  else {
    LODWORD(v4) = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v4 = v4;
  }
  else {
    uint64_t v4 = 0LL;
  }
  if (a2 <= 0xFC) {
    return ((uint64_t (*)(void))((char *)&loc_1CFA80 + 4 * byte_21AF02[v4]))();
  }
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_1CFAB4 + 4 * byte_21AEFD[v4]))();
}

uint64_t sub_1CFAB4(uint64_t result)
{
  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1CFABC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2) {
    JUMPOUT(0x1CFAC4LL);
  }
  return result;
}

uint64_t sub_1CFAD0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2) {
    JUMPOUT(0x1CFAD8LL);
  }
  *(_BYTE *)uint64_t result = a2 + 3;
  return result;
}

uint64_t sub_1CFADC(uint64_t result)
{
  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1CFAE4(uint64_t result)
{
  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for DirectButton()
{
  return &type metadata for DirectButton;
}

unint64_t sub_1CFB04()
{
  unint64_t result = qword_28D4B0;
  if (!qword_28D4B0)
  {
    unint64_t result = swift_getWitnessTable(&unk_21AFF8, &type metadata for DirectButton);
    atomic_store(result, (unint64_t *)&qword_28D4B0);
  }

  return result;
}

uint64_t sub_1CFB48(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v6 = v5;
  uint64_t v40 = a4;
  uint64_t v41 = a2;
  uint64_t v10 = type metadata accessor for Logger(0LL);
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)&v36 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v14 = swift_bridgeObjectRetain(a1);
  int v15 = IsAppleInternalBuild(v14);
  uint64_t v42 = a3;
  if (v15)
  {
    id v16 = objc_allocWithZone(&OBJC_CLASS___NSUserDefaults);
    NSString v17 = String._bridgeToObjectiveC()();
    id v18 = [v16 initWithSuiteName:v17];

    if (v18)
    {
      NSString v19 = String._bridgeToObjectiveC()();
      id v20 = [v18 stringForKey:v19];

      if (v20)
      {
        uint64_t v21 = static String._unconditionallyBridgeFromObjectiveC(_:)(v20);
        unint64_t v23 = v22;

        unint64_t v45 = &type metadata for String;
        uint64_t v39 = v21;
        *(void *)&__int128 v44 = v21;
        *((void *)&v44 + 1) = v23;
        swift_bridgeObjectRetain(v23);
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(a1);
        uint64_t v43 = a1;
        sub_1E1E1C(&v44, 0xD000000000000012LL, 0x8000000000223780LL, isUniquelyReferenced_nonNull_native, v46);
        a1 = v43;
        swift_bridgeObjectRelease(0x8000000000000000LL);
        sub_1F6CC((uint64_t)v46, &qword_284028);
        if (qword_283888 != -1) {
          swift_once(&qword_283888, sub_BFC5C);
        }
        uint64_t v25 = sub_6960(v10, (uint64_t)qword_2969C8);
        (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v13, v25, v10);
        uint64_t v26 = swift_bridgeObjectRetain(v23);
        uint64_t v27 = (os_log_s *)Logger.logObject.getter(v26);
        os_log_type_t v28 = static os_log_type_t.debug.getter();
        if (os_log_type_enabled(v27, v28))
        {
          __int128 v29 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
          uint64_t v38 = swift_slowAlloc(32LL, -1LL);
          *(void *)&v46[0] = v38;
          char v37 = v29;
          *(_DWORD *)__int128 v29 = 136315138;
          uint64_t v36 = v29 + 4;
          swift_bridgeObjectRetain(v23);
          *(void *)&__int128 v44 = sub_6978(v39, v23, (uint64_t *)v46);
          UnsafeMutableRawBufferPointer.copyMemory(from:)(&v44, (char *)&v44 + 8);
          swift_bridgeObjectRelease_n(v23, 3LL);
          unint64_t v30 = v37;
          _os_log_impl( &dword_0,  v27,  v28,  "PlayMediaCatDialogService#intentHandledResponse overriding Siri response for testing with: %s",  v37,  0xCu);
          uint64_t v31 = v38;
          swift_arrayDestroy(v38, 1LL, (char *)&type metadata for Any + 8);
          swift_slowDealloc(v31, -1LL, -1LL);
          swift_slowDealloc(v30, -1LL, -1LL);
        }

        else
        {

          swift_bridgeObjectRelease_n(v23, 2LL);
        }

        (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
      }
    }
  }

  uint64_t v32 = *(void *)(v6 + 40);
  uint64_t v33 = *(void *)(v6 + 48);
  uint64_t v34 = swift_allocObject(&unk_274E90, 32LL, 7LL);
  *(void *)(v34 + swift_weakDestroy(v0 + 16) = v40;
  *(void *)(v34 + 24) = a5;
  __chkstk_darwin(v34);
  *(&v36 - 10) = (uint8_t *)v32;
  *(&v36 - 9) = (uint8_t *)v33;
  *(&v36 - 8) = (uint8_t *)2036427856;
  *(&v36 - sub_6C3C(v0 + 7) = (uint8_t *)0xE400000000000000LL;
  swift_retain(a5);
  sub_200268( (uint64_t)"catServiceExecute",  17LL,  2u,  (uint64_t)sub_1D0E88,  v34,  "CatService#execute family=%{signpost.telemetry:string1,public}@ id=%{signpost.telemetry:string2,public}@ enableTelemetry=YES ",  125LL,  2,  v32,  v33,  2036427856LL,  0xE400000000000000LL,  (void (*)(uint64_t (*)(), uint64_t))sub_3CAE4,  (uint64_t)(&v36 - 12));
  swift_bridgeObjectRelease(a1);
  return swift_release(v34);
}

uint64_t sub_1CFF6C(uint64_t a1, void (*a2)(void *))
{
  uint64_t v4 = sub_6C5C(&qword_289340);
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v7 = sub_6C5C((uint64_t *)&unk_286BB0);
  uint64_t v8 = __chkstk_darwin(v7);
  uint64_t v10 = (uint64_t *)((char *)&v14 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  __chkstk_darwin(v8);
  uint64_t v12 = (uint64_t *)((char *)&v14 - v11);
  sub_FF10(a1, (uint64_t)v10, (uint64_t *)&unk_286BB0);
  if (swift_getEnumCaseMultiPayload(v10, v7) == 1)
  {
    *uint64_t v12 = *v10;
    swift_storeEnumTagMultiPayload(v12, v7, 1LL);
  }

  else
  {
    sub_712A0((uint64_t)v10, (uint64_t)v6);
    sub_FF10((uint64_t)v6, (uint64_t)v12, &qword_289340);
    swift_storeEnumTagMultiPayload(v12, v7, 0LL);
    sub_1F6CC((uint64_t)v6, &qword_289340);
  }

  a2(v12);
  return sub_1F6CC((uint64_t)v12, (uint64_t *)&unk_286BB0);
}

uint64_t sub_1D00D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v14 = &type metadata for Bool;
  LOBYTE(v13) = 1;
  uint64_t v10 = swift_bridgeObjectRetain(a1);
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v10);
  sub_1E1E1C(&v13, 0xD000000000000010LL, 0x8000000000221FB0LL, isUniquelyReferenced_nonNull_native, v15);
  swift_bridgeObjectRelease(0x8000000000000000LL);
  sub_1F6CC((uint64_t)v15, &qword_284028);
  sub_1D01B4(a1, a2, a3, a4, a5);
  return swift_bridgeObjectRelease(a1);
}

unint64_t sub_1D01B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v6 = v5;
  uint64_t v85 = a5;
  uint64_t v84 = a4;
  uint64_t v83 = a3;
  uint64_t v77 = type metadata accessor for DispatchWorkItemFlags(0LL);
  uint64_t v76 = *(void *)(v77 - 8);
  __chkstk_darwin(v77);
  uint64_t v75 = (char *)&v73 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v74 = type metadata accessor for DispatchQoS(0LL);
  uint64_t v79 = *(void *)(v74 - 8);
  __chkstk_darwin(v74);
  char v78 = (char *)&v73 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v11 = type metadata accessor for Logger(0LL);
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = __chkstk_darwin(v11);
  uint64_t v80 = (char *)&v73 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v15 = __chkstk_darwin(v13);
  NSString v17 = (char *)&v73 - v16;
  uint64_t v18 = App.appIdentifier.getter(v15);
  if (v19)
  {
    unint64_t v20 = v19;
  }

  else
  {
    uint64_t v18 = 0LL;
    unint64_t v20 = 0xE000000000000000LL;
  }

  int v21 = static BundleIdentifiers.isFirstParty(bundleIdentifier:)(v18, v20);
  swift_bridgeObjectRelease(v20);
  unint64_t v22 = "HandleFailureThirdParty";
  int v82 = v21;
  if ((v21 & 1) != 0) {
    unint64_t v22 = "HandleFailureFirstParty";
  }
  unint64_t v23 = (unint64_t)(v22 - 32) | 0x8000000000000000LL;
  uint64_t v24 = swift_bridgeObjectRetain(a1);
  uint64_t v25 = App.appIdentifier.getter(v24);
  uint64_t v104 = &type metadata for String;
  uint64_t v27 = 0x416E776F6E6B6E55LL;
  if (v26) {
    uint64_t v27 = v25;
  }
  unint64_t v28 = 0xEA00000000007070LL;
  if (v26) {
    unint64_t v28 = v26;
  }
  *(void *)&__int128 v103 = v27;
  *((void *)&v103 + 1) = v28;
  uint64_t v81 = type metadata accessor for ErrorFilingProvider(0LL);
  uint64_t v29 = static ErrorFilingProvider.errorInfoForParamsKey.getter(v81);
  uint64_t v31 = v30;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(a1);
  uint64_t v86 = a1;
  uint64_t v102 = a1;
  sub_1E1E1C(&v103, v29, v31, isUniquelyReferenced_nonNull_native, &aBlock);
  uint64_t v33 = v102;
  swift_bridgeObjectRelease(v31);
  swift_bridgeObjectRelease(0x8000000000000000LL);
  sub_1F6CC((uint64_t)&aBlock, &qword_284028);
  uint64_t v34 = v6[4];
  uint64_t v35 = v6[6];
  uint64_t v88 = v6[5];
  uint64_t v89 = v35;
  unint64_t v90 = 0xD000000000000017LL;
  unint64_t v91 = v23;
  uint64_t v92 = v34;
  uint64_t v93 = v33;
  uint64_t v94 = a2;
  uint64_t v95 = v83;
  uint64_t v96 = 0LL;
  sub_200268( (uint64_t)"catServiceExecute",  17LL,  2u,  v84,  v85,  "CatService#execute family=%{signpost.telemetry:string1,public}@ id=%{signpost.telemetry:string2,public}@ enableTelemetry=YES ",  125LL,  2,  v88,  v35,  0xD000000000000017LL,  v23,  (void (*)(uint64_t (*)(), uint64_t))sub_3CAE4,  (uint64_t)v87);
  swift_bridgeObjectRelease(v33);
  if (qword_283888 != -1) {
    swift_once(&qword_283888, sub_BFC5C);
  }
  uint64_t v36 = sub_6960(v11, (uint64_t)qword_2969C8);
  char v37 = *(void (**)(char *))(v12 + 16);
  uint64_t v85 = v36;
  v37(v17);
  uint64_t v38 = swift_bridgeObjectRetain(v23);
  uint64_t v39 = (os_log_s *)Logger.logObject.getter(v38);
  os_log_type_t v40 = static os_log_type_t.default.getter();
  uint64_t v41 = v11;
  if (os_log_type_enabled(v39, v40))
  {
    uint64_t v42 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
    uint64_t v43 = swift_slowAlloc(32LL, -1LL);
    uint64_t v84 = v12;
    __int128 v44 = v37;
    uint64_t v45 = v41;
    uint64_t v46 = v43;
    *(void *)&__int128 aBlock = v43;
    *(_DWORD *)uint64_t v42 = 136315138;
    swift_bridgeObjectRetain(v23);
    *(void *)&__int128 v103 = sub_6978(0xD000000000000017LL, v23, (uint64_t *)&aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v103, (char *)&v103 + 8);
    swift_bridgeObjectRelease_n(v23, 3LL);
    _os_log_impl(&dword_0, v39, v40, "PlayMediaCatDialogService#makeFailureHandlingIntentDialog, %s", v42, 0xCu);
    swift_arrayDestroy(v46, 1LL, (char *)&type metadata for Any + 8);
    uint64_t v47 = v46;
    uint64_t v41 = v45;
    char v37 = v44;
    swift_slowDealloc(v47, -1LL, -1LL);
    swift_slowDealloc(v42, -1LL, -1LL);

    unint64_t v48 = *(uint64_t (**)(char *, uint64_t))(v84 + 8);
  }

  else
  {

    swift_bridgeObjectRelease_n(v23, 2LL);
    unint64_t v48 = *(uint64_t (**)(char *, uint64_t))(v12 + 8);
  }

  unint64_t result = v48(v17, v41);
  uint64_t v50 = v86;
  if (*(void *)(v86 + 16)
    && (unint64_t result = sub_9A744(0x457363697274654DLL, 0xEC000000726F7272LL), (v51 & 1) != 0)
    && (sub_6C00(*(void *)(v50 + 56) + 32 * result, (uint64_t)&aBlock),
        unint64_t result = swift_dynamicCast(&v103, &aBlock, (char *)&type metadata for Any + 8, &type metadata for String, 6LL),
        (result & 1) != 0))
  {
    __int128 v52 = v103;
    uint64_t v53 = HIBYTE(*((void *)&v103 + 1)) & 0xFLL;
    if ((*((void *)&v103 + 1) & 0x2000000000000000LL) == 0) {
      uint64_t v53 = v103 & 0xFFFFFFFFFFFFLL;
    }
    if (v53 && (v82 & 1) != 0)
    {
      uint64_t v54 = v80;
      ((void (*)(char *, uint64_t, uint64_t))v37)(v80, v85, v41);
      uint64_t v55 = swift_bridgeObjectRetain_n(*((void *)&v52 + 1), 2LL);
      uint64_t v56 = (os_log_s *)Logger.logObject.getter(v55);
      os_log_type_t v57 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v56, v57))
      {
        unint64_t v58 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
        uint64_t v59 = swift_slowAlloc(32LL, -1LL);
        uint64_t v86 = v41;
        uint64_t v60 = v59;
        *(void *)&__int128 aBlock = v59;
        *(_DWORD *)unint64_t v58 = 136315138;
        swift_bridgeObjectRetain(*((void *)&v52 + 1));
        *(void *)&__int128 v103 = sub_6978(v52, *((unint64_t *)&v52 + 1), (uint64_t *)&aBlock);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v103, (char *)&v103 + 8);
        swift_bridgeObjectRelease_n(*((void *)&v52 + 1), 3LL);
        _os_log_impl(&dword_0, v56, v57, "Submitting FirstParty error: %s", v58, 0xCu);
        swift_arrayDestroy(v60, 1LL, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v60, -1LL, -1LL);
        swift_slowDealloc(v58, -1LL, -1LL);

        uint64_t v61 = v80;
        uint64_t v62 = v86;
      }

      else
      {

        swift_bridgeObjectRelease_n(*((void *)&v52 + 1), 2LL);
        uint64_t v61 = v54;
        uint64_t v62 = v41;
      }

      uint64_t v63 = v48(v61, v62);
      uint64_t v64 = v77;
      uint64_t v65 = v76;
      unint64_t v66 = v75;
      uint64_t v67 = v74;
      uint64_t v68 = (void *)static DispatchQueues.analytics.getter(v63);
      uint64_t v69 = swift_allocObject(&unk_274E18, 32LL, 7LL);
      *(_OWORD *)(v69 + swift_weakDestroy(v0 + 16) = v52;
      uint64_t v100 = sub_1D0E20;
      uint64_t v101 = v69;
      *(void *)&__int128 aBlock = _NSConcreteStackBlock;
      *((void *)&aBlock + 1) = 1107296256LL;
      uint64_t v98 = sub_6E7C;
      uint64_t v99 = &unk_274E30;
      uint64_t v70 = _Block_copy(&aBlock);
      __int128 v71 = v78;
      static DispatchQoS.unspecified.getter(v70);
      *(void *)&__int128 v103 = _swiftEmptyArrayStorage;
      sub_21A04();
      uint64_t v72 = sub_6C5C(&qword_285480);
      sub_21358();
      dispatch thunk of SetAlgebra.init<A>(_:)(&v103, v72);
      OS_dispatch_queue.async(group:qos:flags:execute:)(0LL, v71, v66, v70);
      _Block_release(v70);

      (*(void (**)(char *, uint64_t))(v65 + 8))(v66, v64);
      (*(void (**)(char *, uint64_t))(v79 + 8))(v71, v67);
      return swift_release(v101);
    }

    else
    {
      return swift_bridgeObjectRelease(*((void *)&v103 + 1));
    }
  }

  else if ((v82 & 1) != 0)
  {
    return static ErrorFilingProvider.generateABCSnapshot(errorToReport:errorDomain:errorType:)( 0xD000000000000018LL,  0x8000000000223700LL,  0x456E776F6E6B6E55LL,  0xEC000000726F7272LL,  0xD000000000000011LL,  0x800000000021E2C0LL);
  }

  return result;
}

uint64_t sub_1D09DC(uint64_t a1, uint64_t a2)
{
  uint64_t v19 = a1;
  uint64_t v3 = sub_6C5C(&qword_2845A0);
  __chkstk_darwin(v3);
  uint64_t v5 = (char *)&v20[-1] - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v6 = type metadata accessor for ActivityType(0LL);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = __chkstk_darwin(v6);
  uint64_t v10 = (char *)&v20[-1] - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  static SiriKitEventSender.current.getter(v20, v8);
  uint64_t v11 = v21;
  uint64_t v12 = v22;
  sub_6EA8(v20, v21);
  type metadata accessor for SiriKitEvent(0LL);
  (*(void (**)(char *, void, uint64_t))(v7 + 104))(v10, enum case for ActivityType.failed(_:), v6);
  uint64_t v13 = enum case for SiriKitReliabilityCodes.genericError(_:);
  uint64_t v14 = type metadata accessor for SiriKitReliabilityCodes(0LL);
  uint64_t v15 = *(void *)(v14 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v15 + 104))(v5, v13, v14);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v15 + 56))(v5, 0LL, 1LL, v14);
  uint64_t v16 = swift_allocObject(&unk_274E68, 32LL, 7LL);
  *(void *)(v16 + swift_weakDestroy(v0 + 16) = v19;
  *(void *)(v16 + 24) = a2;
  swift_bridgeObjectRetain(a2);
  uint64_t v17 = SiriKitEvent.__allocating_init(activityType:taskType:statusReason:_:)( v10,  0xD000000000000011LL,  0x8000000000223740LL,  v5,  sub_1D0E28,  v16);
  dispatch thunk of SiriKitEventSending.send(_:)(v17, v11, v12);
  swift_release(v17);
  return sub_6C3C(v20);
}

uint64_t sub_1D0BA0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10 = type metadata accessor for AirPlayRouteSetupContext(0LL);
  swift_bridgeObjectRetain(a1);
  static ExecutorProvider.shared.getter(&v36);
  uint64_t v11 = v37;
  uint64_t v12 = v38;
  sub_6EA8(&v36, v37);
  uint64_t v13 = dispatch thunk of ExecutorProviding.currentRequestId.getter(v11, v12);
  uint64_t v15 = v14;
  sub_6C3C(&v36);
  uint64_t v16 = static AirPlayRouteSetupContext.shared(refId:)(v13, v15);
  swift_bridgeObjectRelease(v15);
  if (v16)
  {
    uint64_t v35 = (void *)v10;
    *(void *)&__int128 v34 = v16;
    type metadata accessor for ErrorFilingProvider(0LL);
    uint64_t v17 = swift_retain(v16);
    uint64_t v18 = static ErrorFilingProvider.airplayNotRespondingParamsKey.getter(v17);
    uint64_t v20 = v19;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(a1);
    uint64_t v33 = a1;
    sub_1E1E1C(&v34, v18, v20, isUniquelyReferenced_nonNull_native, &v36);
    swift_bridgeObjectRelease(v20);
    swift_release(v16);
    swift_bridgeObjectRelease(0x8000000000000000LL);
    sub_1F6CC((uint64_t)&v36, &qword_284028);
  }

  uint64_t v35 = &type metadata for Bool;
  LOBYTE(v34) = v16 != 0;
  uint64_t v22 = type metadata accessor for ErrorFilingProvider(0LL);
  uint64_t v23 = static ErrorFilingProvider.errorInfoForParamsKey.getter(v22);
  uint64_t v25 = v24;
  char v26 = swift_isUniquelyReferenced_nonNull_native(a1);
  uint64_t v33 = a1;
  sub_1E1E1C(&v34, v23, v25, v26, &v36);
  swift_bridgeObjectRelease(v25);
  swift_bridgeObjectRelease(0x8000000000000000LL);
  uint64_t v27 = sub_1F6CC((uint64_t)&v36, &qword_284028);
  __chkstk_darwin(v27);
  v32[2] = v28;
  v32[3] = v29;
  v32[4] = 0xD000000000000014LL;
  void v32[5] = 0x80000000002236C0LL;
  v32[6] = v30;
  v32[7] = a1;
  v32[8] = a2;
  v32[9] = a3;
  v32[10] = 0LL;
  sub_200268( (uint64_t)"catServiceExecute",  17LL,  2u,  a4,  a5,  "CatService#execute family=%{signpost.telemetry:string1,public}@ id=%{signpost.telemetry:string2,public}@ enableTelemetry=YES ",  125LL,  2,  v28,  v29,  0xD000000000000014LL,  0x80000000002236C0LL,  (void (*)(uint64_t (*)(), uint64_t))sub_3CAE4,  (uint64_t)v32);
  return swift_bridgeObjectRelease(a1);
}

uint64_t sub_1D0DFC()
{
  return swift_deallocObject(v0, 32LL, 7LL);
}

uint64_t sub_1D0E20()
{
  return sub_1D09DC(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_1D0E28()
{
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = *(void *)(v0 + 24);
  swift_bridgeObjectRetain(v2);
  return dispatch thunk of SiriKitEvent.SiriKitEventBuilder.statusReasonDescription.setter(v1, v2);
}

uint64_t sub_1D0E64()
{
  return swift_deallocObject(v0, 32LL, 7LL);
}

uint64_t sub_1D0E88(uint64_t a1)
{
  return sub_1CFF6C(a1, *(void (**)(void *))(v1 + 16));
}

uint64_t sub_1D0EA4(uint64_t a1)
{
  v2[0] = (char *)&value witness table for () + 64;
  v2[1] = (char *)&value witness table for Builtin.NativeObject + 64;
  v2[2] = "(";
  v2[3] = "(";
  v2[4] = "(";
  v2[5] = (char *)&value witness table for Builtin.NativeObject + 64;
  v2[6] = (char *)&value witness table for Builtin.NativeObject + 64;
  v2[7] = "(";
  void v2[8] = (char *)&value witness table for Builtin.NativeObject + 64;
  void v2[9] = (char *)&value witness table for Builtin.UnknownObject + 64;
  return swift_initClassMetadata2(a1, 0LL, 10LL, v2, a1 + 96);
}

uint64_t sub_1D0F18@<X0>(uint64_t a1@<X5>, uint64_t a2@<X8>)
{
  uint64_t v94 = a2;
  uint64_t v95 = a1;
  uint64_t v2 = sub_6C5C(&qword_284630);
  __chkstk_darwin(v2);
  uint64_t v4 = (char *)&v82 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v5 = type metadata accessor for CommonAudio.Confirmation(0LL);
  uint64_t v91 = *(void *)(v5 - 8);
  uint64_t v92 = v5;
  uint64_t v6 = __chkstk_darwin(v5);
  uint64_t v88 = (char *)&v82 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v6);
  uint64_t v89 = (char *)&v82 - v8;
  uint64_t v9 = type metadata accessor for Parse(0LL);
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v82 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v13 = type metadata accessor for Logger(0LL);
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = __chkstk_darwin(v13);
  unint64_t v90 = (char *)&v82 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v17 = __chkstk_darwin(v15);
  uint64_t v87 = (char *)&v82 - v18;
  uint64_t v19 = __chkstk_darwin(v17);
  uint64_t v84 = (char *)&v82 - v20;
  uint64_t v21 = __chkstk_darwin(v19);
  uint64_t v83 = (char *)&v82 - v22;
  uint64_t v23 = __chkstk_darwin(v21);
  uint64_t v85 = (char *)&v82 - v24;
  uint64_t v25 = __chkstk_darwin(v23);
  uint64_t v86 = (char *)&v82 - v26;
  __chkstk_darwin(v25);
  uint64_t v28 = (char *)&v82 - v27;
  if (qword_283888 != -1) {
    swift_once(&qword_283888, sub_BFC5C);
  }
  uint64_t v29 = sub_6960(v13, (uint64_t)qword_2969C8);
  uint64_t v30 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v14 + 16);
  uint64_t v96 = v13;
  uint64_t v93 = v30;
  uint64_t v31 = v30(v28, v29, v13);
  uint64_t v32 = (os_log_s *)Logger.logObject.getter(v31);
  os_log_type_t v33 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v32, v33))
  {
    __int128 v34 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
    *(_WORD *)__int128 v34 = 0;
    _os_log_impl(&dword_0, v32, v33, "CommonNeedsConfirmationStrategy#actionForInput...", v34, 2u);
    swift_slowDealloc(v34, -1LL, -1LL);
  }

  uint64_t v35 = *(uint64_t (**)(char *, uint64_t))(v14 + 8);
  uint64_t v36 = v96;
  uint64_t v37 = v35(v28, v96);
  Input.parse.getter(v37);
  double v38 = sub_B6EF8((uint64_t)v12, &v97);
  (*(void (**)(char *, uint64_t, double))(v10 + 8))(v12, v9, v38);
  if (v98)
  {
    sub_FF54(&v97, (uint64_t)v99);
    uint64_t v39 = v100;
    uint64_t v40 = v101;
    sub_6EA8(v99, v100);
    dispatch thunk of ConfirmableIntent.confirmationState.getter(v39, v40);
    uint64_t v42 = v91;
    uint64_t v41 = v92;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v91 + 48))(v4, 1LL, v92) == 1)
    {
      sub_1F6CC((uint64_t)v4, &qword_284630);
      uint64_t v43 = v87;
      uint64_t v44 = v93(v87, v29, v36);
      uint64_t v45 = (os_log_s *)Logger.logObject.getter(v44);
      os_log_type_t v46 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v45, v46))
      {
        uint64_t v47 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
        *(_WORD *)uint64_t v47 = 0;
        _os_log_impl( &dword_0,  v45,  v46,  "CommonNeedsConfirmationStrategy#actionForInput unable to get confirmation state from intent, ignoring...",  v47,  2u);
        swift_slowDealloc(v47, -1LL, -1LL);
      }

      uint64_t v48 = v35(v43, v36);
      static ActionForInput.ignore()(v48);
      return sub_6C3C(v99);
    }

    os_log_type_t v57 = v89;
    (*(void (**)(char *, char *, uint64_t))(v42 + 32))(v89, v4, v41);
    unint64_t v58 = v88;
    (*(void (**)(char *, char *, uint64_t))(v42 + 16))(v88, v57, v41);
    int v59 = (*(uint64_t (**)(char *, uint64_t))(v42 + 88))(v58, v41);
    if (v59 == enum case for CommonAudio.Confirmation.yes(_:))
    {
      uint64_t v60 = v86;
      uint64_t v61 = v93(v86, v29, v36);
      uint64_t v62 = (os_log_s *)Logger.logObject.getter(v61);
      os_log_type_t v63 = static os_log_type_t.default.getter(v62);
      if (os_log_type_enabled(v62, v63))
      {
        uint64_t v64 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
        *(_WORD *)uint64_t v64 = 0;
        uint64_t v65 = "CommonNeedsConfirmationStrategy#actionForInput request is confirmed";
LABEL_19:
        _os_log_impl(&dword_0, v62, v63, v65, v64, 2u);
        swift_slowDealloc(v64, -1LL, -1LL);
      }
    }

    else
    {
      if (v59 != enum case for CommonAudio.Confirmation.no(_:))
      {
        if (v59 != enum case for CommonAudio.Confirmation.cancel(_:))
        {
          uint64_t v74 = v84;
          uint64_t v75 = v93(v84, v29, v36);
          uint64_t v76 = (os_log_s *)Logger.logObject.getter(v75);
          os_log_type_t v77 = static os_log_type_t.error.getter();
          if (os_log_type_enabled(v76, v77))
          {
            char v78 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
            *(_WORD *)char v78 = 0;
            _os_log_impl( &dword_0,  v76,  v77,  "CommonNeedsConfirmationStrategy#actionForInput no valid confirmation in the intent, ignoring",  v78,  2u);
            uint64_t v79 = v78;
            uint64_t v74 = v84;
            swift_slowDealloc(v79, -1LL, -1LL);
          }

          uint64_t v80 = v35(v74, v36);
          static ActionForInput.ignore()(v80);
          uint64_t v81 = *(void (**)(char *, uint64_t))(v42 + 8);
          v81(v57, v41);
          v81(v58, v41);
          return sub_6C3C(v99);
        }

        uint64_t v68 = v83;
        uint64_t v69 = v93(v83, v29, v36);
        uint64_t v70 = (os_log_s *)Logger.logObject.getter(v69);
        os_log_type_t v71 = static os_log_type_t.default.getter(v70);
        if (os_log_type_enabled(v70, v71))
        {
          uint64_t v72 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
          *(_WORD *)uint64_t v72 = 0;
          _os_log_impl( &dword_0,  v70,  v71,  "CommonNeedsConfirmationStrategy#actionForInput request is cancelled",  v72,  2u);
          swift_slowDealloc(v72, -1LL, -1LL);
        }

        uint64_t v73 = v35(v68, v36);
        static ActionForInput.cancel()(v73);
        goto LABEL_21;
      }

      uint64_t v60 = v85;
      uint64_t v66 = v93(v85, v29, v36);
      uint64_t v62 = (os_log_s *)Logger.logObject.getter(v66);
      os_log_type_t v63 = static os_log_type_t.default.getter(v62);
      if (os_log_type_enabled(v62, v63))
      {
        uint64_t v64 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
        *(_WORD *)uint64_t v64 = 0;
        uint64_t v65 = "CommonNeedsConfirmationStrategy#actionForInput request is rejected";
        goto LABEL_19;
      }
    }

    uint64_t v67 = v35(v60, v36);
    static ActionForInput.handle()(v67);
LABEL_21:
    (*(void (**)(char *, uint64_t))(v42 + 8))(v57, v41);
    return sub_6C3C(v99);
  }

  sub_1F6CC((uint64_t)&v97, &qword_284638);
  unint64_t v49 = v90;
  uint64_t v50 = v93(v90, v29, v36);
  char v51 = (os_log_s *)Logger.logObject.getter(v50);
  os_log_type_t v52 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v51, v52))
  {
    uint64_t v53 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
    *(_WORD *)uint64_t v53 = 0;
    _os_log_impl( &dword_0,  v51,  v52,  "CommonNeedsConfirmationStrategy#actionForInput unable to make confirmation intent from parse, ignoring...",  v53,  2u);
    uint64_t v54 = v53;
    uint64_t v36 = v96;
    swift_slowDealloc(v54, -1LL, -1LL);
  }

  uint64_t v55 = v35(v49, v36);
  return static ActionForInput.ignore()(v55);
}

uint64_t sub_1D16EC(uint64_t a1, void *a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v58 = a5;
  uint64_t v59 = a7;
  uint64_t v54 = a4;
  uint64_t v55 = a6;
  uint64_t v56 = a1;
  uint64_t v10 = *v7;
  uint64_t v11 = type metadata accessor for Logger(0LL);
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v14 = (char *)&v50 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  if (qword_283888 != -1) {
    swift_once(&qword_283888, sub_BFC5C);
  }
  uint64_t v15 = sub_6960(v11, (uint64_t)qword_2969C8);
  uint64_t v16 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v12 + 16))(v14, v15, v11);
  uint64_t v17 = (os_log_s *)Logger.logObject.getter(v16);
  os_log_type_t v18 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v17, v18))
  {
    uint64_t v53 = a2;
    uint64_t v19 = swift_slowAlloc(12LL, -1LL);
    uint64_t v51 = v10;
    uint64_t v20 = (uint8_t *)v19;
    uint64_t v21 = swift_slowAlloc(32LL, -1LL);
    uint64_t v61 = v21;
    *(_DWORD *)uint64_t v20 = 136446210;
    uint64_t v22 = static Insights.responseFramework.getter(v21);
    os_log_type_t v52 = a3;
    unint64_t v24 = v23;
    uint64_t v60 = sub_6978(v22, v23, &v61);
    a2 = v53;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v60, &v61);
    unint64_t v25 = v24;
    a3 = v52;
    swift_bridgeObjectRelease(v25);
    _os_log_impl( &dword_0,  v17,  v18,  "CommonNeedsConfirmationStrategy#confirmationOutputContext... Insights:%{public}s",  v20,  0xCu);
    swift_arrayDestroy(v21, 1LL, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v21, -1LL, -1LL);
    uint64_t v26 = v20;
    uint64_t v10 = v51;
    swift_slowDealloc(v26, -1LL, -1LL);
  }

  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  uint64_t v27 = *(void *)(v10 + 80);
  uint64_t v28 = *(void *)(v10 + 88);
  uint64_t v30 = type metadata accessor for CommonNeedsConfirmationStrategy.ConfirmationOutputContext(0LL, v27, v28, v29);
  uint64_t v31 = swift_allocBox(v30);
  sub_1D1C4C(v27, v28, v33, v32);
  uint64_t v34 = v57;
  uint64_t v53 = *(void **)(v57 + 208);
  uint64_t v35 = sub_6C5C(&qword_286B90);
  uint64_t v36 = swift_allocObject(v35, 80LL, 7LL);
  *(_OWORD *)(v36 + swift_weakDestroy(v0 + 16) = xmmword_2168F0;
  uint64_t v37 = (void *)swift_allocObject(&unk_275098, 72LL, 7LL);
  uint64_t v38 = v56;
  void v37[2] = v34;
  v37[3] = v38;
  uint64_t v39 = v54;
  uint64_t v40 = v58;
  v37[4] = v54;
  v37[5] = v40;
  v37[6] = a3;
  v37[7] = a2;
  v37[8] = v31;
  *(void *)(v36 + 3sub_6C3C(v0 + 2) = sub_1DAB94;
  *(void *)(v36 + 40) = v37;
  uint64_t v41 = (void *)swift_allocObject(&unk_2750C0, 72LL, 7LL);
  _OWORD v41[2] = v34;
  v41[3] = v38;
  v41[4] = a2;
  void v41[5] = a3;
  v41[6] = v39;
  v41[7] = v40;
  v41[8] = v31;
  *(void *)(v36 + 48) = sub_1DABEC;
  *(void *)(v36 + 56) = v41;
  uint64_t v42 = swift_allocObject(&unk_2750E8, 32LL, 7LL);
  *(void *)(v42 + swift_weakDestroy(v0 + 16) = v31;
  *(void *)(v42 + 24) = v34;
  *(void *)(v36 + 64) = sub_1DAC3C;
  *(void *)(v36 + 7sub_6C3C(v0 + 2) = v42;
  uint64_t v43 = (void *)swift_allocObject(&unk_275110, 56LL, 7LL);
  v43[2] = v27;
  v43[3] = v28;
  uint64_t v44 = v55;
  v43[4] = v31;
  v43[5] = v44;
  uint64_t v45 = v59;
  v43[6] = v59;
  swift_retain_n(v31, 4LL);
  swift_retain_n(v34, 3LL);
  swift_retain_n(v38, 2LL);
  swift_bridgeObjectRetain_n(v40, 2LL);
  id v46 = a3;
  id v47 = a2;
  id v48 = v46;
  swift_retain(v45);
  static Tasks.parallelize(queue:tasks:completion:)(v53, v36, sub_1DAC70, v43);
  swift_release(v31);
  swift_bridgeObjectRelease(v36);
  return swift_release(v43);
}

uint64_t sub_1D1A78(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v7 = v6;
  uint64_t v27 = a5;
  uint64_t v28 = a6;
  uint64_t v29 = a3;
  uint64_t v11 = type metadata accessor for Logger(0LL);
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v14 = (char *)&v26 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  if (qword_283888 != -1) {
    swift_once(&qword_283888, sub_BFC5C);
  }
  uint64_t v15 = sub_6960(v11, (uint64_t)qword_2969C8);
  uint64_t v16 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v12 + 16))(v14, v15, v11);
  uint64_t v17 = (os_log_s *)Logger.logObject.getter(v16);
  os_log_type_t v18 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v17, v18))
  {
    uint64_t v19 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
    *(_WORD *)uint64_t v19 = 0;
    _os_log_impl( &dword_0,  v17,  v18,  "CommonNeedsConfirmationStrategy#makeIntentCancelledByParameterRejectionResponse...",  v19,  2u);
    swift_slowDealloc(v19, -1LL, -1LL);
  }

  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  uint64_t v20 = (void *)swift_allocObject(&unk_275070, 72LL, 7LL);
  uint64_t v22 = v28;
  uint64_t v21 = v29;
  v20[2] = v29;
  void v20[3] = a4;
  v20[4] = v7;
  v20[5] = a1;
  uint64_t v23 = v27;
  v20[6] = a2;
  v20[7] = v23;
  v20[8] = v22;
  swift_bridgeObjectRetain(a4);
  swift_retain(v7);
  swift_retain(a1);
  id v24 = a2;
  swift_retain(v22);
  sub_1F16B0(a1, v21, a4, (uint64_t)sub_1DAB34, (uint64_t)v20);
  return swift_release(v20);
}

uint64_t sub_1D1C4C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X3>, void *a4@<X8>)
{
  *a4 = 0LL;
  uint64_t v5 = (int *)type metadata accessor for CommonNeedsConfirmationStrategy.ConfirmationOutputContext(0LL, a1, a2, a3);
  uint64_t v6 = (char *)a4 + v5[9];
  uint64_t v7 = type metadata accessor for SiriAudioSnippets(0LL);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56LL))(v6, 1LL, 1LL, v7);
  *(void *)((char *)a4 + v5[10]) = 0LL;
  uint64_t v8 = (char *)a4 + v5[11];
  uint64_t v9 = sub_6C5C(&qword_289340);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56LL))(v8, 1LL, 1LL, v9);
  uint64_t v10 = (char *)a4 + v5[12];
  uint64_t v11 = type metadata accessor for NLContextUpdate(0LL);
  return (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56LL))( v10,  1LL,  1LL,  v11);
}

uint64_t sub_1D1D14( uint64_t a1, char a2, uint64_t a3, uint64_t a4, void *a5, uint8_t **a6, uint64_t a7, void *a8, void (*a9)(uint64_t *), uint64_t a10, uint64_t a11)
{
  uint64_t v99 = a8;
  uint64_t v100 = a7;
  uint64_t v95 = a5;
  uint64_t v96 = a3;
  uint64_t v97 = a4;
  uint64_t v98 = a9;
  uint64_t v84 = *a6;
  uint64_t v14 = sub_6C5C((uint64_t *)&unk_286C50);
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = *(void *)(v15 + 64);
  __chkstk_darwin(v14);
  uint64_t v17 = (char *)&v82 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v18 = sub_6C5C(&qword_2845A0);
  __chkstk_darwin(v18);
  uint64_t v93 = (char *)&v82 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v20 = sub_6C5C((uint64_t *)&unk_286BD0);
  __chkstk_darwin(v20);
  uint64_t v92 = (char *)&v82 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v22 = sub_6C5C(&qword_2845A8);
  __chkstk_darwin(v22);
  uint64_t v91 = (char *)&v82 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v90 = type metadata accessor for AdditionalMetricsDescription.SourceFunction(0LL);
  uint64_t v89 = *(void *)(v90 - 8);
  __chkstk_darwin(v90);
  uint64_t v88 = (char *)&v82 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v87 = type metadata accessor for AdditionalMetricsDescription.ModuleName(0LL);
  uint64_t v86 = *(void *)(v87 - 8);
  __chkstk_darwin(v87);
  uint64_t v85 = (char *)&v82 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v26 = type metadata accessor for Logger(0LL);
  uint64_t v27 = *(void *)(v26 - 8);
  __chkstk_darwin(v26);
  uint64_t v29 = (char *)&v82 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v101 = a10;
  uint64_t v94 = a6;
  if ((a2 & 1) != 0)
  {
    swift_errorRetain(a1);
    uint64_t v43 = a1;
    if (qword_283888 != -1) {
      swift_once(&qword_283888, sub_BFC5C);
    }
    uint64_t v44 = sub_6960(v26, (uint64_t)qword_2969C8);
    (*(void (**)(char *, uint64_t, uint64_t))(v27 + 16))(v29, v44, v26);
    swift_errorRetain(a1);
    uint64_t v45 = swift_errorRetain(a1);
    id v46 = (os_log_s *)Logger.logObject.getter(v45);
    os_log_type_t v47 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v46, v47))
    {
      id v48 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
      uint64_t v49 = swift_slowAlloc(32LL, -1LL);
      v105[0] = v49;
      *(_DWORD *)id v48 = 136315138;
      uint64_t v84 = v48 + 4;
      swift_getErrorValue(a1, v104, v103);
      uint64_t v50 = Error.localizedDescription.getter(v103[1], v103[2]);
      unint64_t v52 = v51;
      uint64_t v102 = sub_6978(v50, v51, v105);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v102, v103);
      swift_bridgeObjectRelease(v52);
      sub_25404(v43, 1);
      sub_25404(v43, 1);
      _os_log_impl( &dword_0,  v46,  v47,  "CommonNeedsConfirmationStrategy#makePromptForConfirmation Error creating views: %s",  v48,  0xCu);
      swift_arrayDestroy(v49, 1LL, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v49, -1LL, -1LL);
      swift_slowDealloc(v48, -1LL, -1LL);
    }

    else
    {
      sub_25404(a1, 1);
      sub_25404(a1, 1);
    }

    (*(void (**)(char *, uint64_t))(v27 + 8))(v29, v26);
    uint64_t v53 = v94;
    uint64_t v54 = v96;
    uint64_t v55 = v43;
    uint64_t v83 = v43;
    uint64_t v56 = v86;
    uint64_t v57 = v85;
    uint64_t v58 = v87;
    (*(void (**)(char *, void, uint64_t))(v86 + 104))( v85,  enum case for AdditionalMetricsDescription.ModuleName.cncs(_:),  v87);
    uint64_t v59 = v89;
    uint64_t v60 = v88;
    uint64_t v61 = v90;
    (*(void (**)(char *, void, uint64_t))(v89 + 104))( v88,  enum case for AdditionalMetricsDescription.SourceFunction.prompt(_:),  v90);
    swift_getErrorValue(v55, v108, v107);
    uint64_t v62 = Error.localizedDescription.getter(v107[1], v107[2]);
    uint64_t v64 = v63;
    uint64_t v65 = static AdditionalMetricsDescription.encodeInfo(module:source:parameterName:statusReason:intentResolutionResult:extraInfo:)( v57,  v60,  v54,  v97,  v62,  v63,  v95,  1LL,  0);
    uint64_t v96 = v66;
    uint64_t v97 = v65;
    __n128 v67 = swift_bridgeObjectRelease(v64);
    (*(void (**)(char *, uint64_t, __n128))(v59 + 8))(v60, v61, v67);
    (*(void (**)(char *, uint64_t))(v56 + 8))(v57, v58);
    uint64_t v69 = (uint64_t)v53[16];
    uint64_t v68 = v53[17];
    uint64_t v95 = sub_6EA8(v53 + 13, v69);
    uint64_t v70 = enum case for ActivityType.failed(_:);
    uint64_t v71 = type metadata accessor for ActivityType(0LL);
    uint64_t v72 = *(void *)(v71 - 8);
    uint64_t v73 = (uint64_t)v91;
    (*(void (**)(char *, uint64_t, uint64_t))(v72 + 104))(v91, v70, v71);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v72 + 56))(v73, 0LL, 1LL, v71);
    uint64_t v74 = type metadata accessor for TemplatingResult(0LL);
    uint64_t v75 = (uint64_t)v92;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v74 - 8) + 56LL))(v92, 1LL, 1LL, v74);
    uint64_t v76 = enum case for SiriKitReliabilityCodes.renderingError(_:);
    uint64_t v77 = type metadata accessor for SiriKitReliabilityCodes(0LL);
    uint64_t v78 = *(void *)(v77 - 8);
    uint64_t v79 = (uint64_t)v93;
    (*(void (**)(char *, uint64_t, uint64_t))(v78 + 104))(v93, v76, v77);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v78 + 56))(v79, 0LL, 1LL, v77);
    uint64_t v80 = v96;
    dispatch thunk of SiriKitTaskLoggingProviding.submitMetric(app:intent:activityType:templateResult:statusReason:description:mediaItemType:)( v100,  v99,  v73,  v75,  v79,  v97,  v96,  0LL,  1,  v69,  v68);
    swift_bridgeObjectRelease(v80);
    sub_1F6CC(v79, &qword_2845A0);
    sub_1F6CC(v75, (uint64_t *)&unk_286BD0);
    sub_1F6CC(v73, &qword_2845A8);
    uint64_t v81 = v83;
    v105[0] = v83;
    char v106 = 1;
    swift_errorRetain(v83);
    v98(v105);
    sub_25404(v81, 1);
    return sub_1F6CC((uint64_t)v105, (uint64_t *)&unk_286C60);
  }

  else
  {
    uint64_t v93 = (char *)a6[2];
    sub_FF10(a11, (uint64_t)&v82 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0LL), (uint64_t *)&unk_286C50);
    uint64_t v30 = *(unsigned __int8 *)(v15 + 80);
    uint64_t v31 = (v30 + 104) & ~v30;
    uint64_t v32 = (void *)swift_allocObject(&unk_275048, v31 + v16, v30 | 7);
    uint64_t v33 = v84;
    v32[2] = *((void *)v84 + 10);
    uint64_t v34 = v96;
    uint64_t v35 = v97;
    v32[3] = *((void *)v33 + 11);
    v32[4] = v34;
    uint64_t v36 = v95;
    void v32[5] = v35;
    v32[6] = v36;
    uint64_t v37 = v100;
    v32[7] = a6;
    v32[8] = v37;
    uint64_t v38 = v98;
    uint64_t v39 = v99;
    v32[9] = v99;
    v32[10] = v38;
    v32[11] = a10;
    void v32[12] = a1;
    sub_1DAA40((uint64_t)v17, (uint64_t)v32 + v31);
    uint64_t v98 = *(void (**)(uint64_t *))(*(void *)v93 + 208LL);
    sub_24FEC(a1, 0);
    swift_bridgeObjectRetain(v35);
    id v40 = v36;
    swift_retain(v94);
    swift_retain(v37);
    id v41 = v39;
    swift_retain(v101);
    ((void (*)(uint64_t, uint64_t, uint64_t, id, id, uint64_t (*)(char *), void *))v98)( v37,  v34,  v35,  v40,  v41,  sub_1DAA88,  v32);
    return swift_release(v32);
  }

uint64_t sub_1D24D0( char *a1, uint64_t a2, void *a3, uint64_t a4, void *a5, uint64_t a6, uint64_t a7, void (*a8)(__int128 *), uint64_t a9, uint64_t a10, uint64_t a11)
{
  uint64_t v131 = a8;
  uint64_t v128 = a6;
  uint64_t v129 = a7;
  uint64_t v125 = a5;
  uint64_t v124 = a4;
  uint64_t v123 = a3;
  uint64_t v122 = a2;
  uint64_t v116 = a1;
  uint64_t v130 = a9;
  uint64_t v112 = type metadata accessor for AdditionalMetricsDescription.StatusReason(0LL);
  uint64_t v111 = *(void *)(v112 - 8);
  __chkstk_darwin(v112);
  id v110 = (char *)&v107 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v115 = type metadata accessor for AceOutput(0LL);
  uint64_t v114 = *(char **)(v115 - 8);
  __chkstk_darwin(v115);
  uint64_t v119 = (char *)&v107 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v117 = sub_6C5C(&qword_289340);
  uint64_t v13 = __chkstk_darwin(v117);
  unint64_t v113 = (char *)&v107 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v13);
  uint64_t v118 = (char *)&v107 - v15;
  uint64_t v16 = sub_6C5C(&qword_2845A0);
  __chkstk_darwin(v16);
  unint64_t v127 = (char *)&v107 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v18 = sub_6C5C((uint64_t *)&unk_286BD0);
  __chkstk_darwin(v18);
  uint64_t v120 = (char *)&v107 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v20 = sub_6C5C(&qword_2845A8);
  __chkstk_darwin(v20);
  uint64_t v126 = (char *)&v107 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v121 = type metadata accessor for AdditionalMetricsDescription.SourceFunction(0LL);
  uint64_t v22 = *(char **)(v121 - 8);
  __chkstk_darwin(v121);
  uint64_t v24 = (char *)&v107 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v25 = type metadata accessor for AdditionalMetricsDescription.ModuleName(0LL);
  uint64_t v26 = *(void *)(v25 - 8);
  __chkstk_darwin(v25);
  uint64_t v28 = (char *)&v107 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v29 = type metadata accessor for Logger(0LL);
  uint64_t v109 = *(void *)(v29 - 8);
  __chkstk_darwin(v29);
  uint64_t v31 = (char *)&v107 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v32 = sub_6C5C((uint64_t *)&unk_286BB0);
  __chkstk_darwin(v32);
  uint64_t v34 = (uint64_t *)((char *)&v107 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  sub_FF10((uint64_t)v116, (uint64_t)v34, (uint64_t *)&unk_286BB0);
  if (swift_getEnumCaseMultiPayload(v34, v32) == 1)
  {
    uint64_t v116 = v28;
    uint64_t v117 = v26;
    uint64_t v118 = v22;
    uint64_t v119 = (char *)v25;
    uint64_t v35 = *v34;
    if (qword_283888 != -1) {
      swift_once(&qword_283888, sub_BFC5C);
    }
    uint64_t v36 = v29;
    uint64_t v37 = sub_6960(v29, (uint64_t)qword_2969C8);
    uint64_t v38 = v109;
    (*(void (**)(char *, uint64_t, uint64_t))(v109 + 16))(v31, v37, v36);
    swift_errorRetain(v35);
    uint64_t v39 = swift_errorRetain(v35);
    id v40 = (os_log_s *)Logger.logObject.getter(v39);
    os_log_type_t v41 = static os_log_type_t.error.getter();
    uint64_t v42 = v24;
    if (os_log_type_enabled(v40, v41))
    {
      uint64_t v43 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
      uint64_t v44 = swift_slowAlloc(32LL, -1LL);
      *(void *)&__int128 v137 = v44;
      uint64_t v114 = v31;
      *(_DWORD *)uint64_t v43 = 136315138;
      unint64_t v113 = (char *)(v43 + 4);
      swift_getErrorValue(v35, v134, v133);
      uint64_t v45 = Error.localizedDescription.getter(v133[1], v133[2]);
      unint64_t v47 = v46;
      uint64_t v132 = sub_6978(v45, v46, (uint64_t *)&v137);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v132, v133);
      swift_bridgeObjectRelease(v47);
      swift_errorRelease(v35);
      swift_errorRelease(v35);
      _os_log_impl( &dword_0,  v40,  v41,  "CommonNeedsConfirmationStrategy#makePromptForConfirmation Error creating the confirmation prompt dialog: %s",  v43,  0xCu);
      swift_arrayDestroy(v44, 1LL, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v44, -1LL, -1LL);
      swift_slowDealloc(v43, -1LL, -1LL);

      (*(void (**)(char *, uint64_t))(v38 + 8))(v114, v36);
    }

    else
    {
      swift_errorRelease(v35);
      swift_errorRelease(v35);

      (*(void (**)(char *, uint64_t))(v38 + 8))(v31, v36);
    }

    uint64_t v78 = v35;
    uint64_t v79 = v125;
    uint64_t v80 = v122;
    uint64_t v81 = v121;
    uint64_t v82 = v119;
    uint64_t v83 = v118;
    uint64_t v84 = v117;
    uint64_t v85 = v116;
    uint64_t v115 = v78;
    (*(void (**)(char *, void, char *))(v117 + 104))( v116,  enum case for AdditionalMetricsDescription.ModuleName.cncs(_:),  v119);
    (*((void (**)(char *, void, uint64_t))v83 + 13))( v42,  enum case for AdditionalMetricsDescription.SourceFunction.prompt(_:),  v81);
    swift_getErrorValue(v78, v136, v135);
    uint64_t v86 = v84;
    uint64_t v87 = Error.localizedDescription.getter(v135[1], v135[2]);
    uint64_t v89 = v88;
    uint64_t v125 = (void *)static AdditionalMetricsDescription.encodeInfo(module:source:parameterName:statusReason:intentResolutionResult:extraInfo:)( v85,  v42,  v80,  v123,  v87,  v88,  v124,  2LL,  0);
    uint64_t v124 = v90;
    __n128 v91 = swift_bridgeObjectRelease(v89);
    (*((void (**)(char *, uint64_t, __n128))v83 + 1))(v42, v81, v91);
    (*(void (**)(char *, char *))(v86 + 8))(v85, v82);
    uint64_t v93 = v79[16];
    uint64_t v92 = v79[17];
    uint64_t v123 = sub_6EA8(v79 + 13, v93);
    uint64_t v94 = enum case for ActivityType.failed(_:);
    uint64_t v95 = type metadata accessor for ActivityType(0LL);
    uint64_t v96 = *(void *)(v95 - 8);
    uint64_t v97 = (uint64_t)v126;
    (*(void (**)(char *, uint64_t, uint64_t))(v96 + 104))(v126, v94, v95);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v96 + 56))(v97, 0LL, 1LL, v95);
    uint64_t v98 = type metadata accessor for TemplatingResult(0LL);
    uint64_t v99 = (uint64_t)v120;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v98 - 8) + 56LL))(v120, 1LL, 1LL, v98);
    uint64_t v100 = enum case for SiriKitReliabilityCodes.renderingError(_:);
    uint64_t v101 = type metadata accessor for SiriKitReliabilityCodes(0LL);
    uint64_t v102 = *(void *)(v101 - 8);
    uint64_t v103 = (uint64_t)v127;
    (*(void (**)(char *, uint64_t, uint64_t))(v102 + 104))(v127, v100, v101);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v102 + 56))(v103, 0LL, 1LL, v101);
    uint64_t v104 = v124;
    dispatch thunk of SiriKitTaskLoggingProviding.submitMetric(app:intent:activityType:templateResult:statusReason:description:mediaItemType:)( v128,  v129,  v97,  v99,  v103,  v125,  v124,  0LL,  1,  v93,  v92);
    swift_bridgeObjectRelease(v104);
    sub_1F6CC(v103, &qword_2845A0);
    sub_1F6CC(v99, (uint64_t *)&unk_286BD0);
    sub_1F6CC(v97, &qword_2845A8);
    uint64_t v105 = v115;
    *(void *)&__int128 v137 = v115;
    char v140 = 1;
    swift_errorRetain(v115);
    v131(&v137);
    swift_errorRelease(v105);
  }

  else
  {
    uint64_t v107 = a11;
    uint64_t v48 = *(int *)(v117 + 48);
    uint64_t v49 = type metadata accessor for TemplatingResult(0LL);
    uint64_t v109 = *(void *)(v49 - 8);
    uint64_t v116 = *(char **)(v109 + 32);
    uint64_t v50 = v118;
    uint64_t v51 = ((uint64_t (*)(char *, uint64_t *, uint64_t))v116)(v118, v34, v49);
    uint64_t v108 = v48;
    *(void *)&v50[v48] = *(uint64_t *)((char *)v34 + v48);
    char v52 = static SiriAudioEnvironment.isTextToSpeechEnabled.getter(v51);
    id v139 = 0LL;
    __int128 v137 = 0u;
    __int128 v138 = 0u;
    static AceOutputHelper.makeConfirmationViewOutput(templateResult:ttsEnabled:snippetAceViews:listenAfterSpeaking:canUseServerTTS:nlContextUpdate:additionalCommands:flowActivity:)( v50,  v52 & 1,  a10,  1LL,  1LL,  v107,  _swiftEmptyArrayStorage,  &v137);
    sub_1F6CC((uint64_t)&v137, &qword_2845C8);
    (*(void (**)(char *, void, uint64_t))(v26 + 104))( v28,  enum case for AdditionalMetricsDescription.ModuleName.cncs(_:),  v25);
    uint64_t v53 = v121;
    (*((void (**)(char *, void, uint64_t))v22 + 13))( v24,  enum case for AdditionalMetricsDescription.SourceFunction.prompt(_:),  v121);
    uint64_t v54 = v111;
    uint64_t v55 = v110;
    uint64_t v56 = v112;
    (*(void (**)(char *, void, uint64_t))(v111 + 104))( v110,  enum case for AdditionalMetricsDescription.StatusReason.success(_:),  v112);
    uint64_t v124 = static AdditionalMetricsDescription.encodeInfo(module:source:parameterName:statusReason:intentResolutionResult:extraInfo:)( v28,  v24,  v122,  v123,  v55,  v124,  0LL,  1LL);
    uint64_t v123 = v57;
    (*(void (**)(char *, uint64_t))(v54 + 8))(v55, v56);
    (*((void (**)(char *, uint64_t))v22 + 1))(v24, v53);
    (*(void (**)(char *, uint64_t))(v26 + 8))(v28, v25);
    uint64_t v58 = v125[16];
    uint64_t v59 = v125[17];
    uint64_t v125 = sub_6EA8(v125 + 13, v58);
    uint64_t v60 = enum case for ActivityType.confirmation(_:);
    uint64_t v61 = type metadata accessor for ActivityType(0LL);
    uint64_t v62 = *(void *)(v61 - 8);
    uint64_t v63 = (uint64_t)v126;
    (*(void (**)(char *, uint64_t, uint64_t))(v62 + 104))(v126, v60, v61);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v62 + 56))(v63, 0LL, 1LL, v61);
    uint64_t v64 = *(int *)(v117 + 48);
    uint64_t v65 = v109;
    uint64_t v66 = v113;
    uint64_t v67 = (uint64_t)v118;
    (*(void (**)(char *, char *, uint64_t))(v109 + 16))(v113, v118, v49);
    *(void *)&v66[v64] = *(void *)(v67 + v108);
    uint64_t v68 = (uint64_t)v120;
    ((void (*)(char *, char *, uint64_t))v116)(v120, v66, v49);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v65 + 56))(v68, 0LL, 1LL, v49);
    uint64_t v69 = enum case for SiriKitReliabilityCodes.success(_:);
    uint64_t v70 = type metadata accessor for SiriKitReliabilityCodes(0LL);
    uint64_t v71 = *(void *)(v70 - 8);
    uint64_t v72 = (uint64_t)v127;
    (*(void (**)(char *, uint64_t, uint64_t))(v71 + 104))(v127, v69, v70);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v71 + 56))(v72, 0LL, 1LL, v70);
    uint64_t v73 = v123;
    dispatch thunk of SiriKitTaskLoggingProviding.submitMetric(app:intent:activityType:templateResult:statusReason:description:mediaItemType:)( v128,  v129,  v63,  v68,  v72,  v124,  v123,  0LL,  1,  v58,  v59);
    swift_bridgeObjectRelease(v73);
    sub_1F6CC(v72, &qword_2845A0);
    sub_1F6CC(v68, (uint64_t *)&unk_286BD0);
    sub_1F6CC(v63, &qword_2845A8);
    uint64_t v74 = v115;
    *((void *)&v138 + 1) = v115;
    id v139 = &protocol witness table for AceOutput;
    uint64_t v75 = sub_10974(&v137);
    uint64_t v76 = v114;
    uint64_t v77 = v119;
    (*((void (**)(void *, char *, uint64_t))v114 + 2))(v75, v119, v74);
    char v140 = 0;
    v131(&v137);
    (*((void (**)(char *, uint64_t))v76 + 1))(v77, v74);
    sub_1F6CC(v67, &qword_289340);
  }

  return sub_1F6CC((uint64_t)&v137, (uint64_t *)&unk_286C60);
}

uint64_t sub_1D3090(void *a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5, uint64_t a6)
{
  uint64_t v27 = a5;
  uint64_t v28 = a6;
  uint64_t v26 = a1;
  uint64_t v10 = *(void *)(*(void *)a2 + 88LL);
  uint64_t v11 = *(void *)(*(void *)a2 + 80LL);
  uint64_t v25 = v11;
  uint64_t v12 = type metadata accessor for CommonNeedsConfirmationStrategy.ConfirmationOutputContext(0LL, v11, v10, (uint64_t)a4);
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = *(void *)(v13 + 64);
  __chkstk_darwin(v12);
  uint64_t v16 = (char *)&v25 - v15;
  (*(void (**)(char *, void *, uint64_t))(v13 + 16))((char *)&v25 - v15, a1, v12);
  uint64_t v17 = *(unsigned __int8 *)(v13 + 80);
  uint64_t v18 = (v17 + 72) & ~v17;
  uint64_t v19 = (char *)swift_allocObject(&unk_274FA8, v18 + v14, v17 | 7);
  *((void *)v19 + sub_6C3C(v0 + 2) = v11;
  *((void *)v19 + 3) = v10;
  *((void *)v19 + 4) = a2;
  *((void *)v19 + 5) = a3;
  uint64_t v20 = a3;
  uint64_t v21 = v27;
  uint64_t v22 = v28;
  *((void *)v19 + 6) = a4;
  *((void *)v19 + sub_6C3C(v0 + 7) = v21;
  *((void *)v19 + 8) = v22;
  (*(void (**)(char *, char *, uint64_t))(v13 + 32))(&v19[v18], v16, v12);
  swift_retain(a2);
  swift_retain(v20);
  id v23 = a4;
  swift_retain(v22);
  sub_1D99C4(v26, (uint64_t)sub_1DA5B8, (uint64_t)v19, v25, v10);
  return swift_release(v19);
}

uint64_t sub_1D31D4( uint64_t a1, void *a2, uint64_t a3, uint64_t a4, void (*a5)(uint64_t), uint64_t a6, uint64_t a7)
{
  uint64_t v145 = a7;
  uint64_t v165 = a6;
  uint64_t v166 = a5;
  uint64_t v162 = a4;
  uint64_t v161 = a3;
  uint64_t v160 = a2;
  uint64_t v144 = *a2;
  uint64_t v8 = sub_6C5C(&qword_2845A0);
  __chkstk_darwin(v8);
  uint64_t v163 = (char *)&v139 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v10 = sub_6C5C((uint64_t *)&unk_286BA0);
  __chkstk_darwin(v10);
  uint64_t v146 = (uint64_t)&v139 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v12 = sub_6C5C((uint64_t *)&unk_286BD0);
  uint64_t v13 = __chkstk_darwin(v12);
  uint64_t v150 = (char *)&v139 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v13);
  uint64_t v16 = (char *)&v139 - v15;
  uint64_t v17 = sub_6C5C(&qword_2845A8);
  uint64_t v18 = __chkstk_darwin(v17);
  uint64_t v149 = (char *)&v139 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v18);
  uint64_t v153 = (char *)&v139 - v20;
  uint64_t v142 = type metadata accessor for AdditionalMetricsDescription.StatusReason(0LL);
  uint64_t v141 = *(void *)(v142 - 8);
  __chkstk_darwin(v142);
  char v140 = (char *)&v139 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v159 = type metadata accessor for AdditionalMetricsDescription.SourceFunction(0LL);
  uint64_t v157 = *(void *)(v159 - 8);
  __chkstk_darwin(v159);
  uint64_t v156 = (char *)&v139 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v158 = type metadata accessor for AdditionalMetricsDescription.ModuleName(0LL);
  uint64_t v155 = *(void *)(v158 - 8);
  __chkstk_darwin(v158);
  uint64_t v154 = (char *)&v139 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v24 = type metadata accessor for Logger(0LL);
  uint64_t v25 = *(void *)(v24 - 8);
  uint64_t v26 = __chkstk_darwin(v24);
  unint64_t v148 = (char *)&v139 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v28 = __chkstk_darwin(v26);
  uint64_t v30 = (char *)&v139 - v29;
  __chkstk_darwin(v28);
  uint64_t v32 = (char *)&v139 - v31;
  if (qword_283888 != -1) {
    swift_once(&qword_283888, sub_BFC5C);
  }
  uint64_t v33 = sub_6960(v24, (uint64_t)qword_2969C8);
  uint64_t v34 = *(void (**)(char *, uint64_t, uint64_t))(v25 + 16);
  uint64_t v151 = v33;
  char v152 = v34;
  ((void (*)(char *))v34)(v32);
  uint64_t v35 = sub_FF10(a1, (uint64_t)&v172, (uint64_t *)&unk_286C60);
  uint64_t v36 = (os_log_s *)Logger.logObject.getter(v35);
  os_log_type_t v37 = static os_log_type_t.debug.getter();
  BOOL v38 = os_log_type_enabled(v36, v37);
  unint64_t v147 = v16;
  if (v38)
  {
    uint64_t v39 = swift_slowAlloc(22LL, -1LL);
    uint64_t v139 = v24;
    uint64_t v40 = v39;
    uint64_t v41 = swift_slowAlloc(64LL, -1LL);
    uint64_t v169 = v41;
    *(_DWORD *)uint64_t v40 = 136315394;
    sub_FF10((uint64_t)&v172, (uint64_t)&v167, (uint64_t *)&unk_286C60);
    uint64_t v42 = sub_6C5C((uint64_t *)&unk_286C60);
    uint64_t v43 = String.init<A>(describing:)(&v167, v42);
    uint64_t v143 = (uint64_t)v30;
    uint64_t v44 = a1;
    unint64_t v46 = v45;
    uint64_t v167 = sub_6978(v43, v45, &v169);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v167, v168);
    unint64_t v47 = v46;
    a1 = v44;
    swift_bridgeObjectRelease(v47);
    uint64_t v48 = sub_1F6CC((uint64_t)&v172, (uint64_t *)&unk_286C60);
    *(_WORD *)(v40 + 1sub_6C3C(v0 + 2) = 2082;
    uint64_t v49 = static Insights.responseFramework.getter(v48);
    unint64_t v51 = v50;
    uint64_t v167 = sub_6978(v49, v50, &v169);
    uint64_t v30 = (char *)v143;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v167, v168);
    swift_bridgeObjectRelease(v51);
    _os_log_impl( &dword_0,  v36,  v37,  "CommonNeedsConfirmationStrategy#promptForConfirmationWithRF returning final output: %s Insights:%{public}s",  (uint8_t *)v40,  0x16u);
    swift_arrayDestroy(v41, 2LL, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v41, -1LL, -1LL);
    uint64_t v52 = v40;
    uint64_t v24 = v139;
    swift_slowDealloc(v52, -1LL, -1LL);
  }

  else
  {
    sub_1F6CC((uint64_t)&v172, (uint64_t *)&unk_286C60);
  }

  uint64_t v53 = *(void (**)(char *, uint64_t))(v25 + 8);
  v53(v32, v24);
  sub_FF10(a1, (uint64_t)&v172, (uint64_t *)&unk_286C60);
  uint64_t v164 = a1;
  if ((v175 & 1) != 0)
  {
    uint64_t v54 = v172;
    v152(v30, v151, v24);
    swift_errorRetain(v54);
    uint64_t v55 = swift_errorRetain(v54);
    uint64_t v56 = (os_log_s *)Logger.logObject.getter(v55);
    os_log_type_t v57 = static os_log_type_t.error.getter();
    BOOL v58 = os_log_type_enabled(v56, v57);
    uint64_t v153 = (char *)v54;
    if (v58)
    {
      uint64_t v59 = swift_slowAlloc(22LL, -1LL);
      uint64_t v60 = swift_slowAlloc(64LL, -1LL);
      uint64_t v172 = v60;
      *(_DWORD *)uint64_t v59 = 136446466;
      uint64_t v143 = (uint64_t)v30;
      uint64_t v167 = v54;
      swift_errorRetain(v54);
      uint64_t v61 = sub_6C5C(&qword_284010);
      uint64_t v62 = String.init<A>(describing:)(&v167, v61);
      unint64_t v64 = v63;
      uint64_t v167 = sub_6978(v62, v63, &v172);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v167, v168);
      swift_bridgeObjectRelease(v64);
      swift_errorRelease(v54);
      uint64_t v65 = swift_errorRelease(v54);
      *(_WORD *)(v59 + 1sub_6C3C(v0 + 2) = 2082;
      uint64_t v66 = static Insights.responseFramework.getter(v65);
      unint64_t v68 = v67;
      uint64_t v167 = sub_6978(v66, v67, &v172);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v167, v168);
      swift_bridgeObjectRelease(v68);
      _os_log_impl( &dword_0,  v56,  v57,  "CommonNeedsConfirmationStrategy#promptForConfirmationWithRF failed with error: %{public}s, Insights:%{public}s",  (uint8_t *)v59,  0x16u);
      swift_arrayDestroy(v60, 2LL, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v60, -1LL, -1LL);
      swift_slowDealloc(v59, -1LL, -1LL);

      uint64_t v69 = (char *)v143;
    }

    else
    {
      swift_errorRelease(v54);
      swift_errorRelease(v54);

      uint64_t v69 = v30;
    }

    v53(v69, v24);
    uint64_t v93 = v155;
    uint64_t v94 = v154;
    uint64_t v95 = v158;
    (*(void (**)(char *, void, uint64_t))(v155 + 104))( v154,  enum case for AdditionalMetricsDescription.ModuleName.cncs(_:),  v158);
    uint64_t v96 = v157;
    uint64_t v97 = v156;
    uint64_t v98 = v159;
    (*(void (**)(char *, void, uint64_t))(v157 + 104))( v156,  enum case for AdditionalMetricsDescription.SourceFunction.prompt(_:),  v159);
    swift_getErrorValue(v153, v171, v170);
    uint64_t v99 = Error.localizedDescription.getter(v170[1], v170[2]);
    uint64_t v101 = v100;
    char v152 = (void (*)(char *, uint64_t, uint64_t))static AdditionalMetricsDescription.encodeInfo(module:source:statusReason:extraInfo:)( v94,  v97,  v99,  v100,  0LL,  1LL);
    uint64_t v103 = v102;
    __n128 v104 = swift_bridgeObjectRelease(v101);
    (*(void (**)(char *, uint64_t, __n128))(v96 + 8))(v97, v98, v104);
    (*(void (**)(char *, uint64_t))(v93 + 8))(v94, v95);
    uint64_t v105 = v160[16];
    uint64_t v106 = v160[17];
    sub_6EA8(v160 + 13, v105);
    uint64_t v107 = enum case for ActivityType.failed(_:);
    uint64_t v108 = type metadata accessor for ActivityType(0LL);
    uint64_t v109 = *(void *)(v108 - 8);
    uint64_t v110 = (uint64_t)v149;
    (*(void (**)(char *, uint64_t, uint64_t))(v109 + 104))(v149, v107, v108);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v109 + 56))(v110, 0LL, 1LL, v108);
    uint64_t v111 = type metadata accessor for TemplatingResult(0LL);
    uint64_t v112 = (uint64_t)v150;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v111 - 8) + 56LL))(v150, 1LL, 1LL, v111);
    uint64_t v113 = enum case for SiriKitReliabilityCodes.renderingError(_:);
    uint64_t v114 = type metadata accessor for SiriKitReliabilityCodes(0LL);
    uint64_t v115 = *(void *)(v114 - 8);
    uint64_t v116 = (uint64_t)v163;
    (*(void (**)(char *, uint64_t, uint64_t))(v115 + 104))(v163, v113, v114);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v115 + 56))(v116, 0LL, 1LL, v114);
    dispatch thunk of SiriKitTaskLoggingProviding.submitMetric(app:intent:activityType:templateResult:statusReason:description:mediaItemType:)( v161,  v162,  v110,  v112,  v116,  v152,  v103,  0LL,  1,  v105,  v106);
    swift_bridgeObjectRelease(v103);
    sub_1F6CC(v116, &qword_2845A0);
    sub_1F6CC(v112, (uint64_t *)&unk_286BD0);
    sub_1F6CC(v110, &qword_2845A8);
    v166(v164);
    return swift_errorRelease(v153);
  }

  else
  {
    uint64_t v150 = (char *)v53;
    sub_1F6CC((uint64_t)&v172, (uint64_t *)&unk_286C60);
    uint64_t v70 = v155;
    uint64_t v71 = v154;
    uint64_t v72 = v158;
    (*(void (**)(char *, void, uint64_t))(v155 + 104))( v154,  enum case for AdditionalMetricsDescription.ModuleName.cncs(_:),  v158);
    uint64_t v73 = v157;
    uint64_t v74 = v156;
    uint64_t v75 = v159;
    (*(void (**)(char *, void, uint64_t))(v157 + 104))( v156,  enum case for AdditionalMetricsDescription.SourceFunction.prompt(_:),  v159);
    uint64_t v76 = v141;
    uint64_t v77 = v140;
    uint64_t v78 = v142;
    (*(void (**)(char *, void, uint64_t))(v141 + 104))( v140,  enum case for AdditionalMetricsDescription.StatusReason.success(_:),  v142);
    uint64_t v143 = static AdditionalMetricsDescription.encodeInfo(module:source:statusReason:extraInfo:)( v71,  v74,  v77,  0LL,  1LL);
    uint64_t v149 = v79;
    (*(void (**)(char *, uint64_t))(v76 + 8))(v77, v78);
    (*(void (**)(char *, uint64_t))(v73 + 8))(v74, v75);
    (*(void (**)(char *, uint64_t))(v70 + 8))(v71, v72);
    sub_157C4((uint64_t)(v160 + 13), (uint64_t)&v172);
    uint64_t v81 = v173;
    uint64_t v80 = v174;
    sub_6EA8(&v172, v173);
    uint64_t v82 = enum case for ActivityType.showInterstitial(_:);
    uint64_t v83 = type metadata accessor for ActivityType(0LL);
    uint64_t v84 = *(void *)(v83 - 8);
    uint64_t v85 = v153;
    (*(void (**)(char *, uint64_t, uint64_t))(v84 + 104))(v153, v82, v83);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v84 + 56))(v85, 0LL, 1LL, v83);
    uint64_t v87 = type metadata accessor for CommonNeedsConfirmationStrategy.ConfirmationOutputContext( 0LL,  *(void *)(v144 + 80),  *(void *)(v144 + 88),  v86);
    uint64_t v88 = v146;
    sub_FF10(v145 + *(int *)(v87 + 44), v146, (uint64_t *)&unk_286BA0);
    uint64_t v89 = sub_6C5C(&qword_289340);
    uint64_t v90 = v24;
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v89 - 8) + 48LL))(v88, 1LL, v89) == 1)
    {
      sub_1F6CC(v88, (uint64_t *)&unk_286BA0);
      uint64_t v91 = type metadata accessor for TemplatingResult(0LL);
      uint64_t v92 = (uint64_t)v147;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v91 - 8) + 56LL))(v147, 1LL, 1LL, v91);
    }

    else
    {

      uint64_t v118 = type metadata accessor for TemplatingResult(0LL);
      uint64_t v119 = *(void *)(v118 - 8);
      uint64_t v92 = (uint64_t)v147;
      (*(void (**)(char *, uint64_t, uint64_t))(v119 + 32))(v147, v88, v118);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v119 + 56))(v92, 0LL, 1LL, v118);
    }

    uint64_t v120 = enum case for SiriKitReliabilityCodes.success(_:);
    uint64_t v121 = type metadata accessor for SiriKitReliabilityCodes(0LL);
    uint64_t v122 = *(void *)(v121 - 8);
    uint64_t v123 = (uint64_t)v163;
    (*(void (**)(char *, uint64_t, uint64_t))(v122 + 104))(v163, v120, v121);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v122 + 56))(v123, 0LL, 1LL, v121);
    uint64_t v138 = v81;
    uint64_t v124 = (uint64_t)v153;
    uint64_t v125 = v149;
    dispatch thunk of SiriKitTaskLoggingProviding.submitMetric(app:intent:activityType:templateResult:statusReason:description:mediaItemType:)( v161,  v162,  v153,  v92,  v123,  v143,  v149,  0LL,  1,  v138,  v80);
    swift_bridgeObjectRelease(v125);
    sub_1F6CC(v123, &qword_2845A0);
    sub_1F6CC(v92, (uint64_t *)&unk_286BD0);
    sub_1F6CC(v124, &qword_2845A8);
    sub_6C3C(&v172);
    uint64_t v126 = v148;
    uint64_t v127 = v90;
    uint64_t v128 = ((uint64_t (*)(char *, uint64_t, uint64_t))v152)(v148, v151, v90);
    uint64_t v129 = (os_log_s *)Logger.logObject.getter(v128);
    os_log_type_t v130 = static os_log_type_t.debug.getter();
    BOOL v131 = os_log_type_enabled(v129, v130);
    uint64_t v132 = v164;
    if (v131)
    {
      uint64_t v133 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
      uint64_t v134 = swift_slowAlloc(32LL, -1LL);
      uint64_t v172 = v134;
      *(_DWORD *)uint64_t v133 = 136446210;
      uint64_t v135 = static Insights.responseFramework.getter(v134);
      unint64_t v137 = v136;
      uint64_t v167 = sub_6978(v135, v136, &v172);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v167, v168);
      swift_bridgeObjectRelease(v137);
      _os_log_impl( &dword_0,  v129,  v130,  "CommonNeedsConfirmationStrategy#promptForConfirmationWithRF completed successfully. Insights:%{public}s",  v133,  0xCu);
      swift_arrayDestroy(v134, 1LL, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v134, -1LL, -1LL);
      swift_slowDealloc(v133, -1LL, -1LL);
    }

    ((void (*)(char *, uint64_t))v150)(v126, v127);
    return ((uint64_t (*)(uint64_t))v166)(v132);
  }

uint64_t sub_1D3FE8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v8 = sub_6C5C((uint64_t *)&unk_286BA0);
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)&v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v11 = type metadata accessor for ResponseMode(0LL);
  __chkstk_darwin(v11);
  uint64_t v13 = (char *)&v29 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v14 = sub_6C5C((uint64_t *)&unk_286C50);
  __chkstk_darwin(v14);
  uint64_t v16 = (char *)&v29 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v18 = type metadata accessor for CommonNeedsConfirmationStrategy.ConfirmationOutputContext(0LL, a4, a5, v17);
  sub_FF10(a2 + *(int *)(v18 + 48), (uint64_t)v16, (uint64_t *)&unk_286C50);
  uint64_t v19 = OutputGenerationManifest.nlContextUpdate.setter(v16);
  uint64_t v20 = SiriEnvironment.currentRequest.getter(v19);
  CurrentRequest.responseMode.getter(v20);
  swift_release(v20);
  OutputGenerationManifest.responseMode.setter(v13);
  sub_FF10(a2 + *(int *)(v18 + 44), (uint64_t)v10, (uint64_t *)&unk_286BA0);
  uint64_t v21 = sub_6C5C(&qword_289340);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v21 - 8) + 48LL))(v10, 1LL, v21) == 1)
  {
    sub_1F6CC((uint64_t)v10, (uint64_t *)&unk_286BA0);
    uint64_t v22 = 0LL;
    uint64_t v23 = 0LL;
  }

  else
  {
    uint64_t v24 = *(void **)&v10[*(int *)(v21 + 48)];
    id v25 = [v24 catId];

    uint64_t v22 = static String._unconditionallyBridgeFromObjectiveC(_:)(v25);
    uint64_t v23 = v26;

    uint64_t v27 = type metadata accessor for TemplatingResult(0LL);
    (*(void (**)(char *, uint64_t))(*(void *)(v27 - 8) + 8LL))(v10, v27);
  }

  OutputGenerationManifest.responseViewId.setter(v22, v23);
  OutputGenerationManifest.listenAfterSpeaking.setter(1LL);
  return OutputGenerationManifest.canUseServerTTS.setter(1LL);
}

uint64_t sub_1D4218(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[9] = a3;
  v4[10] = a4;
  v4[7] = a1;
  v4[8] = a2;
  return swift_task_switch(sub_1D4234, 0LL, 0LL);
}

uint64_t sub_1D4234()
{
  uint64_t v1 = v0[8];
  uint64_t v2 = (void *)v0[9];
  uint64_t v3 = type metadata accessor for ResponseFactory(0LL);
  swift_allocObject(v3, *(unsigned int *)(v3 + 48), *(unsigned __int16 *)(v3 + 52));
  v0[11] = ResponseFactory.init()();
  uint64_t v4 = type metadata accessor for SiriAudioSnippets(0LL);
  v0[5] = v4;
  v0[6] = sub_10430( (unint64_t *)&qword_286CA0,  (uint64_t (*)(uint64_t))&type metadata accessor for SiriAudioSnippets,  (uint64_t)&protocol conformance descriptor for SiriAudioSnippets);
  uint64_t v5 = sub_10974(v0 + 2);
  (*(void (**)(void *, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16LL))(v5, v1, v4);
  uint64_t v6 = sub_6C5C(&qword_287980);
  uint64_t v7 = swift_allocObject(v6, 40LL, 7LL);
  *(_OWORD *)(v7 + swift_weakDestroy(v0 + 16) = xmmword_214980;
  *(void *)(v7 + 3sub_6C3C(v0 + 2) = v2;
  uint64_t v13 = v7;
  specialized Array._endMutation()(v7);
  v0[12] = v13;
  id v9 = v2;
  uint64_t v10 = (void *)swift_task_alloc(v8);
  v0[13] = v10;
  *uint64_t v10 = v0;
  v10[1] = sub_1D4370;
  return ((uint64_t (*)(void, void *, uint64_t, void))v12)(v0[7], v0 + 2, v13, v0[10]);
}

uint64_t sub_1D4370()
{
  uint64_t v1 = (void *)(*v0 + 16);
  uint64_t v2 = *(void *)(*v0 + 96);
  uint64_t v3 = *(void *)(*v0 + 88);
  uint64_t v5 = *v0;
  swift_task_dealloc(*(void *)(*v0 + 104));
  swift_release(v3);
  swift_bridgeObjectRelease(v2);
  sub_6C3C(v1);
  return (*(uint64_t (**)(void))(v5 + 8))();
}

uint64_t sub_1D43E4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[3] = a2;
  v3[4] = a3;
  v3[2] = a1;
  return swift_task_switch(sub_1D4400, 0LL, 0LL);
}

uint64_t sub_1D4400()
{
  uint64_t v1 = (void *)v0[3];
  uint64_t v2 = type metadata accessor for ResponseFactory(0LL);
  swift_allocObject(v2, *(unsigned int *)(v2 + 48), *(unsigned __int16 *)(v2 + 52));
  v0[5] = ResponseFactory.init()();
  uint64_t v3 = sub_6C5C(&qword_287980);
  uint64_t v4 = swift_allocObject(v3, 40LL, 7LL);
  *(_OWORD *)(v4 + swift_weakDestroy(v0 + 16) = xmmword_214980;
  *(void *)(v4 + 3sub_6C3C(v0 + 2) = v1;
  uint64_t v10 = v4;
  specialized Array._endMutation()(v4);
  v0[6] = v10;
  id v6 = v1;
  uint64_t v7 = (void *)swift_task_alloc(v5);
  v0[7] = v7;
  *uint64_t v7 = v0;
  v7[1] = sub_1D44E8;
  return ((uint64_t (*)(void, uint64_t, void))v9)(v0[2], v10, v0[4]);
}

uint64_t sub_1D44E8()
{
  uint64_t v1 = *(void *)(*v0 + 48);
  uint64_t v2 = *(void *)(*v0 + 40);
  uint64_t v4 = *v0;
  swift_task_dealloc(*(void *)(*v0 + 56));
  swift_bridgeObjectRelease(v1);
  swift_release(v2);
  return (*(uint64_t (**)(void))(v4 + 8))();
}

uint64_t sub_1D4548(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + swift_weakDestroy(v0 + 16) = a1;
  *(void *)(v2 + 24) = a2;
  return swift_task_switch(sub_1D4560, 0LL, 0LL);
}

uint64_t sub_1D4560()
{
  uint64_t v1 = type metadata accessor for ResponseFactory(0LL);
  swift_allocObject(v1, *(unsigned int *)(v1 + 48), *(unsigned __int16 *)(v1 + 52));
  v0[4] = ResponseFactory.init()();
  v0[5] = v2;
  *uint64_t v2 = v0;
  v2[1] = sub_1D45EC;
  return ((uint64_t (*)(void, void *, void))v4)(v0[2], _swiftEmptyArrayStorage, v0[3]);
}

uint64_t sub_1D45EC()
{
  uint64_t v1 = *(void *)(*v0 + 32);
  uint64_t v3 = *v0;
  swift_task_dealloc(*(void *)(*v0 + 40));
  swift_release(v1);
  return (*(uint64_t (**)(void))(v3 + 8))();
}

uint64_t sub_1D4640( uint64_t *a1, uint64_t *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v14 = *a2;
  uint64_t v15 = *a1;
  uint64_t v16 = a1[1];
  uint64_t v17 = swift_allocObject(&unk_275188, 32LL, 7LL);
  *(void *)(v17 + swift_weakDestroy(v0 + 16) = v15;
  *(void *)(v17 + 24) = v16;
  uint64_t v18 = a2[2];
  uint64_t v19 = (void *)swift_allocObject(&unk_2751B0, 56LL, 7LL);
  v19[2] = *(void *)(v14 + 80);
  v19[3] = *(void *)(v14 + 88);
  v19[4] = sub_64F88;
  v19[5] = v17;
  v19[6] = a8;
  uint64_t v20 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t (*)(uint64_t), void *))(*(void *)v18 + 208LL);
  swift_retain(v16);
  swift_retain(a8);
  v20(a3, a4, a5, a6, a7, sub_1DAD00, v19);
  return swift_release(v19);
}

uint64_t sub_1D4738( uint64_t a1, uint64_t (*a2)(uint64_t), uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v32[1] = a3;
  uint64_t v33 = a2;
  v32[0] = a1;
  uint64_t v9 = sub_6C5C((uint64_t *)&unk_286BA0);
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)v32 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v12 = sub_6C5C(&qword_289340);
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  uint64_t v15 = (char *)v32 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v16 = sub_6C5C((uint64_t *)&unk_286BB0);
  __chkstk_darwin(v16);
  uint64_t v18 = (uint64_t *)((char *)v32 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  uint64_t v20 = type metadata accessor for CommonNeedsConfirmationStrategy.ConfirmationOutputContext(0LL, a5, a6, v19);
  uint64_t v21 = swift_projectBox(a4);
  sub_FF10(v32[0], (uint64_t)v18, (uint64_t *)&unk_286BB0);
  if (swift_getEnumCaseMultiPayload(v18, v16) == 1)
  {
    uint64_t v22 = *v18;
    swift_beginAccess(v21, v34, 1LL, 0LL);
    uint64_t v23 = *(int *)(v20 + 40);
    uint64_t v24 = *(void *)(v21 + v23);
    *(void *)(v21 + v23) = v22;
    uint64_t v25 = swift_errorRelease(v24);
  }

  else
  {
    uint64_t v26 = *(int *)(v12 + 48);
    uint64_t v27 = type metadata accessor for TemplatingResult(0LL);
    uint64_t v28 = *(void (**)(char *, uint64_t *, uint64_t))(*(void *)(v27 - 8) + 32LL);
    v28(v15, v18, v27);
    uint64_t v29 = *(uint64_t *)((char *)v18 + v26);
    *(void *)&v15[v26] = v29;
    uint64_t v30 = *(int *)(v12 + 48);
    v28(v11, (uint64_t *)v15, v27);
    *(void *)&v11[v30] = v29;
    (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v11, 0LL, 1LL, v12);
    swift_beginAccess(v21, v34, 1LL, 0LL);
    uint64_t v25 = sub_DD950((uint64_t)v11, v21 + *(int *)(v20 + 44), (uint64_t *)&unk_286BA0);
  }

  return v33(v25);
}

uint64_t sub_1D4944( uint64_t *a1, uint64_t *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v9 = *a2;
  uint64_t v11 = *a1;
  uint64_t v10 = a1[1];
  uint64_t v12 = swift_allocObject(&unk_275138, 32LL, 7LL);
  *(void *)(v12 + swift_weakDestroy(v0 + 16) = v11;
  *(void *)(v12 + 24) = v10;
  uint64_t v13 = (void *)swift_allocObject(&unk_275160, 56LL, 7LL);
  v13[2] = *(void *)(v9 + 80);
  v13[3] = *(void *)(v9 + 88);
  v13[4] = sub_1646C;
  v13[5] = v12;
  v13[6] = a8;
  swift_retain(v10);
  swift_retain(a8);
  sub_3B138((void (*)(uint64_t))sub_1DACA8, (uint64_t)v13);
  return swift_release(v13);
}

uint64_t sub_1D49EC( uint64_t a1, uint64_t (*a2)(uint64_t), uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v9 = type metadata accessor for CommonNeedsConfirmationStrategy.ConfirmationOutputContext(0LL, a5, a6, a4);
  uint64_t v10 = swift_projectBox(a4);
  swift_beginAccess(v10, v13, 1LL, 0LL);
  uint64_t v11 = sub_1DACB4(a1, v10 + *(int *)(v9 + 36));
  return a2(v11);
}

uint64_t sub_1D4A70(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5 = *a3;
  uint64_t v6 = sub_6C5C((uint64_t *)&unk_286C50);
  __chkstk_darwin(v6);
  uint64_t v8 = &v17[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL) - 8];
  uint64_t v10 = *(void (**)(uint64_t))a1;
  uint64_t v9 = *(void *)(a1 + 8);
  uint64_t v12 = type metadata accessor for CommonNeedsConfirmationStrategy.ConfirmationOutputContext( 0LL,  *(void *)(v5 + 80),  *(void *)(v5 + 88),  v11);
  uint64_t v13 = swift_projectBox(a2);
  swift_getAssociatedTypeWitness(0LL);
  swift_getAssociatedTypeWitness(0LL);
  swift_retain(v9);
  sub_98E08((uint64_t)v8);
  swift_beginAccess(v13, v17, 1LL, 0LL);
  uint64_t v14 = sub_DD950((uint64_t)v8, v13 + *(int *)(v12 + 48), (uint64_t *)&unk_286C50);
  v10(v14);
  return swift_release(v9);
}

uint64_t sub_1D4BB4(uint64_t a1, void (*a2)(void), uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v8 = type metadata accessor for CommonNeedsConfirmationStrategy.ConfirmationOutputContext(0LL, a4, a5, a4);
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v34 - v10;
  uint64_t v12 = type metadata accessor for Logger(0LL);
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  uint64_t v15 = (char *)&v34 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v16 = swift_projectBox(a1);
  if (qword_283888 != -1) {
    swift_once(&qword_283888, sub_BFC5C);
  }
  uint64_t v17 = sub_6960(v12, (uint64_t)qword_2969C8);
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v15, v17, v12);
  uint64_t v18 = swift_retain_n(a1, 2LL);
  uint64_t v19 = Logger.logObject.getter(v18);
  uint64_t v40 = v13;
  uint64_t v20 = (os_log_s *)v19;
  os_log_type_t v21 = static os_log_type_t.debug.getter();
  int v38 = v21;
  if (os_log_type_enabled(v20, v21))
  {
    uint64_t v22 = swift_slowAlloc(22LL, -1LL);
    uint64_t v39 = v9;
    uint64_t v23 = v22;
    uint64_t v35 = swift_slowAlloc(64LL, -1LL);
    v43[0] = v35;
    *(_DWORD *)uint64_t v23 = 136446466;
    uint64_t v34 = v23 + 4;
    swift_beginAccess(v16, v42, 0LL, 0LL);
    (*(void (**)(char *, uint64_t, uint64_t))(v39 + 16))(v11, v16, v8);
    uint64_t v24 = String.init<A>(describing:)(v11, v8);
    uint64_t v36 = a3;
    unint64_t v26 = v25;
    uint64_t v41 = sub_6978(v24, v25, v43);
    os_log_type_t v37 = a2;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v41, v42);
    swift_release_n(a1, 2LL);
    swift_bridgeObjectRelease(v26);
    *(_WORD *)(v23 + 1sub_6C3C(v0 + 2) = 2082;
    uint64_t v28 = static Insights.responseFramework.getter(v27);
    unint64_t v30 = v29;
    uint64_t v41 = sub_6978(v28, v29, v43);
    a2 = v37;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v41, v42);
    swift_bridgeObjectRelease(v30);
    _os_log_impl( &dword_0,  v20,  (os_log_type_t)v38,  "CommonNeedsConfirmationStrategy#confirmationOutputContext created output context:  %{public}s Insights:%{public}s",  (uint8_t *)v23,  0x16u);
    uint64_t v31 = v35;
    swift_arrayDestroy(v35, 2LL, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v31, -1LL, -1LL);
    uint64_t v32 = v23;
    uint64_t v9 = v39;
    swift_slowDealloc(v32, -1LL, -1LL);
  }

  else
  {

    swift_release_n(a1, 2LL);
  }

  (*(void (**)(char *, uint64_t))(v40 + 8))(v15, v12);
  swift_beginAccess(v16, v43, 0LL, 0LL);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, v16, v8);
  a2(v11);
  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
}

uint64_t sub_1D4ECC( uint64_t a1, uint64_t a2, void (*a3)(void, void, void), void *a4, uint64_t a5, uint64_t a6, void (*a7)(uint64_t *), uint64_t a8)
{
  uint64_t v129 = a7;
  uint64_t v130 = a8;
  uint64_t v127 = a5;
  uint64_t v128 = a6;
  uint64_t v132 = a4;
  uint64_t v121 = a3;
  uint64_t v123 = a2;
  uint64_t v120 = (char *)a1;
  uint64_t v8 = sub_6C5C((uint64_t *)&unk_286C50);
  __chkstk_darwin(v8);
  uint64_t v119 = (char *)&v105 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v117 = type metadata accessor for AdditionalMetricsDescription.StatusReason(0LL);
  uint64_t v116 = *(void *)(v117 - 8);
  __chkstk_darwin(v117);
  uint64_t v115 = (char *)&v105 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v131 = sub_6C5C(&qword_289340);
  uint64_t v11 = __chkstk_darwin(v131);
  uint64_t v118 = (char *)&v105 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v11);
  uint64_t v14 = (char *)&v105 - v13;
  uint64_t v15 = sub_6C5C(&qword_2845A0);
  __chkstk_darwin(v15);
  uint64_t v126 = (char *)&v105 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v17 = sub_6C5C((uint64_t *)&unk_286BD0);
  __chkstk_darwin(v17);
  uint64_t v125 = (char *)&v105 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v19 = sub_6C5C(&qword_2845A8);
  __chkstk_darwin(v19);
  uint64_t v124 = (char *)&v105 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v122 = (void *)type metadata accessor for Logger(0LL);
  uint64_t v133 = *(v122 - 1);
  uint64_t v21 = __chkstk_darwin(v122);
  uint64_t v113 = (char *)&v105 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v21);
  uint64_t v114 = (char *)&v105 - v23;
  uint64_t v24 = type metadata accessor for AdditionalMetricsDescription.SourceFunction(0LL);
  uint64_t v25 = *(void *)(v24 - 8);
  __chkstk_darwin(v24);
  uint64_t v27 = (char *)&v105 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v28 = type metadata accessor for AdditionalMetricsDescription.ModuleName(0LL);
  uint64_t v29 = *(void *)(v28 - 8);
  __chkstk_darwin(v28);
  uint64_t v31 = (char *)&v105 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v32 = sub_6C5C((uint64_t *)&unk_286BB0);
  __chkstk_darwin(v32);
  uint64_t v34 = (uint64_t *)((char *)&v105 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  sub_FF10((uint64_t)v120, (uint64_t)v34, (uint64_t *)&unk_286BB0);
  if (swift_getEnumCaseMultiPayload(v34, v32) == 1)
  {
    uint64_t v35 = *v34;
    (*(void (**)(char *, void, uint64_t))(v29 + 104))( v31,  enum case for AdditionalMetricsDescription.ModuleName.cncs(_:),  v28);
    (*(void (**)(char *, void, uint64_t))(v25 + 104))( v27,  enum case for AdditionalMetricsDescription.SourceFunction.cnclParamRejResp(_:),  v24);
    uint64_t v131 = v35;
    swift_getErrorValue(v35, v137, v136);
    uint64_t v36 = Error.localizedDescription.getter(v136[1], v136[2]);
    uint64_t v38 = v37;
    uint64_t v121 = (void (*)(void, void, void))static AdditionalMetricsDescription.encodeInfo(module:source:parameterName:statusReason:intentResolutionResult:extraInfo:)( v31,  v27,  v123,  v121,  v36,  v37,  0LL,  0LL,  1);
    uint64_t v123 = v39;
    __n128 v40 = swift_bridgeObjectRelease(v38);
    (*(void (**)(char *, uint64_t, __n128))(v25 + 8))(v27, v24, v40);
    (*(void (**)(char *, uint64_t))(v29 + 8))(v31, v28);
    if (qword_283888 != -1) {
      swift_once(&qword_283888, sub_BFC5C);
    }
    uint64_t v41 = v122;
    uint64_t v42 = sub_6960((uint64_t)v122, (uint64_t)qword_2969C8);
    uint64_t v43 = v114;
    uint64_t v44 = (*(uint64_t (**)(char *, uint64_t, void *))(v133 + 16))(v114, v42, v41);
    unint64_t v45 = (os_log_s *)Logger.logObject.getter(v44);
    os_log_type_t v46 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v45, v46))
    {
      unint64_t v47 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)unint64_t v47 = 0;
      _os_log_impl( &dword_0,  v45,  v46,  "CommonNeedsConfirmationStrategy#makeIntentCancelledByParameterRejectionResponse rejected parameter failure",  v47,  2u);
      swift_slowDealloc(v47, -1LL, -1LL);
    }

    (*(void (**)(char *, void *))(v133 + 8))(v43, v41);
    uint64_t v48 = v132[16];
    uint64_t v49 = v132[17];
    sub_6EA8(v132 + 13, v48);
    uint64_t v50 = enum case for ActivityType.failed(_:);
    uint64_t v51 = type metadata accessor for ActivityType(0LL);
    uint64_t v52 = *(void *)(v51 - 8);
    uint64_t v53 = (uint64_t)v124;
    (*(void (**)(char *, uint64_t, uint64_t))(v52 + 104))(v124, v50, v51);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v52 + 56))(v53, 0LL, 1LL, v51);
    uint64_t v54 = type metadata accessor for TemplatingResult(0LL);
    uint64_t v55 = (uint64_t)v125;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v54 - 8) + 56LL))(v125, 1LL, 1LL, v54);
    uint64_t v56 = enum case for SiriKitReliabilityCodes.renderingError(_:);
    uint64_t v57 = type metadata accessor for SiriKitReliabilityCodes(0LL);
    uint64_t v58 = *(void *)(v57 - 8);
    uint64_t v59 = (uint64_t)v126;
    (*(void (**)(char *, uint64_t, uint64_t))(v58 + 104))(v126, v56, v57);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v58 + 56))(v59, 0LL, 1LL, v57);
    uint64_t v104 = v48;
    uint64_t v60 = v123;
    dispatch thunk of SiriKitTaskLoggingProviding.submitMetric(app:intent:activityType:templateResult:statusReason:description:mediaItemType:)( v127,  v128,  v53,  v55,  v59,  v121,  v123,  0LL,  1,  v104,  v49);
    swift_bridgeObjectRelease(v60);
    sub_1F6CC(v59, &qword_2845A0);
    sub_1F6CC(v55, (uint64_t *)&unk_286BD0);
    sub_1F6CC(v53, &qword_2845A8);
    uint64_t v61 = v131;
    v134[0] = v131;
    char v135 = 1;
    swift_errorRetain(v131);
    v129(v134);
    swift_errorRelease(v61);
    return sub_1F6CC((uint64_t)v134, (uint64_t *)&unk_286C60);
  }

  else
  {
    uint64_t v107 = v31;
    uint64_t v108 = v29;
    uint64_t v109 = v25;
    uint64_t v110 = v28;
    unint64_t v63 = v121;
    uint64_t v64 = *(int *)(v131 + 48);
    uint64_t v65 = type metadata accessor for TemplatingResult(0LL);
    uint64_t v114 = *(char **)(v65 - 8);
    uint64_t v66 = (void (*)(char *, uint64_t, uint64_t))*((void *)v114 + 4);
    uint64_t v112 = v65;
    uint64_t v106 = v66;
    ((void (*)(char *, uint64_t *))v66)(v14, v34);
    unint64_t v67 = *(void **)((char *)v34 + v64);
    *(void *)&v14[v64] = v67;
    uint64_t v68 = qword_283888;
    id v111 = v67;
    if (v68 != -1) {
      swift_once(&qword_283888, sub_BFC5C);
    }
    uint64_t v120 = v14;
    uint64_t v69 = v122;
    uint64_t v70 = sub_6960((uint64_t)v122, (uint64_t)qword_2969C8);
    uint64_t v71 = v113;
    uint64_t v72 = (*(uint64_t (**)(char *, uint64_t, void *))(v133 + 16))(v113, v70, v69);
    uint64_t v73 = (os_log_s *)Logger.logObject.getter(v72);
    os_log_type_t v74 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v73, v74))
    {
      uint64_t v75 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)uint64_t v75 = 0;
      _os_log_impl( &dword_0,  v73,  v74,  "CommonNeedsConfirmationStrategy#makeIntentCancelledByParameterRejectionResponse rejected parameter success",  v75,  2u);
      swift_slowDealloc(v75, -1LL, -1LL);
    }

    (*(void (**)(char *, void *))(v133 + 8))(v71, v69);
    uint64_t v76 = v108;
    uint64_t v77 = v107;
    uint64_t v78 = v110;
    (*(void (**)(char *, void, uint64_t))(v108 + 104))( v107,  enum case for AdditionalMetricsDescription.ModuleName.cncs(_:),  v110);
    uint64_t v79 = v109;
    (*(void (**)(char *, void, uint64_t))(v109 + 104))( v27,  enum case for AdditionalMetricsDescription.SourceFunction.cnclParamRejResp(_:),  v24);
    uint64_t v80 = v116;
    uint64_t v81 = v115;
    uint64_t v82 = v117;
    (*(void (**)(char *, void, uint64_t))(v116 + 104))( v115,  enum case for AdditionalMetricsDescription.StatusReason.success(_:),  v117);
    uint64_t v133 = static AdditionalMetricsDescription.encodeInfo(module:source:parameterName:statusReason:intentResolutionResult:extraInfo:)( v77,  v27,  v123,  v63,  v81,  0LL,  0LL,  1LL);
    uint64_t v123 = v83;
    (*(void (**)(char *, uint64_t))(v80 + 8))(v81, v82);
    (*(void (**)(char *, uint64_t))(v79 + 8))(v27, v24);
    (*(void (**)(char *, uint64_t))(v76 + 8))(v77, v78);
    uint64_t v84 = v132[16];
    uint64_t v117 = v132[17];
    uint64_t v122 = sub_6EA8(v132 + 13, v84);
    uint64_t v85 = enum case for ActivityType.completed(_:);
    uint64_t v86 = type metadata accessor for ActivityType(0LL);
    uint64_t v87 = *(void *)(v86 - 8);
    uint64_t v88 = (uint64_t)v124;
    (*(void (**)(char *, uint64_t, uint64_t))(v87 + 104))(v124, v85, v86);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v87 + 56))(v88, 0LL, 1LL, v86);
    uint64_t v89 = *(int *)(v131 + 48);
    uint64_t v121 = (void (*)(void, void, void))*((void *)v114 + 2);
    uint64_t v90 = v114;
    uint64_t v91 = (uint64_t)v118;
    uint64_t v92 = v112;
    v121(v118, v120, v112);
    uint64_t v93 = v111;
    *(void *)(v91 + v89) = v111;
    uint64_t v94 = (uint64_t)v125;
    v106(v125, v91, v92);
    (*((void (**)(uint64_t, void, uint64_t, uint64_t))v90 + 7))(v94, 0LL, 1LL, v92);
    uint64_t v95 = enum case for SiriKitReliabilityCodes.rejectParameter(_:);
    uint64_t v96 = type metadata accessor for SiriKitReliabilityCodes(0LL);
    uint64_t v97 = *(void *)(v96 - 8);
    uint64_t v98 = (uint64_t)v126;
    (*(void (**)(char *, uint64_t, uint64_t))(v97 + 104))(v126, v95, v96);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v97 + 56))(v98, 0LL, 1LL, v96);
    uint64_t v99 = v123;
    dispatch thunk of SiriKitTaskLoggingProviding.submitMetric(app:intent:activityType:templateResult:statusReason:description:mediaItemType:)( v127,  v128,  v88,  v94,  v98,  v133,  v123,  0LL,  1,  v84,  v117);
    swift_bridgeObjectRelease(v99);
    sub_1F6CC(v98, &qword_2845A0);
    sub_1F6CC(v94, (uint64_t *)&unk_286BD0);
    sub_1F6CC(v88, &qword_2845A8);
    uint64_t v100 = *(int *)(v131 + 48);
    uint64_t v101 = (uint64_t)v120;
    v121(v91, v120, v92);
    *(void *)(v91 + v100) = v93;
    uint64_t v102 = type metadata accessor for NLContextUpdate(0LL);
    uint64_t v103 = (uint64_t)v119;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v102 - 8) + 56LL))(v119, 1LL, 1LL, v102);
    sub_176898(v91, v93, v103, v129, v130);

    sub_1F6CC(v103, (uint64_t *)&unk_286C50);
    sub_1F6CC(v101, &qword_289340);
    return (*((uint64_t (**)(uint64_t, uint64_t))v114 + 1))(v91, v92);
  }

uint64_t sub_1D5A00()
{
  return swift_deallocClassInstance(v0, 216LL, 7LL);
}

uint64_t type metadata accessor for CommonNeedsConfirmationStrategy( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_20280(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for CommonNeedsConfirmationStrategy);
}

uint64_t sub_1D5A2C(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return sub_1D1A78(a1, a2, a3, a4, a5, a6);
}

uint64_t sub_1D5A4C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v15 = (void *)swift_task_alloc(async function pointer to NeedsConfirmationWithCancellationFlowStrategy.makeIntentCancelledByParameterRejectionResponse(app:intent:parameterName:)[1]);
  *(void *)(v7 + swift_weakDestroy(v0 + 16) = v15;
  uint64_t v17 = type metadata accessor for CommonNeedsConfirmationStrategy(0LL, *(void *)(a6 + 80), *(void *)(a6 + 88), v16);
  *uint64_t v15 = v7;
  v15[1] = sub_11C64;
  return NeedsConfirmationWithCancellationFlowStrategy.makeIntentCancelledByParameterRejectionResponse(app:intent:parameterName:)( a1,  a2,  a3,  a4,  a5,  v17,  a7);
}

uint64_t sub_1D5B00@<X0>(uint64_t a1@<X5>, uint64_t a2@<X8>)
{
  return sub_1D0F18(a1, a2);
}

uint64_t sub_1D5B14( uint64_t a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5, uint64_t a6, uint64_t (*a7)(char *, uint64_t), void (*a8)(uint64_t *), uint64_t a9)
{
  return sub_1D6050(a2, a3, a4, a6, a7, a8, a9);
}

uint64_t sub_1D5B40( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  return sub_1D5C10( a1,  a2,  a3,  a4,  a5,  a6,  a7,  a8,  a9,  a10,  a11,  (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))&NeedsConfirmationFlowStrategy.shouldRequestUnlockForConfirmation(app:intent:parameterName:multicardinalIndex:intentResolutionResult:itemToConfirm:_:));
}

uint64_t sub_1D5B74( uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6, uint64_t a7, void (*a8)(uint64_t *), uint64_t a9)
{
  return sub_1D9590(a1, a2, a3, a4, a6, a7, a8, a9);
}

uint64_t sub_1D5BA8( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  return sub_1D5C10( a1,  a2,  a3,  a4,  a5,  a6,  a7,  a8,  a9,  a10,  a11,  (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))&NeedsConfirmationFlowStrategy.makeRepromptOnEmptyParse(app:intent:parameterName:multicardinalIndex:intentResolutionResult:itemToConfirm:_:));
}

uint64_t sub_1D5BDC( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  return sub_1D5C10( a1,  a2,  a3,  a4,  a5,  a6,  a7,  a8,  a9,  a10,  a11,  (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))&NeedsConfirmationFlowStrategy.makeRepromptOnLowConfidence(app:intent:parameterName:multicardinalIndex:intentResolutionResult:itemToConfirm:_:));
}

uint64_t sub_1D5C10( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t (*a12)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v21 = type metadata accessor for CommonNeedsConfirmationStrategy( 0LL,  *(void *)(a10 + 80),  *(void *)(a10 + 88),  a4);
  return a12(a1, a2, a3, a4, a5, a6, a7, a8, a9, v21, a11);
}

uint64_t sub_1D5CBC( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  return sub_1D5D1C( a1,  a2,  a3,  a4,  a5,  a6,  a7,  a8,  a9,  a10,  (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))&NeedsConfirmationFlowStrategy.makePromptForDeviceUnlock(app:intent:parameterName:multicardinalValueIndex:intentResolutionResult:_:));
}

uint64_t sub_1D5CEC( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  return sub_1D5D1C( a1,  a2,  a3,  a4,  a5,  a6,  a7,  a8,  a9,  a10,  (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))&NeedsConfirmationFlowStrategy.makeHandoffForAuthenticationResponse(app:intent:parameterName:multicardinalValueIndex:intentResolutionResult:_:));
}

uint64_t sub_1D5D1C( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t (*a11)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v20 = type metadata accessor for CommonNeedsConfirmationStrategy(0LL, *(void *)(a9 + 80), *(void *)(a9 + 88), a4);
  return a11(a1, a2, a3, a4, a5, a6, a7, a8, v20, a10);
}

uint64_t sub_1D5DBC( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void (*a6)(void *))
{
  return sub_1DA270(a6);
}

uint64_t sub_1D5DC8( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v15 = type metadata accessor for CommonNeedsConfirmationStrategy(0LL, *(void *)(a7 + 80), *(void *)(a7 + 88), a4);
  return ParameterResolutionHandling.makeFlowCancelledResponse(app:intent:parameterName:_:)( a1,  a2,  a3,  a4,  a5,  a6,  v15,  a8);
}

uint64_t sub_1D5E40( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v16 = type metadata accessor for CommonNeedsConfirmationStrategy(0LL, *(void *)(a8 + 80), *(void *)(a8 + 88), a4);
  return ParameterResolutionHandling.makeErrorResponse(app:intent:parameterName:error:_:)( a1,  a2,  a3,  a4,  a5,  a6,  a7,  v16,  a9);
}

uint64_t sub_1D5EC8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v15 = (void *)swift_task_alloc(async function pointer to ParameterResolutionHandling.makeFlowCancelledResponse(app:intent:parameterName:)[1]);
  *(void *)(v7 + swift_weakDestroy(v0 + 16) = v15;
  uint64_t v17 = type metadata accessor for CommonNeedsConfirmationStrategy(0LL, *(void *)(a6 + 80), *(void *)(a6 + 88), v16);
  *uint64_t v15 = v7;
  v15[1] = sub_3B08C;
  return ParameterResolutionHandling.makeFlowCancelledResponse(app:intent:parameterName:)(a1, a2, a3, a4, a5, v17, a7);
}

uint64_t sub_1D5F78( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v15 = v8;
  uint64_t v17 = (void *)swift_task_alloc(async function pointer to ParameterResolutionHandling.makeErrorResponse(app:intent:parameterName:error:)[1]);
  *(void *)(v15 + swift_weakDestroy(v0 + 16) = v17;
  uint64_t v19 = type metadata accessor for CommonNeedsConfirmationStrategy(0LL, *(void *)(a7 + 80), *(void *)(a7 + 88), v18);
  *uint64_t v17 = v15;
  v17[1] = sub_3B08C;
  return ParameterResolutionHandling.makeErrorResponse(app:intent:parameterName:error:)(a1, a2, a3, a4, a5, a6, v19, a8);
}

uint64_t sub_1D6030(uint64_t a1)
{
  return swift_getWitnessTable(&unk_21B190, a1);
}

uint64_t sub_1D6040(uint64_t a1)
{
  return swift_getWitnessTable(&unk_21B1D8, a1);
}

uint64_t sub_1D6050( uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t (*a5)(char *, uint64_t), void (*a6)(uint64_t *), uint64_t a7)
{
  uint64_t v208 = a7;
  v209 = a6;
  Swift::String_optional v210 = a5;
  uint64_t v187 = a4;
  uint64_t v192 = a3;
  uint64_t v198 = a2;
  uint64_t v185 = a1;
  uint64_t v7 = sub_6C5C(&qword_2845D8);
  uint64_t v8 = __chkstk_darwin(v7);
  v181[1] = (char *)v181 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v8);
  uint64_t v189 = (char *)v181 - v10;
  uint64_t v182 = type metadata accessor for INMediaDestination(0LL);
  v181[36] = *(void *)(v182 - 8);
  __chkstk_darwin(v182);
  v181[34] = (char *)v181 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness(255LL);
  uint64_t v12 = type metadata accessor for NeedsConfirmationAnswer(255LL);
  uint64_t v13 = sub_45D50(&qword_284010);
  uint64_t v207 = type metadata accessor for Result(0LL, v12, v13, &protocol self-conformance witness table for Error);
  uint64_t v205 = *(void *)(v207 - 8);
  __chkstk_darwin(v207);
  uint64_t v206 = (void *)((char *)v181 - v14);
  uint64_t v196 = type metadata accessor for ConfirmationResponse(0LL);
  uint64_t v195 = *(void *)(v196 - 8);
  __chkstk_darwin(v196);
  v181[35] = (char *)v181 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v183 = sub_6C5C(&qword_28D960);
  uint64_t v16 = __chkstk_darwin(v183);
  v181[25] = (char *)v181 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v18 = __chkstk_darwin(v16);
  v181[23] = (char *)v181 - v19;
  uint64_t v20 = __chkstk_darwin(v18);
  v181[22] = (char *)v181 - v21;
  uint64_t v22 = __chkstk_darwin(v20);
  v181[24] = (char *)v181 - v23;
  uint64_t v24 = __chkstk_darwin(v22);
  v181[20] = (char *)v181 - v25;
  uint64_t v26 = __chkstk_darwin(v24);
  v181[21] = (char *)v181 - v27;
  uint64_t v28 = __chkstk_darwin(v26);
  v181[19] = (char *)v181 - v29;
  __chkstk_darwin(v28);
  v181[18] = (char *)v181 - v30;
  uint64_t v31 = type metadata accessor for SiriKitConfirmationState(0LL);
  uint64_t v199 = *(void *)(v31 - 8);
  uint64_t v32 = __chkstk_darwin(v31);
  unint64_t v193 = (char *)v181 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v32);
  uint64_t v201 = (char *)v181 - v34;
  uint64_t v35 = sub_6C5C((uint64_t *)&unk_286CC0);
  uint64_t v36 = __chkstk_darwin(v35);
  uint64_t v186 = (char *)v181 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v38 = __chkstk_darwin(v36);
  v181[9] = (char *)v181 - v39;
  uint64_t v40 = __chkstk_darwin(v38);
  v181[33] = (char *)v181 - v41;
  uint64_t v42 = __chkstk_darwin(v40);
  v181[8] = (char *)v181 - v43;
  uint64_t v44 = __chkstk_darwin(v42);
  v181[32] = (char *)v181 - v45;
  uint64_t v46 = __chkstk_darwin(v44);
  v181[7] = (char *)v181 - v47;
  uint64_t v48 = __chkstk_darwin(v46);
  v181[31] = (char *)v181 - v49;
  uint64_t v50 = __chkstk_darwin(v48);
  v181[6] = (char *)v181 - v51;
  uint64_t v52 = __chkstk_darwin(v50);
  v181[30] = (char *)v181 - v53;
  uint64_t v54 = __chkstk_darwin(v52);
  v181[5] = (char *)v181 - v55;
  uint64_t v56 = __chkstk_darwin(v54);
  v181[29] = (char *)v181 - v57;
  uint64_t v58 = __chkstk_darwin(v56);
  v181[4] = (char *)v181 - v59;
  uint64_t v60 = __chkstk_darwin(v58);
  v181[28] = (char *)v181 - v61;
  uint64_t v62 = __chkstk_darwin(v60);
  v181[3] = (char *)v181 - v63;
  uint64_t v64 = __chkstk_darwin(v62);
  v181[27] = (char *)v181 - v65;
  uint64_t v66 = __chkstk_darwin(v64);
  v181[2] = (char *)v181 - v67;
  uint64_t v68 = __chkstk_darwin(v66);
  v181[26] = (char *)v181 - v69;
  __chkstk_darwin(v68);
  uint64_t v202 = (uint64_t)v181 - v70;
  uint64_t v71 = sub_6C5C(&qword_284630);
  __chkstk_darwin(v71);
  uint64_t v200 = (char *)v181 - ((v72 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v203 = type metadata accessor for CommonAudio.Confirmation(0LL);
  uint64_t v204 = *(void *)(v203 - 8);
  uint64_t v73 = __chkstk_darwin(v203);
  uint64_t v191 = (char *)v181 - ((v74 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v73);
  uint64_t v197 = (char *)v181 - v75;
  uint64_t v76 = type metadata accessor for Parse(0LL);
  uint64_t v77 = *(void *)(v76 - 8);
  __chkstk_darwin(v76);
  uint64_t v79 = (char *)v181 - ((v78 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v80 = type metadata accessor for Logger(0LL);
  uint64_t v81 = *(void *)(v80 - 8);
  uint64_t v82 = __chkstk_darwin(v80);
  uint64_t v84 = (char *)v181 - ((v83 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v85 = __chkstk_darwin(v82);
  id v190 = (char *)v181 - v86;
  uint64_t v87 = __chkstk_darwin(v85);
  v181[17] = (char *)v181 - v88;
  uint64_t v89 = __chkstk_darwin(v87);
  v181[16] = (char *)v181 - v90;
  uint64_t v91 = __chkstk_darwin(v89);
  v181[15] = (char *)v181 - v92;
  uint64_t v93 = __chkstk_darwin(v91);
  v181[14] = (char *)v181 - v94;
  uint64_t v95 = __chkstk_darwin(v93);
  v181[13] = (char *)v181 - v96;
  uint64_t v97 = __chkstk_darwin(v95);
  v181[11] = (char *)v181 - v98;
  uint64_t v99 = __chkstk_darwin(v97);
  v181[12] = (char *)v181 - v100;
  uint64_t v101 = __chkstk_darwin(v99);
  v181[10] = (char *)v181 - v102;
  uint64_t v103 = __chkstk_darwin(v101);
  uint64_t v188 = (char *)v181 - v104;
  __chkstk_darwin(v103);
  uint64_t v106 = (char *)v181 - v105;
  if (qword_283888 != -1) {
    swift_once(&qword_283888, sub_BFC5C);
  }
  uint64_t v194 = v31;
  uint64_t v107 = sub_6960(v80, (uint64_t)qword_2969C8);
  uint64_t v108 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v81 + 16);
  uint64_t v211 = v107;
  uint64_t v212 = v108;
  uint64_t v109 = v80;
  uint64_t v110 = ((uint64_t (*)(char *))v108)(v106);
  id v111 = (os_log_s *)Logger.logObject.getter(v110);
  os_log_type_t v112 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v111, v112))
  {
    uint64_t v113 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
    *(_WORD *)uint64_t v113 = 0;
    _os_log_impl(&dword_0, v111, v112, "CommonNeedsConfirmationStrategy#parseConfirmationResponse...", v113, 2u);
    swift_slowDealloc(v113, -1LL, -1LL);
  }

  uint64_t v114 = *(uint64_t (**)(char *, uint64_t))(v81 + 8);
  uint64_t v115 = v109;
  uint64_t v116 = v114(v106, v109);
  Input.parse.getter(v116);
  double v117 = sub_B6EF8((uint64_t)v79, &v214);
  (*(void (**)(char *, uint64_t, double))(v77 + 8))(v79, v76, v117);
  if (!v215)
  {
    sub_1F6CC((uint64_t)&v214, &qword_284638);
    goto LABEL_9;
  }

  Swift::String_optional v210 = v114;
  sub_FF54(&v214, (uint64_t)&v216);
  uint64_t v118 = v217;
  uint64_t v119 = v218;
  sub_6EA8(&v216, v217);
  uint64_t v120 = (uint64_t)v200;
  dispatch thunk of ConfirmableIntent.confirmationState.getter(v118, v119);
  uint64_t v121 = v204;
  uint64_t v122 = v203;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v204 + 48))(v120, 1LL, v203) == 1)
  {
    sub_1F6CC(v120, &qword_284630);
    sub_6C3C(&v216);
    uint64_t v114 = v210;
LABEL_9:
    uint64_t v123 = v212(v84, v211, v115);
    uint64_t v124 = (os_log_s *)Logger.logObject.getter(v123);
    os_log_type_t v125 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v124, v125))
    {
      uint64_t v126 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)uint64_t v126 = 0;
      _os_log_impl( &dword_0,  v124,  v125,  "CommonNeedsConfirmationStrategy#parseConfirmationResponse unable to make confirmation intent from parse, ignoring...",  v126,  2u);
      swift_slowDealloc(v126, -1LL, -1LL);
    }

    v114(v84, v115);
    uint64_t v127 = type metadata accessor for PlaybackCode(0LL);
    uint64_t v128 = sub_10430( &qword_2845E8,  (uint64_t (*)(uint64_t))&type metadata accessor for PlaybackCode,  (uint64_t)&protocol conformance descriptor for PlaybackCode);
    uint64_t v129 = swift_allocError(v127, v128, 0LL, 0LL);
    (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v127 - 8) + 104LL))( v130,  enum case for PlaybackCode.ceGE53(_:),  v127);
    uint64_t v132 = v206;
    uint64_t v131 = v207;
    uint64_t *v206 = v129;
    swift_storeEnumTagMultiPayload(v132, v131, 1LL);
    v209(v132);
    return (*(uint64_t (**)(uint64_t *, uint64_t))(v205 + 8))(v132, v131);
  }

  uint64_t v134 = v197;
  (*(void (**)(char *, uint64_t, uint64_t))(v121 + 32))(v197, v120, v122);
  char v135 = v191;
  (*(void (**)(char *, char *, uint64_t))(v121 + 16))(v191, v134, v122);
  int v136 = (*(uint64_t (**)(char *, uint64_t))(v121 + 88))(v135, v122);
  if (v136 == enum case for CommonAudio.Confirmation.yes(_:))
  {
    uint64_t v137 = v199;
    uint64_t v138 = v201;
    uint64_t v139 = v194;
    (*(void (**)(char *, void, uint64_t))(v199 + 104))( v201,  enum case for SiriKitConfirmationState.confirmed(_:),  v194);
    uint64_t v140 = v196;
  }

  else
  {
    int v141 = v136;
    uint64_t v140 = v196;
    uint64_t v139 = v194;
    uint64_t v138 = v201;
    if (v136 == enum case for CommonAudio.Confirmation.no(_:))
    {
      uint64_t v142 = (unsigned int *)&enum case for SiriKitConfirmationState.rejected(_:);
    }

    else
    {
      if (v136 != enum case for CommonAudio.Confirmation.cancel(_:))
      {
        int v178 = enum case for CommonAudio.Confirmation.moreInfo(_:);
        uint64_t v179 = v199;
        (*(void (**)(char *, void, uint64_t))(v199 + 104))( v201,  enum case for SiriKitConfirmationState.unset(_:),  v194);
        BOOL v180 = v141 == v178;
        uint64_t v137 = v179;
        uint64_t v138 = v201;
        uint64_t v139 = v194;
        if (!v180) {
          (*(void (**)(char *, uint64_t))(v121 + 8))(v135, v122);
        }
        goto LABEL_19;
      }

      uint64_t v142 = (unsigned int *)&enum case for SiriKitConfirmationState.cancelled(_:);
    }

    uint64_t v137 = v199;
    (*(void (**)(char *, void, uint64_t))(v199 + 104))(v201, *v142, v194);
  }

uint64_t sub_1D9314( uint64_t a1, void *a2, uint64_t a3, uint64_t a4, void *a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v9 = v8;
  uint64_t v43 = a1;
  uint64_t v44 = a8;
  uint64_t v41 = a7;
  uint64_t v42 = a2;
  uint64_t v13 = type metadata accessor for Logger(0LL);
  uint64_t v14 = *(void *)(v13 - 8);
  __chkstk_darwin(v13);
  uint64_t v16 = (char *)&v37 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  if (qword_283888 != -1) {
    swift_once(&qword_283888, sub_BFC5C);
  }
  uint64_t v17 = sub_6960(v13, (uint64_t)qword_2969C8);
  uint64_t v18 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v14 + 16))(v16, v17, v13);
  uint64_t v19 = (os_log_s *)Logger.logObject.getter(v18);
  os_log_type_t v20 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v19, v20))
  {
    uint64_t v21 = swift_slowAlloc(12LL, -1LL);
    uint64_t v39 = a4;
    uint64_t v22 = (uint8_t *)v21;
    uint64_t v23 = swift_slowAlloc(32LL, -1LL);
    uint64_t v37 = a3;
    uint64_t v24 = v23;
    uint64_t v46 = v23;
    uint64_t v40 = v9;
    *(_DWORD *)uint64_t v22 = 136446210;
    uint64_t v38 = a5;
    uint64_t v25 = static Insights.responseFramework.getter(v23);
    unint64_t v27 = v26;
    uint64_t v45 = sub_6978(v25, v26, &v46);
    a5 = v38;
    uint64_t v9 = v40;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v45, &v46);
    swift_bridgeObjectRelease(v27);
    _os_log_impl( &dword_0,  v19,  v20,  "CommonNeedsConfirmationStrategy#promptForConfirmationWithRF... Insights:%{public}s",  v22,  0xCu);
    swift_arrayDestroy(v24, 1LL, (char *)&type metadata for Any + 8);
    uint64_t v28 = v24;
    a3 = v37;
    swift_slowDealloc(v28, -1LL, -1LL);
    uint64_t v29 = v22;
    a4 = v39;
    swift_slowDealloc(v29, -1LL, -1LL);
  }

  (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
  uint64_t v30 = (void *)swift_allocObject(&unk_274F80, 56LL, 7LL);
  uint64_t v31 = v42;
  uint64_t v32 = v43;
  void v30[2] = v9;
  v30[3] = v32;
  uint64_t v33 = v41;
  v30[4] = v31;
  void v30[5] = v33;
  uint64_t v34 = v44;
  void v30[6] = v44;
  swift_retain(v9);
  swift_retain(v32);
  id v35 = v31;
  swift_retain(v34);
  sub_1D16EC(v32, v35, a5, a3, a4, (uint64_t)sub_1DA420, (uint64_t)v30);
  return swift_release(v30);
}

uint64_t sub_1D9590( uint64_t a1, void *a2, uint64_t a3, uint64_t a4, void *a5, uint64_t a6, void (*a7)(uint64_t *), uint64_t a8)
{
  uint64_t v55 = a8;
  uint64_t v56 = a7;
  uint64_t v52 = a6;
  uint64_t v54 = *v8;
  uint64_t v14 = sub_6C5C((uint64_t *)&unk_286C50);
  uint64_t v15 = __chkstk_darwin(v14);
  uint64_t v59 = (uint64_t)&v49 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v15);
  uint64_t v58 = (uint64_t)&v49 - v17;
  uint64_t v60 = type metadata accessor for Logger(0LL);
  uint64_t v53 = *(void *)(v60 - 8);
  uint64_t v18 = __chkstk_darwin(v60);
  uint64_t v57 = (char *)&v49 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v18);
  uint64_t v21 = (char *)&v49 - v20;
  uint64_t v22 = (uint64_t)v8[11];
  uint64_t v23 = v8[12];
  sub_6EA8(v8 + 8, v22);
  if ((dispatch thunk of FeatureFlagProviding.isResponseFrameworkEnabled.getter(v22, v23) & 1) != 0) {
    return sub_1D9314(a1, a2, a3, a4, a5, v52, (uint64_t)v56, v55);
  }
  uint64_t v49 = v8;
  uint64_t v50 = a3;
  uint64_t v51 = a4;
  uint64_t v52 = a1;
  if (qword_283888 != -1) {
    swift_once(&qword_283888, sub_BFC5C);
  }
  uint64_t v25 = v60;
  uint64_t v26 = sub_6960(v60, (uint64_t)qword_2969C8);
  uint64_t v27 = v53;
  uint64_t v28 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v53 + 16);
  uint64_t v29 = v28(v21, v26, v25);
  uint64_t v30 = (os_log_s *)Logger.logObject.getter(v29);
  os_log_type_t v31 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v30, v31))
  {
    uint64_t v32 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
    *(_WORD *)uint64_t v32 = 0;
    _os_log_impl(&dword_0, v30, v31, "CommonNeedsConfirmationStrategy#makePromptForConfirmation...", v32, 2u);
    swift_slowDealloc(v32, -1LL, -1LL);
  }

  uint64_t v33 = *(void (**)(char *, uint64_t))(v27 + 8);
  uint64_t v34 = v60;
  id v35 = v33;
  v33(v21, v60);
  swift_getAssociatedTypeWitness(0LL);
  swift_getAssociatedTypeWitness(0LL);
  uint64_t v36 = v58;
  sub_98E08(v58);
  sub_FF10(v36, v59, (uint64_t *)&unk_286C50);
  v28(v57, v26, v34);
  uint64_t v37 = v51;
  swift_bridgeObjectRetain(v51);
  uint64_t v38 = a5;
  uint64_t v39 = v49;
  swift_retain(v49);
  uint64_t v40 = v52;
  swift_retain(v52);
  id v41 = a2;
  uint64_t v42 = v55;
  uint64_t v43 = swift_retain(v55);
  uint64_t v44 = (os_log_s *)Logger.logObject.getter(v43);
  os_log_type_t v45 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v44, v45))
  {
    uint64_t v46 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
    *(_WORD *)uint64_t v46 = 0;
    _os_log_impl( &dword_0,  v44,  v45,  "ConfirmationViewProvider#makePromptForConfirmationViews Returning empty views for non iOS device",  v46,  2u);
    uint64_t v47 = v46;
    uint64_t v40 = v52;
    swift_slowDealloc(v47, -1LL, -1LL);
  }

  v35(v57, v60);
  uint64_t v48 = v59;
  sub_1D1D14((uint64_t)_swiftEmptyArrayStorage, 0, v50, v37, v38, v39, v40, v41, v56, v42, v59);
  swift_release(v42);

  swift_release(v40);
  swift_release(v39);

  swift_bridgeObjectRelease(v37);
  sub_1F6CC(v48, (uint64_t *)&unk_286C50);
  return sub_1F6CC(v58, (uint64_t *)&unk_286C50);
}

uint64_t sub_1D99C4(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v109 = a4;
  uint64_t v113 = a2;
  uint64_t v114 = a3;
  uint64_t v115 = a1;
  uint64_t v6 = sub_6C5C((uint64_t *)&unk_286BA0);
  uint64_t v7 = __chkstk_darwin(v6);
  uint64_t v106 = (uint64_t)v95 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)v95 - v9;
  uint64_t v11 = sub_6C5C(&qword_284170);
  __chkstk_darwin(v11);
  uint64_t v108 = (uint64_t)v95 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v111 = type metadata accessor for SiriAudioSnippets(0LL);
  uint64_t v116 = *(void *)(v111 - 8);
  uint64_t v13 = __chkstk_darwin(v111);
  uint64_t v100 = v14;
  uint64_t v101 = (char *)v95 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v13);
  uint64_t v16 = (char *)v95 - v15;
  uint64_t v17 = type metadata accessor for DialogPhase(0LL);
  __chkstk_darwin(v17);
  uint64_t v107 = (char *)v95 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v19 = type metadata accessor for OutputGenerationManifest(0LL);
  uint64_t v112 = *(void *)(v19 - 8);
  uint64_t v20 = __chkstk_darwin(v19);
  double v117 = (char *)v95 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v110 = v21;
  __chkstk_darwin(v20);
  uint64_t v23 = (char *)v95 - v22;
  uint64_t v24 = type metadata accessor for ResponseMode(0LL);
  uint64_t v102 = *(void *)(v24 - 8);
  uint64_t v103 = v24;
  __chkstk_darwin(v24);
  uint64_t v26 = (char *)v95 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v27 = type metadata accessor for Logger(0LL);
  uint64_t v28 = *(void *)(v27 - 8);
  uint64_t v29 = __chkstk_darwin(v27);
  os_log_type_t v31 = (char *)v95 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v32 = static SiriEnvironmentWrapper.retrieve()(v29);
  if (!v32)
  {
    type metadata accessor for SiriEnvironment(0LL);
    uint64_t v32 = static SiriEnvironment.default.getter();
  }

  uint64_t v33 = v32;
  uint64_t v104 = v10;
  uint64_t v105 = v16;
  uint64_t v118 = v23;
  if (qword_283888 != -1) {
    swift_once(&qword_283888, sub_BFC5C);
  }
  uint64_t v34 = sub_6960(v27, (uint64_t)qword_2969C8);
  (*(void (**)(char *, uint64_t, uint64_t))(v28 + 16))(v31, v34, v27);
  uint64_t v35 = swift_retain_n(v33, 2LL);
  uint64_t v36 = v28;
  uint64_t v37 = (os_log_s *)Logger.logObject.getter(v35);
  os_log_type_t v38 = static os_log_type_t.info.getter(v37);
  if (os_log_type_enabled(v37, v38))
  {
    uint64_t v39 = swift_slowAlloc(12LL, -1LL);
    uint64_t v99 = v19;
    uint64_t v40 = (uint8_t *)v39;
    uint64_t v41 = swift_slowAlloc(32LL, -1LL);
    uint64_t v97 = v41;
    v120[0] = v41;
    uint64_t v98 = a5;
    *(_DWORD *)uint64_t v40 = 136315138;
    v95[1] = v40 + 4;
    uint64_t v42 = SiriEnvironment.currentRequest.getter(v41);
    CurrentRequest.responseMode.getter(v42);
    uint64_t v43 = swift_release(v42);
    uint64_t v44 = ResponseMode.description.getter(v43);
    uint64_t v96 = v36;
    unint64_t v46 = v45;
    (*(void (**)(char *, uint64_t))(v102 + 8))(v26, v103);
    uint64_t v119 = sub_6978(v44, v46, v120);
    a5 = v98;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v119, v120);
    swift_release_n(v33, 2LL);
    swift_bridgeObjectRelease(v46);
    _os_log_impl( &dword_0,  v37,  v38,  "CommonNeedsConfirmationStrategy#confirmationViewOutput with responseMode = %s",  v40,  0xCu);
    uint64_t v47 = v97;
    swift_arrayDestroy(v97, 1LL, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v47, -1LL, -1LL);
    uint64_t v48 = v40;
    uint64_t v19 = v99;
    swift_slowDealloc(v48, -1LL, -1LL);

    uint64_t v49 = (*(uint64_t (**)(char *, uint64_t))(v96 + 8))(v31, v27);
  }

  else
  {

    swift_release_n(v33, 2LL);
    uint64_t v49 = (*(uint64_t (**)(char *, uint64_t))(v28 + 8))(v31, v27);
  }

  uint64_t v50 = v112;
  uint64_t v51 = v33;
  uint64_t v52 = v115;
  uint64_t v53 = v107;
  uint64_t v54 = static DialogPhase.completion.getter(v49);
  __chkstk_darwin(v54);
  uint64_t v55 = v109;
  v95[-4] = v109;
  v95[-3] = a5;
  v95[-2] = v52;
  v95[-1] = v51;
  uint64_t v56 = v118;
  OutputGenerationManifest.init(dialogPhase:_:)(v53, sub_1DA604, &v95[-6]);
  uint64_t v58 = type metadata accessor for CommonNeedsConfirmationStrategy.ConfirmationOutputContext(0LL, v55, a5, v57);
  uint64_t v59 = v108;
  sub_FF10((uint64_t)v52 + *(int *)(v58 + 36), v108, &qword_284170);
  uint64_t v60 = v116;
  uint64_t v61 = v111;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v116 + 48))(v59, 1LL, v111) == 1)
  {
    sub_1F6CC(v59, &qword_284170);
  }

  else
  {
    uint64_t v112 = v51;
    uint64_t v62 = *(void (**)(char *, uint64_t, uint64_t))(v60 + 32);
    uint64_t v63 = v105;
    v62(v105, v59, v61);
    uint64_t v64 = (uint64_t)v104;
    sub_FF10((uint64_t)v52 + *(int *)(v58 + 44), (uint64_t)v104, (uint64_t *)&unk_286BA0);
    uint64_t v65 = sub_6C5C(&qword_289340);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v65 - 8) + 48LL))(v64, 1LL, v65) != 1)
    {
      uint64_t v115 = *(void **)(v64 + *(int *)(v65 + 48));
      uint64_t v80 = type metadata accessor for TemplatingResult(0LL);
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v80 - 8) + 8LL))(v64, v80);
      uint64_t v81 = v101;
      (*(void (**)(char *, char *, uint64_t))(v60 + 16))(v101, v63, v61);
      (*(void (**)(char *, char *, uint64_t))(v50 + 16))(v117, v56, v19);
      uint64_t v82 = *(unsigned __int8 *)(v60 + 80);
      uint64_t v83 = v61;
      uint64_t v84 = (v82 + 16) & ~v82;
      uint64_t v85 = v19;
      unint64_t v86 = (v100 + v84 + 7) & 0xFFFFFFFFFFFFFFF8LL;
      uint64_t v87 = *(unsigned __int8 *)(v50 + 80);
      uint64_t v88 = (v87 + v86 + 8) & ~v87;
      uint64_t v89 = swift_allocObject(&unk_275020, v88 + v110, v82 | v87 | 7);
      v62((char *)(v89 + v84), (uint64_t)v81, v83);
      uint64_t v90 = v115;
      *(void *)(v89 + v86) = v115;
      uint64_t v19 = v85;
      uint64_t v91 = v89 + v88;
      uint64_t v56 = v118;
      (*(void (**)(uint64_t, char *, uint64_t))(v50 + 32))(v91, v117, v85);
      id v92 = v90;
      uint64_t v93 = sub_6C5C(&qword_2845C0);
      static Task<>.withCallback<A>(_:operation:)(v113, v114, &unk_28D958, v89, v93);
      swift_release(v112);

      swift_release(v89);
      (*(void (**)(char *, uint64_t))(v116 + 8))(v63, v83);
      return (*(uint64_t (**)(char *, uint64_t))(v50 + 8))(v56, v19);
    }

    sub_1F6CC(v64, (uint64_t *)&unk_286BA0);
    (*(void (**)(char *, uint64_t))(v60 + 8))(v63, v61);
    uint64_t v52 = v115;
    uint64_t v51 = v112;
  }

  uint64_t v66 = v106;
  sub_FF10((uint64_t)v52 + *(int *)(v58 + 44), v106, (uint64_t *)&unk_286BA0);
  uint64_t v67 = sub_6C5C(&qword_289340);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v67 - 8) + 48LL))(v66, 1LL, v67) == 1)
  {
    sub_1F6CC(v66, (uint64_t *)&unk_286BA0);
    uint64_t v68 = v117;
    (*(void (**)(char *, char *, uint64_t))(v50 + 16))(v117, v56, v19);
    uint64_t v69 = *(unsigned __int8 *)(v50 + 80);
    uint64_t v70 = (v69 + 16) & ~v69;
    uint64_t v71 = swift_allocObject(&unk_274FD0, v70 + v110, v69 | 7);
    (*(void (**)(uint64_t, char *, uint64_t))(v50 + 32))(v71 + v70, v68, v19);
    uint64_t v72 = sub_6C5C(&qword_2845C0);
    static Task<>.withCallback<A>(_:operation:)(v113, v114, &unk_28D938, v71, v72);
    swift_release(v51);
  }

  else
  {
    uint64_t v73 = *(void **)(v66 + *(int *)(v67 + 48));
    uint64_t v74 = type metadata accessor for TemplatingResult(0LL);
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v74 - 8) + 8LL))(v66, v74);
    uint64_t v75 = v117;
    (*(void (**)(char *, char *, uint64_t))(v50 + 16))(v117, v56, v19);
    uint64_t v76 = *(unsigned __int8 *)(v50 + 80);
    uint64_t v77 = (v76 + 24) & ~v76;
    uint64_t v71 = swift_allocObject(&unk_274FF8, v77 + v110, v76 | 7);
    *(void *)(v71 + swift_weakDestroy(v0 + 16) = v73;
    (*(void (**)(uint64_t, char *, uint64_t))(v50 + 32))(v71 + v77, v75, v19);
    id v78 = v73;
    uint64_t v79 = sub_6C5C(&qword_2845C0);
    static Task<>.withCallback<A>(_:operation:)(v113, v114, &unk_28D948, v71, v79);
    swift_release(v51);
  }

  swift_release(v71);
  return (*(uint64_t (**)(char *, uint64_t))(v50 + 8))(v56, v19);
}

uint64_t sub_1DA270(void (*a1)(void *))
{
  uint64_t v2 = type metadata accessor for Logger(0LL);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  if (qword_283888 != -1) {
    swift_once(&qword_283888, sub_BFC5C);
  }
  uint64_t v6 = sub_6960(v2, (uint64_t)qword_2969C8);
  uint64_t v7 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, v6, v2);
  uint64_t v8 = (os_log_s *)Logger.logObject.getter(v7);
  os_log_type_t v9 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v8, v9))
  {
    uint64_t v10 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
    *(_WORD *)uint64_t v10 = 0;
    _os_log_impl( &dword_0,  v8,  v9,  "CommonNeedsConfirmationStrategy#makeConfirmationRejectedResponse... (ignoring)",  v10,  2u);
    swift_slowDealloc(v10, -1LL, -1LL);
  }

  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  type metadata accessor for EmptyOutput(0LL);
  static EmptyOutput.instance.getter(v12);
  char v13 = 0;
  a1(v12);
  return sub_1F6CC((uint64_t)v12, (uint64_t *)&unk_286C60);
}

uint64_t sub_1DA3E4()
{
  swift_release(*(void *)(v0 + 48));
  return swift_deallocObject(v0, 56LL, 7LL);
}

uint64_t sub_1DA420(void *a1)
{
  return sub_1D3090( a1,  *(void *)(v1 + 16),  *(void *)(v1 + 24),  *(void **)(v1 + 32),  *(void *)(v1 + 40),  *(void *)(v1 + 48));
}

uint64_t type metadata accessor for CommonNeedsConfirmationStrategy.ConfirmationOutputContext( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_20280( a1,  a2,  a3,  a4,  (uint64_t)&nominal type descriptor for CommonNeedsConfirmationStrategy.ConfirmationOutputContext);
}

uint64_t sub_1DA43C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = (int *)type metadata accessor for CommonNeedsConfirmationStrategy.ConfirmationOutputContext( 0LL,  *(void *)(v4 + 16),  *(void *)(v4 + 24),  a4);
  uint64_t v6 = *((void *)v5 - 1);
  uint64_t v7 = *(unsigned __int8 *)(v6 + 80);
  uint64_t v8 = (v7 + 72) & ~v7;
  uint64_t v9 = *(void *)(v6 + 64);
  swift_release(*(void *)(v4 + 32));
  swift_release(*(void *)(v4 + 40));

  swift_release(*(void *)(v4 + 64));
  uint64_t v10 = v4 + v8;
  swift_errorRelease(*(void *)(v4 + v8));
  uint64_t v11 = v4 + v8 + v5[9];
  uint64_t v12 = type metadata accessor for SiriAudioSnippets(0LL);
  uint64_t v13 = *(void *)(v12 - 8);
  swift_errorRelease(*(void *)(v10 + v5[10]));
  uint64_t v14 = v10 + v5[11];
  uint64_t v15 = sub_6C5C(&qword_289340);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 48LL))(v14, 1LL, v15))
  {
    uint64_t v16 = type metadata accessor for TemplatingResult(0LL);
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v16 - 8) + 8LL))(v14, v16);
  }

  uint64_t v17 = v10 + v5[12];
  uint64_t v18 = type metadata accessor for NLContextUpdate(0LL);
  uint64_t v19 = *(void *)(v18 - 8);
  return swift_deallocObject(v4, v8 + v9, v7 | 7);
}

uint64_t sub_1DA5B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6 = *(unsigned __int8 *)(*(void *)(type metadata accessor for CommonNeedsConfirmationStrategy.ConfirmationOutputContext( 0LL,  *(void *)(v4 + 16),  *(void *)(v4 + 24),  a4)
                                      - 8)
                          + 80LL);
  return sub_1D31D4( a1,  *(void **)(v4 + 32),  *(void *)(v4 + 40),  *(void *)(v4 + 48),  *(void (**)(uint64_t))(v4 + 56),  *(void *)(v4 + 64),  v4 + ((v6 + 72) & ~v6));
}

uint64_t sub_1DA604(uint64_t a1)
{
  return sub_1D3FE8(a1, v1[4], v1[5], v1[2], v1[3]);
}

uint64_t sub_1DA610()
{
  uint64_t v1 = type metadata accessor for OutputGenerationManifest(0LL);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return swift_deallocObject(v0, v5, v6);
}

uint64_t sub_1DA670(uint64_t a1)
{
  uint64_t v4 = *(unsigned __int8 *)(*(void *)(type metadata accessor for OutputGenerationManifest(0LL) - 8) + 80LL);
  uint64_t v5 = v1 + ((v4 + 16) & ~v4);
  uint64_t v6 = (void *)swift_task_alloc(dword_28D934);
  *(void *)(v2 + swift_weakDestroy(v0 + 16) = v6;
  *uint64_t v6 = v2;
  v6[1] = sub_3B08C;
  v6[2] = a1;
  v6[3] = v5;
  return swift_task_switch(sub_1D4560, 0LL, 0LL);
}

uint64_t sub_1DA6EC()
{
  uint64_t v1 = type metadata accessor for OutputGenerationManifest(0LL);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 24) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return swift_deallocObject(v0, v5, v6);
}

uint64_t sub_1DA760(uint64_t a1)
{
  uint64_t v4 = *(unsigned __int8 *)(*(void *)(type metadata accessor for OutputGenerationManifest(0LL) - 8) + 80LL);
  uint64_t v5 = *(void *)(v1 + 16);
  uint64_t v6 = v1 + ((v4 + 24) & ~v4);
  uint64_t v7 = (void *)swift_task_alloc(dword_28D944);
  *(void *)(v2 + swift_weakDestroy(v0 + 16) = v7;
  *uint64_t v7 = v2;
  v7[1] = sub_3B08C;
  v7[3] = v5;
  v7[4] = v6;
  v7[2] = a1;
  return swift_task_switch(sub_1D4400, 0LL, 0LL);
}

uint64_t sub_1DA7EC()
{
  uint64_t v1 = type metadata accessor for SiriAudioSnippets(0LL);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  unint64_t v5 = (*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8LL;
  uint64_t v6 = type metadata accessor for OutputGenerationManifest(0LL);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(unsigned __int8 *)(v7 + 80);
  uint64_t v9 = (v5 + v8 + 8) & ~v8;
  uint64_t v10 = v9 + *(void *)(v7 + 64);
  uint64_t v11 = v3 | v8 | 7;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v0 + v9, v6);
  return swift_deallocObject(v0, v10, v11);
}

uint64_t sub_1DA8B4(uint64_t a1)
{
  uint64_t v4 = *(void *)(type metadata accessor for SiriAudioSnippets(0LL) - 8);
  unint64_t v5 = (*(unsigned __int8 *)(v4 + 80) + 16LL) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  unint64_t v6 = (*(void *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8LL;
  uint64_t v7 = *(unsigned __int8 *)(*(void *)(type metadata accessor for OutputGenerationManifest(0LL) - 8) + 80LL);
  uint64_t v8 = v6 + v7 + 8;
  uint64_t v9 = v1 + v5;
  uint64_t v10 = *(void *)(v1 + v6);
  uint64_t v11 = v1 + (v8 & ~v7);
  uint64_t v12 = (void *)swift_task_alloc(dword_28D954);
  *(void *)(v2 + swift_weakDestroy(v0 + 16) = v12;
  *uint64_t v12 = v2;
  v12[1] = sub_11C64;
  v12[9] = v10;
  v12[10] = v11;
  v12[7] = a1;
  v12[8] = v9;
  return swift_task_switch(sub_1D4234, 0LL, 0LL);
}

uint64_t sub_1DA970()
{
  uint64_t v1 = *(void *)(sub_6C5C((uint64_t *)&unk_286C50) - 8);
  uint64_t v2 = *(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = (v2 + 104) & ~v2;
  uint64_t v4 = *(void *)(v1 + 64);
  swift_bridgeObjectRelease(*(void *)(v0 + 40));

  swift_release(*(void *)(v0 + 56));
  swift_release(*(void *)(v0 + 64));

  swift_release(*(void *)(v0 + 88));
  swift_bridgeObjectRelease(*(void *)(v0 + 96));
  uint64_t v5 = type metadata accessor for NLContextUpdate(0LL);
  uint64_t v6 = *(void *)(v5 - 8);
  return swift_deallocObject(v0, v3 + v4, v2 | 7);
}

uint64_t sub_1DAA40(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_6C5C((uint64_t *)&unk_286C50);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32LL))(a2, a1, v4);
  return a2;
}

uint64_t sub_1DAA88(char *a1)
{
  uint64_t v3 = *(unsigned __int8 *)(*(void *)(sub_6C5C((uint64_t *)&unk_286C50) - 8) + 80LL);
  return sub_1D24D0( a1,  *(void *)(v1 + 32),  *(void **)(v1 + 40),  *(void *)(v1 + 48),  *(void **)(v1 + 56),  *(void *)(v1 + 64),  *(void *)(v1 + 72),  *(void (**)(__int128 *))(v1 + 80),  *(void *)(v1 + 88),  *(void *)(v1 + 96),  v1 + ((v3 + 104) & ~v3));
}

uint64_t sub_1DAAF0()
{
  swift_release(*(void *)(v0 + 64));
  return swift_deallocObject(v0, 72LL, 7LL);
}

uint64_t sub_1DAB34(uint64_t a1)
{
  return sub_1D4ECC( a1,  *(void *)(v1 + 16),  *(void (**)(void, void, void))(v1 + 24),  *(void **)(v1 + 32),  *(void *)(v1 + 40),  *(void *)(v1 + 48),  *(void (**)(uint64_t *))(v1 + 56),  *(void *)(v1 + 64));
}

uint64_t sub_1DAB48()
{
  swift_release(*(void *)(v0 + 64));
  return swift_deallocObject(v0, 72LL, 7LL);
}

uint64_t sub_1DAB94(uint64_t a1)
{
  return sub_1DABF8( a1,  (uint64_t (*)(uint64_t, void, void, void, void, void, void, void))sub_1D4640);
}

uint64_t sub_1DABA0()
{
  swift_bridgeObjectRelease(*(void *)(v0 + 56));
  swift_release(*(void *)(v0 + 64));
  return swift_deallocObject(v0, 72LL, 7LL);
}

uint64_t sub_1DABEC(uint64_t a1)
{
  return sub_1DABF8( a1,  (uint64_t (*)(uint64_t, void, void, void, void, void, void, void))sub_1D4944);
}

uint64_t sub_1DABF8( uint64_t a1, uint64_t (*a2)(uint64_t, void, void, void, void, void, void, void))
{
  return a2(a1, v2[2], v2[3], v2[4], v2[5], v2[6], v2[7], v2[8]);
}

uint64_t sub_1DAC10()
{
  return swift_deallocObject(v0, 32LL, 7LL);
}

uint64_t sub_1DAC3C(uint64_t a1)
{
  return sub_1D4A70(a1, *(void *)(v1 + 16), *(uint64_t **)(v1 + 24));
}

uint64_t sub_1DAC44()
{
  return swift_deallocObject(v0, 56LL, 7LL);
}

uint64_t sub_1DAC70()
{
  return sub_1D4BB4( *(void *)(v0 + 32),  *(void (**)(void))(v0 + 40),  *(void *)(v0 + 48),  *(void *)(v0 + 16),  *(void *)(v0 + 24));
}

uint64_t sub_1DAC80()
{
  return swift_deallocObject(v0, 32LL, 7LL);
}

uint64_t sub_1DACA8(uint64_t a1)
{
  return sub_B25B8(a1, (uint64_t (*)(uint64_t, void, void, void, void, void))sub_1D49EC);
}

uint64_t sub_1DACB4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_6C5C(&qword_284170);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 24LL))(a2, a1, v4);
  return a2;
}

uint64_t sub_1DAD00(uint64_t a1)
{
  return sub_B25B8(a1, (uint64_t (*)(uint64_t, void, void, void, void, void))sub_1D4738);
}

void sub_1DAD0C(uint64_t a1)
{
  v8[0] = "\b";
  sub_67DE8( 319LL,  (unint64_t *)&qword_286768,  (uint64_t (*)(uint64_t))&type metadata accessor for SiriAudioSnippets);
  if (v3 <= 0x3F)
  {
    v8[1] = *(void *)(v2 - 8) + 64LL;
    v8[2] = "\b";
    sub_B3B00(319LL);
    if (v5 <= 0x3F)
    {
      v8[3] = *(void *)(v4 - 8) + 64LL;
      sub_67DE8(319LL, &qword_28D9F0, (uint64_t (*)(uint64_t))&type metadata accessor for NLContextUpdate);
      if (v7 <= 0x3F)
      {
        v8[4] = *(void *)(v6 - 8) + 64LL;
        swift_initStructMetadata(a1, 0LL, 5LL, v8, a1 + 32);
      }
    }
  }

void *sub_1DADD8(void *a1, void *a2, int *a3)
{
  unint64_t v3 = a1;
  int v4 = *(_DWORD *)(*((void *)a3 - 1) + 80LL);
  uint64_t v5 = *a2;
  if ((v4 & 0x20000) != 0)
  {
    *a1 = v5;
    unint64_t v3 = (void *)(v5 + ((v4 + 16LL) & ~(unint64_t)v4));
    swift_retain(v5);
  }

  else
  {
    swift_errorRetain(*a2);
    *unint64_t v3 = v5;
    uint64_t v8 = a3[9];
    uint64_t v9 = (char *)v3 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = type metadata accessor for SiriAudioSnippets(0LL);
    uint64_t v12 = *(void *)(v11 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1LL, v11))
    {
      uint64_t v13 = sub_6C5C(&qword_284170);
      memcpy(v9, v10, *(void *)(*(void *)(v13 - 8) + 64LL));
    }

    else
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v9, v10, v11);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v9, 0LL, 1LL, v11);
    }

    uint64_t v14 = a3[10];
    uint64_t v15 = *(void *)((char *)a2 + v14);
    swift_errorRetain(v15);
    *(void *)((char *)v3 + v14) = v15;
    uint64_t v16 = a3[11];
    uint64_t v17 = (char *)v3 + v16;
    uint64_t v18 = (char *)a2 + v16;
    uint64_t v19 = sub_6C5C(&qword_289340);
    uint64_t v20 = *(void *)(v19 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v18, 1LL, v19))
    {
      uint64_t v21 = sub_6C5C((uint64_t *)&unk_286BA0);
      memcpy(v17, v18, *(void *)(*(void *)(v21 - 8) + 64LL));
    }

    else
    {
      uint64_t v22 = type metadata accessor for TemplatingResult(0LL);
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v22 - 8) + 16LL))(v17, v18, v22);
      uint64_t v23 = *(int *)(v19 + 48);
      uint64_t v24 = *(void **)&v18[v23];
      *(void *)&v17[v23] = v24;
      uint64_t v25 = *(void (**)(char *, void, uint64_t, uint64_t))(v20 + 56);
      id v26 = v24;
      v25(v17, 0LL, 1LL, v19);
    }

    uint64_t v27 = a3[12];
    uint64_t v28 = (char *)v3 + v27;
    uint64_t v29 = (char *)a2 + v27;
    uint64_t v30 = type metadata accessor for NLContextUpdate(0LL);
    uint64_t v31 = *(void *)(v30 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v31 + 48))(v29, 1LL, v30))
    {
      uint64_t v32 = sub_6C5C((uint64_t *)&unk_286C50);
      memcpy(v28, v29, *(void *)(*(void *)(v32 - 8) + 64LL));
    }

    else
    {
      (*(void (**)(char *, char *, uint64_t))(v31 + 16))(v28, v29, v30);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v31 + 56))(v28, 0LL, 1LL, v30);
    }
  }

  return v3;
}

uint64_t sub_1DB014(void *a1, int *a2)
{
  int v4 = (char *)a1 + a2[9];
  uint64_t v5 = type metadata accessor for SiriAudioSnippets(0LL);
  uint64_t v6 = *(void *)(v5 - 8);
  swift_errorRelease(*(void *)((char *)a1 + a2[10]));
  unint64_t v7 = (char *)a1 + a2[11];
  uint64_t v8 = sub_6C5C(&qword_289340);
  if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48LL))(v7, 1LL, v8))
  {
    uint64_t v9 = type metadata accessor for TemplatingResult(0LL);
    (*(void (**)(char *, uint64_t))(*(void *)(v9 - 8) + 8LL))(v7, v9);
  }

  uint64_t v10 = (char *)a1 + a2[12];
  uint64_t v11 = type metadata accessor for NLContextUpdate(0LL);
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1LL, v11);
  if (!(_DWORD)result) {
    return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v10, v11);
  }
  return result;
}

void *sub_1DB144(void *a1, void *a2, int *a3)
{
  uint64_t v6 = *a2;
  swift_errorRetain(*a2);
  *a1 = v6;
  uint64_t v7 = a3[9];
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = type metadata accessor for SiriAudioSnippets(0LL);
  uint64_t v11 = *(void *)(v10 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1LL, v10))
  {
    uint64_t v12 = sub_6C5C(&qword_284170);
    memcpy(v8, v9, *(void *)(*(void *)(v12 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v8, v9, v10);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0LL, 1LL, v10);
  }

  uint64_t v13 = a3[10];
  uint64_t v14 = *(void *)((char *)a2 + v13);
  swift_errorRetain(v14);
  *(void *)((char *)a1 + v13) = v14;
  uint64_t v15 = a3[11];
  uint64_t v16 = (char *)a1 + v15;
  uint64_t v17 = (char *)a2 + v15;
  uint64_t v18 = sub_6C5C(&qword_289340);
  uint64_t v19 = *(void *)(v18 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v17, 1LL, v18))
  {
    uint64_t v20 = sub_6C5C((uint64_t *)&unk_286BA0);
    memcpy(v16, v17, *(void *)(*(void *)(v20 - 8) + 64LL));
  }

  else
  {
    uint64_t v21 = type metadata accessor for TemplatingResult(0LL);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v21 - 8) + 16LL))(v16, v17, v21);
    uint64_t v22 = *(int *)(v18 + 48);
    uint64_t v23 = *(void **)&v17[v22];
    *(void *)&v16[v22] = v23;
    uint64_t v24 = *(void (**)(char *, void, uint64_t, uint64_t))(v19 + 56);
    id v25 = v23;
    v24(v16, 0LL, 1LL, v18);
  }

  uint64_t v26 = a3[12];
  uint64_t v27 = (char *)a1 + v26;
  uint64_t v28 = (char *)a2 + v26;
  uint64_t v29 = type metadata accessor for NLContextUpdate(0LL);
  uint64_t v30 = *(void *)(v29 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v30 + 48))(v28, 1LL, v29))
  {
    uint64_t v31 = sub_6C5C((uint64_t *)&unk_286C50);
    memcpy(v27, v28, *(void *)(*(void *)(v31 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(char *, char *, uint64_t))(v30 + 16))(v27, v28, v29);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v30 + 56))(v27, 0LL, 1LL, v29);
  }

  return a1;
}

uint64_t *sub_1DB354(uint64_t *a1, void *a2, int *a3)
{
  uint64_t v6 = *a1;
  uint64_t v7 = *a2;
  swift_errorRetain(*a2);
  *a1 = v7;
  swift_errorRelease(v6);
  uint64_t v8 = a3[9];
  uint64_t v9 = (char *)a1 + v8;
  uint64_t v10 = (char *)a2 + v8;
  uint64_t v11 = type metadata accessor for SiriAudioSnippets(0LL);
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v12 + 48);
  int v14 = v13(v9, 1LL, v11);
  int v15 = v13(v10, 1LL, v11);
  if (v14)
  {
    if (!v15)
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v9, v10, v11);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v9, 0LL, 1LL, v11);
      goto LABEL_7;
    }

    goto LABEL_6;
  }

  if (v15)
  {
    (*(void (**)(char *, uint64_t))(v12 + 8))(v9, v11);
LABEL_6:
    uint64_t v16 = sub_6C5C(&qword_284170);
    memcpy(v9, v10, *(void *)(*(void *)(v16 - 8) + 64LL));
    goto LABEL_7;
  }

  (*(void (**)(char *, char *, uint64_t))(v12 + 24))(v9, v10, v11);
LABEL_7:
  uint64_t v17 = a3[10];
  uint64_t v18 = *(uint64_t *)((char *)a1 + v17);
  uint64_t v19 = *(void *)((char *)a2 + v17);
  swift_errorRetain(v19);
  *(uint64_t *)((char *)a1 + v1sub_6C3C(v0 + 7) = v19;
  swift_errorRelease(v18);
  uint64_t v20 = a3[11];
  uint64_t v21 = (char *)a1 + v20;
  uint64_t v22 = (char *)a2 + v20;
  uint64_t v23 = sub_6C5C(&qword_289340);
  uint64_t v24 = *(void *)(v23 - 8);
  id v25 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v24 + 48);
  int v26 = v25(v21, 1LL, v23);
  int v27 = v25(v22, 1LL, v23);
  if (v26)
  {
    if (!v27)
    {
      uint64_t v28 = type metadata accessor for TemplatingResult(0LL);
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v28 - 8) + 16LL))(v21, v22, v28);
      uint64_t v29 = *(int *)(v23 + 48);
      uint64_t v30 = *(void **)&v22[v29];
      *(void *)&v21[v29] = v30;
      uint64_t v31 = *(void (**)(char *, void, uint64_t, uint64_t))(v24 + 56);
      id v32 = v30;
      v31(v21, 0LL, 1LL, v23);
      goto LABEL_13;
    }

    goto LABEL_12;
  }

  if (v27)
  {
    sub_1F6CC((uint64_t)v21, &qword_289340);
LABEL_12:
    uint64_t v33 = sub_6C5C((uint64_t *)&unk_286BA0);
    memcpy(v21, v22, *(void *)(*(void *)(v33 - 8) + 64LL));
    goto LABEL_13;
  }

  uint64_t v44 = type metadata accessor for TemplatingResult(0LL);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v44 - 8) + 24LL))(v21, v22, v44);
  uint64_t v45 = *(int *)(v23 + 48);
  unint64_t v46 = *(void **)&v22[v45];
  uint64_t v47 = *(void **)&v21[v45];
  *(void *)&v21[v45] = v46;
  id v48 = v46;

LABEL_13:
  uint64_t v34 = a3[12];
  uint64_t v35 = (char *)a1 + v34;
  uint64_t v36 = (char *)a2 + v34;
  uint64_t v37 = type metadata accessor for NLContextUpdate(0LL);
  uint64_t v38 = *(void *)(v37 - 8);
  uint64_t v39 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v38 + 48);
  int v40 = v39(v35, 1LL, v37);
  int v41 = v39(v36, 1LL, v37);
  if (!v40)
  {
    if (!v41)
    {
      (*(void (**)(char *, char *, uint64_t))(v38 + 24))(v35, v36, v37);
      return a1;
    }

    (*(void (**)(char *, uint64_t))(v38 + 8))(v35, v37);
    goto LABEL_18;
  }

  if (v41)
  {
LABEL_18:
    uint64_t v42 = sub_6C5C((uint64_t *)&unk_286C50);
    memcpy(v35, v36, *(void *)(*(void *)(v42 - 8) + 64LL));
    return a1;
  }

  (*(void (**)(char *, char *, uint64_t))(v38 + 16))(v35, v36, v37);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v38 + 56))(v35, 0LL, 1LL, v37);
  return a1;
}

void *sub_1DB674(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[9];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = type metadata accessor for SiriAudioSnippets(0LL);
  uint64_t v10 = *(void *)(v9 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1LL, v9))
  {
    uint64_t v11 = sub_6C5C(&qword_284170);
    memcpy(v7, v8, *(void *)(*(void *)(v11 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v7, v8, v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0LL, 1LL, v9);
  }

  uint64_t v12 = a3[11];
  *(void *)((char *)a1 + a3[10]) = *(void *)((char *)a2 + a3[10]);
  uint64_t v13 = (char *)a1 + v12;
  int v14 = (char *)a2 + v12;
  uint64_t v15 = sub_6C5C(&qword_289340);
  uint64_t v16 = *(void *)(v15 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1LL, v15))
  {
    uint64_t v17 = sub_6C5C((uint64_t *)&unk_286BA0);
    memcpy(v13, v14, *(void *)(*(void *)(v17 - 8) + 64LL));
  }

  else
  {
    uint64_t v18 = type metadata accessor for TemplatingResult(0LL);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 32LL))(v13, v14, v18);
    *(void *)&v13[*(int *)(v15 + 48)] = *(void *)&v14[*(int *)(v15 + 48)];
    (*(void (**)(char *, void, uint64_t, uint64_t))(v16 + 56))(v13, 0LL, 1LL, v15);
  }

  uint64_t v19 = a3[12];
  uint64_t v20 = (char *)a1 + v19;
  uint64_t v21 = (char *)a2 + v19;
  uint64_t v22 = type metadata accessor for NLContextUpdate(0LL);
  uint64_t v23 = *(void *)(v22 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48))(v21, 1LL, v22))
  {
    uint64_t v24 = sub_6C5C((uint64_t *)&unk_286C50);
    memcpy(v20, v21, *(void *)(*(void *)(v24 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(char *, char *, uint64_t))(v23 + 32))(v20, v21, v22);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v23 + 56))(v20, 0LL, 1LL, v22);
  }

  return a1;
}

uint64_t *sub_1DB86C(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t v6 = *a1;
  *a1 = *a2;
  swift_errorRelease(v6);
  uint64_t v7 = a3[9];
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = type metadata accessor for SiriAudioSnippets(0LL);
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v11 + 48);
  int v13 = v12(v8, 1LL, v10);
  int v14 = v12(v9, 1LL, v10);
  if (v13)
  {
    if (!v14)
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v8, v9, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0LL, 1LL, v10);
      goto LABEL_7;
    }

    goto LABEL_6;
  }

  if (v14)
  {
    (*(void (**)(char *, uint64_t))(v11 + 8))(v8, v10);
LABEL_6:
    uint64_t v15 = sub_6C5C(&qword_284170);
    memcpy(v8, v9, *(void *)(*(void *)(v15 - 8) + 64LL));
    goto LABEL_7;
  }

  (*(void (**)(char *, char *, uint64_t))(v11 + 40))(v8, v9, v10);
LABEL_7:
  uint64_t v16 = a3[10];
  uint64_t v17 = *(uint64_t *)((char *)a1 + v16);
  *(uint64_t *)((char *)a1 + vswift_weakDestroy(v0 + 16) = *(uint64_t *)((char *)a2 + v16);
  swift_errorRelease(v17);
  uint64_t v18 = a3[11];
  uint64_t v19 = (char *)a1 + v18;
  uint64_t v20 = (char *)a2 + v18;
  uint64_t v21 = sub_6C5C(&qword_289340);
  uint64_t v22 = *(void *)(v21 - 8);
  uint64_t v23 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v22 + 48);
  int v24 = v23(v19, 1LL, v21);
  int v25 = v23(v20, 1LL, v21);
  if (v24)
  {
    if (!v25)
    {
      uint64_t v26 = type metadata accessor for TemplatingResult(0LL);
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v26 - 8) + 32LL))(v19, v20, v26);
      *(void *)&v19[*(int *)(v21 + 48)] = *(void *)&v20[*(int *)(v21 + 48)];
      (*(void (**)(char *, void, uint64_t, uint64_t))(v22 + 56))(v19, 0LL, 1LL, v21);
      goto LABEL_13;
    }

    goto LABEL_12;
  }

  if (v25)
  {
    sub_1F6CC((uint64_t)v19, &qword_289340);
LABEL_12:
    uint64_t v27 = sub_6C5C((uint64_t *)&unk_286BA0);
    memcpy(v19, v20, *(void *)(*(void *)(v27 - 8) + 64LL));
    goto LABEL_13;
  }

  uint64_t v38 = type metadata accessor for TemplatingResult(0LL);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v38 - 8) + 40LL))(v19, v20, v38);
  uint64_t v39 = *(int *)(v21 + 48);
  int v40 = *(void **)&v19[v39];
  *(void *)&v19[v39] = *(void *)&v20[v39];

LABEL_13:
  uint64_t v28 = a3[12];
  uint64_t v29 = (char *)a1 + v28;
  uint64_t v30 = (char *)a2 + v28;
  uint64_t v31 = type metadata accessor for NLContextUpdate(0LL);
  uint64_t v32 = *(void *)(v31 - 8);
  uint64_t v33 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v32 + 48);
  int v34 = v33(v29, 1LL, v31);
  int v35 = v33(v30, 1LL, v31);
  if (!v34)
  {
    if (!v35)
    {
      (*(void (**)(char *, char *, uint64_t))(v32 + 40))(v29, v30, v31);
      return a1;
    }

    (*(void (**)(char *, uint64_t))(v32 + 8))(v29, v31);
    goto LABEL_18;
  }

  if (v35)
  {
LABEL_18:
    uint64_t v36 = sub_6C5C((uint64_t *)&unk_286C50);
    memcpy(v29, v30, *(void *)(*(void *)(v36 - 8) + 64LL));
    return a1;
  }

  (*(void (**)(char *, char *, uint64_t))(v32 + 32))(v29, v30, v31);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v32 + 56))(v29, 0LL, 1LL, v31);
  return a1;
}

uint64_t sub_1DBB6C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1DBB78);
}

uint64_t sub_1DBB78(char *a1, uint64_t a2, int *a3)
{
  if ((_DWORD)a2 == 2147483646)
  {
    uint64_t v4 = *(void *)a1;
    if (*(void *)a1 >= 0xFFFFFFFFuLL) {
      LODWORD(v4) = -1;
    }
    int v5 = v4 - 1;
    if (v5 < 0) {
      int v5 = -1;
    }
    return (v5 + 1);
  }

  else
  {
    uint64_t v9 = sub_6C5C(&qword_284170);
    uint64_t v10 = *(void *)(v9 - 8);
    if (*(_DWORD *)(v10 + 84) == (_DWORD)a2)
    {
      uint64_t v11 = v9;
      uint64_t v12 = a3[9];
    }

    else
    {
      uint64_t v13 = sub_6C5C((uint64_t *)&unk_286BA0);
      uint64_t v10 = *(void *)(v13 - 8);
      if (*(_DWORD *)(v10 + 84) == (_DWORD)a2)
      {
        uint64_t v11 = v13;
        uint64_t v12 = a3[11];
      }

      else
      {
        uint64_t v11 = sub_6C5C((uint64_t *)&unk_286C50);
        uint64_t v10 = *(void *)(v11 - 8);
        uint64_t v12 = a3[12];
      }
    }

    return (*(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48))(&a1[v12], a2, v11);
  }

uint64_t sub_1DBC54(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1DBC60);
}

char *sub_1DBC60(char *result, uint64_t a2, int a3, int *a4)
{
  int v5 = result;
  if (a3 == 2147483646)
  {
    *(void *)uint64_t result = a2;
  }

  else
  {
    uint64_t v8 = sub_6C5C(&qword_284170);
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      uint64_t v10 = v8;
      uint64_t v11 = a4[9];
    }

    else
    {
      uint64_t v12 = sub_6C5C((uint64_t *)&unk_286BA0);
      uint64_t v9 = *(void *)(v12 - 8);
      if (*(_DWORD *)(v9 + 84) == a3)
      {
        uint64_t v10 = v12;
        uint64_t v11 = a4[11];
      }

      else
      {
        uint64_t v10 = sub_6C5C((uint64_t *)&unk_286C50);
        uint64_t v9 = *(void *)(v10 - 8);
        uint64_t v11 = a4[12];
      }
    }

    return (char *)(*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56))(&v5[v11], a2, a2, v10);
  }

  return result;
}

uint64_t type metadata accessor for MetricsConstants()
{
  return objc_opt_self(&OBJC_CLASS____TtC23AudioFlowDelegatePlugin16MetricsConstants);
}

uint64_t sub_1DBD50()
{
  uint64_t v0 = type metadata accessor for OS_dispatch_queue.Attributes(0LL);
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  unint64_t v3 = (char *)&v12 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v4 = type metadata accessor for DispatchQoS(0LL);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = __chkstk_darwin(v4);
  uint64_t v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v9 = static DispatchQoS.userInteractive.getter(v6);
  static OS_dispatch_queue.Attributes.concurrent.getter(v9);
  uint64_t v10 = static DispatchQueues.queue(_:qos:attributes:)(0xD00000000000001FLL, 0x8000000000223CA0LL, v8, v3);
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v8, v4);
  qword_296BA8 = v10;
  return result;
}

uint64_t sub_1DBE54(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for Input(0LL);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v8 = type metadata accessor for Logger(0LL);
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)v26 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  if (qword_283888 != -1) {
    swift_once(&qword_283888, sub_BFC5C);
  }
  uint64_t v12 = sub_6960(v8, (uint64_t)qword_2969C8);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, v12, v8);
  uint64_t v13 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, a1, v4);
  uint64_t v30 = v9;
  int v14 = (os_log_s *)Logger.logObject.getter(v13);
  os_log_type_t v15 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v14, v15))
  {
    uint64_t v16 = swift_slowAlloc(12LL, -1LL);
    uint64_t v29 = a1;
    uint64_t v17 = (uint8_t *)v16;
    uint64_t v27 = swift_slowAlloc(32LL, -1LL);
    uint64_t v32 = v27;
    uint64_t v28 = v2;
    *(_DWORD *)uint64_t v17 = 136315138;
    v26[1] = v17 + 4;
    uint64_t v18 = sub_10430( (unint64_t *)&qword_284640,  (uint64_t (*)(uint64_t))&type metadata accessor for Input,  (uint64_t)&protocol conformance descriptor for Input);
    uint64_t v19 = dispatch thunk of CustomStringConvertible.description.getter(v4, v18);
    unint64_t v21 = v20;
    uint64_t v31 = sub_6978(v19, v20, &v32);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v31, &v32);
    __n128 v22 = swift_bridgeObjectRelease(v21);
    (*(void (**)(char *, uint64_t, __n128))(v5 + 8))(v7, v4, v22);
    _os_log_impl(&dword_0, v14, v15, "PlayMediaRCHFlowWrapper#onInput with input: %s", v17, 0xCu);
    uint64_t v23 = v27;
    swift_arrayDestroy(v27, 1LL, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v23, -1LL, -1LL);
    int v24 = v17;
    a1 = v29;
    swift_slowDealloc(v24, -1LL, -1LL);
  }

  else
  {
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }

  (*(void (**)(char *, uint64_t))(v30 + 8))(v11, v8);
  return dispatch thunk of RCHFlow.on(input:)(a1) & 1;
}

uint64_t sub_1DC0F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, uint64_t a6, uint64_t a7)
{
  uint64_t v90 = a5;
  uint64_t v91 = a7;
  uint64_t v89 = a6;
  uint64_t v92 = a3;
  uint64_t v93 = a4;
  uint64_t v9 = type metadata accessor for PlaybackCodeAndDescription(0LL);
  uint64_t v95 = *(void *)(v9 - 8);
  uint64_t v10 = __chkstk_darwin(v9);
  uint64_t v87 = (char *)&v76 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v85 = v11;
  __chkstk_darwin(v10);
  uint64_t v83 = (char *)&v76 - v12;
  uint64_t v13 = type metadata accessor for PlaybackCode(0LL);
  uint64_t v79 = *(void *)(v13 - 8);
  uint64_t v80 = v13;
  __chkstk_darwin(v13);
  id v78 = (char *)&v76 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v15 = sub_6C5C(&qword_28A680);
  uint64_t v16 = __chkstk_darwin(v15);
  uint64_t v18 = (char *)&v76 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v16);
  unint64_t v20 = (char *)&v76 - v19;
  uint64_t v21 = type metadata accessor for Logger(0LL);
  uint64_t v22 = *(void *)(v21 - 8);
  uint64_t v23 = __chkstk_darwin(v21);
  uint64_t v94 = (char *)&v76 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v23);
  uint64_t v26 = (char *)&v76 - v25;
  if (qword_283888 != -1) {
    swift_once(&qword_283888, sub_BFC5C);
  }
  uint64_t v27 = sub_6960(v21, (uint64_t)qword_2969C8);
  uint64_t v81 = *(void (**)(char *))(v22 + 16);
  uint64_t v82 = (uint64_t (*)(char *, uint64_t, uint64_t))v27;
  v81(v26);
  uint64_t v28 = sub_FF10(a1, (uint64_t)v20, &qword_28A680);
  uint64_t v29 = (os_log_s *)Logger.logObject.getter(v28);
  uint64_t v30 = v21;
  os_log_type_t v31 = static os_log_type_t.default.getter();
  BOOL v32 = os_log_type_enabled(v29, v31);
  uint64_t v88 = v9;
  uint64_t v86 = a2;
  uint64_t v84 = v30;
  if (v32)
  {
    uint64_t v33 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
    uint64_t v77 = swift_slowAlloc(32LL, -1LL);
    uint64_t v98 = v77;
    *(_DWORD *)uint64_t v33 = 136446210;
    sub_FF10((uint64_t)v20, (uint64_t)v18, &qword_28A680);
    uint64_t v34 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v95 + 48))(v18, 1LL, v9);
    if ((_DWORD)v34 == 1)
    {
      sub_1F6CC((uint64_t)v18, &qword_28A680);
      uint64_t v35 = 0LL;
      uint64_t v36 = 0LL;
    }

    else
    {
      uint64_t v39 = v78;
      PlaybackCodeAndDescription.playbackCode.getter(v34);
      uint64_t v40 = (*(uint64_t (**)(char *, uint64_t))(v95 + 8))(v18, v9);
      uint64_t v35 = PlaybackCode.rawValue.getter(v40);
      uint64_t v36 = v41;
      (*(void (**)(char *, uint64_t))(v79 + 8))(v39, v80);
    }

    uint64_t v96 = v35;
    uint64_t v97 = v36;
    uint64_t v42 = sub_6C5C(&qword_284600);
    uint64_t v43 = String.init<A>(describing:)(&v96, v42);
    unint64_t v45 = v44;
    uint64_t v96 = sub_6978(v43, v44, &v98);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v96, &v97);
    swift_bridgeObjectRelease(v45);
    sub_1F6CC((uint64_t)v20, &qword_28A680);
    _os_log_impl( &dword_0,  v29,  v31,  "PlayMediaRCHFlowWrapper#processAllContinuations playback continuation completed, code? %{public}s",  v33,  0xCu);
    uint64_t v46 = v77;
    swift_arrayDestroy(v77, 1LL, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v46, -1LL, -1LL);
    swift_slowDealloc(v33, -1LL, -1LL);

    uint64_t v37 = *(void (**)(char *, uint64_t))(v22 + 8);
    uint64_t v38 = v84;
    v37(v26, v84);
    uint64_t v9 = v88;
    a2 = v86;
  }

  else
  {
    sub_1F6CC((uint64_t)v20, &qword_28A680);

    uint64_t v37 = *(void (**)(char *, uint64_t))(v22 + 8);
    v37(v26, v30);
    uint64_t v38 = v30;
  }

  uint64_t v47 = v94;
  ((void (*)(char *, uint64_t (*)(char *, uint64_t, uint64_t), uint64_t))v81)(v94, v82, v38);
  id v48 = v83;
  uint64_t v82 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v95 + 16);
  uint64_t v49 = v82(v83, a2, v9);
  uint64_t v50 = (os_log_s *)Logger.logObject.getter(v49);
  os_log_type_t v51 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v50, v51))
  {
    uint64_t v52 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
    uint64_t v53 = swift_slowAlloc(32LL, -1LL);
    uint64_t v96 = v53;
    *(_DWORD *)uint64_t v52 = 136446210;
    uint64_t v81 = (void (*)(char *))v37;
    uint64_t v54 = v78;
    uint64_t v55 = PlaybackCodeAndDescription.playbackCode.getter(v53);
    uint64_t v56 = PlaybackCode.rawValue.getter(v55);
    uint64_t v57 = v48;
    unint64_t v59 = v58;
    (*(void (**)(char *, uint64_t))(v79 + 8))(v54, v80);
    uint64_t v98 = sub_6978(v56, v59, &v96);
    uint64_t v9 = v88;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v98, &v99);
    swift_bridgeObjectRelease(v59);
    (*(void (**)(char *, uint64_t))(v95 + 8))(v57, v9);
    _os_log_impl( &dword_0,  v50,  v51,  "PlayMediaRCHFlowWrapper#processAllContinuations replacing playback code for evaluation with failed prepareForSetQu eue code: %{public}s",  v52,  0xCu);
    swift_arrayDestroy(v53, 1LL, (char *)&type metadata for Any + 8);
    uint64_t v60 = v53;
    a2 = v86;
    swift_slowDealloc(v60, -1LL, -1LL);
    swift_slowDealloc(v52, -1LL, -1LL);

    ((void (*)(char *, uint64_t))v81)(v94, v84);
  }

  else
  {
    (*(void (**)(char *, uint64_t))(v95 + 8))(v48, v9);

    v37(v47, v38);
  }

  uint64_t v61 = v87;
  v82(v87, a2, v9);
  uint64_t v62 = v95;
  uint64_t v63 = *(unsigned __int8 *)(v95 + 80);
  uint64_t v64 = (v63 + 16) & ~v63;
  uint64_t v65 = swift_allocObject(&unk_2755C0, v64 + v85, v63 | 7);
  (*(void (**)(uint64_t, char *, uint64_t))(v62 + 32))(v65 + v64, v61, v9);
  uint64_t v66 = sub_6C5C(&qword_28DDE8);
  swift_allocObject(v66, *(unsigned int *)(v66 + 48), *(unsigned __int16 *)(v66 + 52));
  uint64_t v67 = AtomicValue.init(name:_:)(0xD000000000000044LL, 0x8000000000223C50LL, sub_1E3E0C, v65);
  uint64_t v68 = (void *)swift_allocObject(&unk_2755E8, 56LL, 7LL);
  uint64_t v70 = v89;
  uint64_t v69 = v90;
  v68[2] = v90;
  v68[3] = v70;
  uint64_t v72 = v91;
  uint64_t v71 = v92;
  v68[4] = v91;
  v68[5] = v71;
  uint64_t v73 = v93;
  v68[6] = v93;
  id v74 = v69;
  swift_retain(v72);
  swift_retain(v71);
  swift_retain(v73);
  dispatch thunk of AtomicValue.computeIfAbsent(startTimeMaxSecondsAgo:completion:)(0LL, 1LL, sub_33ECC, v68);
  swift_release(v67);
  return swift_release(v68);
}

uint64_t sub_1DC7CC(void (*a1)(char *), uint64_t a2, uint64_t a3)
{
  uint64_t v5 = sub_6C5C(&qword_28A680);
  __chkstk_darwin(v5);
  uint64_t v7 = (char *)&v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v8 = type metadata accessor for PlaybackCodeAndDescription(0LL);
  uint64_t v9 = *(void *)(v8 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v7, a3, v8);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v9 + 56))(v7, 0LL, 1LL, v8);
  a1(v7);
  return sub_1F6CC((uint64_t)v7, &qword_28A680);
}

uint64_t sub_1DC898(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5, uint64_t a6)
{
  uint64_t v23 = a5;
  uint64_t v24 = a2;
  uint64_t v10 = type metadata accessor for Logger(0LL);
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)&v23 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  if (qword_283888 != -1) {
    swift_once(&qword_283888, sub_BFC5C);
  }
  uint64_t v14 = sub_6960(v10, (uint64_t)qword_2969C8);
  uint64_t v15 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v11 + 16))(v13, v14, v10);
  uint64_t v16 = (os_log_s *)Logger.logObject.getter(v15);
  os_log_type_t v17 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v16, v17))
  {
    uint64_t v18 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
    *(_WORD *)uint64_t v18 = 0;
    _os_log_impl( &dword_0,  v16,  v17,  "PlayMediaRCHFlowWrapper#execute unexpected error cancelled any previously requested prepareForAudioHandoff; evalua"
      "ting fallback dialog...",
      v18,
      2u);
    swift_slowDealloc(v18, -1LL, -1LL);
  }

  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  uint64_t v19 = swift_allocObject(&unk_275638, 56LL, 7LL);
  *(void *)(v19 + swift_weakDestroy(v0 + 16) = a1;
  *(void *)(v19 + 24) = a3;
  uint64_t v20 = v23;
  *(void *)(v19 + 3sub_6C3C(v0 + 2) = a4;
  *(void *)(v19 + 40) = v20;
  *(void *)(v19 + 48) = a6;
  swift_retain(a1);
  swift_retain(a3);
  id v21 = a4;
  swift_retain(a6);
  sub_1DDBBC(v24, a3, v21, (void (*)(uint64_t (*)(), uint64_t))sub_1E4038, (char **)v19);
  return swift_release(v19);
}

uint64_t sub_1DCA5C( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(char *), uint64_t a6)
{
  uint64_t v124 = a6;
  os_log_type_t v125 = a5;
  uint64_t v116 = a4;
  uint64_t v114 = a3;
  uint64_t v118 = a1;
  uint64_t v119 = a2;
  uint64_t v6 = sub_6C5C(&qword_2845A0);
  __chkstk_darwin(v6);
  uint64_t v115 = (char *)&v104 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v8 = sub_6C5C((uint64_t *)&unk_286BD0);
  __chkstk_darwin(v8);
  uint64_t v113 = (char *)&v104 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v10 = sub_6C5C(&qword_2845A8);
  __chkstk_darwin(v10);
  uint64_t v112 = (char *)&v104 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v109 = type metadata accessor for AdditionalMetricsDescription.StatusReason(0LL);
  uint64_t v108 = *(void *)(v109 - 8);
  __chkstk_darwin(v109);
  uint64_t v13 = (char *)&v104 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v107 = type metadata accessor for AdditionalMetricsDescription.SourceFunction(0LL);
  uint64_t v106 = *(void *)(v107 - 8);
  __chkstk_darwin(v107);
  uint64_t v15 = (char *)&v104 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v105 = type metadata accessor for AdditionalMetricsDescription.ModuleName(0LL);
  uint64_t v104 = *(void *)(v105 - 8);
  __chkstk_darwin(v105);
  os_log_type_t v17 = (char *)&v104 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v18 = type metadata accessor for ExecuteResponse(0LL);
  uint64_t v122 = *(void *)(v18 - 8);
  uint64_t v123 = v18;
  __chkstk_darwin(v18);
  uint64_t v121 = (char *)&v104 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v111 = type metadata accessor for UUID(0LL);
  uint64_t v110 = *(void *)(v111 - 8);
  __chkstk_darwin(v111);
  id v21 = (char *)&v104 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v120 = type metadata accessor for Logger(0LL);
  uint64_t v126 = *(void *)(v120 - 8);
  uint64_t v22 = __chkstk_darwin(v120);
  double v117 = (char *)&v104 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v22);
  uint64_t v25 = (char *)&v104 - v24;
  uint64_t v26 = sub_6C5C((uint64_t *)&unk_286BB0);
  __chkstk_darwin(v26);
  uint64_t v28 = (char *)&v104 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v29 = sub_6C5C(&qword_289340);
  __chkstk_darwin(v29);
  os_log_type_t v31 = (char *)&v104 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  sub_FF10(v118, (uint64_t)v28, (uint64_t *)&unk_286BB0);
  if (swift_getEnumCaseMultiPayload(v28, v26) == 1)
  {
    uint64_t v32 = v119;
    sub_1F6CC((uint64_t)v28, (uint64_t *)&unk_286BB0);
    if (qword_283888 != -1) {
      swift_once(&qword_283888, sub_BFC5C);
    }
    uint64_t v33 = v120;
    uint64_t v34 = sub_6960(v120, (uint64_t)qword_2969C8);
    uint64_t v35 = v126;
    uint64_t v36 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v126 + 16))(v25, v34, v33);
    uint64_t v37 = (os_log_s *)Logger.logObject.getter(v36);
    os_log_type_t v38 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v37, v38))
    {
      uint64_t v39 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)uint64_t v39 = 0;
      _os_log_impl( &dword_0,  v37,  v38,  "PlayMediaRCHFlowWrapper#execute unexpected error evaluating failure dialog template",  v39,  2u);
      swift_slowDealloc(v39, -1LL, -1LL);
    }

    (*(void (**)(char *, uint64_t))(v35 + 8))(v25, v33);
    uint64_t v40 = v104;
    uint64_t v41 = v105;
    (*(void (**)(char *, void, uint64_t))(v104 + 104))( v17,  enum case for AdditionalMetricsDescription.ModuleName.pmrfw(_:),  v105);
    uint64_t v42 = v106;
    uint64_t v43 = v107;
    (*(void (**)(char *, void, uint64_t))(v106 + 104))( v15,  enum case for AdditionalMetricsDescription.SourceFunction.procPly(_:),  v107);
    uint64_t v44 = v108;
    uint64_t v45 = v109;
    (*(void (**)(char *, void, uint64_t))(v108 + 104))( v13,  enum case for AdditionalMetricsDescription.StatusReason.unknown(_:),  v109);
    uint64_t v126 = static AdditionalMetricsDescription.encodeInfo(module:source:statusReason:extraInfo:)( v17,  v15,  v13,  0LL,  1LL);
    uint64_t v120 = v46;
    (*(void (**)(char *, uint64_t))(v44 + 8))(v13, v45);
    (*(void (**)(char *, uint64_t))(v42 + 8))(v15, v43);
    (*(void (**)(char *, uint64_t))(v40 + 8))(v17, v41);
    uint64_t v47 = *(void *)(v32
                    + OBJC_IVAR____TtC23AudioFlowDelegatePlugin23PlayMediaRCHFlowWrapper_siriKitTaskLoggingProvider
                    + 24);
    uint64_t v48 = *(void *)(v32
                    + OBJC_IVAR____TtC23AudioFlowDelegatePlugin23PlayMediaRCHFlowWrapper_siriKitTaskLoggingProvider
                    + 32);
    sub_6EA8( (void *)(v32 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin23PlayMediaRCHFlowWrapper_siriKitTaskLoggingProvider),  v47);
    uint64_t v49 = enum case for ActivityType.failed(_:);
    uint64_t v50 = type metadata accessor for ActivityType(0LL);
    uint64_t v51 = *(void *)(v50 - 8);
    uint64_t v52 = (uint64_t)v112;
    (*(void (**)(char *, uint64_t, uint64_t))(v51 + 104))(v112, v49, v50);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v51 + 56))(v52, 0LL, 1LL, v50);
    uint64_t v53 = type metadata accessor for TemplatingResult(0LL);
    uint64_t v54 = (uint64_t)v113;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v53 - 8) + 56LL))(v113, 1LL, 1LL, v53);
    uint64_t v55 = enum case for SiriKitReliabilityCodes.renderingError(_:);
    uint64_t v56 = type metadata accessor for SiriKitReliabilityCodes(0LL);
    uint64_t v57 = *(void *)(v56 - 8);
    uint64_t v58 = (uint64_t)v115;
    (*(void (**)(char *, uint64_t, uint64_t))(v57 + 104))(v115, v55, v56);
    uint64_t v59 = (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v57 + 56))(v58, 0LL, 1LL, v56);
    uint64_t v60 = v116;
    uint64_t v61 = INPlayMediaIntent.firstMediaItemType()(v59);
    uint64_t v62 = v120;
    dispatch thunk of SiriKitTaskLoggingProviding.submitMetric(app:intent:activityType:templateResult:statusReason:description:mediaItemType:)( v114,  v60,  v52,  v54,  v58,  v126,  v120,  v61,  0,  v47,  v48);
    swift_bridgeObjectRelease(v62);
    sub_1F6CC(v58, &qword_2845A0);
    sub_1F6CC(v54, (uint64_t *)&unk_286BD0);
    uint64_t v63 = sub_1F6CC(v52, &qword_2845A8);
    uint64_t v64 = v121;
    static ExecuteResponse.complete()(v63);
    v125(v64);
    return (*(uint64_t (**)(char *, uint64_t))(v122 + 8))(v64, v123);
  }

  else
  {
    uint64_t v66 = *(int *)(v29 + 48);
    uint64_t v67 = type metadata accessor for TemplatingResult(0LL);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v67 - 8) + 32LL))(v31, v28, v67);
    *(void *)&v31[v66] = *(void *)&v28[v66];
    uint64_t v68 = dispatch thunk of ViewFactory.makeUtteranceViews(template:listenAfterSpeaking:canUseServerTTS:)(v31, 0LL, 1LL);
    type metadata accessor for SiriKitAceViewBuilder(0LL);
    uint64_t v69 = type metadata accessor for SiriEnvironmentBackedDeviceState(0LL);
    swift_allocObject(v69, *(unsigned int *)(v69 + 48), *(unsigned __int16 *)(v69 + 52));
    uint64_t v70 = SiriEnvironmentBackedDeviceState.init()();
    uint64_t v129 = v69;
    uint64_t v130 = sub_10430( (unint64_t *)&qword_289348,  (uint64_t (*)(uint64_t))&type metadata accessor for SiriEnvironmentBackedDeviceState,  (uint64_t)&protocol conformance descriptor for SiriEnvironmentBackedDeviceState);
    v128[0] = v70;
    uint64_t v71 = dispatch thunk of static SiriKitAceViewBuilder.makeBuilder(deviceState:)(v128);
    sub_6C3C(v128);
    uint64_t v72 = dispatch thunk of SiriKitAceViewBuilder.withUtteranceViews(utteranceViews:)(v68);
    swift_release(v71);
    uint64_t v73 = swift_bridgeObjectRelease(v68);
    uint64_t v74 = dispatch thunk of SiriKitAceViewBuilder.build()(v73);
    swift_release(v72);
    id v75 = [objc_allocWithZone(SAUIAddViews) init];
    sub_1641C(0LL, (unint64_t *)&qword_284648, &OBJC_CLASS___SAAceView_ptr);
    Class isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease(v74);
    [v75 setViews:isa];

    [v75 setDialogPhase:SAUIDialogPhaseErrorValue];
    [v75 setTemporary:0];
    id v77 = v75;
    static ExecutorProvider.shared.getter(v128);
    uint64_t v78 = v129;
    uint64_t v79 = v130;
    sub_6EA8(v128, v129);
    dispatch thunk of ExecutorProviding.currentRequestId.getter(v78, v79);
    if (v80)
    {
      uint64_t v81 = v80;
      NSString v82 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease(v81);
    }

    else
    {
      NSString v82 = 0LL;
    }

    uint64_t v83 = v120;
    uint64_t v84 = v126;
    sub_6C3C(v128);
    [v77 setRefId:v82];

    id v85 = v77;
    uint64_t v86 = UUID.init()();
    UUID.uuidString.getter(v86);
    uint64_t v88 = v87;
    (*(void (**)(char *, uint64_t))(v110 + 8))(v21, v111);
    NSString v89 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v88);
    [v85 setAceId:v89];

    static AceService.current.getter(v128);
    uint64_t v90 = v129;
    uint64_t v91 = v130;
    sub_6EA8(v128, v129);
    dispatch thunk of AceServiceInvoker.submitAndForget(_:)(v85, v90, v91);
    sub_6C3C(v128);
    if (qword_283888 != -1) {
      swift_once(&qword_283888, sub_BFC5C);
    }
    uint64_t v92 = sub_6960(v83, (uint64_t)qword_2969C8);
    uint64_t v93 = v117;
    uint64_t v94 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v84 + 16))(v117, v92, v83);
    uint64_t v95 = (os_log_s *)Logger.logObject.getter(v94);
    os_log_type_t v96 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v95, v96))
    {
      uint64_t v97 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
      uint64_t v98 = swift_slowAlloc(32LL, -1LL);
      v128[0] = v98;
      *(_DWORD *)uint64_t v97 = 136446210;
      uint64_t v99 = static Insights.frameKit.getter();
      unint64_t v101 = v100;
      uint64_t v127 = sub_6978(v99, v100, v128);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v127, v128);
      swift_bridgeObjectRelease(v101);
      _os_log_impl( &dword_0,  v95,  v96,  "PlayMediaRCHFlowWrapper#execute %{public}s sent failure ace view for failed continuation",  v97,  0xCu);
      swift_arrayDestroy(v98, 1LL, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v98, -1LL, -1LL);
      swift_slowDealloc(v97, -1LL, -1LL);

      uint64_t v102 = (*(uint64_t (**)(char *, uint64_t))(v126 + 8))(v117, v83);
    }

    else
    {

      uint64_t v102 = (*(uint64_t (**)(char *, uint64_t))(v84 + 8))(v93, v83);
    }

    uint64_t v103 = v121;
    static ExecuteResponse.complete()(v102);
    v125(v103);

    (*(void (**)(char *, uint64_t))(v122 + 8))(v103, v123);
    return sub_1F6CC((uint64_t)v31, &qword_289340);
  }

uint64_t sub_1DD534(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[13] = a5;
  v6[14] = a6;
  void v6[12] = a4;
  uint64_t v7 = sub_6C5C(&qword_289EA8);
  v6[15] = v7;
  uint64_t v8 = *(void *)(v7 - 8);
  v6[16] = v8;
  v6[17] = swift_task_alloc((*(void *)(v8 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v9 = type metadata accessor for Logger(0LL);
  v6[18] = v9;
  uint64_t v10 = *(void *)(v9 - 8);
  v6[19] = v10;
  unint64_t v11 = (*(void *)(v10 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL;
  v6[20] = swift_task_alloc(v11);
  v6[21] = swift_task_alloc(v11);
  v6[22] = swift_task_alloc(v11);
  return swift_task_switch(sub_1DD5E0, 0LL, 0LL);
}

uint64_t sub_1DD5E0()
{
  if (qword_283888 != -1) {
    swift_once(&qword_283888, sub_BFC5C);
  }
  uint64_t v1 = *(void *)(v0 + 176);
  uint64_t v2 = *(void *)(v0 + 144);
  uint64_t v3 = *(void *)(v0 + 152);
  uint64_t v4 = sub_6960(v2, (uint64_t)qword_2969C8);
  *(void *)(v0 + 184) = v4;
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 16);
  *(void *)(v0 + 19sub_6C3C(v0 + 2) = v5;
  os_log_type_t v38 = v5;
  uint64_t v6 = v5(v1, v4, v2);
  uint64_t v7 = (os_log_s *)Logger.logObject.getter(v6);
  os_log_type_t v8 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v7, v8))
  {
    uint64_t v9 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
    *(_WORD *)uint64_t v9 = 0;
    _os_log_impl(&dword_0, v7, v8, "PlayMediaRCHFlowWrapper#donateIntentForEngagement checking for intent", v9, 2u);
    swift_slowDealloc(v9, -1LL, -1LL);
  }

  uint64_t v10 = *(void *)(v0 + 176);
  uint64_t v11 = *(void *)(v0 + 144);
  uint64_t v12 = *(void *)(v0 + 152);
  uint64_t v14 = *(void *)(v0 + 128);
  uint64_t v13 = *(void *)(v0 + 136);
  uint64_t v15 = *(void *)(v0 + 120);
  uint64_t v16 = *(void *)(v0 + 96);

  os_log_type_t v17 = *(void (**)(uint64_t, uint64_t))(v12 + 8);
  *(void *)(v0 + 200) = v17;
  v17(v10, v11);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v14 + 16))(v13, v16, v15);
  if ((*(unsigned int (**)(uint64_t, uint64_t))(v14 + 88))(v13, v15) == enum case for RCHFlowResult.complete<A, B>(_:))
  {
    uint64_t v18 = *(uint64_t **)(v0 + 136);
    (*(void (**)(uint64_t *, void))(*(void *)(v0 + 128) + 96LL))(v18, *(void *)(v0 + 120));
    uint64_t v20 = *v18;
    uint64_t v19 = v18[1];
    *(void *)(v0 + 208) = v19;

    swift_release(v20);
    type metadata accessor for SiriSuggestionsAPIClients(0LL);
    static SiriSuggestionsAPIClients.get()();
    uint64_t v21 = *(void *)(v0 + 80);
    uint64_t v22 = *(void *)(v0 + 88);
    uint64_t v23 = sub_6EA8((void *)(v0 + 56), v21);
    *(void *)(v0 + 40) = v21;
    *(void *)(v0 + 48) = *(void *)(v22 + 16);
    uint64_t v24 = sub_10974((void *)(v0 + 16));
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v21 - 8) + 16LL))(v24, v23, v21);
    sub_6C3C((void *)(v0 + 56));
    uint64_t v25 = (void *)swift_task_alloc(async function pointer to static SuggestionsDonationProvider.donateIntentForEngagement(intent:currentRequestId:suggestionsAPIClient:)[1]);
    *(void *)(v0 + 2swift_weakDestroy(v0 + 16) = v25;
    *uint64_t v25 = v0;
    v25[1] = sub_1DD904;
    return static SuggestionsDonationProvider.donateIntentForEngagement(intent:currentRequestId:suggestionsAPIClient:)( v19,  *(void *)(v0 + 104),  *(void *)(v0 + 112),  v0 + 16);
  }

  else
  {
    uint64_t v27 = *(void *)(v0 + 168);
    uint64_t v28 = *(void *)(v0 + 144);
    (*(void (**)(void, void))(*(void *)(v0 + 128) + 8LL))(*(void *)(v0 + 136), *(void *)(v0 + 120));
    uint64_t v29 = v38(v27, v4, v28);
    uint64_t v30 = (os_log_s *)Logger.logObject.getter(v29);
    os_log_type_t v31 = static os_log_type_t.default.getter(v30);
    if (os_log_type_enabled(v30, v31))
    {
      uint64_t v32 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)uint64_t v32 = 0;
      _os_log_impl( &dword_0,  v30,  v31,  "PlayMediaRCHFlowWrapper#donateIntentForEngagement no intent found in response",  v32,  2u);
      swift_slowDealloc(v32, -1LL, -1LL);
    }

    uint64_t v33 = *(void *)(v0 + 168);
    uint64_t v34 = *(void *)(v0 + 144);

    v17(v33, v34);
    uint64_t v35 = *(void *)(v0 + 168);
    uint64_t v36 = *(void *)(v0 + 160);
    uint64_t v37 = *(void *)(v0 + 136);
    swift_task_dealloc(*(void *)(v0 + 176));
    swift_task_dealloc(v35);
    swift_task_dealloc(v36);
    swift_task_dealloc(v37);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }

uint64_t sub_1DD904()
{
  uint64_t v1 = (void *)(*(void *)v0 + 16LL);
  swift_task_dealloc(*(void *)(*(void *)v0 + 216LL));
  sub_6C3C(v1);
  return swift_task_switch(sub_1DD964, 0LL, 0LL);
}

uint64_t sub_1DD964()
{
  uint64_t v1 = (*(uint64_t (**)(void, void, void))(v0 + 192))( *(void *)(v0 + 160),  *(void *)(v0 + 184),  *(void *)(v0 + 144));
  uint64_t v2 = (os_log_s *)Logger.logObject.getter(v1);
  os_log_type_t v3 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
    *(_WORD *)uint64_t v4 = 0;
    _os_log_impl(&dword_0, v2, v3, "PlayMediaRCHFlowWrapper#donateIntentForEngagement complete", v4, 2u);
    swift_slowDealloc(v4, -1LL, -1LL);
    uint64_t v5 = *(os_log_s **)(v0 + 208);
  }

  else
  {
    uint64_t v5 = v2;
    uint64_t v2 = *(os_log_s **)(v0 + 208);
  }

  uint64_t v6 = *(void (**)(uint64_t, uint64_t))(v0 + 200);
  uint64_t v7 = *(void *)(v0 + 160);
  uint64_t v8 = *(void *)(v0 + 144);

  v6(v7, v8);
  uint64_t v9 = *(void *)(v0 + 168);
  uint64_t v10 = *(void *)(v0 + 160);
  uint64_t v11 = *(void *)(v0 + 136);
  swift_task_dealloc(*(void *)(v0 + 176));
  swift_task_dealloc(v9);
  swift_task_dealloc(v10);
  swift_task_dealloc(v11);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1DDA70(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for TaskPriority(0LL);
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, 1LL, v6) == 1)
  {
    sub_1F6CC(a1, &qword_287688);
    uint64_t v8 = 7168LL;
    uint64_t v9 = *(void *)(a3 + 16);
    if (v9)
    {
LABEL_3:
      uint64_t v10 = *(void *)(a3 + 24);
      uint64_t ObjectType = swift_getObjectType(v9);
      swift_unknownObjectRetain(v9, v12);
      uint64_t v13 = dispatch thunk of Actor.unownedExecutor.getter(ObjectType, v10);
      uint64_t v15 = v14;
      swift_unknownObjectRelease(v9);
      goto LABEL_6;
    }
  }

  else
  {
    unsigned __int8 v16 = TaskPriority.rawValue.getter();
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(a1, v6);
    uint64_t v8 = v16 | 0x1C00LL;
    uint64_t v9 = *(void *)(a3 + 16);
    if (v9) {
      goto LABEL_3;
    }
  }

  uint64_t v13 = 0LL;
  uint64_t v15 = 0LL;
LABEL_6:
  uint64_t v17 = swift_allocObject(&unk_275318, 32LL, 7LL);
  *(void *)(v17 + swift_weakDestroy(v0 + 16) = a2;
  *(void *)(v17 + 24) = a3;
  if (v15 | v13)
  {
    v20[0] = 0LL;
    v20[1] = 0LL;
    uint64_t v18 = v20;
    v20[2] = v13;
    void v20[3] = v15;
  }

  else
  {
    uint64_t v18 = 0LL;
  }

  return swift_task_create(v8, v18, (char *)&type metadata for () + 8, &unk_28DDD8, v17);
}

void sub_1DDBBC(uint64_t a1, uint64_t a2, void *a3, void (*a4)(uint64_t (*)(), uint64_t), char **a5)
{
  uint64_t v419 = a3;
  uint64_t v427 = a5;
  __n128 v420 = a4;
  uint64_t v416 = a2;
  uint64_t v6 = type metadata accessor for DeviceProvider(0LL);
  uint64_t v401 = *(void *)(v6 - 8);
  uint64_t v402 = v6;
  __chkstk_darwin(v6);
  v400 = (char *)&v374 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v388 = type metadata accessor for AirPlayRouteSetupState(0LL);
  uint64_t v383 = *(void *)(v388 - 8);
  __chkstk_darwin(v388);
  v376 = (char *)&v374 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v377 = sub_6C5C(&qword_2876D8);
  __chkstk_darwin(v377);
  uint64_t v384 = (uint64_t)&v374 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v10 = sub_6C5C((uint64_t *)&unk_2876E0);
  uint64_t v11 = __chkstk_darwin(v10);
  uint64_t v378 = (uint64_t)&v374 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v13 = __chkstk_darwin(v11);
  uint64_t v382 = (uint64_t)&v374 - v14;
  __chkstk_darwin(v13);
  uint64_t v385 = (uint64_t)&v374 - v15;
  uint64_t v424 = type metadata accessor for PlaybackCode(0LL);
  uint64_t v417 = *(void *)(v424 - 8);
  uint64_t v16 = __chkstk_darwin(v424);
  uint64_t v18 = (char *)&v374 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v19 = __chkstk_darwin(v16);
  v421 = (char *)&v374 - v20;
  uint64_t v21 = __chkstk_darwin(v19);
  uint64_t v412 = (char *)&v374 - v22;
  uint64_t v23 = __chkstk_darwin(v21);
  uint64_t v407 = (char *)&v374 - v24;
  __chkstk_darwin(v23);
  uint64_t v26 = (char *)&v374 - v25;
  uint64_t v27 = type metadata accessor for PlaybackCodeAndDescription(0LL);
  uint64_t v28 = *(void (**)(char *, uint64_t))(v27 - 8);
  uint64_t v29 = __chkstk_darwin(v27);
  uint64_t v387 = (char *)&v374 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v29);
  uint64_t v32 = (char *)&v374 - v31;
  uint64_t v33 = type metadata accessor for Logger(0LL);
  uint64_t v34 = *(void *)(v33 - 8);
  uint64_t v35 = __chkstk_darwin(v33);
  uint64_t v406 = (char *)&v374 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v37 = __chkstk_darwin(v35);
  v405 = (char *)&v374 - v38;
  uint64_t v39 = __chkstk_darwin(v37);
  v404 = (char *)&v374 - v40;
  uint64_t v41 = __chkstk_darwin(v39);
  char v403 = (char *)&v374 - v42;
  uint64_t v43 = __chkstk_darwin(v41);
  uint64_t v399 = (char *)&v374 - v44;
  uint64_t v45 = __chkstk_darwin(v43);
  char v398 = (char *)&v374 - v46;
  uint64_t v47 = __chkstk_darwin(v45);
  uint64_t v397 = (char *)&v374 - v48;
  uint64_t v49 = __chkstk_darwin(v47);
  uint64_t v396 = (char *)&v374 - v50;
  uint64_t v51 = __chkstk_darwin(v49);
  uint64_t v395 = (char *)&v374 - v52;
  uint64_t v53 = __chkstk_darwin(v51);
  uint64_t v394 = (char *)&v374 - v54;
  uint64_t v55 = __chkstk_darwin(v53);
  uint64_t v393 = (char *)&v374 - v56;
  uint64_t v57 = __chkstk_darwin(v55);
  uint64_t v392 = (char *)&v374 - v58;
  uint64_t v59 = __chkstk_darwin(v57);
  uint64_t v390 = (char *)&v374 - v60;
  uint64_t v61 = __chkstk_darwin(v59);
  uint64_t v391 = (char *)&v374 - v62;
  uint64_t v63 = __chkstk_darwin(v61);
  uint64_t v389 = (char *)&v374 - v64;
  uint64_t v65 = __chkstk_darwin(v63);
  uint64_t v386 = (char *)&v374 - v66;
  uint64_t v67 = __chkstk_darwin(v65);
  uint64_t v409 = (char *)&v374 - v68;
  uint64_t v69 = __chkstk_darwin(v67);
  uint64_t v410 = (char *)&v374 - v70;
  __chkstk_darwin(v69);
  uint64_t v72 = (char *)&v374 - v71;
  if (qword_283888 != -1) {
    swift_once(&qword_283888, sub_BFC5C);
  }
  v413 = v18;
  uint64_t v73 = sub_6960(v33, (uint64_t)qword_2969C8);
  uint64_t v74 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v34 + 16);
  uint64_t v425 = v73;
  uint64_t v426 = v74;
  ((void (*)(char *))v74)(v72);
  os_log_t v380 = (uint64_t (*)(char *, uint64_t, uint64_t))*((void *)v28 + 2);
  uint64_t v75 = v380(v32, a1, v27);
  uint64_t v76 = (os_log_s *)Logger.logObject.getter(v75);
  os_log_type_t v77 = static os_log_type_t.default.getter();
  uint64_t v422 = v28;
  os_log_type_t v78 = v77;
  BOOL v79 = os_log_type_enabled(v76, v77);
  uint64_t v428 = v33;
  uint64_t v423 = a1;
  uint64_t v408 = v27;
  if (v79)
  {
    os_log_t v414 = v76;
    uint64_t v80 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
    uint64_t v81 = swift_slowAlloc(32LL, -1LL);
    uint64_t v379 = v81;
    v432 = (void *)v81;
    uint64_t v375 = v80;
    *(_DWORD *)uint64_t v80 = 136446210;
    uint64_t v415 = v34;
    NSString v82 = v32;
    uint64_t v83 = PlaybackCodeAndDescription.playbackCode.getter(v81);
    uint64_t v84 = PlaybackCode.rawValue.getter(v83);
    unint64_t v86 = v85;
    uint64_t v87 = v417;
    (*(void (**)(char *, uint64_t))(v417 + 8))(v26, v424);
    uint64_t v436 = sub_6978(v84, v86, (uint64_t *)&v432);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v436, v437);
    swift_bridgeObjectRelease(v86);
    uint64_t v381 = (void (*)(char *, uint64_t))*((void *)v422 + 1);
    v381(v82, v408);
    os_log_t v88 = v414;
    NSString v89 = v375;
    _os_log_impl(&dword_0, v414, v78, "PlayMediaRCHFlowWrapper#dialogForError code %{public}s", v375, 0xCu);
    uint64_t v90 = v379;
    swift_arrayDestroy(v379, 1LL, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v90, -1LL, -1LL);
    uint64_t v91 = v424;
    swift_slowDealloc(v89, -1LL, -1LL);

    uint64_t v92 = *(os_log_s **)(v415 + 8);
    ((void (*)(char *, uint64_t))v92)(v72, v428);
  }

  else
  {
    uint64_t v381 = (void (*)(char *, uint64_t))*((void *)v422 + 1);
    v381(v32, v27);

    uint64_t v92 = *(os_log_s **)(v34 + 8);
    ((void (*)(char *, uint64_t))v92)(v72, v33);
    uint64_t v91 = v424;
    uint64_t v87 = v417;
  }

  uint64_t v379 = sub_1E3410();
  uint64_t v415 = v93;
  uint64_t v94 = type metadata accessor for PFSQHandler(0LL);
  PlaybackCodeAndDescription.playbackCode.getter(v94);
  char v95 = static PFSQHandler.isPFSQTerminatingError(playbackCode:)(v26);
  os_log_type_t v96 = *(uint64_t (**)(char *, uint64_t))(v87 + 8);
  uint64_t v97 = v96(v26, v91);
  uint64_t v98 = v427;
  uint64_t v422 = (void (*)(char *, uint64_t))v96;
  os_log_t v414 = v92;
  if ((v95 & 1) != 0)
  {
    uint64_t v99 = *(void **)(v418 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin23PlayMediaRCHFlowWrapper_playDialogService);
    uint64_t v100 = (uint64_t)v407;
    PlaybackCodeAndDescription.playbackCode.getter(v97);
    unint64_t v101 = (void *)sub_74D54((uint64_t)_swiftEmptyArrayStorage);
    sub_1E1F70(v101, v99, v100, v416, v419, (uint64_t)v420, (uint64_t)v98);
    v96((char *)v100, v91);
    swift_bridgeObjectRelease(v415);
    swift_bridgeObjectRelease(v101);
    return;
  }

  uint64_t v411 = v26;
  uint64_t v102 = v412;
  PlaybackCodeAndDescription.playbackCode.getter(v97);
  uint64_t v103 = *(void (**)(char *, void, uint64_t))(v87 + 104);
  v103(v421, enum case for PlaybackCode.applicationTerminated(_:), v91);
  uint64_t v104 = sub_10430( &qword_28A798,  (uint64_t (*)(uint64_t))&type metadata accessor for PlaybackCode,  (uint64_t)&protocol conformance descriptor for PlaybackCode);
  dispatch thunk of RawRepresentable.rawValue.getter(&v432, v91, v104);
  dispatch thunk of RawRepresentable.rawValue.getter(&v436, v91, v104);
  uint64_t v105 = v433;
  uint64_t v106 = v437[0];
  uint64_t v107 = v91;
  if (v432 == (void *)v436 && v433 == v437[0])
  {
    swift_bridgeObjectRelease_n(v433, 2LL);
    uint64_t v108 = v422;
    v422(v421, v91);
    v108(v102, v91);
  }

  else
  {
    char v109 = _stringCompareWithSmolCheck(_:_:expecting:)(v432, v433);
    swift_bridgeObjectRelease(v105);
    swift_bridgeObjectRelease(v106);
    uint64_t v110 = (uint64_t (*)(char *, uint64_t))v422;
    v422(v421, v91);
    uint64_t v111 = v110(v102, v91);
    if ((v109 & 1) == 0) {
      goto LABEL_15;
    }
  }

  uint64_t v112 = v409;
  uint64_t v113 = v426(v409, v425, v428);
  uint64_t v114 = (os_log_s *)Logger.logObject.getter(v113);
  os_log_type_t v115 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v114, v115))
  {
    uint64_t v116 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
    *(_WORD *)uint64_t v116 = 0;
    _os_log_impl( &dword_0,  v114,  v115,  "PlayMediaRCHFlowWrapper#dialogForError capturing non special case applicationTerminated",  v116,  2u);
    swift_slowDealloc(v116, -1LL, -1LL);
  }

  uint64_t v111 = ((uint64_t (*)(char *, uint64_t))v92)(v112, v428);
LABEL_15:
  double v117 = v411;
  PlaybackCodeAndDescription.playbackCode.getter(v111);
  uint64_t v118 = v413;
  v103(v413, enum case for PlaybackCode.subscriptionError(_:), v91);
  uint64_t v119 = sub_10430( &qword_28B620,  (uint64_t (*)(uint64_t))&type metadata accessor for PlaybackCode,  (uint64_t)&protocol conformance descriptor for PlaybackCode);
  char v120 = dispatch thunk of static Equatable.== infix(_:_:)(v117, v118, v91, v119);
  uint64_t v121 = v91;
  uint64_t v122 = (uint64_t (*)(char *, uint64_t))v422;
  v422(v118, v121);
  uint64_t v123 = v122(v117, v107);
  if ((v120 & 1) != 0)
  {
    swift_bridgeObjectRelease(v415);
    uint64_t v124 = v406;
    uint64_t v125 = v426(v406, v425, v428);
    uint64_t v126 = (os_log_s *)Logger.logObject.getter(v125);
    os_log_type_t v127 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v126, v127))
    {
      uint64_t v128 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)uint64_t v128 = 0;
      _os_log_impl( &dword_0,  v126,  v127,  "PlayMediaRCHFlowWrapper#dialogForError using special dialog for Podcast subscription error code",  v128,  2u);
      swift_slowDealloc(v128, -1LL, -1LL);
    }

    ((void (*)(char *, uint64_t))v414)(v124, v428);
    uint64_t v129 = sub_6C5C(&qword_28C0E0);
    uint64_t inited = swift_initStackObject(v129, &v429);
    *(_OWORD *)(inited + swift_weakDestroy(v0 + 16) = xmmword_214510;
    *(void *)(inited + 3sub_6C3C(v0 + 2) = 0x656C746974LL;
    *(void *)(inited + 40) = 0xE500000000000000LL;
    uint64_t v131 = v419;
    sub_30240();
    if (v133) {
      uint64_t v134 = v132;
    }
    else {
      uint64_t v134 = 0LL;
    }
    unint64_t v135 = 0xE000000000000000LL;
    if (v133) {
      unint64_t v135 = v133;
    }
    *(void *)(inited + 48) = v134;
    *(void *)(inited + 56) = v135;
    unint64_t v136 = sub_75678(inited);
    uint64_t v137 = *(void *)(v418 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin23PlayMediaRCHFlowWrapper_playDialogService);
    unint64_t v138 = sub_25D14(v136);
    swift_bridgeObjectRelease(v136);
    uint64_t v434 = sub_1641C(0LL, (unint64_t *)&qword_285320, &OBJC_CLASS___INPlayMediaIntent_ptr);
    v435 = &off_272BD0;
    v432 = v131;
    uint64_t v139 = *(void *)(v137 + 40);
    uint64_t v140 = *(void *)(v137 + 48);
    __chkstk_darwin(v434);
    int v141 = &v374 - 12;
    *(&v374 - 10) = v139;
    *(&v374 - 9) = v140;
    uint64_t v142 = 0xD000000000000026LL;
    uint64_t v143 = 0x8000000000221EB0LL;
    *(&v374 - 8) = 0xD000000000000026LL;
    *(&v374 - sub_6C3C(v0 + 7) = 0x8000000000221EB0LL;
    uint64_t v369 = v144;
    uint64_t v370 = (void *)v138;
    uint64_t v371 = v416;
    uint64_t v372 = &v432;
    uint64_t v373 = 0LL;
    id v145 = v131;
LABEL_24:
    sub_200268( (uint64_t)"catServiceExecute",  17LL,  2u,  (uint64_t)v420,  (uint64_t)v427,  "CatService#execute family=%{signpost.telemetry:string1,public}@ id=%{signpost.telemetry:string2,public}@ enableTelemetry=YES ",  125LL,  2,  v139,  v140,  v142,  v143,  (void (*)(uint64_t (*)(), uint64_t))sub_3CAE4,  (uint64_t)v141);
    unint64_t v146 = v138;
LABEL_25:
    swift_bridgeObjectRelease(v146);
LABEL_39:
    sub_1F6CC((uint64_t)&v432, &qword_283FE8);
    return;
  }

  PlaybackCodeAndDescription.playbackCode.getter(v123);
  v103(v118, enum case for PlaybackCode.emptyLibrary(_:), v107);
  char v147 = dispatch thunk of static Equatable.== infix(_:_:)(v117, v118, v107, v119);
  v122(v118, v107);
  uint64_t v148 = v122(v117, v107);
  if ((v147 & 1) == 0)
  {
    PlaybackCodeAndDescription.playbackCode.getter(v148);
    v103(v118, enum case for PlaybackCode.playbackDeviceNotFound(_:), v107);
    char v155 = dispatch thunk of static Equatable.== infix(_:_:)(v117, v118, v107, v119);
    v122(v118, v107);
    uint64_t v156 = v122(v117, v107);
    if ((v155 & 1) != 0)
    {
      swift_bridgeObjectRelease(v415);
      uint64_t v157 = v404;
      uint64_t v158 = v426(v404, v425, v428);
      uint64_t v159 = (os_log_s *)Logger.logObject.getter(v158);
      os_log_type_t v160 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v159, v160))
      {
        uint64_t v161 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
        *(_WORD *)uint64_t v161 = 0;
        _os_log_impl( &dword_0,  v159,  v160,  "PlayMediaRCHFlowWrapper#dialogForError using special dialog for playbackDeviceNotFound code",  v161,  2u);
        swift_slowDealloc(v161, -1LL, -1LL);
      }

      ((void (*)(char *, uint64_t))v414)(v157, v428);
      uint64_t v162 = *(void **)(v418 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin23PlayMediaRCHFlowWrapper_playDialogService);
      uint64_t v434 = sub_1641C(0LL, (unint64_t *)&qword_285320, &OBJC_CLASS___INPlayMediaIntent_ptr);
      v435 = &off_272BD0;
      v432 = v419;
      uint64_t v163 = v162[4];
      uint64_t v164 = v162[5];
      uint64_t v165 = v162[6];
      id v166 = v419;
      unint64_t v167 = sub_74D54((uint64_t)_swiftEmptyArrayStorage);
      uint64_t v168 = __chkstk_darwin(v167);
      uint64_t v169 = &v374 - 12;
      *(&v374 - 10) = v164;
      *(&v374 - 9) = v165;
      uint64_t v170 = 0x656B616570536F4ELL;
      uint64_t v171 = 0xEE00646E756F4672LL;
      strcpy((char *)&v374 - 64, "NoSpeakerFound");
      *((_BYTE *)&v374 - 49) = -18;
      uint64_t v369 = v163;
      uint64_t v370 = (void *)v168;
      uint64_t v371 = 0LL;
      uint64_t v372 = &v432;
      uint64_t v373 = 0LL;
LABEL_38:
      sub_200268( (uint64_t)"catServiceExecute",  17LL,  2u,  (uint64_t)v420,  (uint64_t)v427,  "CatService#execute family=%{signpost.telemetry:string1,public}@ id=%{signpost.telemetry:string2,public}@ enableTelemetry=YES ",  125LL,  2,  v164,  v165,  v170,  v171,  (void (*)(uint64_t (*)(), uint64_t))sub_3CAE4,  (uint64_t)v169);
      swift_bridgeObjectRelease(v167);
      goto LABEL_39;
    }

    PlaybackCodeAndDescription.playbackCode.getter(v156);
    v103(v118, enum case for PlaybackCode.maxStreamCountReached(_:), v107);
    char v172 = dispatch thunk of static Equatable.== infix(_:_:)(v117, v118, v107, v119);
    v122(v118, v107);
    uint64_t v173 = v122(v117, v107);
    if ((v172 & 1) != 0)
    {
      swift_bridgeObjectRelease(v415);
      uint64_t v174 = v403;
      uint64_t v175 = v426(v403, v425, v428);
      uint64_t v176 = (os_log_s *)Logger.logObject.getter(v175);
      os_log_type_t v177 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v176, v177))
      {
        int v178 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
        *(_WORD *)int v178 = 0;
        _os_log_impl( &dword_0,  v176,  v177,  "PlayMediaRCHFlowWrapper#dialogForError using special dialog for maxStreamCountReached code",  v178,  2u);
        swift_slowDealloc(v178, -1LL, -1LL);
      }

      ((void (*)(char *, uint64_t))v414)(v174, v428);
      uint64_t v179 = *(void **)(v418 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin23PlayMediaRCHFlowWrapper_playDialogService);
      uint64_t v434 = sub_1641C(0LL, (unint64_t *)&qword_285320, &OBJC_CLASS___INPlayMediaIntent_ptr);
      v435 = &off_272BD0;
      v432 = v419;
      uint64_t v180 = v179[4];
      uint64_t v164 = v179[5];
      uint64_t v165 = v179[6];
      id v181 = v419;
      unint64_t v167 = sub_74D54((uint64_t)_swiftEmptyArrayStorage);
      uint64_t v182 = __chkstk_darwin(v167);
      uint64_t v169 = &v374 - 12;
      *(&v374 - 10) = v164;
      *(&v374 - 9) = v165;
      uint64_t v170 = 0xD000000000000015LL;
      uint64_t v171 = 0x8000000000223B10LL;
      *(&v374 - 8) = 0xD000000000000015LL;
      *(&v374 - sub_6C3C(v0 + 7) = 0x8000000000223B10LL;
      uint64_t v369 = v180;
      uint64_t v370 = (void *)v182;
      uint64_t v371 = 0LL;
      uint64_t v372 = &v432;
      uint64_t v373 = 0LL;
      goto LABEL_38;
    }

    PlaybackCodeAndDescription.playbackCode.getter(v173);
    v103(v118, enum case for PlaybackCode.connectionFailed(_:), v107);
    char v183 = dispatch thunk of static Equatable.== infix(_:_:)(v117, v118, v107, v119);
    v122(v118, v107);
    uint64_t v184 = v122(v117, v107);
    if ((v183 & 1) != 0)
    {
      swift_bridgeObjectRelease(v415);
      uint64_t v185 = v399;
      uint64_t v186 = v426(v399, v425, v428);
      uint64_t v187 = (os_log_s *)Logger.logObject.getter(v186);
      os_log_type_t v188 = static os_log_type_t.default.getter();
      BOOL v189 = os_log_type_enabled(v187, v188);
      id v190 = v427;
      if (v189)
      {
        uint64_t v191 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
        *(_WORD *)uint64_t v191 = 0;
        _os_log_impl( &dword_0,  v187,  v188,  "PlayMediaRCHFlowWrapper#dialogForError using special dialog for connectionFailed code",  v191,  2u);
        swift_slowDealloc(v191, -1LL, -1LL);
      }

      uint64_t v192 = 0xD000000000000018LL;

      uint64_t v193 = ((uint64_t (*)(char *, uint64_t))v414)(v185, v428);
      uint64_t v194 = v400;
      uint64_t v195 = static DeviceProvider.shared.getter(v193);
      char v196 = DeviceProvider.isHomePod.getter(v195);
      (*(void (**)(char *, uint64_t))(v401 + 8))(v194, v402);
      uint64_t v197 = *(void *)(v418 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin23PlayMediaRCHFlowWrapper_playDialogService);
      uint64_t v434 = sub_1641C(0LL, (unint64_t *)&qword_285320, &OBJC_CLASS___INPlayMediaIntent_ptr);
      v435 = &off_272BD0;
      v432 = v419;
      uint64_t v198 = *(void *)(v197 + 40);
      uint64_t v199 = *(void *)(v197 + 48);
      __chkstk_darwin(v434);
      *(&v374 - 10) = v198;
      *(&v374 - 9) = v199;
      if ((v196 & 1) != 0)
      {
        uint64_t v192 = 0xD000000000000021LL;
        uint64_t v202 = 0x8000000000223AE0LL;
        *(&v374 - 8) = 0xD000000000000021LL;
        *(&v374 - sub_6C3C(v0 + 7) = 0x8000000000223AE0LL;
      }

      else
      {
        uint64_t v202 = 0x8000000000223AC0LL;
        *(&v374 - 8) = 0xD000000000000018LL;
        *(&v374 - sub_6C3C(v0 + 7) = 0x8000000000223AC0LL;
      }

      uint64_t v369 = v200;
      uint64_t v370 = &_swiftEmptyDictionarySingleton;
      uint64_t v371 = v416;
      uint64_t v372 = &v432;
      uint64_t v373 = 0LL;
      id v203 = v201;
      sub_200268( (uint64_t)"catServiceExecute",  17LL,  2u,  (uint64_t)v420,  (uint64_t)v190,  "CatService#execute family=%{signpost.telemetry:string1,public}@ id=%{signpost.telemetry:string2,public}@ enableTelemetry=YES ",  125LL,  2,  v198,  v199,  v192,  v202,  (void (*)(uint64_t (*)(), uint64_t))sub_3CAE4,  (uint64_t)(&v374 - 12));
      goto LABEL_39;
    }

    PlaybackCodeAndDescription.playbackCode.getter(v184);
    v103(v118, enum case for PlaybackCode.radioRestrictedLocation(_:), v107);
    char v204 = dispatch thunk of static Equatable.== infix(_:_:)(v117, v118, v107, v119);
    v122(v118, v107);
    uint64_t v205 = v122(v117, v107);
    if ((v204 & 1) != 0)
    {
      swift_bridgeObjectRelease(v415);
      uint64_t v206 = v398;
      uint64_t v207 = v426(v398, v425, v428);
      uint64_t v208 = (os_log_s *)Logger.logObject.getter(v207);
      os_log_type_t v209 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v208, v209))
      {
        Swift::String_optional v210 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
        *(_WORD *)Swift::String_optional v210 = 0;
        _os_log_impl( &dword_0,  v208,  v209,  "PlayMediaRCHFlowWrapper#dialogForError using special dialog for radioRestrictedLocation code",  v210,  2u);
        swift_slowDealloc(v210, -1LL, -1LL);
      }

      ((void (*)(char *, uint64_t))v414)(v206, v428);
      uint64_t v211 = *(void *)(v418 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin23PlayMediaRCHFlowWrapper_playDialogService);
      unint64_t v212 = sub_74D54((uint64_t)_swiftEmptyArrayStorage);
      uint64_t v434 = sub_1641C(0LL, (unint64_t *)&qword_285320, &OBJC_CLASS___INPlayMediaIntent_ptr);
      v435 = &off_272BD0;
      v432 = v419;
      uint64_t v213 = *(void *)(v211 + 16);
      uint64_t v214 = *(void *)(v211 + 24);
      __chkstk_darwin(v434);
      uint64_t v215 = &v374 - 12;
      *(&v374 - 10) = v213;
      *(&v374 - 9) = v214;
      uint64_t v216 = 0xD000000000000017LL;
      uint64_t v217 = 0x8000000000223AA0LL;
      *(&v374 - 8) = 0xD000000000000017LL;
      *(&v374 - sub_6C3C(v0 + 7) = 0x8000000000223AA0LL;
      uint64_t v369 = v218;
      uint64_t v370 = (void *)v212;
      uint64_t v371 = v416;
      uint64_t v372 = &v432;
      uint64_t v373 = 0LL;
      id v220 = v219;
LABEL_92:
      sub_200268( (uint64_t)"catServiceExecute",  17LL,  2u,  (uint64_t)v420,  (uint64_t)v427,  "CatService#execute family=%{signpost.telemetry:string1,public}@ id=%{signpost.telemetry:string2,public}@ enableTelemetry=YES ",  125LL,  2,  v213,  v214,  v216,  v217,  (void (*)(uint64_t (*)(), uint64_t))sub_3CAE4,  (uint64_t)v215);
      unint64_t v146 = v212;
      goto LABEL_25;
    }

    PlaybackCodeAndDescription.playbackCode.getter(v205);
    v103(v118, enum case for PlaybackCode.couldNotDiscoverClusterLeader(_:), v107);
    char v221 = dispatch thunk of static Equatable.== infix(_:_:)(v117, v118, v107, v119);
    v122(v118, v107);
    uint64_t v222 = v122(v117, v107);
    if ((v221 & 1) != 0)
    {
      swift_bridgeObjectRelease(v415);
      uint64_t v223 = v397;
      uint64_t v224 = v426(v397, v425, v428);
      uint64_t v225 = (os_log_s *)Logger.logObject.getter(v224);
      os_log_type_t v226 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v225, v226))
      {
        uint64_t v227 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
        *(_WORD *)uint64_t v227 = 0;
        _os_log_impl( &dword_0,  v225,  v226,  "PlayMediaRCHFlowWrapper#dialogForError using special dialog for couldNotDiscoverClusterLeader code",  v227,  2u);
        swift_slowDealloc(v227, -1LL, -1LL);
      }

      ((void (*)(char *, uint64_t))v414)(v223, v428);
      uint64_t v228 = *(void *)(v418 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin23PlayMediaRCHFlowWrapper_playDialogService);
      unint64_t v212 = sub_74D54((uint64_t)_swiftEmptyArrayStorage);
      uint64_t v434 = sub_1641C(0LL, (unint64_t *)&qword_285320, &OBJC_CLASS___INPlayMediaIntent_ptr);
      v435 = &off_272BD0;
      v432 = v419;
      uint64_t v213 = *(void *)(v228 + 16);
      uint64_t v214 = *(void *)(v228 + 24);
      __chkstk_darwin(v434);
      uint64_t v215 = &v374 - 12;
      *(&v374 - 10) = v213;
      *(&v374 - 9) = v214;
      uint64_t v216 = 0xD00000000000001ALL;
      uint64_t v217 = 0x8000000000223A80LL;
      *(&v374 - 8) = 0xD00000000000001ALL;
      *(&v374 - sub_6C3C(v0 + 7) = 0x8000000000223A80LL;
      uint64_t v369 = v229;
      uint64_t v370 = (void *)v212;
      uint64_t v371 = v416;
      uint64_t v372 = &v432;
      uint64_t v373 = 0LL;
      id v231 = v230;
      goto LABEL_92;
    }

    PlaybackCodeAndDescription.playbackCode.getter(v222);
    v103(v118, enum case for PlaybackCode.timedOutWaitingForCanBeNowPlaying(_:), v107);
    char v232 = dispatch thunk of static Equatable.== infix(_:_:)(v117, v118, v107, v119);
    v122(v118, v107);
    uint64_t v233 = v122(v117, v107);
    if ((v232 & 1) != 0)
    {
      swift_bridgeObjectRelease(v415);
      id v234 = v396;
      uint64_t v235 = v426(v396, v425, v428);
      uint64_t v236 = (os_log_s *)Logger.logObject.getter(v235);
      os_log_type_t v237 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v236, v237))
      {
        uint64_t v238 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
        *(_WORD *)uint64_t v238 = 0;
        _os_log_impl( &dword_0,  v236,  v237,  "PlayMediaRCHFlowWrapper#dialogForError using special dialog for timedOutWaitingForCanBeNowPlaying code",  v238,  2u);
        swift_slowDealloc(v238, -1LL, -1LL);
      }

      ((void (*)(char *, uint64_t))v414)(v234, v428);
      uint64_t v239 = *(void *)(v418 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin23PlayMediaRCHFlowWrapper_playDialogService);
      unint64_t v212 = sub_74D54((uint64_t)_swiftEmptyArrayStorage);
      uint64_t v434 = sub_1641C(0LL, (unint64_t *)&qword_285320, &OBJC_CLASS___INPlayMediaIntent_ptr);
      v435 = &off_272BD0;
      v432 = v419;
      uint64_t v213 = *(void *)(v239 + 16);
      uint64_t v214 = *(void *)(v239 + 24);
      __chkstk_darwin(v434);
      uint64_t v215 = &v374 - 12;
      *(&v374 - 10) = v213;
      *(&v374 - 9) = v214;
      uint64_t v216 = 0xD000000000000021LL;
      uint64_t v217 = 0x8000000000223A50LL;
      *(&v374 - 8) = 0xD000000000000021LL;
      *(&v374 - sub_6C3C(v0 + 7) = 0x8000000000223A50LL;
      uint64_t v369 = v240;
      uint64_t v370 = (void *)v212;
      uint64_t v371 = v416;
      uint64_t v372 = &v432;
      uint64_t v373 = 0LL;
      id v242 = v241;
      goto LABEL_92;
    }

    PlaybackCodeAndDescription.playbackCode.getter(v233);
    v103(v118, enum case for PlaybackCode.ageVerificationExplicitContent(_:), v107);
    char v243 = dispatch thunk of static Equatable.== infix(_:_:)(v117, v118, v107, v119);
    v122(v118, v107);
    uint64_t v244 = v122(v117, v107);
    if ((v243 & 1) != 0)
    {
      swift_bridgeObjectRelease(v415);
      uint64_t v245 = v395;
      uint64_t v246 = v426(v395, v425, v428);
      uint64_t v247 = (os_log_s *)Logger.logObject.getter(v246);
      os_log_type_t v248 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v247, v248))
      {
        uint64_t v249 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
        *(_WORD *)uint64_t v249 = 0;
        _os_log_impl( &dword_0,  v247,  v248,  "PlayMediaRCHFlowWrapper#dialogForError using special dialog for ageVerificationExplicitContent (explicitConten tRestricted) code",  v249,  2u);
        swift_slowDealloc(v249, -1LL, -1LL);
      }

      ((void (*)(char *, uint64_t))v414)(v245, v428);
      uint64_t v250 = *(void *)(v418 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin23PlayMediaRCHFlowWrapper_playDialogService);
      unint64_t v212 = sub_74D54((uint64_t)_swiftEmptyArrayStorage);
      uint64_t v434 = sub_1641C(0LL, (unint64_t *)&qword_285320, &OBJC_CLASS___INPlayMediaIntent_ptr);
      v435 = &off_272BD0;
      v432 = v419;
      uint64_t v213 = *(void *)(v250 + 40);
      uint64_t v214 = *(void *)(v250 + 48);
      __chkstk_darwin(v434);
      uint64_t v215 = &v374 - 12;
      *(&v374 - 10) = v213;
      *(&v374 - 9) = v214;
      uint64_t v216 = 0xD000000000000026LL;
      uint64_t v217 = 0x800000000021D730LL;
      *(&v374 - 8) = 0xD000000000000026LL;
      *(&v374 - sub_6C3C(v0 + 7) = 0x800000000021D730LL;
      uint64_t v369 = v251;
      uint64_t v370 = (void *)v212;
      uint64_t v371 = v416;
      uint64_t v372 = &v432;
      uint64_t v373 = 0LL;
      id v253 = v252;
      goto LABEL_92;
    }

    PlaybackCodeAndDescription.playbackCode.getter(v244);
    v103(v118, enum case for PlaybackCode.broadcastStationDown(_:), v107);
    char v254 = dispatch thunk of static Equatable.== infix(_:_:)(v117, v118, v107, v119);
    v122(v118, v107);
    uint64_t v255 = v122(v117, v107);
    if ((v254 & 1) != 0)
    {
      swift_bridgeObjectRelease(v415);
      uint64_t v256 = v394;
      uint64_t v257 = v426(v394, v425, v428);
      id v258 = (os_log_s *)Logger.logObject.getter(v257);
      os_log_type_t v259 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v258, v259))
      {
        __int128 v260 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
        *(_WORD *)__int128 v260 = 0;
        _os_log_impl( &dword_0,  v258,  v259,  "PlayMediaRCHFlowWrapper#dialogForError using special dialog for broadcastStationDown code",  v260,  2u);
        swift_slowDealloc(v260, -1LL, -1LL);
      }

      ((void (*)(char *, uint64_t))v414)(v256, v428);
      uint64_t v261 = *(void *)(v418 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin23PlayMediaRCHFlowWrapper_playDialogService);
      unint64_t v212 = sub_74D54((uint64_t)_swiftEmptyArrayStorage);
      uint64_t v434 = sub_1641C(0LL, (unint64_t *)&qword_285320, &OBJC_CLASS___INPlayMediaIntent_ptr);
      v435 = &off_272BD0;
      v432 = v419;
      uint64_t v213 = *(void *)(v261 + 40);
      uint64_t v214 = *(void *)(v261 + 48);
      __chkstk_darwin(v434);
      uint64_t v215 = &v374 - 12;
      *(&v374 - 10) = v213;
      *(&v374 - 9) = v214;
      uint64_t v216 = 0xD000000000000014LL;
      uint64_t v217 = 0x8000000000223A30LL;
      *(&v374 - 8) = 0xD000000000000014LL;
      *(&v374 - sub_6C3C(v0 + 7) = 0x8000000000223A30LL;
      uint64_t v369 = v262;
      uint64_t v370 = (void *)v212;
      uint64_t v371 = v416;
      uint64_t v372 = &v432;
      uint64_t v373 = 0LL;
      id v264 = v263;
      goto LABEL_92;
    }

    PlaybackCodeAndDescription.playbackCode.getter(v255);
    v103(v118, enum case for PlaybackCode.notCurrentlyAllowedExplicitStation(_:), v107);
    char v265 = dispatch thunk of static Equatable.== infix(_:_:)(v117, v118, v107, v119);
    v122(v118, v107);
    uint64_t v266 = v122(v117, v107);
    if ((v265 & 1) != 0)
    {
      swift_bridgeObjectRelease(v415);
      int v267 = v393;
      uint64_t v268 = v426(v393, v425, v428);
      uint64_t v269 = (os_log_s *)Logger.logObject.getter(v268);
      os_log_type_t v270 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v269, v270))
      {
        unint64_t v271 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
        *(_WORD *)unint64_t v271 = 0;
        _os_log_impl( &dword_0,  v269,  v270,  "PlayMediaRCHFlowWrapper#dialogForError using special dialog for currently explicit content station not allowed for user",  v271,  2u);
        swift_slowDealloc(v271, -1LL, -1LL);
      }

      ((void (*)(char *, uint64_t))v414)(v267, v428);
      uint64_t v272 = sub_6C5C(&qword_28C0E0);
      uint64_t v273 = swift_initStackObject(v272, &v430);
      *(_OWORD *)(v273 + swift_weakDestroy(v0 + 16) = xmmword_214510;
      *(void *)(v273 + 3sub_6C3C(v0 + 2) = 0x656C746974LL;
      *(void *)(v273 + 40) = 0xE500000000000000LL;
      uint64_t v274 = v419;
      sub_30240();
      if (v276) {
        uint64_t v277 = v275;
      }
      else {
        uint64_t v277 = 0LL;
      }
      unint64_t v278 = 0xE000000000000000LL;
      if (v276) {
        unint64_t v278 = v276;
      }
      *(void *)(v273 + 48) = v277;
      *(void *)(v273 + 56) = v278;
      unint64_t v279 = sub_75678(v273);
      uint64_t v280 = *(void *)(v418 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin23PlayMediaRCHFlowWrapper_playDialogService);
      unint64_t v138 = sub_25D14(v279);
      swift_bridgeObjectRelease(v279);
      uint64_t v434 = sub_1641C(0LL, (unint64_t *)&qword_285320, &OBJC_CLASS___INPlayMediaIntent_ptr);
      v435 = &off_272BD0;
      v432 = v274;
      uint64_t v139 = *(void *)(v280 + 40);
      uint64_t v140 = *(void *)(v280 + 48);
      __chkstk_darwin(v434);
      int v141 = &v374 - 12;
      *(&v374 - 10) = v139;
      *(&v374 - 9) = v140;
      uint64_t v142 = 0xD000000000000022LL;
      uint64_t v143 = 0x8000000000223A00LL;
      *(&v374 - 8) = 0xD000000000000022LL;
      *(&v374 - sub_6C3C(v0 + 7) = 0x8000000000223A00LL;
      uint64_t v369 = v281;
      uint64_t v370 = (void *)v138;
      uint64_t v371 = v416;
      uint64_t v372 = &v432;
      uint64_t v373 = 0LL;
      id v282 = v274;
      goto LABEL_24;
    }

    PlaybackCodeAndDescription.playbackCode.getter(v266);
    v103(v118, enum case for PlaybackCode.podcastUpNextEmpty(_:), v107);
    char v283 = dispatch thunk of static Equatable.== infix(_:_:)(v117, v118, v107, v119);
    v122(v118, v107);
    uint64_t v284 = v122(v117, v107);
    if ((v283 & 1) != 0)
    {
      swift_bridgeObjectRelease(v415);
      unint64_t v285 = v392;
      uint64_t v286 = v426(v392, v425, v428);
      uint64_t v287 = (os_log_s *)Logger.logObject.getter(v286);
      os_log_type_t v288 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v287, v288))
      {
        uint64_t v289 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
        *(_WORD *)uint64_t v289 = 0;
        _os_log_impl( &dword_0,  v287,  v288,  "PlayMediaRCHFlowWrapper#dialogForError using special dialog for podcastUpNextEmpty code",  v289,  2u);
        swift_slowDealloc(v289, -1LL, -1LL);
      }

      ((void (*)(char *, uint64_t))v414)(v285, v428);
      uint64_t v290 = *(void *)(v418 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin23PlayMediaRCHFlowWrapper_playDialogService);
      unint64_t v212 = sub_74D54((uint64_t)_swiftEmptyArrayStorage);
      uint64_t v434 = sub_1641C(0LL, (unint64_t *)&qword_285320, &OBJC_CLASS___INPlayMediaIntent_ptr);
      v435 = &off_272BD0;
      v432 = v419;
      uint64_t v213 = *(void *)(v290 + 40);
      uint64_t v214 = *(void *)(v290 + 48);
      __chkstk_darwin(v434);
      uint64_t v215 = &v374 - 12;
      *(&v374 - 10) = v213;
      *(&v374 - 9) = v214;
      uint64_t v216 = 0xD000000000000012LL;
      uint64_t v217 = 0x80000000002239E0LL;
      *(&v374 - 8) = 0xD000000000000012LL;
      *(&v374 - sub_6C3C(v0 + 7) = 0x80000000002239E0LL;
      uint64_t v369 = v291;
      uint64_t v370 = (void *)v212;
      uint64_t v371 = v416;
      uint64_t v372 = &v432;
      uint64_t v373 = 0LL;
      id v293 = v292;
      goto LABEL_92;
    }

    PlaybackCodeAndDescription.playbackCode.getter(v284);
    v103(v118, enum case for PlaybackCode.podcastServerNotReachable(_:), v107);
    char v294 = dispatch thunk of static Equatable.== infix(_:_:)(v117, v118, v107, v119);
    v122(v118, v107);
    uint64_t v295 = v122(v117, v107);
    if ((v294 & 1) != 0)
    {
      swift_bridgeObjectRelease(v415);
      uint64_t v296 = v390;
      uint64_t v297 = v426(v390, v425, v428);
      uint64_t v298 = (os_log_s *)Logger.logObject.getter(v297);
      os_log_type_t v299 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v298, v299))
      {
        uint64_t v300 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
        *(_WORD *)uint64_t v300 = 0;
        _os_log_impl( &dword_0,  v298,  v299,  "PlayMediaRCHFlowWrapper#dialogForError using special dialog for podcastServerNotReachable code",  v300,  2u);
        swift_slowDealloc(v300, -1LL, -1LL);
      }

      ((void (*)(char *, uint64_t))v414)(v296, v428);
      uint64_t v301 = *(void *)(v418 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin23PlayMediaRCHFlowWrapper_playDialogService);
      unint64_t v212 = sub_74D54((uint64_t)_swiftEmptyArrayStorage);
      uint64_t v434 = sub_1641C(0LL, (unint64_t *)&qword_285320, &OBJC_CLASS___INPlayMediaIntent_ptr);
      v435 = &off_272BD0;
      v432 = v419;
      uint64_t v213 = *(void *)(v301 + 40);
      uint64_t v214 = *(void *)(v301 + 48);
      __chkstk_darwin(v434);
      uint64_t v215 = &v374 - 12;
      *(&v374 - 10) = v213;
      *(&v374 - 9) = v214;
      uint64_t v216 = 0xD000000000000019LL;
      uint64_t v217 = 0x80000000002239C0LL;
      *(&v374 - 8) = 0xD000000000000019LL;
      *(&v374 - sub_6C3C(v0 + 7) = 0x80000000002239C0LL;
      uint64_t v369 = v302;
      uint64_t v370 = (void *)v212;
      uint64_t v371 = v416;
      uint64_t v372 = &v432;
      uint64_t v373 = 0LL;
      id v304 = v303;
      goto LABEL_92;
    }

    PlaybackCodeAndDescription.playbackCode.getter(v295);
    v103(v118, enum case for PlaybackCode.errorApplicationDisabled(_:), v107);
    char v305 = dispatch thunk of static Equatable.== infix(_:_:)(v117, v118, v107, v119);
    v122(v118, v107);
    uint64_t v306 = v122(v117, v107);
    if ((v305 & 1) != 0)
    {
      swift_bridgeObjectRelease(v415);
      uint64_t v307 = v428;
      uint64_t v308 = ((uint64_t (*)(char *, uint64_t))v426)(v391, v425);
      uint64_t v309 = (os_log_s *)Logger.logObject.getter(v308);
      os_log_type_t v310 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v309, v310))
      {
        uint64_t v311 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
        *(_WORD *)uint64_t v311 = 0;
        _os_log_impl( &dword_0,  v309,  v310,  "PlayMediaRCHFlowWrapper#dialogForError using special dialog for errorApplicationDisabled code",  v311,  2u);
        swift_slowDealloc(v311, -1LL, -1LL);
      }

      ((void (*)(char *, uint64_t))v414)(v391, v307);
      uint64_t v312 = *(void *)(v418 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin23PlayMediaRCHFlowWrapper_playDialogService);
      unint64_t v212 = sub_74D54((uint64_t)_swiftEmptyArrayStorage);
      uint64_t v434 = sub_1641C(0LL, (unint64_t *)&qword_285320, &OBJC_CLASS___INPlayMediaIntent_ptr);
      v435 = &off_272BD0;
      v432 = v419;
      uint64_t v213 = *(void *)(v312 + 16);
      uint64_t v214 = *(void *)(v312 + 24);
      __chkstk_darwin(v434);
      uint64_t v215 = &v374 - 12;
      *(&v374 - 10) = v213;
      *(&v374 - 9) = v214;
      uint64_t v216 = 0xD000000000000018LL;
      uint64_t v217 = 0x80000000002239A0LL;
      *(&v374 - 8) = 0xD000000000000018LL;
      *(&v374 - sub_6C3C(v0 + 7) = 0x80000000002239A0LL;
      uint64_t v369 = v313;
      uint64_t v370 = (void *)v212;
      uint64_t v371 = v416;
      uint64_t v372 = &v432;
      uint64_t v373 = 0LL;
      id v315 = v314;
      goto LABEL_92;
    }

    PlaybackCodeAndDescription.playbackCode.getter(v306);
    v103(v118, enum case for PlaybackCode.icUserIdentityError(_:), v107);
    char v316 = dispatch thunk of static Equatable.== infix(_:_:)(v117, v118, v107, v119);
    v122(v118, v107);
    uint64_t v317 = v122(v117, v107);
    if ((v316 & 1) != 0)
    {
      swift_bridgeObjectRelease(v415);
      uint64_t v318 = v426(v389, v425, v428);
      v319 = (os_log_s *)Logger.logObject.getter(v318);
      os_log_type_t v320 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v319, v320))
      {
        BOOL v321 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
        *(_WORD *)BOOL v321 = 0;
        _os_log_impl( &dword_0,  v319,  v320,  "PlayMediaRCHFlowWrapper#dialogForError using special dialog for icUserIdentityError code",  v321,  2u);
        swift_slowDealloc(v321, -1LL, -1LL);
      }

      ((void (*)(char *, uint64_t))v414)(v389, v428);
      uint64_t v322 = *(void *)(v418 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin23PlayMediaRCHFlowWrapper_playDialogService);
      unint64_t v212 = sub_74D54((uint64_t)_swiftEmptyArrayStorage);
      uint64_t v434 = sub_1641C(0LL, (unint64_t *)&qword_285320, &OBJC_CLASS___INPlayMediaIntent_ptr);
      v435 = &off_272BD0;
      v432 = v419;
      uint64_t v213 = *(void *)(v322 + 16);
      uint64_t v214 = *(void *)(v322 + 24);
      __chkstk_darwin(v434);
      uint64_t v215 = &v374 - 12;
      *(&v374 - 10) = v213;
      *(&v374 - 9) = v214;
      uint64_t v216 = 0x6E6769536465654ELL;
      uint64_t v217 = 0xEA00000000006E49LL;
      *(&v374 - 8) = 0x6E6769536465654ELL;
      *(&v374 - sub_6C3C(v0 + 7) = 0xEA00000000006E49LL;
      uint64_t v369 = v323;
      uint64_t v370 = (void *)v212;
      uint64_t v371 = v416;
      uint64_t v372 = &v432;
      uint64_t v373 = 0LL;
      id v325 = v324;
      goto LABEL_92;
    }

    uint64_t v326 = App.appIdentifier.getter(v317);
    if (v327)
    {
      unint64_t v328 = v327;
    }

    else
    {
      uint64_t v326 = 0LL;
      unint64_t v328 = 0xE000000000000000LL;
    }

    char v329 = static BundleIdentifiers.isFirstParty(bundleIdentifier:)(v326, v328);
    swift_bridgeObjectRelease(v328);
    if ((v329 & 1) != 0) {
      goto LABEL_108;
    }
    type metadata accessor for AirPlayRouteSetupContext(0LL);
    static ExecutorProvider.shared.getter(&v432);
    uint64_t v330 = v434;
    uint64_t v331 = v435;
    sub_6EA8(&v432, v434);
    uint64_t v332 = dispatch thunk of ExecutorProviding.currentRequestId.getter(v330, v331);
    uint64_t v334 = v333;
    sub_6C3C(&v432);
    uint64_t v335 = static AirPlayRouteSetupContext.shared(refId:)(v332, v334);
    uint64_t v336 = swift_bridgeObjectRelease(v334);
    if (v335)
    {
      uint64_t v337 = v385;
      dispatch thunk of AirPlayRouteSetupContext.state.getter(v336);
      swift_release(v335);
      uint64_t v338 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v383 + 56);
      v338(v337, 0LL, 1LL, v388);
    }

    else
    {
      uint64_t v338 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v383 + 56);
      v338(v385, 1LL, 1LL, v388);
    }

    uint64_t v340 = v382;
    uint64_t v339 = v383;
    uint64_t v341 = v388;
    (*(void (**)(uint64_t, void, uint64_t))(v383 + 104))( v382,  enum case for AirPlayRouteSetupState.error(_:),  v388);
    v338(v340, 0LL, 1LL, v341);
    uint64_t v342 = v384;
    uint64_t v343 = v384 + *(int *)(v377 + 48);
    sub_FF10(v385, v384, (uint64_t *)&unk_2876E0);
    sub_FF10(v340, v343, (uint64_t *)&unk_2876E0);
    v344 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v339 + 48);
    if (v344(v342, 1LL, v341) == 1)
    {
      sub_1F6CC(v382, (uint64_t *)&unk_2876E0);
      sub_1F6CC(v385, (uint64_t *)&unk_2876E0);
      if (v344(v343, 1LL, v388) == 1)
      {
        sub_1F6CC(v384, (uint64_t *)&unk_2876E0);
LABEL_107:
        swift_bridgeObjectRelease(v415);
        unint64_t v352 = sub_74D54((uint64_t)_swiftEmptyArrayStorage);
        uint64_t v434 = sub_1641C(0LL, (unint64_t *)&qword_285320, &OBJC_CLASS___INPlayMediaIntent_ptr);
        v435 = &off_272BD0;
        v432 = v419;
        id v353 = v419;
        sub_1D0BA0(v352, v416, (uint64_t)&v432, (uint64_t)v420, (uint64_t)v427);
LABEL_112:
        swift_bridgeObjectRelease(v352);
        goto LABEL_39;
      }
    }

    else
    {
      sub_FF10(v384, v378, (uint64_t *)&unk_2876E0);
      if (v344(v343, 1LL, v388) != 1)
      {
        uint64_t v345 = v383;
        uint64_t v346 = v376;
        uint64_t v347 = v388;
        (*(void (**)(char *, uint64_t, uint64_t))(v383 + 32))(v376, v343, v388);
        uint64_t v348 = sub_10430( (unint64_t *)&unk_2876F0,  (uint64_t (*)(uint64_t))&type metadata accessor for AirPlayRouteSetupState,  (uint64_t)&protocol conformance descriptor for AirPlayRouteSetupState);
        uint64_t v349 = v378;
        char v350 = dispatch thunk of static Equatable.== infix(_:_:)(v378, v346, v347, v348);
        unint64_t v351 = *(void (**)(char *, uint64_t))(v345 + 8);
        v351(v346, v347);
        sub_1F6CC(v382, (uint64_t *)&unk_2876E0);
        sub_1F6CC(v385, (uint64_t *)&unk_2876E0);
        v351((char *)v349, v347);
        sub_1F6CC(v384, (uint64_t *)&unk_2876E0);
        if ((v350 & 1) != 0) {
          goto LABEL_107;
        }
LABEL_108:
        v426(v386, v425, v428);
        uint64_t v354 = v380(v387, v423, v408);
        uint64_t v355 = (os_log_s *)Logger.logObject.getter(v354);
        os_log_type_t v356 = static os_log_type_t.default.getter();
        if (os_log_type_enabled(v355, v356))
        {
          uint64_t v357 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
          uint64_t v358 = swift_slowAlloc(32LL, -1LL);
          v432 = (void *)v358;
          *(_DWORD *)uint64_t v357 = 136446210;
          uint64_t v426 = (uint64_t (*)(char *, uint64_t, uint64_t))(v357 + 4);
          uint64_t v359 = v411;
          uint64_t v360 = v387;
          uint64_t v361 = PlaybackCodeAndDescription.playbackCode.getter(v358);
          uint64_t v362 = PlaybackCode.rawValue.getter(v361);
          unint64_t v364 = v363;
          v422(v359, v424);
          uint64_t v436 = sub_6978(v362, v364, (uint64_t *)&v432);
          UnsafeMutableRawBufferPointer.copyMemory(from:)(&v436, v437);
          swift_bridgeObjectRelease(v364);
          v381(v360, v408);
          _os_log_impl( &dword_0,  v355,  v356,  "PlayMediaRCHFlowWrapper#dialogForError using fallback generic error response for code: %{public}s",  v357,  0xCu);
          swift_arrayDestroy(v358, 1LL, (char *)&type metadata for Any + 8);
          swift_slowDealloc(v358, -1LL, -1LL);
          swift_slowDealloc(v357, -1LL, -1LL);
        }

        else
        {
          v381(v387, v408);
        }

        ((void (*)(char *, uint64_t))v414)(v386, v428);
        uint64_t v365 = sub_6C5C(&qword_2844D0);
        uint64_t v366 = swift_initStackObject(v365, v431);
        *(_OWORD *)(v366 + swift_weakDestroy(v0 + 16) = xmmword_214510;
        strcpy((char *)(v366 + 32), "MetricsError");
        *(_BYTE *)(v366 + 45) = 0;
        *(_WORD *)(v366 + 46) = -5120;
        *(void *)(v366 + 7sub_6C3C(v0 + 2) = &type metadata for String;
        uint64_t v367 = v415;
        *(void *)(v366 + 48) = v379;
        *(void *)(v366 + 56) = v367;
        unint64_t v352 = sub_74D54(v366);
        uint64_t v434 = sub_1641C(0LL, (unint64_t *)&qword_285320, &OBJC_CLASS___INPlayMediaIntent_ptr);
        v435 = &off_272BD0;
        v432 = v419;
        id v368 = v419;
        sub_1D00D8(v352, v416, (uint64_t)&v432, (uint64_t)v420, (uint64_t)v427);
        goto LABEL_112;
      }

      sub_1F6CC(v382, (uint64_t *)&unk_2876E0);
      sub_1F6CC(v385, (uint64_t *)&unk_2876E0);
      (*(void (**)(uint64_t, uint64_t))(v383 + 8))(v378, v388);
    }

    sub_1F6CC(v384, &qword_2876D8);
    goto LABEL_108;
  }

  swift_bridgeObjectRelease(v415);
  uint64_t v149 = v405;
  uint64_t v150 = v426(v405, v425, v428);
  char v151 = (os_log_s *)Logger.logObject.getter(v150);
  os_log_type_t v152 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v151, v152))
  {
    uint64_t v153 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
    *(_WORD *)uint64_t v153 = 0;
    _os_log_impl( &dword_0,  v151,  v152,  "PlayMediaRCHFlowWrapper#dialogForError using special dialog for emptyLibrary code",  v153,  2u);
    swift_slowDealloc(v153, -1LL, -1LL);
  }

  ((void (*)(char *, uint64_t))v414)(v149, v428);
  id v154 =  [(id)objc_opt_self(INIntentResolutionResult) resolutionResultUnsupportedWithReason:_INPlayMediaMediaItemUnsupportedReasonEmptyLibrary];
  sub_15C384(v416, 0x657449616964656DLL, 0xEA0000000000736DLL, v154, (uint64_t)v419, v420, v427);
}

uint64_t sub_1E07B8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v35 = a2;
  uint64_t v36 = a3;
  uint64_t v32 = sub_6C5C(&qword_289EA8);
  uint64_t v4 = *(void *)(v32 - 8);
  uint64_t v5 = *(void *)(v4 + 64);
  __chkstk_darwin(v32);
  uint64_t v6 = (char *)&v31 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v7 = type metadata accessor for NowPlayingProvider(0LL);
  uint64_t v33 = *(void *)(v7 - 8);
  uint64_t v34 = v7;
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)&v31 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v10 = type metadata accessor for Logger(0LL);
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)&v31 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  if (qword_283888 != -1) {
    swift_once(&qword_283888, sub_BFC5C);
  }
  uint64_t v14 = sub_6960(v10, (uint64_t)qword_2969C8);
  uint64_t v15 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v11 + 16))(v13, v14, v10);
  uint64_t v16 = (os_log_s *)Logger.logObject.getter(v15);
  os_log_type_t v17 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v16, v17))
  {
    uint64_t v18 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
    uint64_t v31 = v5;
    uint64_t v19 = a1;
    uint64_t v20 = v18;
    *(_WORD *)uint64_t v18 = 0;
    _os_log_impl(&dword_0, v16, v17, "PlayMediaRCHFlowWrapper#logReliability performing reliability test...", v18, 2u);
    uint64_t v21 = v20;
    a1 = v19;
    uint64_t v6 = (char *)&v31 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL);
    uint64_t v5 = v31;
    swift_slowDealloc(v21, -1LL, -1LL);
  }

  uint64_t v22 = (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  static NowPlayingProvider.shared.getter(v22);
  uint64_t v23 = v32;
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v6, a1, v32);
  uint64_t v24 = *(unsigned __int8 *)(v4 + 80);
  uint64_t v25 = (v24 + 16) & ~v24;
  unint64_t v26 = (v5 + v25 + 7) & 0xFFFFFFFFFFFFFFF8LL;
  uint64_t v27 = swift_allocObject(&unk_275390, v26 + 16, v24 | 7);
  (*(void (**)(uint64_t, char *, uint64_t))(v4 + 32))(v27 + v25, v6, v23);
  uint64_t v28 = (void *)(v27 + v26);
  uint64_t v29 = v36;
  *uint64_t v28 = v35;
  v28[1] = v29;
  swift_bridgeObjectRetain(v29);
  NowPlayingProvider.queueRefId(completion:)(sub_1E39F0, v27);
  swift_release(v27);
  return (*(uint64_t (**)(char *, uint64_t))(v33 + 8))(v9, v34);
}

uint64_t sub_1E0A2C(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5, uint64_t a6)
{
  uint64_t v102 = a2;
  uint64_t v103 = a6;
  uint64_t v100 = a5;
  uint64_t v101 = a1;
  id v105 = a4;
  uint64_t v7 = type metadata accessor for OSSignpostID(0LL);
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v90 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v11 = sub_6C5C(&qword_289EA8);
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v14 = (uint8_t **)((char *)&v90 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  uint64_t v15 = type metadata accessor for Logger(0LL);
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v17 = __chkstk_darwin(v15);
  uint64_t v97 = (char *)&v90 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v19 = __chkstk_darwin(v17);
  char v95 = (char *)&v90 - v20;
  uint64_t v21 = __chkstk_darwin(v19);
  os_log_type_t v96 = (char *)&v90 - v22;
  uint64_t v23 = __chkstk_darwin(v21);
  uint64_t v94 = (char *)&v90 - v24;
  __chkstk_darwin(v23);
  unint64_t v26 = (char *)&v90 - v25;
  uint64_t v110 = -2LL;
  if (a3)
  {
    uint64_t v98 = v10;
    uint64_t v99 = v8;
    swift_errorRetain(a3);
    if (qword_283888 != -1) {
      swift_once(&qword_283888, sub_BFC5C);
    }
    uint64_t v27 = sub_6960(v15, (uint64_t)qword_2969C8);
    (*(void (**)(char *, uint64_t, uint64_t))(v16 + 16))(v26, v27, v15);
    swift_errorRetain(a3);
    uint64_t v28 = swift_errorRetain(a3);
    uint64_t v104 = v15;
    uint64_t v29 = (os_log_s *)Logger.logObject.getter(v28);
    os_log_type_t v30 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v29, v30))
    {
      uint64_t v31 = swift_slowAlloc(12LL, -1LL);
      uint64_t v93 = v16;
      uint64_t v32 = (uint8_t *)v31;
      uint64_t v91 = swift_slowAlloc(32LL, -1LL);
      v109[0] = v91;
      uint64_t v92 = v7;
      *(_DWORD *)uint64_t v32 = 136446210;
      uint64_t v90 = v32 + 4;
      swift_getErrorValue(a3, v107, v106);
      uint64_t v33 = Error.localizedDescription.getter(v106[1], v106[2]);
      unint64_t v35 = v34;
      uint64_t v108 = sub_6978(v33, v34, v109);
      uint64_t v7 = v92;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v108, v109);
      swift_bridgeObjectRelease(v35);
      swift_errorRelease(a3);
      swift_errorRelease(a3);
      _os_log_impl( &dword_0,  v29,  v30,  "PlayMediaRCHFlowWrapper#logReliability nowPlaying app error:%{public}s",  v32,  0xCu);
      uint64_t v36 = v91;
      swift_arrayDestroy(v91, 1LL, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v36, -1LL, -1LL);
      uint64_t v37 = v32;
      uint64_t v16 = v93;
      swift_slowDealloc(v37, -1LL, -1LL);

      swift_errorRelease(a3);
    }

    else
    {
      swift_errorRelease(a3);
      swift_errorRelease(a3);
      swift_errorRelease(a3);
    }

    uint64_t v15 = v104;
    (*(void (**)(char *, uint64_t))(v16 + 8))(v26, v104);
    uint64_t v10 = v98;
    uint64_t v8 = v99;
    uint64_t v110 = -1LL;
  }

  (*(void (**)(void *, id, uint64_t))(v12 + 16))(v14, v105, v11);
  if ((*(unsigned int (**)(void *, uint64_t))(v12 + 88))(v14, v11) != enum case for RCHFlowResult.complete<A, B>(_:))
  {
    (*(void (**)(void *, uint64_t))(v12 + 8))(v14, v11);
    goto LABEL_40;
  }

  uint64_t v38 = v16;
  (*(void (**)(void *, uint64_t))(v12 + 96))(v14, v11);
  uint64_t v39 = (void *)v14[1];
  uint64_t v40 = (void *)v14[2];
  swift_release(*v14);

  if ([v40 code] == &dword_4)
  {
    if (v103)
    {
      uint64_t v41 = v38;
      if (v102 && (v100 == v101 && v103 == v102 || (_stringCompareWithSmolCheck(_:_:expecting:)(v100, v103) & 1) != 0))
      {
LABEL_15:
        uint64_t v110 = 0LL;
        if (qword_283888 != -1) {
          swift_once(&qword_283888, sub_BFC5C);
        }
        uint64_t v42 = sub_6960(v15, (uint64_t)qword_2969C8);
        uint64_t v43 = v94;
        uint64_t v44 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v41 + 16))(v94, v42, v15);
        uint64_t v45 = v15;
        uint64_t v46 = v41;
        uint64_t v47 = (os_log_s *)Logger.logObject.getter(v44);
        os_log_type_t v48 = static os_log_type_t.debug.getter();
        if (os_log_type_enabled(v47, v48))
        {
          uint64_t v93 = v46;
          uint64_t v49 = swift_slowAlloc(12LL, -1LL);
          id v105 = v40;
          uint64_t v50 = (uint8_t *)v49;
          uint64_t v51 = swift_slowAlloc(32LL, -1LL);
          uint64_t v108 = 0LL;
          v109[0] = v51;
          *(_DWORD *)uint64_t v50 = 136315138;
          uint64_t v104 = v45;
          uint64_t v52 = dispatch thunk of CustomStringConvertible.description.getter( &type metadata for Int,  &protocol witness table for Int);
          unint64_t v54 = v53;
          uint64_t v108 = sub_6978(v52, v53, v109);
          UnsafeMutableRawBufferPointer.copyMemory(from:)(&v108, v109);
          swift_bridgeObjectRelease(v54);
          _os_log_impl( &dword_0,  v47,  v48,  "PlayMediaRCHFlowWrapper#logReliability sirikit success & playback queue correct: %s...",  v50,  0xCu);
          swift_arrayDestroy(v51, 1LL, (char *)&type metadata for Any + 8);
          swift_slowDealloc(v51, -1LL, -1LL);
          swift_slowDealloc(v50, -1LL, -1LL);

          (*(void (**)(char *, uint64_t))(v93 + 8))(v94, v104);
          goto LABEL_40;
        }

        goto LABEL_39;
      }
    }

    else
    {
      uint64_t v41 = v38;
      if (!v102) {
        goto LABEL_15;
      }
    }

    uint64_t v110 = 1LL;
    if (qword_283888 != -1) {
      swift_once(&qword_283888, sub_BFC5C);
    }
    uint64_t v65 = sub_6960(v15, (uint64_t)qword_2969C8);
    uint64_t v43 = v96;
    uint64_t v66 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v41 + 16))(v96, v65, v15);
    uint64_t v45 = v15;
    uint64_t v46 = v41;
    uint64_t v47 = (os_log_s *)Logger.logObject.getter(v66);
    os_log_type_t v67 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v47, v67))
    {
      uint64_t v93 = v46;
      uint64_t v68 = swift_slowAlloc(12LL, -1LL);
      id v105 = v40;
      uint64_t v69 = (uint8_t *)v68;
      uint64_t v70 = swift_slowAlloc(32LL, -1LL);
      *(_DWORD *)uint64_t v69 = 136315138;
      uint64_t v104 = v45;
      uint64_t v108 = 1LL;
      v109[0] = v70;
      uint64_t v71 = dispatch thunk of CustomStringConvertible.description.getter( &type metadata for Int,  &protocol witness table for Int);
      unint64_t v73 = v72;
      uint64_t v108 = sub_6978(v71, v72, v109);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v108, v109);
      swift_bridgeObjectRelease(v73);
      _os_log_impl( &dword_0,  v47,  v67,  "PlayMediaRCHFlowWrapper#logReliability sirikit success & playback queue incorrect: %s...",  v69,  0xCu);
      swift_arrayDestroy(v70, 1LL, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v70, -1LL, -1LL);
      swift_slowDealloc(v69, -1LL, -1LL);

      (*(void (**)(char *, uint64_t))(v93 + 8))(v96, v104);
      goto LABEL_40;
    }

    goto LABEL_39;
  }

  if (v103)
  {
    uint64_t v55 = v38;
    if (v102 && (v100 == v101 && v103 == v102 || (_stringCompareWithSmolCheck(_:_:expecting:)(v100, v103) & 1) != 0))
    {
LABEL_25:
      uint64_t v110 = 2LL;
      if (qword_283888 != -1) {
        swift_once(&qword_283888, sub_BFC5C);
      }
      uint64_t v56 = sub_6960(v15, (uint64_t)qword_2969C8);
      uint64_t v43 = v95;
      uint64_t v57 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v55 + 16))(v95, v56, v15);
      uint64_t v45 = v15;
      uint64_t v46 = v55;
      uint64_t v47 = (os_log_s *)Logger.logObject.getter(v57);
      os_log_type_t v58 = static os_log_type_t.debug.getter();
      if (os_log_type_enabled(v47, v58))
      {
        uint64_t v93 = v46;
        uint64_t v59 = swift_slowAlloc(12LL, -1LL);
        id v105 = v40;
        uint64_t v60 = (uint8_t *)v59;
        uint64_t v61 = swift_slowAlloc(32LL, -1LL);
        *(_DWORD *)uint64_t v60 = 136315138;
        uint64_t v104 = v45;
        uint64_t v108 = 2LL;
        v109[0] = v61;
        uint64_t v62 = dispatch thunk of CustomStringConvertible.description.getter( &type metadata for Int,  &protocol witness table for Int);
        unint64_t v64 = v63;
        uint64_t v108 = sub_6978(v62, v63, v109);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v108, v109);
        swift_bridgeObjectRelease(v64);
        _os_log_impl( &dword_0,  v47,  v58,  "PlayMediaRCHFlowWrapper#logReliability sirikit failure & playback queue correct: %s...",  v60,  0xCu);
        swift_arrayDestroy(v61, 1LL, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v61, -1LL, -1LL);
        swift_slowDealloc(v60, -1LL, -1LL);

        (*(void (**)(char *, uint64_t))(v93 + 8))(v95, v104);
        goto LABEL_40;
      }

      goto LABEL_39;
    }
  }

  else
  {
    uint64_t v55 = v38;
    if (!v102) {
      goto LABEL_25;
    }
  }

  uint64_t v110 = 3LL;
  if (qword_283888 != -1) {
    swift_once(&qword_283888, sub_BFC5C);
  }
  uint64_t v74 = sub_6960(v15, (uint64_t)qword_2969C8);
  uint64_t v43 = v97;
  uint64_t v75 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v55 + 16))(v97, v74, v15);
  uint64_t v45 = v15;
  uint64_t v46 = v55;
  uint64_t v47 = (os_log_s *)Logger.logObject.getter(v75);
  os_log_type_t v76 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v47, v76))
  {
    uint64_t v93 = v46;
    uint64_t v77 = swift_slowAlloc(12LL, -1LL);
    id v105 = v40;
    os_log_type_t v78 = (uint8_t *)v77;
    uint64_t v79 = swift_slowAlloc(32LL, -1LL);
    *(_DWORD *)os_log_type_t v78 = 136315138;
    uint64_t v104 = v45;
    uint64_t v108 = 3LL;
    v109[0] = v79;
    uint64_t v80 = dispatch thunk of CustomStringConvertible.description.getter( &type metadata for Int,  &protocol witness table for Int);
    unint64_t v82 = v81;
    uint64_t v108 = sub_6978(v80, v81, v109);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v108, v109);
    swift_bridgeObjectRelease(v82);
    _os_log_impl( &dword_0,  v47,  v76,  "PlayMediaRCHFlowWrapper#logReliability sirikit failure & playback queue incorrect: %s...",  v78,  0xCu);
    swift_arrayDestroy(v79, 1LL, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v79, -1LL, -1LL);
    swift_slowDealloc(v78, -1LL, -1LL);

    (*(void (**)(char *, uint64_t))(v93 + 8))(v97, v104);
    goto LABEL_40;
  }

uint64_t sub_1E1664()
{
  return type metadata accessor for PlayMediaRCHFlowWrapper(0LL);
}

void sub_1E166C(uint64_t a1)
{
  if (v3 <= 0x3F)
  {
    v10[0] = *(void *)(v2 - 8) + 64LL;
    v10[1] = (char *)&value witness table for Builtin.NativeObject + 64;
    void v10[2] = "(";
    v10[3] = (char *)&value witness table for Builtin.NativeObject + 64;
    v10[4] = (char *)&value witness table for Builtin.NativeObject + 64;
    v10[5] = (char *)&value witness table for Builtin.NativeObject + 64;
    v10[6] = (char *)&value witness table for Builtin.NativeObject + 64;
    uint64_t v4 = type metadata accessor for OSSignpostID(319LL);
    if (v5 <= 0x3F)
    {
      v10[7] = *(void *)(v4 - 8) + 64LL;
      uint64_t v6 = type metadata accessor for Date(319LL);
      if (v7 <= 0x3F)
      {
        v10[8] = *(void *)(v6 - 8) + 64LL;
        sub_1E1748(319LL);
        if (v9 <= 0x3F)
        {
          v10[9] = *(void *)(v8 - 8) + 64LL;
          swift_updateClassMetadata2(a1, 256LL, 10LL, v10, a1 + 80);
        }
      }
    }
  }

void sub_1E1748(uint64_t a1)
{
  if (!qword_28DAC8)
  {
    uint64_t v2 = sub_45D50(&qword_289EA8);
    unint64_t v3 = type metadata accessor for Optional(a1, v2);
    if (!v4) {
      atomic_store(v3, (unint64_t *)&qword_28DAC8);
    }
  }

uint64_t sub_1E17A0(uint64_t a1)
{
  return sub_1DBE54(a1) & 1;
}

uint64_t sub_1E17C4()
{
  uint64_t v0 = type metadata accessor for PriorResultContext(0LL);
  uint64_t v1 = swift_allocObject(v0, *(unsigned int *)(v0 + 48), *(unsigned __int16 *)(v0 + 52));
  uint64_t v2 = (void *)(v1 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin18PriorResultContext_refId);
  *uint64_t v2 = 0LL;
  v2[1] = 0LL;
  *(_BYTE *)(v1 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin18PriorResultContext_appSelectionUsed) = 0;
  *(void *)(v1 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin18PriorResultContext_mediaSearch) = 0LL;
  *(_BYTE *)(v1 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin18PriorResultContext_requestCancelled) = 0;
  *(_BYTE *)(v1 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin18PriorResultContext_previousDisambiguationCancelled) = 0;
  uint64_t result = Date.init(timeIntervalSince1970:)(0.0);
  qword_296BB0 = v1;
  return result;
}

uint64_t sub_1E1850(uint64_t a1, int a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = v4;
  uint64_t v50 = a3;
  uint64_t v51 = a4;
  int v49 = a2;
  uint64_t v52 = type metadata accessor for Logger(0LL);
  uint64_t v54 = *(void *)(v52 - 8);
  __chkstk_darwin(v52);
  unint64_t v53 = &v48[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL)];
  uint64_t v8 = type metadata accessor for AppSelectionReport(0LL);
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = &v48[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL)];
  uint64_t v12 = sub_6C5C(&qword_285470);
  __chkstk_darwin(v12);
  uint64_t v14 = &v48[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0LL)];
  uint64_t v15 = type metadata accessor for Date(0LL);
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v17 = __chkstk_darwin(v15);
  uint64_t v19 = &v48[-((v18 + 15) & 0xFFFFFFFFFFFFFFF0LL)];
  Date.init()(v17);
  uint64_t v20 = v5 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin18PriorResultContext_time;
  swift_beginAccess(v5 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin18PriorResultContext_time, &v56, 33LL, 0LL);
  (*(void (**)(uint64_t, _BYTE *, uint64_t))(v16 + 40))(v20, v19, v15);
  uint64_t v21 = swift_endAccess(&v56);
  if (a1)
  {
    dispatch thunk of AppSelectionContext.report.getter(v21);
    if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v9 + 48))(v14, 1LL, v8))
    {
      uint64_t v22 = sub_1F6CC((uint64_t)v14, &qword_285470);
      char v23 = 0;
    }

    else
    {
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v9 + 16))(v11, v14, v8);
      uint64_t v31 = sub_1F6CC((uint64_t)v14, &qword_285470);
      char v23 = AppSelectionReport.appSelectionUsed.getter(v31);
      uint64_t v22 = (*(uint64_t (**)(_BYTE *, uint64_t))(v9 + 8))(v11, v8);
    }

    uint64_t v26 = v52;
    uint64_t v25 = v53;
    uint64_t v27 = v54;
    uint64_t v29 = v50;
    uint64_t v28 = v51;
    char v30 = v49;
    *(_BYTE *)(v5 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin18PriorResultContext_appSelectionUsed) = v23 & 1;
    uint64_t v32 = (void *)dispatch thunk of AppSelectionContext.intent.getter(v22);
    id v24 = [v32 mediaSearch];
  }

  else
  {
    id v24 = 0LL;
    *(_BYTE *)(v5 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin18PriorResultContext_appSelectionUsed) = 0;
    uint64_t v26 = v52;
    uint64_t v25 = v53;
    uint64_t v27 = v54;
    uint64_t v29 = v50;
    uint64_t v28 = v51;
    char v30 = v49;
  }

  uint64_t v33 = *(void **)(v5 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin18PriorResultContext_mediaSearch);
  *(void *)(v5 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin18PriorResultContext_mediaSearch) = v24;

  *(_BYTE *)(v5 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin18PriorResultContext_requestCancelled) = v30 & 1;
  unint64_t v34 = (uint64_t *)(v5 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin18PriorResultContext_refId);
  uint64_t v35 = *(void *)(v5 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin18PriorResultContext_refId + 8);
  *unint64_t v34 = v29;
  v34[1] = v28;
  swift_bridgeObjectRetain(v28);
  swift_bridgeObjectRelease(v35);
  if (qword_283888 != -1) {
    swift_once(&qword_283888, sub_BFC5C);
  }
  uint64_t v36 = sub_6960(v26, (uint64_t)qword_2969C8);
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v27 + 16))(v25, v36, v26);
  uint64_t v37 = swift_bridgeObjectRetain_n(v28, 2LL);
  uint64_t v38 = (os_log_s *)Logger.logObject.getter(v37);
  os_log_type_t v39 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v38, v39))
  {
    uint64_t v40 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
    uint64_t v41 = swift_slowAlloc(32LL, -1LL);
    uint64_t v55 = v41;
    uint64_t v56 = v29;
    *(_DWORD *)uint64_t v40 = 136315138;
    uint64_t v57 = v28;
    swift_bridgeObjectRetain(v28);
    uint64_t v42 = sub_6C5C(&qword_284600);
    uint64_t v43 = String.init<A>(describing:)(&v56, v42);
    uint64_t v44 = v28;
    unint64_t v46 = v45;
    uint64_t v56 = sub_6978(v43, v45, &v55);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v56, &v57);
    swift_bridgeObjectRelease_n(v44, 2LL);
    swift_bridgeObjectRelease(v46);
    _os_log_impl(&dword_0, v38, v39, "PriorResultContext#update set prior result context for refId: %s", v40, 0xCu);
    swift_arrayDestroy(v41, 1LL, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v41, -1LL, -1LL);
    swift_slowDealloc(v40, -1LL, -1LL);

    return (*(uint64_t (**)(_BYTE *, uint64_t))(v54 + 8))(v53, v26);
  }

  else
  {

    swift_bridgeObjectRelease_n(v28, 2LL);
    return (*(uint64_t (**)(_BYTE *, uint64_t))(v27 + 8))(v25, v26);
  }

uint64_t sub_1E1CA8()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin18PriorResultContext_time;
  uint64_t v2 = type metadata accessor for Date(0LL);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8LL))(v1, v2);
  swift_bridgeObjectRelease(*(void *)(v0 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin18PriorResultContext_refId + 8));

  return swift_deallocClassInstance( v0,  *(unsigned int *)(*(void *)v0 + 48LL),  *(unsigned __int16 *)(*(void *)v0 + 52LL));
}

uint64_t sub_1E1D1C()
{
  return type metadata accessor for PriorResultContext(0LL);
}

uint64_t type metadata accessor for PriorResultContext(uint64_t a1)
{
  return sub_1E58C(a1, qword_28DC50, (uint64_t)&nominal type descriptor for PriorResultContext);
}

uint64_t sub_1E1D38(uint64_t a1)
{
  uint64_t result = type metadata accessor for Date(319LL);
  if (v3 <= 0x3F)
  {
    v4[0] = *(void *)(result - 8) + 64LL;
    v4[1] = &unk_21B388;
    v4[2] = &unk_21B3A0;
    uint64_t v4[3] = &unk_21B3B8;
    v4[4] = &unk_21B3A0;
    v4[5] = &unk_21B3A0;
    uint64_t result = swift_updateClassMetadata2(a1, 256LL, 6LL, v4, a1 + 80);
    if (!result) {
      return 0LL;
    }
  }

  return result;
}

uint64_t sub_1E1DC4()
{
  return sub_10430(&qword_288AF0, type metadata accessor for PlayMediaRCHFlowWrapper, (uint64_t)&unk_21B3D0);
}

uint64_t sub_1E1DF0()
{
  return sub_10430(&qword_28DDA8, type metadata accessor for PlayMediaRCHFlowWrapper, (uint64_t)&unk_21B428);
}

_OWORD *sub_1E1E1C@<X0>(_OWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char a4@<W3>, _OWORD *a5@<X8>)
{
  uint64_t v6 = (void **)v5;
  uint64_t v12 = (void *)*v5;
  unint64_t v14 = sub_9A744(a2, a3);
  uint64_t v15 = v12[2];
  BOOL v16 = (v13 & 1) == 0;
  uint64_t v17 = v15 + v16;
  if (__OFADD__(v15, v16))
  {
    __break(1u);
  }

  else
  {
    char v18 = v13;
    uint64_t v19 = v12[3];
    if (v19 >= v17 && (a4 & 1) != 0)
    {
LABEL_7:
      uint64_t v20 = *v6;
      if ((v18 & 1) != 0)
      {
LABEL_8:
        sub_21964((_OWORD *)(v20[7] + 32 * v14), a5);
        return sub_21964(a1, (_OWORD *)(v20[7] + 32 * v14));
      }

      goto LABEL_11;
    }

    if (v19 >= v17 && (a4 & 1) == 0)
    {
      sub_1CC258();
      goto LABEL_7;
    }

    sub_1CCAB0(v17, a4 & 1);
    unint64_t v22 = sub_9A744(a2, a3);
    if ((v18 & 1) == (v23 & 1))
    {
      unint64_t v14 = v22;
      uint64_t v20 = *v6;
      if ((v18 & 1) != 0) {
        goto LABEL_8;
      }
LABEL_11:
      sub_33A88(v14, a2, a3, a1, v20);
      *a5 = 0u;
      a5[1] = 0u;
      return (_OWORD *)swift_bridgeObjectRetain(a3);
    }
  }

  uint64_t result = (_OWORD *)KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for String);
  __break(1u);
  return result;
}

uint64_t sub_1E1F70(void *a1, void *a2, uint64_t a3, uint64_t a4, void *a5, uint64_t a6, uint64_t a7)
{
  uint64_t v208 = a6;
  uint64_t v209 = a7;
  uint64_t v211 = a4;
  uint64_t v206 = a2;
  uint64_t v205 = a1;
  uint64_t v10 = type metadata accessor for PlaybackCode(0LL);
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = __chkstk_darwin(v10);
  char v196 = (char *)&v192 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v14 = __chkstk_darwin(v12);
  BOOL v16 = (char *)&v192 - v15;
  __chkstk_darwin(v14);
  char v18 = (char *)&v192 - v17;
  uint64_t v19 = type metadata accessor for Logger(0LL);
  uint64_t v217 = *(void *)(v19 - 8);
  uint64_t v20 = __chkstk_darwin(v19);
  char v204 = (char *)&v192 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v22 = __chkstk_darwin(v20);
  id v203 = (char *)&v192 - v23;
  uint64_t v24 = __chkstk_darwin(v22);
  uint64_t v202 = (char *)&v192 - v25;
  uint64_t v26 = __chkstk_darwin(v24);
  uint64_t v200 = (char *)&v192 - v27;
  uint64_t v28 = __chkstk_darwin(v26);
  uint64_t v201 = (char *)&v192 - v29;
  uint64_t v30 = __chkstk_darwin(v28);
  uint64_t v199 = (char *)&v192 - v31;
  uint64_t v32 = __chkstk_darwin(v30);
  uint64_t v198 = (char *)&v192 - v33;
  uint64_t v34 = __chkstk_darwin(v32);
  uint64_t v195 = (char *)&v192 - v35;
  uint64_t v36 = __chkstk_darwin(v34);
  uint64_t v197 = (char *)&v192 - v37;
  __chkstk_darwin(v36);
  os_log_type_t v39 = (char *)&v192 - v38;
  if (qword_283888 != -1) {
    swift_once(&qword_283888, sub_BFC5C);
  }
  uint64_t v40 = sub_6960(v19, (uint64_t)qword_2969C8);
  uint64_t v41 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v217 + 16);
  uint64_t v212 = v40;
  uint64_t v213 = v41;
  ((void (*)(char *))v41)(v39);
  uint64_t v42 = *(uint64_t (**)(char *, uint64_t, uint8_t *))(v11 + 16);
  uint64_t v215 = a3;
  uint64_t v194 = v42;
  uint64_t v43 = v42(v18, a3, (uint8_t *)v10);
  uint64_t v44 = Logger.logObject.getter(v43);
  uint64_t v216 = v19;
  uint64_t v45 = v11;
  unint64_t v46 = (os_log_s *)v44;
  os_log_type_t v47 = static os_log_type_t.debug.getter();
  uint64_t v214 = (uint8_t *)v10;
  os_log_type_t v48 = v47;
  BOOL v49 = os_log_type_enabled(v46, v47);
  uint64_t v210 = v7;
  id v207 = a5;
  if (v49)
  {
    uint64_t v50 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
    uint64_t v51 = swift_slowAlloc(32LL, -1LL);
    uint64_t v193 = v16;
    uint64_t v52 = v51;
    *(void *)&__int128 v220 = v51;
    *(_DWORD *)uint64_t v50 = 136446210;
    uint64_t v192 = v45;
    uint64_t v53 = PlaybackCode.rawValue.getter();
    unint64_t v55 = v54;
    *(void *)&__int128 v218 = sub_6978(v53, v54, (uint64_t *)&v220);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v218, (char *)&v218 + 8);
    swift_bridgeObjectRelease(v55);
    uint64_t v56 = v192;
    uint64_t v57 = *(void (**)(char *, uint8_t *))(v192 + 8);
    os_log_type_t v58 = v18;
    uint64_t v59 = v214;
    v57(v58, v214);
    _os_log_impl( &dword_0,  v46,  v48,  "PlayMediaRCHFlowWrapper#sharedErrorDialogHandlingForPFSQTerminalErrors code: %{public}s",  v50,  0xCu);
    swift_arrayDestroy(v52, 1LL, (char *)&type metadata for Any + 8);
    uint64_t v60 = v52;
    BOOL v16 = v193;
    swift_slowDealloc(v60, -1LL, -1LL);
    swift_slowDealloc(v50, -1LL, -1LL);

    uint64_t v61 = v216;
    uint64_t v217 = *(void *)(v217 + 8);
    ((void (*)(char *, uint64_t))v217)(v39, v216);
    uint64_t v62 = v59;
    uint64_t v63 = v56;
  }

  else
  {
    uint64_t v57 = *(void (**)(char *, uint8_t *))(v45 + 8);
    uint64_t v62 = v214;
    v57(v18, v214);

    uint64_t v61 = v216;
    uint64_t v217 = *(void *)(v217 + 8);
    ((void (*)(char *, uint64_t))v217)(v39, v216);
    uint64_t v63 = v45;
  }

  unint64_t v64 = *(void (**)(char *, void, uint8_t *))(v63 + 104);
  v64(v16, enum case for PlaybackCode.iTunesAccountError(_:), v62);
  uint64_t v65 = sub_10430( &qword_28B620,  (uint64_t (*)(uint64_t))&type metadata accessor for PlaybackCode,  (uint64_t)&protocol conformance descriptor for PlaybackCode);
  uint64_t v66 = v215;
  char v67 = dispatch thunk of static Equatable.== infix(_:_:)(v215, v16, v62, v65);
  uint64_t v68 = ((uint64_t (*)(char *, uint8_t *))v57)(v16, v62);
  if ((v67 & 1) != 0)
  {
    unint64_t v69 = 0xD000000000000013LL;
    if ((static SiriAudioEnvironment.isHomePod.getter(v68) & 1) != 0)
    {
      uint64_t v70 = v203;
      uint64_t v71 = v213(v203, v212, v61);
      unint64_t v72 = (os_log_s *)Logger.logObject.getter(v71);
      os_log_type_t v73 = static os_log_type_t.default.getter();
      BOOL v74 = os_log_type_enabled(v72, v73);
      uint64_t v75 = v211;
      id v76 = v207;
      if (v74)
      {
        uint64_t v77 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
        *(_WORD *)uint64_t v77 = 0;
        _os_log_impl( &dword_0,  v72,  v73,  "PlayMediaRCHFlowWrapper#sharedErrorDialogHandlingForPFSQTerminalErrors using special dialog for homepod account error code",  v77,  2u);
        swift_slowDealloc(v77, -1LL, -1LL);
      }

      ((void (*)(char *, uint64_t))v217)(v70, v61);
      uint64_t v221 = sub_1641C(0LL, (unint64_t *)&qword_285320, &OBJC_CLASS___INPlayMediaIntent_ptr);
      uint64_t v222 = &off_272BD0;
      *(void *)&__int128 v220 = v76;
      uint64_t v78 = v206[5];
      uint64_t v79 = v206[6];
      __chkstk_darwin(v221);
      uint64_t v80 = v76;
      unint64_t v81 = &v192 - 12;
      *(&v192 - 10) = v78;
      *(&v192 - 9) = v79;
      unint64_t v82 = 0x8000000000223B30LL;
      *(&v192 - 8) = 0xD000000000000013LL;
      *(&v192 - sub_6C3C(v0 + 7) = 0x8000000000223B30LL;
      uint64_t v186 = v83;
      uint64_t v187 = &_swiftEmptyDictionarySingleton;
      uint64_t v188 = v75;
      BOOL v189 = &v220;
      id v190 = 0LL;
      id v84 = v80;
    }

    else
    {
      os_log_type_t v96 = v204;
      uint64_t v97 = v213(v204, v212, v61);
      uint64_t v98 = (os_log_s *)Logger.logObject.getter(v97);
      os_log_type_t v99 = static os_log_type_t.default.getter();
      BOOL v100 = os_log_type_enabled(v98, v99);
      uint64_t v101 = v211;
      id v102 = v207;
      if (v100)
      {
        uint64_t v103 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
        *(_WORD *)uint64_t v103 = 0;
        _os_log_impl( &dword_0,  v98,  v99,  "PlayMediaRCHFlowWrapper#sharedErrorDialogHandlingForPFSQTerminalErrors using special dialog for signIntoMusicA ccount error code",  v103,  2u);
        swift_slowDealloc(v103, -1LL, -1LL);
      }

      ((void (*)(char *, uint64_t))v217)(v96, v61);
      uint64_t v221 = sub_1641C(0LL, (unint64_t *)&qword_285320, &OBJC_CLASS___INPlayMediaIntent_ptr);
      uint64_t v222 = &off_272BD0;
      *(void *)&__int128 v220 = v102;
      uint64_t v78 = v206[5];
      uint64_t v79 = v206[6];
      __chkstk_darwin(v221);
      uint64_t v104 = v102;
      unint64_t v81 = &v192 - 12;
      *(&v192 - 10) = v78;
      *(&v192 - 9) = v79;
      unint64_t v69 = 0xD000000000000014LL;
      unint64_t v82 = 0x8000000000221D00LL;
      *(&v192 - 8) = 0xD000000000000014LL;
      *(&v192 - sub_6C3C(v0 + 7) = 0x8000000000221D00LL;
      uint64_t v186 = v105;
      uint64_t v187 = v205;
      uint64_t v188 = v101;
      BOOL v189 = &v220;
      id v190 = 0LL;
      id v106 = v104;
    }

    id v190 = (void (*)(uint64_t (*)(), uint64_t))sub_3CAE4;
    uint64_t v191 = v81;
    uint64_t v188 = v69;
    BOOL v189 = (__int128 *)v82;
    goto LABEL_37;
  }

  v64(v16, enum case for PlaybackCode.noNetwork(_:), v62);
  char v85 = dispatch thunk of static Equatable.== infix(_:_:)(v66, v16, v62, v65);
  uint64_t v86 = ((uint64_t (*)(char *, uint8_t *))v57)(v16, v62);
  if ((v85 & 1) != 0)
  {
    uint64_t v87 = v211;
    uint64_t v88 = App.appIdentifier.getter(v86);
    uint64_t v90 = v89;
    uint64_t v91 = static BundleIdentifiers.podcasts.getter(v88);
    uint64_t v93 = v92;
    if (v90)
    {
      id v94 = v207;
      char v95 = v202;
      if (v88 == v91 && v90 == v92)
      {
        swift_bridgeObjectRelease(v90);
        swift_bridgeObjectRelease(v93);
LABEL_30:
        unint64_t v138 = v200;
        uint64_t v139 = v213(v200, v212, v61);
        uint64_t v140 = (os_log_s *)Logger.logObject.getter(v139);
        os_log_type_t v141 = static os_log_type_t.default.getter();
        if (os_log_type_enabled(v140, v141))
        {
          uint64_t v142 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
          *(_WORD *)uint64_t v142 = 0;
          _os_log_impl( &dword_0,  v140,  v141,  "PlayMediaRCHFlowWrapper#sharedErrorDialogHandlingForPFSQTerminalErrors using special dialog for unsupportMed iaItemsCellularDataSettings code",  v142,  2u);
          swift_slowDealloc(v142, -1LL, -1LL);
        }

        ((void (*)(char *, uint64_t))v217)(v138, v61);
        uint64_t v221 = sub_1641C(0LL, (unint64_t *)&qword_285320, &OBJC_CLASS___INPlayMediaIntent_ptr);
        uint64_t v222 = &off_272BD0;
        *(void *)&__int128 v220 = v94;
        id v143 = v94;
        uint64_t v144 = (uint64_t)v205;
        uint64_t v145 = v87;
LABEL_43:
        sub_45FD4(v144, v145, (uint64_t)&v220, v208, v209);
        return sub_1F6CC((uint64_t)&v220, &qword_283FE8);
      }

      char v137 = _stringCompareWithSmolCheck(_:_:expecting:)(v88, v90);
      swift_bridgeObjectRelease(v90);
      swift_bridgeObjectRelease(v93);
      if ((v137 & 1) != 0) {
        goto LABEL_30;
      }
    }

    else
    {
      swift_bridgeObjectRelease(v92);
      id v94 = v207;
      char v95 = v202;
    }

    uint64_t v146 = v213(v95, v212, v61);
    char v147 = (os_log_s *)Logger.logObject.getter(v146);
    os_log_type_t v148 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v147, v148))
    {
      uint64_t v149 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)uint64_t v149 = 0;
      _os_log_impl( &dword_0,  v147,  v148,  "PlayMediaRCHFlowWrapper#sharedErrorDialogHandlingForPFSQTerminalErrors using special dialog for noNetwork code",  v149,  2u);
      swift_slowDealloc(v149, -1LL, -1LL);
    }

    ((void (*)(char *, uint64_t))v217)(v95, v61);
    uint64_t v221 = sub_1641C(0LL, (unint64_t *)&qword_285320, &OBJC_CLASS___INPlayMediaIntent_ptr);
    uint64_t v222 = &off_272BD0;
    *(void *)&__int128 v220 = v94;
    uint64_t v79 = v206[3];
    uint64_t v78 = v206[2];
    __chkstk_darwin(v221);
    uint64_t v131 = &v192 - 12;
    *(&v192 - 10) = v78;
    *(&v192 - 9) = v79;
    uint64_t v150 = v94;
    unint64_t v132 = 0x726F7774654E6F4ELL;
    unint64_t v133 = 0xE90000000000006BLL;
    *(&v192 - 8) = 0x726F7774654E6F4ELL;
    *(&v192 - sub_6C3C(v0 + 7) = 0xE90000000000006BLL;
    uint64_t v186 = v151;
    uint64_t v187 = v205;
    uint64_t v188 = v87;
    BOOL v189 = &v220;
    id v190 = 0LL;
    id v152 = v150;
LABEL_36:
    id v190 = (void (*)(uint64_t (*)(), uint64_t))sub_3CAE4;
    uint64_t v191 = v131;
    uint64_t v188 = v132;
    BOOL v189 = (__int128 *)v133;
LABEL_37:
    sub_200268( (uint64_t)"catServiceExecute",  17LL,  2u,  v208,  v209,  "CatService#execute family=%{signpost.telemetry:string1,public}@ id=%{signpost.telemetry:string2,public}@ enableTelemetry=YES ",  125LL,  2,  v78,  v79,  v188,  (uint64_t)v189,  v190,  (uint64_t)v191);
    return sub_1F6CC((uint64_t)&v220, &qword_283FE8);
  }

  v64(v16, enum case for PlaybackCode.gdprNeededInGroup(_:), v62);
  char v107 = dispatch thunk of static Equatable.== infix(_:_:)(v66, v16, v62, v65);
  v57(v16, v62);
  if ((v107 & 1) != 0)
  {
    uint64_t v108 = v61;
    id v109 = v207;
    uint64_t v110 = v205;
    uint64_t v111 = swift_bridgeObjectRetain(v205);
    char v112 = static SiriAudioEnvironment.isHomePod.getter(v111);
    id v219 = &type metadata for Bool;
    LOBYTE(v218) = v112 & 1;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v110);
    uint64_t v223 = v110;
    sub_1E1E1C(&v218, 0x6F50656D6F487369LL, 0xE900000000000064LL, isUniquelyReferenced_nonNull_native, &v220);
    uint64_t v114 = v223;
    swift_bridgeObjectRelease(0x8000000000000000LL);
    sub_1F6CC((uint64_t)&v220, &qword_284028);
    os_log_type_t v115 = v201;
    uint64_t v116 = v213(v201, v212, v108);
    double v117 = (os_log_s *)Logger.logObject.getter(v116);
    os_log_type_t v118 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v117, v118))
    {
      uint64_t v119 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)uint64_t v119 = 0;
      _os_log_impl( &dword_0,  v117,  v118,  "PlayMediaRCHFlowWrapper#sharedErrorDialogHandlingForPFSQTerminalErrors using special dialog for gdprNeededInGroup code",  v119,  2u);
      swift_slowDealloc(v119, -1LL, -1LL);
    }

    ((void (*)(char *, uint64_t))v217)(v115, v108);
    uint64_t v221 = sub_1641C(0LL, (unint64_t *)&qword_285320, &OBJC_CLASS___INPlayMediaIntent_ptr);
    uint64_t v222 = &off_272BD0;
    *(void *)&__int128 v220 = v109;
    uint64_t v120 = v206[3];
    uint64_t v121 = v206[2];
    __chkstk_darwin(v221);
    *(&v192 - 10) = v121;
    *(&v192 - 9) = v120;
    strcpy((char *)&v192 - 64, "PrivacyAckReqd");
    *((_BYTE *)&v192 - 49) = -18;
    uint64_t v186 = v122;
    uint64_t v187 = v114;
    uint64_t v188 = v211;
    BOOL v189 = &v220;
    id v190 = 0LL;
    id v124 = v123;
    sub_200268( (uint64_t)"catServiceExecute",  17LL,  2u,  v208,  v209,  "CatService#execute family=%{signpost.telemetry:string1,public}@ id=%{signpost.telemetry:string2,public}@ enableTelemetry=YES ",  125LL,  2,  v121,  v120,  0x4179636176697250LL,  0xEE00647165526B63LL,  (void (*)(uint64_t (*)(), uint64_t))sub_3CAE4,  (uint64_t)(&v192 - 12));
    swift_bridgeObjectRelease(v114);
    return sub_1F6CC((uint64_t)&v220, &qword_283FE8);
  }

  v64(v16, enum case for PlaybackCode.operationApplicationRequiresPreflight(_:), v62);
  char v125 = dispatch thunk of static Equatable.== infix(_:_:)(v66, v16, v62, v65);
  v57(v16, v62);
  if ((v125 & 1) != 0)
  {
    uint64_t v126 = v199;
    uint64_t v127 = v213(v199, v212, v61);
    uint64_t v128 = (os_log_s *)Logger.logObject.getter(v127);
    os_log_type_t v129 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v128, v129))
    {
      uint64_t v130 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)uint64_t v130 = 0;
      _os_log_impl( &dword_0,  v128,  v129,  "PlayMediaRCHFlowWrapper#sharedErrorDialogHandlingForPFSQTerminalErrors using special dialog for operationApplica tionRequiresPreflight code",  v130,  2u);
      swift_slowDealloc(v130, -1LL, -1LL);
    }

    ((void (*)(char *, uint64_t))v217)(v126, v61);
    uint64_t v221 = sub_1641C(0LL, (unint64_t *)&qword_285320, &OBJC_CLASS___INPlayMediaIntent_ptr);
    uint64_t v222 = &off_272BD0;
    *(void *)&__int128 v220 = v207;
    uint64_t v79 = v206[3];
    uint64_t v78 = v206[2];
    __chkstk_darwin(v221);
    uint64_t v131 = &v192 - 12;
    *(&v192 - 10) = v78;
    *(&v192 - 9) = v79;
    unint64_t v132 = 0xD000000000000025LL;
    unint64_t v133 = 0x8000000000221030LL;
    *(&v192 - 8) = 0xD000000000000025LL;
    *(&v192 - sub_6C3C(v0 + 7) = 0x8000000000221030LL;
    uint64_t v186 = v134;
    uint64_t v187 = v205;
    uint64_t v188 = v211;
    BOOL v189 = &v220;
    id v190 = 0LL;
    id v136 = v135;
    goto LABEL_36;
  }

  v64(v16, enum case for PlaybackCode.musicCellularDataOff(_:), v62);
  char v154 = dispatch thunk of static Equatable.== infix(_:_:)(v66, v16, v62, v65);
  v57(v16, v62);
  if ((v154 & 1) != 0)
  {
    char v155 = v198;
    uint64_t v156 = v213(v198, v212, v61);
    uint64_t v157 = (os_log_s *)Logger.logObject.getter(v156);
    os_log_type_t v158 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v157, v158))
    {
      uint64_t v159 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)uint64_t v159 = 0;
      _os_log_impl( &dword_0,  v157,  v158,  "PlayMediaRCHFlowWrapper#sharedErrorDialogHandlingForPFSQTerminalErrors using special dialog (musicCellularDataOf f) for unsupportMediaItemsCellularDataSettings code",  v159,  2u);
      swift_slowDealloc(v159, -1LL, -1LL);
    }

    ((void (*)(char *, uint64_t))v217)(v155, v61);
    uint64_t v221 = sub_1641C(0LL, (unint64_t *)&qword_285320, &OBJC_CLASS___INPlayMediaIntent_ptr);
    uint64_t v222 = &off_272BD0;
    *(void *)&__int128 v220 = v207;
    id v160 = v207;
    uint64_t v144 = (uint64_t)v205;
    uint64_t v145 = v211;
    goto LABEL_43;
  }

  v64(v16, enum case for PlaybackCode.appNotInstalled(_:), v62);
  char v161 = dispatch thunk of static Equatable.== infix(_:_:)(v66, v16, v62, v65);
  v57(v16, v62);
  if ((v161 & 1) != 0)
  {
    uint64_t v162 = v195;
    uint64_t v163 = v213(v195, v212, v61);
    uint64_t v164 = (os_log_s *)Logger.logObject.getter(v163);
    os_log_type_t v165 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v164, v165))
    {
      id v166 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)id v166 = 0;
      _os_log_impl( &dword_0,  v164,  v165,  "PlayMediaRCHFlowWrapper#sharedErrorDialogHandlingForPFSQTerminalErrors using special dialog for appNotInstalled code",  v166,  2u);
      swift_slowDealloc(v166, -1LL, -1LL);
    }

    ((void (*)(char *, uint64_t))v217)(v162, v61);
    uint64_t v221 = sub_1641C(0LL, (unint64_t *)&qword_285320, &OBJC_CLASS___INPlayMediaIntent_ptr);
    uint64_t v222 = &off_272BD0;
    *(void *)&__int128 v220 = v207;
    uint64_t v79 = v206[3];
    uint64_t v78 = v206[2];
    __chkstk_darwin(v221);
    uint64_t v131 = &v192 - 12;
    *(&v192 - 10) = v78;
    *(&v192 - 9) = v79;
    unint64_t v132 = 0x6E49746F4E707041LL;
    unint64_t v133 = 0xEF64656C6C617473LL;
    *(&v192 - 8) = 0x6E49746F4E707041LL;
    *(&v192 - sub_6C3C(v0 + 7) = 0xEF64656C6C617473LL;
    uint64_t v186 = v167;
    uint64_t v187 = v205;
    uint64_t v188 = v211;
    BOOL v189 = &v220;
    id v190 = 0LL;
    id v169 = v168;
    goto LABEL_36;
  }

  uint64_t v170 = v197;
  v213(v197, v212, v61);
  uint64_t v171 = v196;
  uint64_t v172 = v194(v196, v66, v62);
  uint64_t v173 = v62;
  uint64_t v174 = (os_log_s *)Logger.logObject.getter(v172);
  os_log_type_t v175 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v174, v175))
  {
    uint64_t v176 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
    uint64_t v215 = swift_slowAlloc(32LL, -1LL);
    *(void *)&__int128 v220 = v215;
    *(_DWORD *)uint64_t v176 = 136446210;
    uint64_t v214 = v176 + 4;
    uint64_t v177 = PlaybackCode.rawValue.getter();
    unint64_t v179 = v178;
    *(void *)&__int128 v218 = sub_6978(v177, v178, (uint64_t *)&v220);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v218, (char *)&v218 + 8);
    swift_bridgeObjectRelease(v179);
    v57(v171, v173);
    _os_log_impl( &dword_0,  v174,  v175,  "PlayMediaRCHFlowWrapper#sharedErrorDialogHandlingForPFSQTerminalErrors should NOT be here, PFSQ terminal errors an d tracking have gotten out of sync, this needs to be fixed! The unhandled playbackCode: %{public}s",  v176,  0xCu);
    uint64_t v180 = v215;
    swift_arrayDestroy(v215, 1LL, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v180, -1LL, -1LL);
    swift_slowDealloc(v176, -1LL, -1LL);

    id v181 = v197;
    uint64_t v182 = v216;
  }

  else
  {
    v57(v171, v173);

    id v181 = v170;
    uint64_t v182 = v61;
  }

  ((void (*)(char *, uint64_t))v217)(v181, v182);
  uint64_t v183 = sub_10430( &qword_2845E8,  (uint64_t (*)(uint64_t))&type metadata accessor for PlaybackCode,  (uint64_t)&protocol conformance descriptor for PlaybackCode);
  swift_allocError(v173, v183, 0LL, 0LL);
  uint64_t v185 = ((uint64_t (*)(uint64_t, void, uint8_t *))v64)( v184,  enum case for PlaybackCode.notSupported(_:),  v173);
  return swift_willThrow(v185);
}

uint64_t sub_1E3278(uint64_t a1)
{
  uint64_t v2 = sub_6C5C(&qword_289EA8);
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = *(void *)(v3 + 64);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v6 = sub_6C5C(&qword_287688);
  uint64_t v7 = __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v10 = static SiriEnvironmentWrapper.retrieve()(v7);
  uint64_t v11 = v10;
  if (v10)
  {
    uint64_t v12 = SiriEnvironment.currentRequest.getter(v10);
    uint64_t v13 = swift_release(v11);
    uint64_t v11 = CurrentRequest.rootRequestId.getter(v13);
    uint64_t v15 = v14;
    uint64_t v10 = swift_release(v12);
  }

  else
  {
    uint64_t v15 = 0LL;
  }

  static TaskPriority.utility.getter(v10);
  uint64_t v16 = type metadata accessor for TaskPriority(0LL);
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56LL))(v9, 0LL, 1LL, v16);
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))( (char *)&v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL),  a1,  v2);
  uint64_t v17 = *(unsigned __int8 *)(v3 + 80);
  uint64_t v18 = (v17 + 32) & ~v17;
  unint64_t v19 = (v4 + v18 + 7) & 0xFFFFFFFFFFFFFFF8LL;
  uint64_t v20 = swift_allocObject(&unk_2752F0, v19 + 16, v17 | 7);
  *(void *)(v20 + swift_weakDestroy(v0 + 16) = 0LL;
  *(void *)(v20 + 24) = 0LL;
  (*(void (**)(uint64_t, char *, uint64_t))(v3 + 32))(v20 + v18, v5, v2);
  uint64_t v21 = (uint64_t *)(v20 + v19);
  *uint64_t v21 = v11;
  v21[1] = v15;
  uint64_t v22 = sub_1DDA70((uint64_t)v9, (uint64_t)&unk_28DDC8, v20);
  return swift_release(v22);
}

uint64_t sub_1E3410()
{
  uint64_t v44 = type metadata accessor for PlaybackCode(0LL);
  uint64_t v0 = *(void *)(v44 - 8);
  __chkstk_darwin(v44);
  uint64_t v2 = (char *)&v44 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v3 = type metadata accessor for DomainCode(0LL);
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = __chkstk_darwin(v3);
  uint64_t v7 = (char *)&v44 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v8 = __chkstk_darwin(v5);
  uint64_t v10 = (char *)&v44 - v9;
  PlaybackCodeAndDescription.domainCode.getter(v8);
  (*(void (**)(char *, void, uint64_t))(v4 + 104))(v7, enum case for DomainCode.mediaRemoteCommand(_:), v3);
  uint64_t v11 = sub_10430( &qword_28DDB0,  (uint64_t (*)(uint64_t))&type metadata accessor for DomainCode,  (uint64_t)&protocol conformance descriptor for DomainCode);
  dispatch thunk of RawRepresentable.rawValue.getter(&v45, v3, v11);
  dispatch thunk of RawRepresentable.rawValue.getter(&v47, v3, v11);
  uint64_t v12 = v45;
  uint64_t v13 = v47;
  uint64_t v14 = *(void (**)(char *, uint64_t))(v4 + 8);
  v14(v7, v3);
  uint64_t v15 = ((uint64_t (*)(char *, uint64_t))v14)(v10, v3);
  if (v12 == v13) {
    return 0LL;
  }
  uint64_t v17 = PlaybackCodeAndDescription.domainCode.getter(v15);
  uint64_t v18 = DomainCode.rawValue.getter(v17);
  v14(v10, v3);
  uint64_t v45 = v18;
  v19._uint64_t countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter( &type metadata for Int,  &protocol witness table for Int);
  object = v19._object;
  uint64_t v45 = 40LL;
  unint64_t v46 = 0xE100000000000000LL;
  String.append(_:)(v19);
  swift_bridgeObjectRelease(object);
  unint64_t v21 = v46;
  swift_bridgeObjectRetain(v46);
  v22._uint64_t countAndFlagsBits = 41LL;
  v22._object = (void *)0xE100000000000000LL;
  String.append(_:)(v22);
  uint64_t v23 = swift_bridgeObjectRelease(v21);
  uint64_t v25 = v45;
  unint64_t v24 = v46;
  PlaybackCodeAndDescription.playbackCode.getter(v23);
  Swift::Int v26 = PlaybackCode.encode()();
  (*(void (**)(char *, uint64_t))(v0 + 8))(v2, v44);
  uint64_t v45 = v26;
  v27._uint64_t countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter( &type metadata for Int,  &protocol witness table for Int);
  uint64_t v28 = v27._object;
  uint64_t v45 = 40LL;
  unint64_t v46 = 0xE100000000000000LL;
  String.append(_:)(v27);
  swift_bridgeObjectRelease(v28);
  unint64_t v29 = v46;
  swift_bridgeObjectRetain(v46);
  v30._uint64_t countAndFlagsBits = 41LL;
  v30._object = (void *)0xE100000000000000LL;
  String.append(_:)(v30);
  swift_bridgeObjectRelease(v29);
  uint64_t v31 = v45;
  uint64_t v32 = (void *)v46;
  uint64_t v45 = v25;
  unint64_t v46 = v24;
  swift_bridgeObjectRetain(v24);
  v33._uint64_t countAndFlagsBits = v31;
  v33._object = v32;
  String.append(_:)(v33);
  swift_bridgeObjectRelease(v32);
  uint64_t v34 = swift_bridgeObjectRelease(v24);
  uint64_t v36 = v45;
  unint64_t v35 = v46;
  uint64_t v37 = PlaybackCodeAndDescription.errorDescription.getter(v34);
  os_log_type_t v39 = v38;
  uint64_t v45 = v36;
  unint64_t v46 = v35;
  swift_bridgeObjectRetain(v35);
  v40._uint64_t countAndFlagsBits = v37;
  v40._object = v39;
  String.append(_:)(v40);
  swift_bridgeObjectRelease(v35);
  swift_bridgeObjectRelease(v39);
  uint64_t v41 = v45;
  uint64_t v42 = (void *)v46;
  uint64_t v45 = 0LL;
  unint64_t v46 = 0xE000000000000000LL;
  _StringGuts.grow(_:)(32LL);
  swift_bridgeObjectRelease(v46);
  uint64_t v45 = 0xD00000000000001ELL;
  unint64_t v46 = 0x8000000000223B50LL;
  v43._uint64_t countAndFlagsBits = v41;
  v43._object = v42;
  String.append(_:)(v43);
  swift_bridgeObjectRelease(v42);
  return v45;
}

uint64_t sub_1E3748()
{
  uint64_t v1 = sub_6C5C(&qword_289EA8);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 32) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = (*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8LL;
  swift_unknownObjectRelease(*(void *)(v0 + 16));
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_bridgeObjectRelease(*(void *)(v0 + v6 + 8));
  return swift_deallocObject(v0, v6 + 16, v5);
}

uint64_t sub_1E37E0(uint64_t a1)
{
  uint64_t v4 = *(void *)(sub_6C5C(&qword_289EA8) - 8);
  unint64_t v5 = (*(unsigned __int8 *)(v4 + 80) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v6 = *(void *)(v1 + 16);
  uint64_t v7 = *(void *)(v1 + 24);
  uint64_t v8 = v1 + v5;
  uint64_t v9 = (uint64_t *)(v1 + ((*(void *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8LL));
  uint64_t v10 = *v9;
  uint64_t v11 = v9[1];
  uint64_t v12 = (void *)swift_task_alloc(dword_28DDC4);
  *(void *)(v2 + swift_weakDestroy(v0 + 16) = v12;
  *uint64_t v12 = v2;
  v12[1] = sub_3B08C;
  return sub_1DD534(a1, v6, v7, v8, v10, v11);
}

uint64_t sub_1E3890()
{
  return swift_deallocObject(v0, 32LL, 7LL);
}

uint64_t sub_1E38B4(uint64_t a1)
{
  uint64_t v4 = *(int **)(v1 + 16);
  unint64_t v5 = (void *)swift_task_alloc(dword_28DDD4);
  *(void *)(v2 + swift_weakDestroy(v0 + 16) = v5;
  *unint64_t v5 = v2;
  v5[1] = sub_11C64;
  return ((uint64_t (*)(uint64_t, int *))((char *)&dword_28DDD0 + dword_28DDD0))(a1, v4);
}

uint64_t sub_1E3928()
{
  uint64_t v1 = *(void *)(sub_6C5C(&qword_289EA8) - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 16LL) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = (uint64_t *)(v0 + ((*(void *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8LL));
  return sub_1E07B8(v0 + v2, *v3, v3[1]);
}

uint64_t sub_1E3974()
{
  uint64_t v1 = sub_6C5C(&qword_289EA8);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = (*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8LL;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_bridgeObjectRelease(*(void *)(v0 + v6 + 8));
  return swift_deallocObject(v0, v6 + 16, v5);
}

uint64_t sub_1E39F0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = *(void *)(sub_6C5C(&qword_289EA8) - 8);
  unint64_t v8 = (*(unsigned __int8 *)(v7 + 80) + 16LL) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  uint64_t v9 = (uint64_t *)(v3 + ((*(void *)(v7 + 64) + v8 + 7) & 0xFFFFFFFFFFFFFFF8LL));
  return sub_1E0A2C(a1, a2, a3, (void *)(v3 + v8), *v9, v9[1]);
}

uint64_t sub_1E3A60()
{
  uint64_t v1 = sub_6C5C(&qword_289EA8);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return swift_deallocObject(v0, v5, v6);
}

uint64_t sub_1E3AC8()
{
  uint64_t v1 = *(void *)(sub_6C5C(&qword_28DDB8) - 8);
  uint64_t v2 = *(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = (v2 + 24) & ~v2;
  uint64_t v4 = *(void *)(v1 + 64);
  swift_release(*(void *)(v0 + 16));
  uint64_t v5 = sub_6C5C(&qword_289EA8);
  uint64_t v6 = *(void *)(v5 - 8);
  return swift_deallocObject(v0, v3 + v4, v2 | 7);
}

uint64_t sub_1E3B70()
{
  uint64_t v1 = *(void *)(sub_6C5C(&qword_28DDB8) - 8);
  uint64_t v2 = *(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = (v2 + 16) & ~v2;
  uint64_t v4 = *(void *)(v1 + 64);
  uint64_t v5 = sub_6C5C(&qword_289EA8);
  uint64_t v6 = *(void *)(v5 - 8);
  return swift_deallocObject(v0, v3 + v4, v2 | 7);
}

uint64_t sub_1E3C0C()
{
  return swift_deallocObject(v0, 24LL, 7LL);
}

uint64_t sub_1E3C34()
{
  swift_release(*(void *)(v0 + 40));
  swift_release(*(void *)(v0 + 56));
  return swift_deallocObject(v0, 64LL, 7LL);
}

uint64_t sub_1E3C7C()
{
  uint64_t v1 = type metadata accessor for PlaybackCodeAndDescription(0LL);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = (*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8LL;
  unint64_t v7 = (v6 + 15) & 0xFFFFFFFFFFFFFFF8LL;
  unint64_t v8 = (v7 + 15) & 0xFFFFFFFFFFFFFFF8LL;
  unint64_t v9 = (v8 + 15) & 0xFFFFFFFFFFFFFFF8LL;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_release(*(void *)(v0 + v6));
  swift_release(*(void *)(v0 + v7));

  swift_release(*(void *)(v0 + v9 + 8));
  return swift_deallocObject(v0, v9 + 16, v5);
}

uint64_t sub_1E3D34(uint64_t a1)
{
  uint64_t v3 = *(void *)(type metadata accessor for PlaybackCodeAndDescription(0LL) - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 16LL) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  unint64_t v5 = (*(void *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8LL;
  return sub_1DC0F4( a1,  v1 + v4,  *(void *)(v1 + v5),  *(void *)(v1 + ((v5 + 15) & 0xFFFFFFFFFFFFFFF8LL)),  *(void **)(v1 + ((((v5 + 15) & 0xFFFFFFFFFFFFFFF8LL) + 15) & 0xFFFFFFFFFFFFFFF8LL)),  *(void *)(v1 + ((((((v5 + 15) & 0xFFFFFFFFFFFFFFF8LL) + 15) & 0xFFFFFFFFFFFFFFF8LL) + 15) & 0xFFFFFFFFFFFFFFF8LL)),  *(void *)(v1 + ((((((v5 + 15) & 0xFFFFFFFFFFFFFFF8LL) + 15) & 0xFFFFFFFFFFFFFFF8LL) + 15) & 0xFFFFFFFFFFFFFFF8LL)
                     + 8));
}

uint64_t sub_1E3DAC()
{
  uint64_t v1 = type metadata accessor for PlaybackCodeAndDescription(0LL);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return swift_deallocObject(v0, v5, v6);
}

uint64_t sub_1E3E0C(void (*a1)(char *), uint64_t a2)
{
  uint64_t v5 = *(unsigned __int8 *)(*(void *)(type metadata accessor for PlaybackCodeAndDescription(0LL) - 8) + 80LL);
  return sub_1DC7CC(a1, a2, v2 + ((v5 + 16) & ~v5));
}

uint64_t sub_1E3E5C()
{
  swift_release(*(void *)(v0 + 32));
  swift_release(*(void *)(v0 + 40));
  swift_release(*(void *)(v0 + 48));
  return swift_deallocObject(v0, 56LL, 7LL);
}

uint64_t sub_1E3E98(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_6C5C(&qword_28DDB8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40LL))(a2, a1, v4);
  return a2;
}

uint64_t sub_1E3EE0()
{
  uint64_t v1 = type metadata accessor for PlaybackCodeAndDescription(0LL);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 24) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = (*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8LL;
  unint64_t v7 = (v6 + 15) & 0xFFFFFFFFFFFFFFF8LL;
  unint64_t v8 = (v7 + 15) & 0xFFFFFFFFFFFFFFF8LL;
  swift_release(*(void *)(v0 + 16));
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_release(*(void *)(v0 + v6));

  swift_release(*(void *)(v0 + v8 + 8));
  return swift_deallocObject(v0, v8 + 16, v5);
}

uint64_t sub_1E3F9C()
{
  uint64_t v1 = *(void *)(type metadata accessor for PlaybackCodeAndDescription(0LL) - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 24LL) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  unint64_t v3 = (*(void *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8LL;
  return sub_1DC898( *(void *)(v0 + 16),  v0 + v2,  *(void *)(v0 + v3),  *(void **)(v0 + ((v3 + 15) & 0xFFFFFFFFFFFFFFF8LL)),  *(void *)(v0 + ((((v3 + 15) & 0xFFFFFFFFFFFFFFF8LL) + 15) & 0xFFFFFFFFFFFFFFF8LL)),  *(void *)(v0 + ((((v3 + 15) & 0xFFFFFFFFFFFFFFF8LL) + 15) & 0xFFFFFFFFFFFFFFF8LL) + 8));
}

uint64_t sub_1E3FFC()
{
  swift_release(*(void *)(v0 + 48));
  return swift_deallocObject(v0, 56LL, 7LL);
}

uint64_t sub_1E4038(uint64_t a1)
{
  return sub_33EB8(a1, (uint64_t (*)(uint64_t, void, void, void, void, void))sub_1DCA5C);
}

uint64_t sub_1E4044()
{
  return swift_deallocObject(v0, 40LL, 7LL);
}

uint64_t *PlayMedia.flowStrategy.unsafeMutableAddressor()
{
  if (qword_283988 != -1) {
    swift_once(&qword_283988, sub_1E4118);
  }
  return &static PlayMedia.flowStrategy;
}

uint64_t *PlayMedia.childFlowFactory.unsafeMutableAddressor()
{
  if (qword_283990 != -1) {
    swift_once(&qword_283990, sub_1E4264);
  }
  return &static PlayMedia.childFlowFactory;
}

uint64_t sub_1E4118()
{
  uint64_t v0 = type metadata accessor for FeatureFlagProvider(0LL);
  uint64_t v1 = *(void *)(v0 - 8);
  uint64_t v2 = __chkstk_darwin(v0);
  uint64_t v4 = (char *)v12 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v5 = static FeatureFlagProvider.shared.getter(v2);
  FeatureFlagProvider.isModernConcurrencyEnabled.getter(v5);
  (*(void (**)(char *, uint64_t))(v1 + 8))(v4, v0);
  if (qword_2838F0 != -1) {
    swift_once(&qword_2838F0, sub_14EB48);
  }
  uint64_t v6 = type metadata accessor for SiriKitTaskLoggingProvider(0LL);
  uint64_t v7 = static SiriKitTaskLoggingProvider.shared.getter(v6);
  static AceService.current.getter(v14);
  uint64_t v8 = type metadata accessor for PlayMediaFlowStrategy(0LL);
  uint64_t v9 = swift_allocObject(v8, 136LL, 7LL);
  sub_157C4((uint64_t)v14, (uint64_t)v13);
  sub_156E8((uint64_t)&static StringsBackedAppNameResolver.shared, (uint64_t)v12);
  swift_retain(v7);
  uint64_t v10 = sub_1E4564(v12, v7, v13, v9);
  sub_6C3C(v14);
  uint64_t result = swift_release(v7);
  static PlayMedia.flowStrategy = v10;
  return result;
}

uint64_t static PlayMedia.flowStrategy.getter()
{
  return sub_1E4304(&qword_283988, &static PlayMedia.flowStrategy);
}

uint64_t sub_1E4264()
{
  uint64_t v0 = type metadata accessor for FeatureFlagProvider(0LL);
  uint64_t v1 = *(void *)(v0 - 8);
  uint64_t v2 = __chkstk_darwin(v0);
  uint64_t v4 = (char *)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v5 = static FeatureFlagProvider.shared.getter(v2);
  FeatureFlagProvider.isModernConcurrencyEnabled.getter(v5);
  (*(void (**)(char *, uint64_t))(v1 + 8))(v4, v0);
  uint64_t result = sub_1951E8();
  static PlayMedia.childFlowFactory = result;
  return result;
}

uint64_t static PlayMedia.childFlowFactory.getter()
{
  return sub_1E4304(&qword_283990, &static PlayMedia.childFlowFactory);
}

uint64_t sub_1E4304(void *a1, void *a2)
{
  if (*a1 != -1LL) {
    swift_once();
  }
  return swift_retain(*a2);
}

uint64_t sub_1E433C()
{
  uint64_t v0 = type metadata accessor for FeatureFlagProvider(0LL);
  uint64_t v1 = *(void *)(v0 - 8);
  uint64_t v2 = __chkstk_darwin(v0);
  uint64_t v4 = (char *)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v5 = static FeatureFlagProvider.shared.getter(v2);
  FeatureFlagProvider.isModernConcurrencyEnabled.getter(v5);
  (*(void (**)(char *, uint64_t))(v1 + 8))(v4, v0);
  type metadata accessor for INPlayMediaIntentHandler(0LL);
  uint64_t result = INPlayMediaIntentHandler.__allocating_init()();
  static PlayMedia.intentHandler = result;
  return result;
}

uint64_t *PlayMedia.intentHandler.unsafeMutableAddressor()
{
  if (qword_283998 != -1) {
    swift_once(&qword_283998, sub_1E433C);
  }
  return &static PlayMedia.intentHandler;
}

id static PlayMedia.intentHandler.getter()
{
  if (qword_283998 != -1) {
    swift_once(&qword_283998, sub_1E433C);
  }
  swift_beginAccess(&static PlayMedia.intentHandler, v1, 0LL, 0LL);
  return (id)static PlayMedia.intentHandler;
}

void static PlayMedia.intentHandler.setter(uint64_t a1)
{
  if (qword_283998 != -1) {
    swift_once(&qword_283998, sub_1E433C);
  }
  swift_beginAccess(&static PlayMedia.intentHandler, v3, 1LL, 0LL);
  uint64_t v2 = (void *)static PlayMedia.intentHandler;
  static PlayMedia.intentHandler = a1;
}

uint64_t (*static PlayMedia.intentHandler.modify(uint64_t a1))(void)
{
  if (qword_283998 != -1) {
    swift_once(&qword_283998, sub_1E433C);
  }
  swift_beginAccess(&static PlayMedia.intentHandler, a1, 33LL, 0LL);
  return j__swift_endAccess;
}

ValueMetadata *type metadata accessor for PlayMedia()
{
  return &type metadata for PlayMedia;
}

uint64_t sub_1E4564(_OWORD *a1, uint64_t a2, void *a3, uint64_t a4)
{
  uint64_t v8 = type metadata accessor for FeatureFlagProvider(0LL);
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = __chkstk_darwin(v8);
  uint64_t v12 = (char *)&v33 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v10);
  uint64_t v14 = (char *)&v33 - v13;
  __int128 v15 = a1[3];
  void v40[2] = a1[2];
  v40[3] = v15;
  v40[4] = a1[4];
  __int128 v16 = a1[1];
  v40[0] = *a1;
  v40[1] = v16;
  uint64_t v17 = type metadata accessor for SiriKitTaskLoggingProvider(0LL);
  void v39[3] = v17;
  v39[4] = &protocol witness table for SiriKitTaskLoggingProvider;
  v39[0] = a2;
  *(void *)(a4 + swift_weakDestroy(v0 + 16) = _swiftEmptyArrayStorage;
  *(_OWORD *)(a4 + 24) = xmmword_214CA0;
  sub_157C4((uint64_t)a3, (uint64_t)&v36);
  int v18 = CATDefaultMode;
  uint64_t v19 = type metadata accessor for MorphunProvider(0LL);
  uint64_t v20 = static MorphunProvider.shared.getter(v19);
  static FeatureFlagProvider.shared.getter(v20);
  uint64_t v21 = type metadata accessor for CatService();
  uint64_t v22 = swift_allocObject(v21, 300LL, 7LL);
  (*(void (**)(char *, char *, uint64_t))(v9 + 16))(v12, v14, v8);
  sub_156E8((uint64_t)v40, (uint64_t)&v33);
  swift_retain(v20);
  uint64_t v23 = sub_10FF64(&v33, v18, v20, &v36, (uint64_t)v12, v22);
  swift_release(v20);
  (*(void (**)(char *, uint64_t))(v9 + 8))(v14, v8);
  swift_release(v20);
  *(void *)(a4 + 40) = v23;
  uint64_t v34 = type metadata accessor for StringsFileResolver(0LL);
  unint64_t v35 = (_UNKNOWN **)&protocol witness table for StringsFileResolver;
  sub_10974(&v33);
  uint64_t v24 = swift_retain(v23);
  uint64_t v25 = static StringsFileResolver.shared.getter(v24);
  uint64_t v26 = static SiriKitTaskLoggingProvider.shared.getter(v25);
  uint64_t v37 = v17;
  uint64_t v38 = &protocol witness table for SiriKitTaskLoggingProvider;
  *(void *)&__int128 v36 = v26;
  uint64_t v27 = sub_6C5C(&qword_28DE20);
  uint64_t v28 = (void *)swift_allocObject(v27, 120LL, 7LL);
  v28[13] = 0xD000000000000011LL;
  v28[14] = 0x800000000021D860LL;
  v28[2] = v23;
  sub_FF54(&v33, (uint64_t)(v28 + 3));
  sub_FF54(&v36, (uint64_t)(v28 + 8));
  *(void *)(a4 + 48) = v28;
  sub_157C4((uint64_t)v39, a4 + 56);
  uint64_t v34 = v8;
  unint64_t v35 = (_UNKNOWN **)&protocol witness table for FeatureFlagProvider;
  unint64_t v29 = sub_10974(&v33);
  static FeatureFlagProvider.shared.getter(v29);
  uint64_t v30 = type metadata accessor for SiriAudioOutputProvider();
  uint64_t v31 = swift_allocObject(v30, 56LL, 7LL);
  sub_FF54(&v33, v31 + 16);
  unint64_t v35 = &off_272868;
  uint64_t v34 = v30;
  *(void *)&__int128 v33 = v31;
  sub_6C3C(a3);
  sub_6C3C(v39);
  sub_15858(v40);
  sub_FF54(&v33, a4 + 96);
  return a4;
}

void destroy for CustomAppResolutionProvider(uint64_t a1)
{
}

uint64_t initializeWithCopy for CustomAppResolutionProvider(uint64_t a1, uint64_t a2)
{
  __int128 v4 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 24) = v4;
  (**(void (***)(void))(v4 - 8))();
  uint64_t v5 = *(void **)(a2 + 40);
  *(void *)(a1 + 40) = v5;
  id v6 = v5;
  return a1;
}

void *assignWithCopy for CustomAppResolutionProvider(void *a1, void *a2)
{
  __int128 v4 = (void *)a2[5];
  uint64_t v5 = (void *)a1[5];
  a1[5] = v4;
  id v6 = v4;

  return a1;
}

__n128 initializeWithTake for CustomAppResolutionProvider(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  __int128 v3 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + swift_weakDestroy(v0 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 3sub_6C3C(v0 + 2) = v3;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for CustomAppResolutionProvider(uint64_t a1, uint64_t a2)
{
  __int128 v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + swift_weakDestroy(v0 + 16) = v4;
  uint64_t v5 = *(void *)(a2 + 40);
  id v6 = *(void **)(a1 + 40);
  *(void *)(a1 + 3sub_6C3C(v0 + 2) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v5;

  return a1;
}

uint64_t storeEnumTagSinglePayload for CustomAppResolutionProvider(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 40) = 0LL;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(_BYTE *)(result + 48) = 1;
    }
  }

  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 24) = (a2 - 1);
      return result;
    }

    *(_BYTE *)(result + 48) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }

  return result;
}

ValueMetadata *type metadata accessor for CustomAppResolutionProvider()
{
  return &type metadata for CustomAppResolutionProvider;
}

uint64_t sub_1E49B4(uint64_t a1, uint64_t a2)
{
  return sub_1E49CC( a1,  a2,  (uint64_t (*)(uint64_t, uint64_t))&dispatch thunk of AppResolutionStateProviding.getRequestedApp());
}

uint64_t sub_1E49C0(uint64_t a1, uint64_t a2)
{
  return sub_1E49CC( a1,  a2,  (uint64_t (*)(uint64_t, uint64_t))&dispatch thunk of AppResolutionStateProviding.getSuggestedApp());
}

uint64_t sub_1E49CC(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t, uint64_t))
{
  uint64_t v5 = v3[3];
  uint64_t v6 = v3[4];
  sub_6EA8(v3, v5);
  return a3(v5, v6);
}

uint64_t sub_1E4A10()
{
  uint64_t v1 = v0[3];
  uint64_t v2 = v0[4];
  sub_6EA8(v0, v1);
  return dispatch thunk of AppResolutionStateProviding.getConfirmationResponse()(v1, v2);
}

uint64_t getEnumTagSinglePayload for MediaPlayerAttributes(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0LL;
  }
  if (a2 < 0xF9) {
    goto LABEL_17;
  }
  if (a2 + 7 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 7) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 7;
    }
  }

  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 7;
    }

    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 7;
    }
  }

uint64_t storeEnumTagSinglePayload for MediaPlayerAttributes(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  if (a3 + 7 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 7) >> 8 < 0xFF) {
    LODWORD(v4) = 1;
  }
  else {
    LODWORD(v4) = v3;
  }
  if (a3 >= 0xF9) {
    uint64_t v4 = v4;
  }
  else {
    uint64_t v4 = 0LL;
  }
  if (a2 <= 0xF8) {
    return ((uint64_t (*)(void))((char *)&loc_1E4B34 + 4 * byte_21B565[v4]))();
  }
  *a1 = a2 + 7;
  return ((uint64_t (*)(void))((char *)sub_1E4B68 + 4 * byte_21B560[v4]))();
}

uint64_t sub_1E4B68(uint64_t result)
{
  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1E4B70(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2) {
    JUMPOUT(0x1E4B78LL);
  }
  return result;
}

uint64_t sub_1E4B84(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2) {
    JUMPOUT(0x1E4B8CLL);
  }
  *(_BYTE *)__n128 result = a2 + 7;
  return result;
}

uint64_t sub_1E4B90(uint64_t result)
{
  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1E4B98(uint64_t result)
{
  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for MediaPlayerAttributes()
{
  return &type metadata for MediaPlayerAttributes;
}

unint64_t sub_1E4BB8()
{
  unint64_t result = qword_28DE28;
  if (!qword_28DE28)
  {
    unint64_t result = swift_getWitnessTable(&unk_21B6A0, &type metadata for MediaPlayerAttributes);
    atomic_store(result, (unint64_t *)&qword_28DE28);
  }

  return result;
}

void sub_1E4BFC(uint64_t a1, char a2)
{
  __asm { BR              X10 }

uint64_t sub_1E4C40(uint64_t a1)
{
  return swift_bridgeObjectRelease(0xEB00000000747361LL);
}

void sub_1E4CF4(uint64_t a1, char a2)
{
  __asm { BR              X10 }

Swift::Int sub_1E4D48()
{
  return Hasher._finalize()();
}

void sub_1E4E18(char *a1)
{
}

void sub_1E4E24()
{
}

void sub_1E4E30(uint64_t a1)
{
}

void sub_1E4E38(uint64_t a1)
{
}

unint64_t sub_1E4E40@<X0>(Swift::String *a1@<X0>, _BYTE *a2@<X8>)
{
  unint64_t result = sub_1E50AC(*a1);
  *a2 = result;
  return result;
}

uint64_t sub_1E4E6C()
{
  return ((uint64_t (*)(void))((char *)sub_1E4EA0 + 4 * byte_21B57A[*v0]))();
}

void sub_1E4EA0(void *a1@<X8>)
{
  *a1 = 0x4C676E6979616C70LL;
  a1[1] = 0xEB00000000747361LL;
}

void sub_1E4EC4(void *a1@<X8>)
{
  *a1 = 0x7473614C79616C70LL;
  a1[1] = 0xE800000000000000LL;
}

void sub_1E4EE0(void *a1@<X8>)
{
  *a1 = v1;
  a1[1] = 0xEB00000000747865LL;
}

void sub_1E4EF8(void *a1@<X8>)
{
  *a1 = 0x7478654E79616C70LL;
  a1[1] = 0xE800000000000000LL;
}

void sub_1E4F14(void *a1@<X8>)
{
  *a1 = 1954047342LL;
  a1[1] = 0xE400000000000000LL;
}

void sub_1E4F28(void *a1@<X8>)
{
  *a1 = 0x73756F6976657270LL;
  a1[1] = 0xE800000000000000LL;
}

void sub_1E4F44(void *a1@<X8>)
{
  *a1 = 0x64656D616ELL;
  a1[1] = 0xE500000000000000LL;
}

void sub_1E4F5C(void *a1@<X8>)
{
  *a1 = &off_26B828;
}

uint64_t sub_1E4F6C(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = sub_1E50F4();
  unint64_t v5 = sub_1E5138();
  unint64_t v6 = sub_1E517C();
  return static TerminalNodeBoundedSemanticValue<>.fromIntentNodeValue(_:)(a1, a2, v4, v5, v6);
}

unint64_t sub_1E4FD0()
{
  unint64_t result = qword_28DE30;
  if (!qword_28DE30)
  {
    uint64_t v1 = sub_45D50(&qword_28DE38);
    unint64_t result = swift_getWitnessTable(&protocol conformance descriptor for [A], v1);
    atomic_store(result, (unint64_t *)&qword_28DE30);
  }

  return result;
}

unint64_t sub_1E5020()
{
  unint64_t result = qword_28DE40;
  if (!qword_28DE40)
  {
    unint64_t result = swift_getWitnessTable(&unk_21B5C8, &type metadata for MediaPlayerAttributes);
    atomic_store(result, (unint64_t *)&qword_28DE40);
  }

  return result;
}

unint64_t sub_1E5068()
{
  unint64_t result = qword_28DE48;
  if (!qword_28DE48)
  {
    unint64_t result = swift_getWitnessTable(&unk_21B6E0, &type metadata for MediaPlayerAttributes);
    atomic_store(result, (unint64_t *)&qword_28DE48);
  }

  return result;
}

unint64_t sub_1E50AC(Swift::String string)
{
  object = string._object;
  v2._uint64_t countAndFlagsBits = string._countAndFlagsBits;
  v2._object = object;
  unint64_t v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_26B748, v2);
  swift_bridgeObjectRelease(object);
  if (v3 >= 8) {
    return 8LL;
  }
  else {
    return v3;
  }
}

unint64_t sub_1E50F4()
{
  unint64_t result = qword_28DE50;
  if (!qword_28DE50)
  {
    unint64_t result = swift_getWitnessTable(&unk_21B630, &type metadata for MediaPlayerAttributes);
    atomic_store(result, (unint64_t *)&qword_28DE50);
  }

  return result;
}

unint64_t sub_1E5138()
{
  unint64_t result = qword_28DE58;
  if (!qword_28DE58)
  {
    unint64_t result = swift_getWitnessTable(&unk_21B5F8, &type metadata for MediaPlayerAttributes);
    atomic_store(result, (unint64_t *)&qword_28DE58);
  }

  return result;
}

unint64_t sub_1E517C()
{
  unint64_t result = qword_28DE60;
  if (!qword_28DE60)
  {
    unint64_t result = swift_getWitnessTable(&unk_21B668, &type metadata for MediaPlayerAttributes);
    atomic_store(result, (unint64_t *)&qword_28DE60);
  }

  return result;
}

uint64_t sub_1E51C0(char a1)
{
  uint64_t v2 = type metadata accessor for DeviceCategory(0LL);
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = __chkstk_darwin(v2);
  unint64_t v6 = (char *)&v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v7 = __chkstk_darwin(v4);
  uint64_t v9 = (char *)&v18 - v8;
  uint64_t v10 = static DeviceCategory.keys.getter(v7);
  if ((a1 & 1) == 0)
  {
    uint64_t v11 = 0x7674656C707061LL;
    static DeviceCategory.appletv.getter();
    if (!*(void *)(v10 + 16)) {
      goto LABEL_9;
    }
    unint64_t v12 = sub_9A6AC((uint64_t)v9);
    if ((v13 & 1) == 0) {
      goto LABEL_9;
    }
LABEL_7:
    __int128 v15 = (uint64_t *)(*(void *)(v10 + 56) + 16 * v12);
    uint64_t v11 = *v15;
    swift_bridgeObjectRetain(v15[1]);
    goto LABEL_9;
  }

  uint64_t v11 = 0x69736976656C6574LL;
  static DeviceCategory.television.getter();
  if (!*(void *)(v10 + 16))
  {
    uint64_t v9 = v6;
    goto LABEL_9;
  }

  unint64_t v12 = sub_9A6AC((uint64_t)v6);
  uint64_t v9 = v6;
  if ((v14 & 1) != 0) {
    goto LABEL_7;
  }
LABEL_9:
  __n128 v16 = swift_bridgeObjectRelease(v10);
  (*(void (**)(char *, uint64_t, __n128))(v3 + 8))(v9, v2, v16);
  return v11;
}

uint64_t sub_1E5300@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  uint64_t v38 = a2;
  uint64_t v4 = type metadata accessor for Device(0LL);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)v32 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v8 = type metadata accessor for Logger(0LL);
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = __chkstk_darwin(v8);
  unint64_t v12 = (char *)v32 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v39 = a1;
  uint64_t v13 = Device.type.getter(v10);
  if (v14)
  {
    uint64_t v15 = v13;
    uint64_t v16 = v14;
    uint64_t v17 = (void *)sub_1E5F40();
    LOBYTE(v15) = sub_881D0(v15, v16, v17);
    swift_bridgeObjectRelease(v16);
    swift_bridgeObjectRelease(v17);
    if ((v15 & 1) != 0) {
      return (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v5 + 56))(v38, 1LL, 1LL, v4);
    }
    uint64_t v31 = v38;
    (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v38, v39, v4);
  }

  else
  {
    if (qword_283888 != -1) {
      swift_once(&qword_283888, sub_BFC5C);
    }
    uint64_t v19 = sub_6960(v8, (uint64_t)qword_2969C8);
    (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v12, v19, v8);
    uint64_t v37 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v5 + 16);
    uint64_t v20 = v37(v7, v39, v4);
    uint64_t v21 = (os_log_s *)Logger.logObject.getter(v20);
    os_log_type_t v22 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v21, v22))
    {
      os_log_t v35 = v21;
      uint64_t v23 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
      uint64_t v34 = swift_slowAlloc(32LL, -1LL);
      uint64_t v42 = v34;
      uint64_t v36 = v2;
      *(_DWORD *)uint64_t v23 = 136446210;
      v32[1] = v23 + 4;
      __int128 v33 = v23;
      unint64_t v24 = sub_1E5EF8();
      uint64_t v25 = dispatch thunk of CustomStringConvertible.description.getter(v4, v24);
      unint64_t v27 = v26;
      uint64_t v40 = sub_6978(v25, v26, &v42);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v40, &v41);
      swift_bridgeObjectRelease(v27);
      (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
      uint64_t v21 = v35;
      os_log_type_t v28 = v22;
      unint64_t v29 = v33;
      _os_log_impl(&dword_0, v35, v28, "Cannot get deviceType for device: %{public}s. Skipping pruning", v33, 0xCu);
      uint64_t v30 = v34;
      swift_arrayDestroy(v34, 1LL, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v30, -1LL, -1LL);
      swift_slowDealloc(v29, -1LL, -1LL);
    }

    else
    {
      (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    }

    (*(void (**)(char *, uint64_t))(v9 + 8))(v12, v8);
    uint64_t v31 = v38;
    v37(v38, v39, v4);
  }

  return (*(uint64_t (**)(char *, void, uint64_t, uint64_t))(v5 + 56))(v31, 0LL, 1LL, v4);
}

uint64_t sub_1E560C@<X0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v100 = a3;
  uint64_t v8 = type metadata accessor for Device(0LL);
  uint64_t v104 = *(void *)(v8 - 8);
  uint64_t v9 = __chkstk_darwin(v8);
  os_log_type_t v99 = (char *)&v95 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v9);
  unint64_t v12 = (char *)&v95 - v11;
  uint64_t v103 = type metadata accessor for Logger(0LL);
  uint64_t v105 = *(void *)(v103 - 8);
  uint64_t v13 = __chkstk_darwin(v103);
  uint64_t v101 = (char *)&v95 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v15 = __chkstk_darwin(v13);
  uint64_t v97 = (char *)&v95 - v16;
  uint64_t v17 = __chkstk_darwin(v15);
  uint64_t v98 = (char *)&v95 - v18;
  uint64_t v19 = Device.name.getter(v17);
  if (!v20) {
    goto LABEL_14;
  }
  uint64_t v21 = v19;
  uint64_t v22 = v20;
  uint64_t v23 = swift_bridgeObjectRetain(v20);
  uint64_t v102 = a1;
  uint64_t v24 = Device.roomName.getter(v23);
  if (v25)
  {
    uint64_t v26 = v25;
    if (v21 == v24 && v22 == v25)
    {
      swift_bridgeObjectRelease_n(v22, 2LL);
      uint64_t v22 = v26;
LABEL_8:
      uint64_t v19 = swift_bridgeObjectRelease(v22);
      a1 = v102;
      goto LABEL_14;
    }

    char v27 = _stringCompareWithSmolCheck(_:_:expecting:)(v21, v22);
    swift_bridgeObjectRelease(v22);
    swift_bridgeObjectRelease(v26);
    if ((v27 & 1) != 0) {
      goto LABEL_8;
    }
  }

  else
  {
    swift_bridgeObjectRelease(v22);
  }

  char v28 = sub_881D0(v21, v22, a2);
  uint64_t v19 = swift_bridgeObjectRelease(v22);
  a1 = v102;
  if ((v28 & 1) == 0)
  {
LABEL_14:
    uint64_t v46 = Device.roomName.getter(v19);
    uint64_t v48 = v104;
    uint64_t v49 = a1;
    if (v47)
    {
      uint64_t v50 = v46;
      unint64_t v51 = v47;
      char v52 = sub_881D0(v46, v47, a2);
      uint64_t v53 = v100;
      if ((v52 & 1) != 0 && *(void *)(v100 + 16))
      {
        swift_bridgeObjectRetain(v51);
        unint64_t v54 = sub_9A9F8(v50, v51);
        if ((v55 & 1) != 0)
        {
          uint64_t v56 = *(void *)(*(void *)(v53 + 56) + 8 * v54);
          swift_bridgeObjectRetain(v56);
          swift_bridgeObjectRelease(v51);
          BOOL v57 = sub_18B4E0(v56);
          swift_bridgeObjectRelease(v56);
          if (v57)
          {
            uint64_t v100 = a4;
            uint64_t v96 = v4;
            if (qword_283888 != -1) {
              swift_once(&qword_283888, sub_BFC5C);
            }
            uint64_t v58 = v103;
            uint64_t v59 = sub_6960(v103, (uint64_t)qword_2969C8);
            uint64_t v60 = v105;
            uint64_t v61 = v97;
            (*(void (**)(char *, uint64_t, uint64_t))(v105 + 16))(v97, v59, v58);
            uint64_t v62 = swift_bridgeObjectRetain(v51);
            uint64_t v63 = (os_log_s *)Logger.logObject.getter(v62);
            os_log_type_t v64 = static os_log_type_t.default.getter();
            if (os_log_type_enabled(v63, v64))
            {
              uint64_t v65 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
              uint64_t v66 = swift_slowAlloc(32LL, -1LL);
              uint64_t v108 = v66;
              uint64_t v102 = v49;
              uint64_t v95 = v8;
              *(_DWORD *)uint64_t v65 = 136315138;
              swift_bridgeObjectRetain(v51);
              uint64_t v106 = sub_6978(v50, v51, &v108);
              uint64_t v67 = v100;
              uint64_t v8 = v95;
              uint64_t v49 = v102;
              UnsafeMutableRawBufferPointer.copyMemory(from:)(&v106, &v107);
              swift_bridgeObjectRelease_n(v51, 3LL);
              _os_log_impl( &dword_0,  v63,  v64,  "All devices in room: %s are TVs and the user explicitly asked for the room in the intent. Skipping pruning",  v65,  0xCu);
              swift_arrayDestroy(v66, 1LL, (char *)&type metadata for Any + 8);
              uint64_t v68 = v66;
              uint64_t v48 = v104;
              swift_slowDealloc(v68, -1LL, -1LL);
              swift_slowDealloc(v65, -1LL, -1LL);

              (*(void (**)(char *, uint64_t))(v105 + 8))(v61, v103);
            }

            else
            {

              swift_bridgeObjectRelease_n(v51, 2LL);
              (*(void (**)(char *, uint64_t))(v60 + 8))(v61, v103);
              uint64_t v67 = v100;
            }

            (*(void (**)(uint64_t, uint64_t, uint64_t))(v48 + 16))(v67, v49, v8);
            id v76 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v48 + 56);
            uint64_t v77 = v67;
            goto LABEL_37;
          }
        }

        else
        {
          swift_bridgeObjectRelease(v51);
        }
      }

      uint64_t v46 = swift_bridgeObjectRelease(v51);
    }

    uint64_t v70 = Device.type.getter(v46);
    uint64_t v72 = v105;
    if (v71)
    {
      uint64_t v73 = v70;
      uint64_t v74 = v71;
      uint64_t v75 = (void *)sub_1E5F40();
      LOBYTE(v73) = sub_881D0(v73, v74, v75);
      swift_bridgeObjectRelease(v74);
      swift_bridgeObjectRelease(v75);
      if ((v73 & 1) != 0)
      {
        id v76 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v48 + 56);
        uint64_t v77 = a4;
        uint64_t v78 = 1LL;
        return v76(v77, v78, 1LL, v8);
      }

      (*(void (**)(uint64_t, uint64_t, uint64_t))(v48 + 16))(a4, v49, v8);
      id v76 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v48 + 56);
      uint64_t v77 = a4;
    }

    else
    {
      uint64_t v79 = v49;
      uint64_t v100 = a4;
      if (qword_283888 != -1) {
        swift_once(&qword_283888, sub_BFC5C);
      }
      uint64_t v80 = v103;
      uint64_t v81 = sub_6960(v103, (uint64_t)qword_2969C8);
      (*(void (**)(char *, uint64_t, uint64_t))(v72 + 16))(v101, v81, v80);
      unint64_t v82 = v99;
      uint64_t v83 = v79;
      uint64_t v98 = *(char **)(v48 + 16);
      uint64_t v84 = ((uint64_t (*)(char *, uint64_t, uint64_t))v98)(v99, v79, v8);
      char v85 = (os_log_s *)Logger.logObject.getter(v84);
      os_log_type_t v86 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v85, v86))
      {
        uint64_t v87 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
        uint64_t v88 = swift_slowAlloc(32LL, -1LL);
        uint64_t v96 = v4;
        uint64_t v89 = v88;
        uint64_t v108 = v88;
        *(_DWORD *)uint64_t v87 = 136446210;
        uint64_t v102 = v83;
        unint64_t v90 = sub_1E5EF8();
        uint64_t v91 = dispatch thunk of CustomStringConvertible.description.getter(v8, v90);
        unint64_t v93 = v92;
        uint64_t v106 = sub_6978(v91, v92, &v108);
        uint64_t v83 = v102;
        uint64_t v48 = v104;
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v106, &v107);
        swift_bridgeObjectRelease(v93);
        (*(void (**)(char *, uint64_t))(v48 + 8))(v82, v8);
        _os_log_impl(&dword_0, v85, v86, "Cannot get deviceType for device: %{public}s. Skipping pruning", v87, 0xCu);
        swift_arrayDestroy(v89, 1LL, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v89, -1LL, -1LL);
        swift_slowDealloc(v87, -1LL, -1LL);

        (*(void (**)(char *, uint64_t))(v105 + 8))(v101, v103);
      }

      else
      {
        (*(void (**)(char *, uint64_t))(v48 + 8))(v82, v8);

        (*(void (**)(char *, uint64_t))(v72 + 8))(v101, v103);
      }

      uint64_t v94 = v100;
      ((void (*)(uint64_t, uint64_t, uint64_t))v98)(v100, v83, v8);
      id v76 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v48 + 56);
      uint64_t v77 = v94;
    }

unint64_t sub_1E5EF8()
{
  unint64_t result = qword_28DE68;
  if (!qword_28DE68)
  {
    uint64_t v1 = type metadata accessor for Device(255LL);
    unint64_t result = swift_getWitnessTable(&protocol conformance descriptor for Device, v1);
    atomic_store(result, &qword_28DE68);
  }

  return result;
}

uint64_t sub_1E5F40()
{
  uint64_t v0 = type metadata accessor for DeviceCategory(0LL);
  uint64_t v1 = *(void *)(v0 - 8);
  uint64_t v2 = __chkstk_darwin(v0);
  uint64_t v4 = (char *)&v24 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v2);
  uint64_t v6 = (char *)&v24 - v5;
  uint64_t v7 = sub_6C5C(&qword_284018);
  uint64_t v8 = swift_allocObject(v7, 64LL, 7LL);
  *(_OWORD *)(v8 + swift_weakDestroy(v0 + 16) = xmmword_2160E0;
  uint64_t v9 = ((uint64_t (*)(void))static DeviceCategory.keys.getter)();
  static DeviceCategory.appletv.getter();
  if (*(void *)(v9 + 16) && (unint64_t v10 = sub_9A6AC((uint64_t)v6), (v11 & 1) != 0))
  {
    unint64_t v12 = (uint64_t *)(*(void *)(v9 + 56) + 16 * v10);
    uint64_t v14 = *v12;
    unint64_t v13 = v12[1];
    swift_bridgeObjectRetain(v13);
  }

  else
  {
    unint64_t v13 = 0xE700000000000000LL;
    uint64_t v14 = 0x7674656C707061LL;
  }

  unint64_t v15 = 0xEA00000000006E6FLL;
  swift_bridgeObjectRelease(v9);
  uint64_t v16 = *(uint64_t (**)(char *, uint64_t))(v1 + 8);
  uint64_t v17 = v16(v6, v0);
  *(void *)(v8 + 3sub_6C3C(v0 + 2) = v14;
  *(void *)(v8 + 40) = v13;
  uint64_t v18 = static DeviceCategory.keys.getter(v17);
  static DeviceCategory.television.getter();
  if (*(void *)(v18 + 16) && (unint64_t v19 = sub_9A6AC((uint64_t)v4), (v20 & 1) != 0))
  {
    uint64_t v21 = (uint64_t *)(*(void *)(v18 + 56) + 16 * v19);
    uint64_t v22 = *v21;
    unint64_t v15 = v21[1];
    swift_bridgeObjectRetain(v15);
  }

  else
  {
    uint64_t v22 = 0x69736976656C6574LL;
  }

  swift_bridgeObjectRelease(v18);
  v16(v4, v0);
  *(void *)(v8 + 48) = v22;
  *(void *)(v8 + 56) = v15;
  return v8;
}

uint64_t sub_1E60D4( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v9 = v8;
  uint64_t v39 = a5;
  uint64_t v40 = a8;
  uint64_t v37 = a7;
  uint64_t v38 = a1;
  uint64_t v14 = type metadata accessor for Logger(0LL);
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v17 = (char *)&v36 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  if (qword_283888 != -1) {
    swift_once(&qword_283888, sub_BFC5C);
  }
  uint64_t v18 = sub_6960(v14, (uint64_t)qword_2969C8);
  uint64_t v19 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v15 + 16))(v17, v18, v14);
  char v20 = (os_log_s *)Logger.logObject.getter(v19);
  os_log_type_t v21 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v20, v21))
  {
    uint64_t v22 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
    uint64_t v36 = a2;
    uint64_t v23 = a6;
    uint64_t v24 = a3;
    uint64_t v25 = a4;
    uint64_t v26 = v9;
    char v27 = v22;
    *(_WORD *)uint64_t v22 = 0;
    _os_log_impl(&dword_0, v20, v21, "ResponseFactory+Utilities#makeResponseOutput...", v22, 2u);
    char v28 = v27;
    uint64_t v9 = v26;
    a4 = v25;
    a3 = v24;
    a6 = v23;
    a2 = v36;
    swift_slowDealloc(v28, -1LL, -1LL);
  }

  uint64_t v29 = (*(uint64_t (**)(char *, uint64_t))(v15 + 8))(v17, v14);
  uint64_t v30 = static SiriEnvironmentWrapper.retrieve()(v29);
  if (!v30)
  {
    type metadata accessor for SiriEnvironment(0LL);
    uint64_t v30 = static SiriEnvironment.default.getter();
  }

  uint64_t v31 = v30;
  uint64_t v32 = type metadata accessor for SiriEnvironment(0LL);
  __chkstk_darwin(v32);
  uint64_t v33 = v40;
  *(&v36 - 10) = v37;
  *(&v36 - 9) = v33;
  uint64_t v34 = v39;
  *(&v36 - 8) = v31;
  *(&v36 - sub_6C3C(v0 + 7) = v34;
  *(&v36 - 6) = a6;
  *(&v36 - 5) = v9;
  *(&v36 - 4) = v38;
  *(&v36 - 3) = a2;
  *(&v36 - sub_6C3C(v0 + 2) = a3;
  *(&v36 - 1) = a4;
  static SiriEnvironment.withTaskLocalEnvironment<A>(_:_:)(v31, sub_1E6728);
  return swift_release(v31);
}

uint64_t sub_1E62EC( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6, void *a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v77 = a3;
  uint64_t v74 = a6;
  uint64_t v75 = a7;
  uint64_t v73 = a5;
  uint64_t v68 = a4;
  uint64_t v76 = a2;
  uint64_t v12 = type metadata accessor for ResponseFactoryOutputContext(0LL);
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = __chkstk_darwin(v12);
  uint64_t v78 = (uint64_t)v59 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v72 = a9;
  uint64_t v16 = *(void *)(a9 - 8);
  uint64_t v70 = v15;
  uint64_t v71 = v16;
  __chkstk_darwin(v14);
  uint64_t v67 = v17;
  unint64_t v69 = (char *)v59 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v18 = type metadata accessor for ResponseMode(0LL);
  uint64_t v64 = *(void *)(v18 - 8);
  uint64_t v65 = v18;
  __chkstk_darwin(v18);
  char v20 = (char *)v59 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v21 = type metadata accessor for Logger(0LL);
  uint64_t v22 = *(void *)(v21 - 8);
  __chkstk_darwin(v21);
  uint64_t v24 = (char *)v59 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  if (qword_283888 != -1) {
    swift_once(&qword_283888, sub_BFC5C);
  }
  uint64_t v66 = a10;
  uint64_t v25 = sub_6960(v21, (uint64_t)qword_2969C8);
  (*(void (**)(char *, uint64_t, uint64_t))(v22 + 16))(v24, v25, v21);
  uint64_t v26 = swift_retain_n(a1, 2LL);
  uint64_t v27 = v22;
  char v28 = (os_log_s *)Logger.logObject.getter(v26);
  os_log_type_t v29 = static os_log_type_t.info.getter(v28);
  if (os_log_type_enabled(v28, v29))
  {
    uint64_t v61 = v27;
    uint64_t v30 = swift_slowAlloc(12LL, -1LL);
    uint64_t v62 = v13;
    uint64_t v31 = (uint8_t *)v30;
    uint64_t v32 = swift_slowAlloc(32LL, -1LL);
    uint64_t v60 = v32;
    uint64_t v81 = v32;
    uint64_t v63 = a8;
    *(_DWORD *)uint64_t v31 = 136315138;
    v59[1] = v31 + 4;
    uint64_t v33 = SiriEnvironment.currentRequest.getter(v32);
    CurrentRequest.responseMode.getter(v33);
    uint64_t v34 = swift_release(v33);
    uint64_t v35 = ResponseMode.description.getter(v34);
    v59[0] = a1;
    unint64_t v37 = v36;
    (*(void (**)(char *, uint64_t))(v64 + 8))(v20, v65);
    uint64_t v79 = sub_6978(v35, v37, &v81);
    a8 = v63;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v79, &v80);
    swift_release_n(v59[0], 2LL);
    swift_bridgeObjectRelease(v37);
    _os_log_impl(&dword_0, v28, v29, "ResponseFactory+Utilities#makeResponseOutput with responseMode = %s", v31, 0xCu);
    uint64_t v38 = v60;
    swift_arrayDestroy(v60, 1LL, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v38, -1LL, -1LL);
    uint64_t v39 = v31;
    uint64_t v13 = v62;
    swift_slowDealloc(v39, -1LL, -1LL);

    (*(void (**)(char *, uint64_t))(v61 + 8))(v24, v21);
  }

  else
  {

    swift_release_n(a1, 2LL);
    (*(void (**)(char *, uint64_t))(v27 + 8))(v24, v21);
  }

  uint64_t v41 = v71;
  uint64_t v40 = v72;
  uint64_t v42 = v69;
  (*(void (**)(char *, uint64_t, uint64_t))(v71 + 16))(v69, v68, v72);
  sub_1EA0D0(a8, v78);
  uint64_t v43 = *(unsigned __int8 *)(v41 + 80);
  uint64_t v44 = (v43 + 32) & ~v43;
  unint64_t v45 = (v67 + v44 + 7) & 0xFFFFFFFFFFFFFFF8LL;
  unint64_t v46 = (v45 + 15) & 0xFFFFFFFFFFFFFFF8LL;
  unint64_t v47 = (v46 + 15) & 0xFFFFFFFFFFFFFFF8LL;
  uint64_t v48 = *(unsigned __int8 *)(v13 + 80);
  uint64_t v49 = (v48 + v47 + 8) & ~v48;
  uint64_t v50 = swift_allocObject(&unk_275948, v49 + v70, v43 | v48 | 7);
  uint64_t v51 = v66;
  *(void *)(v50 + swift_weakDestroy(v0 + 16) = v40;
  *(void *)(v50 + 24) = v51;
  (*(void (**)(uint64_t, char *, uint64_t))(v41 + 32))(v50 + v44, v42, v40);
  uint64_t v52 = v73;
  *(void *)(v50 + v45) = v73;
  unint64_t v54 = v74;
  uint64_t v53 = v75;
  *(void *)(v50 + v46) = v74;
  *(void *)(v50 + v4sub_6C3C(v0 + 7) = v53;
  sub_1EA404(v78, v50 + v49);
  swift_retain(v52);
  id v55 = v54;
  id v56 = v53;
  uint64_t v57 = sub_6C5C((uint64_t *)&unk_286C60);
  static Task<>.withCallback<A>(_:operation:)(v76, v77, &unk_28DE78, v50, v57);
  return swift_release(v50);
}

uint64_t sub_1E6728()
{
  return sub_1E62EC( *(void *)(v0 + 32),  *(void *)(v0 + 40),  *(void *)(v0 + 48),  *(void *)(v0 + 56),  *(void *)(v0 + 64),  *(void **)(v0 + 72),  *(void **)(v0 + 80),  *(void *)(v0 + 88),  *(void *)(v0 + 16),  *(void *)(v0 + 24));
}

uint64_t sub_1E675C( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  v8[7] = a1;
  uint64_t v16 = type metadata accessor for Logger(0LL);
  v8[8] = v16;
  uint64_t v17 = *(void *)(v16 - 8);
  v8[9] = v17;
  v8[10] = swift_task_alloc((*(void *)(v17 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v18 = (void *)swift_task_alloc(dword_28DE84);
  v8[11] = v18;
  *uint64_t v18 = v8;
  v18[1] = sub_1E6828;
  return sub_1E6B18(a1, a3, a4, a5, a6, a7, a8);
}

uint64_t sub_1E6828()
{
  uint64_t v2 = *(void *)(*(void *)v1 + 88LL);
  *(void *)(*(void *)v1 + 96LL) = v0;
  swift_task_dealloc(v2);
  if (v0) {
    uint64_t v3 = sub_1E68D0;
  }
  else {
    uint64_t v3 = sub_1E688C;
  }
  return swift_task_switch(v3, 0LL, 0LL);
}

uint64_t sub_1E688C()
{
  uint64_t v1 = *(void *)(v0 + 80);
  *(_BYTE *)(*(void *)(v0 + 56) + 4Hasher.init(_seed:)(v1, 0LL) = *(void *)(v0 + 96) != 0LL;
  swift_task_dealloc(v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1E68D0()
{
  if (qword_283888 != -1) {
    swift_once(&qword_283888, sub_BFC5C);
  }
  uint64_t v1 = *(void *)(v0 + 96);
  uint64_t v3 = *(void *)(v0 + 72);
  uint64_t v2 = *(void *)(v0 + 80);
  uint64_t v4 = *(void *)(v0 + 64);
  uint64_t v5 = sub_6960(v4, (uint64_t)qword_2969C8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16))(v2, v5, v4);
  swift_errorRetain(v1);
  uint64_t v6 = swift_errorRetain(v1);
  uint64_t v7 = (os_log_s *)Logger.logObject.getter(v6);
  os_log_type_t v8 = static os_log_type_t.error.getter();
  BOOL v9 = os_log_type_enabled(v7, v8);
  uint64_t v10 = *(void *)(v0 + 96);
  uint64_t v12 = *(void *)(v0 + 72);
  uint64_t v11 = *(void *)(v0 + 80);
  uint64_t v13 = *(void *)(v0 + 64);
  if (v9)
  {
    uint64_t v22 = *(void *)(v0 + 64);
    uint64_t v23 = *(void *)(v0 + 80);
    uint64_t v21 = *(void *)(v0 + 72);
    uint64_t v14 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
    uint64_t v15 = swift_slowAlloc(32LL, -1LL);
    uint64_t v24 = v15;
    *(_DWORD *)uint64_t v14 = 136315138;
    swift_getErrorValue(v10, v0 + 40, v0 + 16);
    uint64_t v16 = Error.localizedDescription.getter(*(void *)(v0 + 24), *(void *)(v0 + 32));
    unint64_t v18 = v17;
    *(void *)(v0 + 48) = sub_6978(v16, v17, &v24);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 48, v0 + 56);
    swift_bridgeObjectRelease(v18);
    swift_errorRelease(v10);
    swift_errorRelease(v10);
    _os_log_impl(&dword_0, v7, v8, "ResponseFactory+Utilities#makeResponseOutput error: %s", v14, 0xCu);
    swift_arrayDestroy(v15, 1LL, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v15, -1LL, -1LL);
    swift_slowDealloc(v14, -1LL, -1LL);

    (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v23, v22);
  }

  else
  {
    swift_errorRelease(*(void *)(v0 + 96));
    swift_errorRelease(v10);

    (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v11, v13);
  }

  **(void **)(v0 + 56) = *(void *)(v0 + 96);
  uint64_t v19 = *(void *)(v0 + 80);
  *(_BYTE *)(*(void *)(v0 + 56) + 4Hasher.init(_seed:)(v1, 0LL) = *(void *)(v0 + 96) != 0LL;
  swift_task_dealloc(v19);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1E6B18(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  v8[8] = a7;
  v8[9] = v7;
  v8[6] = a5;
  v8[7] = a6;
  v8[4] = a3;
  void v8[5] = a4;
  v8[2] = a1;
  v8[3] = a2;
  uint64_t v9 = type metadata accessor for DialogPhase(0LL);
  v8[10] = swift_task_alloc((*(void *)(*(void *)(v9 - 8) + 64LL) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v10 = type metadata accessor for OutputGenerationManifest(0LL);
  v8[11] = v10;
  uint64_t v11 = *(void *)(v10 - 8);
  v8[12] = v11;
  v8[13] = swift_task_alloc((*(void *)(v11 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v12 = type metadata accessor for ResponseFactoryOutputContext(0LL);
  v8[14] = v12;
  v8[15] = swift_task_alloc((*(void *)(*(void *)(v12 - 8) + 64LL) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v13 = type metadata accessor for Logger(0LL);
  v8[16] = v13;
  uint64_t v14 = *(void *)(v13 - 8);
  v8[17] = v14;
  v8[18] = swift_task_alloc((*(void *)(v14 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  return swift_task_switch(sub_1E6BF0, 0LL, 0LL);
}

uint64_t sub_1E6BF0()
{
  if (qword_283888 != -1) {
    swift_once(&qword_283888, sub_BFC5C);
  }
  uint64_t v2 = *(void *)(v0 + 136);
  uint64_t v1 = *(void *)(v0 + 144);
  uint64_t v3 = *(void *)(v0 + 128);
  uint64_t v4 = sub_6960(v3, (uint64_t)qword_2969C8);
  uint64_t v5 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v2 + 16))(v1, v4, v3);
  uint64_t v6 = (os_log_s *)Logger.logObject.getter(v5);
  os_log_type_t v7 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v6, v7))
  {
    os_log_type_t v8 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
    *(_WORD *)os_log_type_t v8 = 0;
    _os_log_impl(&dword_0, v6, v7, "ResponseFactory+Utilities#responseOutput...", v8, 2u);
    swift_slowDealloc(v8, -1LL, -1LL);
  }

  uint64_t v10 = *(void *)(v0 + 136);
  uint64_t v9 = *(void *)(v0 + 144);
  uint64_t v12 = *(void *)(v0 + 120);
  uint64_t v11 = *(void *)(v0 + 128);
  uint64_t v13 = *(uint64_t **)(v0 + 48);

  (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v9, v11);
  uint64_t v14 = *v13;
  sub_1EA0D0((uint64_t)v13, v12);
  uint64_t v15 = *(void *)(v0 + 120);
  if (v14)
  {
    swift_errorRetain(v14);
    uint64_t v16 = sub_132158(v15, type metadata accessor for ResponseFactoryOutputContext);
LABEL_8:
    swift_willThrow(v16);
    uint64_t v18 = *(void *)(v0 + 120);
    uint64_t v19 = *(void *)(v0 + 104);
    uint64_t v20 = *(void *)(v0 + 80);
    swift_task_dealloc(*(void *)(v0 + 144));
    swift_task_dealloc(v18);
    swift_task_dealloc(v19);
    swift_task_dealloc(v20);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }

  uint64_t v17 = *(void *)(v15 + *(int *)(*(void *)(v0 + 112) + 24LL));
  swift_errorRetain(v17);
  uint64_t v16 = sub_132158(v15, type metadata accessor for ResponseFactoryOutputContext);
  if (v17) {
    goto LABEL_8;
  }
  uint64_t v22 = static SiriEnvironmentWrapper.retrieve()(v16);
  if (!v22)
  {
    type metadata accessor for SiriEnvironment(0LL);
    uint64_t v22 = static SiriEnvironment.default.getter();
  }

  uint64_t v23 = v22;
  *(void *)(v0 + 15sub_6C3C(v0 + 2) = v22;
  uint64_t v24 = *(void *)(v0 + 80);
  uint64_t v25 = *(void *)(v0 + 48);
  static DialogPhase.completion.getter(v22);
  uint64_t v26 = swift_task_alloc(32LL);
  *(void *)(v26 + swift_weakDestroy(v0 + 16) = v25;
  *(void *)(v26 + 24) = v23;
  OutputGenerationManifest.init(dialogPhase:_:)(v24, sub_1EA530, v26);
  swift_task_dealloc(v26);
  uint64_t v27 = (void *)swift_task_alloc(dword_28DE8C);
  *(void *)(v0 + 160) = v27;
  *uint64_t v27 = v0;
  v27[1] = sub_1E6E50;
  return sub_1E7340( *(void *)(v0 + 16),  *(void *)(v0 + 104),  *(void *)(v0 + 24),  *(void *)(v0 + 32),  *(void *)(v0 + 40),  *(void *)(v0 + 48),  *(void *)(v0 + 56),  *(void *)(v0 + 64));
}

uint64_t sub_1E6E50()
{
  uint64_t v2 = *(void *)(*(void *)v1 + 160LL);
  *(void *)(*(void *)v1 + 168LL) = v0;
  swift_task_dealloc(v2);
  if (v0) {
    uint64_t v3 = sub_1E6F34;
  }
  else {
    uint64_t v3 = sub_1E6EB4;
  }
  return swift_task_switch(v3, 0LL, 0LL);
}

uint64_t sub_1E6EB4()
{
  uint64_t v1 = *(void *)(v0 + 144);
  uint64_t v2 = *(void *)(v0 + 120);
  uint64_t v4 = *(void *)(v0 + 96);
  uint64_t v3 = *(void *)(v0 + 104);
  uint64_t v6 = *(void *)(v0 + 80);
  uint64_t v5 = *(void *)(v0 + 88);
  swift_release(*(void *)(v0 + 152));
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
  swift_task_dealloc(v1);
  swift_task_dealloc(v2);
  swift_task_dealloc(v3);
  swift_task_dealloc(v6);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1E6F34()
{
  uint64_t v2 = *(void *)(v0 + 96);
  uint64_t v1 = *(void *)(v0 + 104);
  uint64_t v3 = *(void *)(v0 + 88);
  swift_release(*(void *)(v0 + 152));
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  uint64_t v4 = *(void *)(v0 + 120);
  uint64_t v5 = *(void *)(v0 + 104);
  uint64_t v6 = *(void *)(v0 + 80);
  swift_task_dealloc(*(void *)(v0 + 144));
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  swift_task_dealloc(v6);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1E6FB4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v39 = a3;
  uint64_t v4 = sub_6C5C((uint64_t *)&unk_286BA0);
  __chkstk_darwin(v4);
  uint64_t v40 = (char *)&v39 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v6 = type metadata accessor for ResponseMode(0LL);
  __chkstk_darwin(v6);
  os_log_type_t v8 = (char *)&v39 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v9 = sub_6C5C(&qword_28DE90);
  uint64_t v10 = __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v39 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v10);
  uint64_t v14 = (char *)&v39 - v13;
  uint64_t v15 = sub_6C5C((uint64_t *)&unk_286C50);
  __chkstk_darwin(v15);
  uint64_t v17 = (char *)&v39 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v18 = (int *)type metadata accessor for ResponseFactoryOutputContext(0LL);
  sub_FF10(a2 + v18[8], (uint64_t)v17, (uint64_t *)&unk_286C50);
  OutputGenerationManifest.nlContextUpdate.setter(v17);
  uint64_t v19 = a2 + v18[5];
  sub_FF10(v19, (uint64_t)v14, &qword_28DE90);
  uint64_t v20 = type metadata accessor for SnippetModelResponse(0LL);
  uint64_t v21 = *(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v20 - 8) + 48LL);
  if (v21(v14, 1LL, v20) == 1)
  {
    sub_1F6CC((uint64_t)v14, &qword_28DE90);
    uint64_t v23 = 0LL;
  }

  else
  {
    uint64_t v23 = *(void *)&v14[*(int *)(v20 + 28)];
    swift_bridgeObjectRetain(v23);
    sub_132158((uint64_t)v14, type metadata accessor for SnippetModelResponse);
  }

  OutputGenerationManifest.additionalCommands.setter(v23, v22);
  sub_FF10(v19, (uint64_t)v12, &qword_28DE90);
  if (v21(v12, 1LL, v20) == 1)
  {
    sub_1F6CC((uint64_t)v12, &qword_28DE90);
    uint64_t v25 = 0LL;
    uint64_t v26 = 0LL;
  }

  else
  {
    uint64_t v27 = &v12[*(int *)(v20 + 24)];
    uint64_t v25 = *(void *)v27;
    uint64_t v26 = *((void *)v27 + 1);
    swift_bridgeObjectRetain(v26);
    sub_132158((uint64_t)v12, type metadata accessor for SnippetModelResponse);
  }

  uint64_t v28 = (uint64_t)v40;
  OutputGenerationManifest.applicationSessionID.setter(v25, v26, v24);
  uint64_t v29 = OutputGenerationManifest.disableDeviceRacing.setter(*(unsigned __int8 *)(a2 + v18[10]));
  uint64_t v30 = SiriEnvironment.currentRequest.getter(v29);
  CurrentRequest.responseMode.getter(v30);
  swift_release(v30);
  OutputGenerationManifest.responseMode.setter(v8);
  sub_FF10(a2 + v18[7], v28, (uint64_t *)&unk_286BA0);
  uint64_t v31 = sub_6C5C(&qword_289340);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v31 - 8) + 48LL))(v28, 1LL, v31) == 1)
  {
    sub_1F6CC(v28, (uint64_t *)&unk_286BA0);
    uint64_t v32 = 0LL;
    uint64_t v33 = 0LL;
  }

  else
  {
    uint64_t v34 = *(void **)(v28 + *(int *)(v31 + 48));
    id v35 = objc_msgSend(v34, "catId", v39);

    uint64_t v32 = static String._unconditionallyBridgeFromObjectiveC(_:)(v35);
    uint64_t v33 = v36;

    uint64_t v37 = type metadata accessor for TemplatingResult(0LL);
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v37 - 8) + 8LL))(v28, v37);
  }

  OutputGenerationManifest.responseViewId.setter(v32, v33);
  return OutputGenerationManifest.preserveResultSpaceIfPossible.setter(1LL);
}

uint64_t sub_1E7340( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  v9[42] = a8;
  v9[43] = v8;
  v9[40] = a6;
  v9[41] = a7;
  v9[38] = a2;
  v9[39] = a5;
  v9[37] = a1;
  unint64_t v10 = (*(void *)(*(void *)(sub_6C5C((uint64_t *)&unk_286BA0) - 8) + 64LL) + 15LL) & 0xFFFFFFFFFFFFFFF0LL;
  v9[44] = swift_task_alloc(v10);
  v9[45] = swift_task_alloc(v10);
  v9[46] = swift_task_alloc(v10);
  v9[47] = swift_task_alloc(v10);
  unint64_t v11 = (*(void *)(*(void *)(sub_6C5C(&qword_28DE90) - 8) + 64LL) + 15LL) & 0xFFFFFFFFFFFFFFF0LL;
  v9[48] = swift_task_alloc(v11);
  v9[49] = swift_task_alloc(v11);
  v9[50] = swift_task_alloc(v11);
  v9[51] = swift_task_alloc(v11);
  v9[52] = swift_task_alloc(v11);
  v9[53] = swift_task_alloc(v11);
  unint64_t v12 = (*(void *)(*(void *)(sub_6C5C(&qword_284170) - 8) + 64LL) + 15LL) & 0xFFFFFFFFFFFFFFF0LL;
  v9[54] = swift_task_alloc(v12);
  v9[55] = swift_task_alloc(v12);
  v9[56] = swift_task_alloc(v12);
  v9[57] = swift_task_alloc(v12);
  v9[58] = swift_task_alloc(v12);
  v9[59] = swift_task_alloc(v12);
  uint64_t v13 = type metadata accessor for SiriAudioSnippets(0LL);
  v9[60] = v13;
  uint64_t v14 = *(void *)(v13 - 8);
  v9[61] = v14;
  unint64_t v15 = (*(void *)(v14 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL;
  v9[62] = swift_task_alloc(v15);
  v9[63] = swift_task_alloc(v15);
  v9[64] = swift_task_alloc(v15);
  v9[65] = swift_task_alloc(v15);
  v9[66] = swift_task_alloc(v15);
  v9[67] = swift_task_alloc(v15);
  uint64_t v16 = type metadata accessor for CATOption(0LL);
  v9[68] = v16;
  uint64_t v17 = *(void *)(v16 - 8);
  v9[69] = v17;
  v9[70] = swift_task_alloc((*(void *)(v17 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v18 = type metadata accessor for Logger(0LL);
  v9[71] = v18;
  uint64_t v19 = *(void *)(v18 - 8);
  v9[72] = v19;
  unint64_t v20 = (*(void *)(v19 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL;
  v9[73] = swift_task_alloc(v20);
  v9[74] = swift_task_alloc(v20);
  v9[75] = swift_task_alloc(v20);
  v9[76] = swift_task_alloc(v20);
  v9[77] = swift_task_alloc(v20);
  v9[78] = swift_task_alloc(v20);
  v9[79] = swift_task_alloc(v20);
  v9[80] = swift_task_alloc(v20);
  uint64_t v21 = type metadata accessor for FeatureFlagProvider(0LL);
  v9[81] = v21;
  uint64_t v22 = *(void *)(v21 - 8);
  v9[82] = v22;
  v9[83] = swift_task_alloc((*(void *)(v22 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  return swift_task_switch(sub_1E75D0, 0LL, 0LL);
}

uint64_t sub_1E75D0(uint64_t a1)
{
  uint64_t v2 = *(void *)(v1 + 664);
  uint64_t v3 = *(void *)(v1 + 656);
  uint64_t v4 = *(void *)(v1 + 648);
  uint64_t v5 = static FeatureFlagProvider.shared.getter(a1);
  char v6 = FeatureFlagProvider.isSonicResponseOnlyEnabled.getter(v5);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  if ((v6 & 1) != 0 && [*(id *)(v1 + 312) _intentResponseCode] != &dword_4)
  {
    if (qword_283888 != -1) {
      swift_once(&qword_283888, sub_BFC5C);
    }
    uint64_t v20 = *(void *)(v1 + 640);
    uint64_t v21 = *(void *)(v1 + 576);
    uint64_t v22 = *(void *)(v1 + 568);
    uint64_t v23 = sub_6960(v22, (uint64_t)qword_2969C8);
    uint64_t v24 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v21 + 16))(v20, v23, v22);
    uint64_t v25 = (os_log_s *)Logger.logObject.getter(v24);
    os_log_type_t v26 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v25, v26))
    {
      uint64_t v27 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)uint64_t v27 = 0;
      _os_log_impl( &dword_0,  v25,  v26,  "ResponseFactory+Utilities#responseOutput sonic response only, calling makeSuccessOutput",  v27,  2u);
      swift_slowDealloc(v27, -1LL, -1LL);
    }

    uint64_t v28 = *(void *)(v1 + 640);
    uint64_t v29 = *(void *)(v1 + 576);
    uint64_t v30 = *(void *)(v1 + 568);

    (*(void (**)(uint64_t, uint64_t))(v29 + 8))(v28, v30);
    type metadata accessor for CATDialog(0LL);
    if (qword_283968 != -1) {
      swift_once(&qword_283968, sub_1C198C);
    }
    uint64_t v31 = qword_296BA0;
    unint64_t v32 = sub_74D54((uint64_t)_swiftEmptyArrayStorage);
    *(void *)(v1 + 67sub_6C3C(v0 + 2) = v32;
    type metadata accessor for CATGlobals(0LL);
    uint64_t v33 = CATGlobals.__allocating_init()();
    *(void *)(v1 + 680) = v33;
    *(_OWORD *)(v1 + 256) = 0u;
    *(_OWORD *)(v1 + 27sub_6C3C(v0 + 2) = 0u;
    *(void *)(v1 + 288) = 0LL;
    static CATOption.defaultMode.getter();
    uint64_t v34 = (void *)swift_task_alloc(async function pointer to static CATDialog.execute(bundle:catId:parameters:globals:callback:options:)[1]);
    *(void *)(v1 + 688) = v34;
    *uint64_t v34 = v1;
    v34[1] = sub_1E8A88;
    return static CATDialog.execute(bundle:catId:parameters:globals:callback:options:)( v31,  0xD00000000000001DLL,  0x8000000000223CC0LL,  v32,  v33,  v1 + 256,  *(void *)(v1 + 560));
  }

  uint64_t v7 = *(void *)(v1 + 424);
  uint64_t v8 = *(void *)(v1 + 320);
  uint64_t v9 = type metadata accessor for ResponseFactoryOutputContext(0LL);
  uint64_t v10 = v8 + *(int *)(v9 + 20);
  sub_FF10(v10, v7, &qword_28DE90);
  uint64_t v11 = type metadata accessor for SnippetModelResponse(0LL);
  unint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 48LL);
  int v13 = v12(v7, 1LL, v11);
  uint64_t v14 = *(void *)(v1 + 480);
  uint64_t v15 = *(void *)(v1 + 488);
  uint64_t v16 = *(void *)(v1 + 472);
  uint64_t v17 = *(void *)(v1 + 424);
  if (v13 == 1)
  {
    sub_1F6CC(*(void *)(v1 + 424), &qword_28DE90);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v15 + 56))(v16, 1LL, 1LL, v14);
LABEL_6:
    uint64_t v19 = *(void *)(v1 + 472);
LABEL_18:
    sub_1F6CC(v19, &qword_284170);
    goto LABEL_19;
  }

  sub_FF10(v17 + *(int *)(v11 + 20), *(void *)(v1 + 472), &qword_284170);
  sub_132158(v17, type metadata accessor for SnippetModelResponse);
  uint64_t v18 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v15 + 48);
  if (v18(v16, 1LL, v14) == 1) {
    goto LABEL_6;
  }
  uint64_t v36 = *(void *)(v1 + 416);
  uint64_t v37 = *(void (**)(void, void, void))(*(void *)(v1 + 488) + 32LL);
  v37(*(void *)(v1 + 536), *(void *)(v1 + 472), *(void *)(v1 + 480));
  sub_FF10(v10, v36, &qword_28DE90);
  if (v12(v36, 1LL, v11) == 1)
  {
    uint64_t v38 = *(void *)(v1 + 480);
    uint64_t v39 = *(void *)(v1 + 488);
    uint64_t v40 = *(void *)(v1 + 464);
    sub_1F6CC(*(void *)(v1 + 416), &qword_28DE90);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v39 + 56))(v40, 1LL, 1LL, v38);
LABEL_17:
    uint64_t v44 = *(void *)(v1 + 464);
    (*(void (**)(void, void))(*(void *)(v1 + 488) + 8LL))(*(void *)(v1 + 536), *(void *)(v1 + 480));
    uint64_t v19 = v44;
    goto LABEL_18;
  }

  uint64_t v41 = *(void *)(v1 + 480);
  uint64_t v42 = *(void *)(v1 + 464);
  uint64_t v43 = *(void *)(v1 + 416);
  sub_FF10(v43, v42, &qword_284170);
  sub_132158(v43, type metadata accessor for SnippetModelResponse);
  if (v18(v42, 1LL, v41) == 1) {
    goto LABEL_17;
  }
  uint64_t v194 = *(void *)(v1 + 376);
  uint64_t v195 = *(void *)(v1 + 320);
  v37(*(void *)(v1 + 528), *(void *)(v1 + 464), *(void *)(v1 + 480));
  sub_FF10(v195 + *(int *)(v9 + 28), v194, (uint64_t *)&unk_286BA0);
  uint64_t v196 = sub_6C5C(&qword_289340);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v196 - 8) + 48LL))(v194, 1LL, v196) != 1)
  {
    uint64_t v202 = *(void *)(v1 + 376);
    uint64_t v228 = *(void **)(v202 + *(int *)(v196 + 48));
    *(void *)(v1 + 720) = v228;
    uint64_t v203 = type metadata accessor for TemplatingResult(0LL);
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v203 - 8) + 8LL))(v202, v203);
    if (qword_283888 != -1) {
      swift_once(&qword_283888, sub_BFC5C);
    }
    uint64_t v204 = *(void *)(v1 + 632);
    uint64_t v205 = *(void *)(v1 + 576);
    uint64_t v206 = *(void *)(v1 + 568);
    uint64_t v207 = sub_6960(v206, (uint64_t)qword_2969C8);
    uint64_t v208 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v205 + 16))(v204, v207, v206);
    uint64_t v209 = (os_log_s *)Logger.logObject.getter(v208);
    os_log_type_t v210 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v209, v210))
    {
      uint64_t v211 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)uint64_t v211 = 0;
      _os_log_impl( &dword_0,  v209,  v210,  "ResponseFactory+Utilities#responseOutput creating response with dialog and snippets on the result and conversation space",  v211,  2u);
      swift_slowDealloc(v211, -1LL, -1LL);
    }

    uint64_t v212 = *(void *)(v1 + 632);
    uint64_t v213 = *(void *)(v1 + 576);
    uint64_t v214 = *(void *)(v1 + 568);
    uint64_t v215 = *(void *)(v1 + 536);
    uint64_t v227 = *(void *)(v1 + 528);
    uint64_t v217 = *(void *)(v1 + 480);
    uint64_t v216 = *(void *)(v1 + 488);

    (*(void (**)(uint64_t, uint64_t))(v213 + 8))(v212, v214);
    *(void *)(v1 + 200) = v217;
    unint64_t v218 = sub_1EA538();
    *(void *)(v1 + 208) = v218;
    id v219 = sub_10974((void *)(v1 + 176));
    __int128 v220 = *(void (**)(void *, uint64_t, uint64_t))(v216 + 16);
    v220(v219, v215, v217);
    *(void *)(v1 + 240) = v217;
    *(void *)(v1 + 248) = v218;
    uint64_t v221 = sub_10974((void *)(v1 + 216));
    v220(v221, v227, v217);
    uint64_t v222 = sub_6C5C(&qword_287980);
    uint64_t v223 = swift_allocObject(v222, 40LL, 7LL);
    *(_OWORD *)(v223 + swift_weakDestroy(v0 + 16) = xmmword_214980;
    *(void *)(v223 + 3sub_6C3C(v0 + 2) = v228;
    uint64_t v232 = v223;
    specialized Array._endMutation()(v223);
    *(void *)(v1 + 728) = v232;
    uint64_t v224 = async function pointer to dispatch thunk of ResponseGenerating.makeResponseOutput(resultModel:conversationModel:dialog:outputGenerationManifest:)[1];
    id v225 = v228;
    os_log_type_t v226 = (void *)swift_task_alloc(v224);
    *(void *)(v1 + 736) = v226;
    *os_log_type_t v226 = v1;
    v226[1] = sub_1E8DEC;
    return dispatch thunk of ResponseGenerating.makeResponseOutput(resultModel:conversationModel:dialog:outputGenerationManifest:)( *(void *)(v1 + 296),  v1 + 176,  v1 + 216,  v232,  *(void *)(v1 + 304),  *(void *)(v1 + 328),  *(void *)(v1 + 336));
  }

  uint64_t v197 = *(void *)(v1 + 536);
  uint64_t v198 = *(void *)(v1 + 528);
  uint64_t v199 = *(void *)(v1 + 480);
  uint64_t v200 = *(void *)(v1 + 488);
  sub_1F6CC(*(void *)(v1 + 376), (uint64_t *)&unk_286BA0);
  uint64_t v201 = *(void (**)(uint64_t, uint64_t))(v200 + 8);
  v201(v198, v199);
  v201(v197, v199);
LABEL_19:
  uint64_t v45 = *(void *)(v1 + 408);
  sub_FF10(v10, v45, &qword_28DE90);
  int v46 = v12(v45, 1LL, v11);
  uint64_t v47 = *(void *)(v1 + 480);
  uint64_t v48 = *(void *)(v1 + 488);
  uint64_t v49 = *(void *)(v1 + 456);
  uint64_t v50 = *(void *)(v1 + 408);
  if (v46 == 1)
  {
    sub_1F6CC(*(void *)(v1 + 408), &qword_28DE90);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v48 + 56))(v49, 1LL, 1LL, v47);
LABEL_22:
    sub_1F6CC(*(void *)(v1 + 456), &qword_284170);
    goto LABEL_23;
  }

  sub_FF10(v50 + *(int *)(v11 + 20), *(void *)(v1 + 456), &qword_284170);
  sub_132158(v50, type metadata accessor for SnippetModelResponse);
  uint64_t v86 = *(void *)(v1 + 368);
  uint64_t v87 = *(void *)(v1 + 320);
  (*(void (**)(void, void, void))(*(void *)(v1 + 488) + 32LL))( *(void *)(v1 + 520),  *(void *)(v1 + 456),  *(void *)(v1 + 480));
  sub_FF10(v87 + *(int *)(v9 + 28), v86, (uint64_t *)&unk_286BA0);
  uint64_t v88 = sub_6C5C(&qword_289340);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v88 - 8) + 48LL))(v86, 1LL, v88) != 1)
  {
    uint64_t v148 = *(void *)(v1 + 368);
    uint64_t v149 = *(void **)(v148 + *(int *)(v88 + 48));
    *(void *)(v1 + 744) = v149;
    uint64_t v150 = type metadata accessor for TemplatingResult(0LL);
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v150 - 8) + 8LL))(v148, v150);
    if (qword_283888 != -1) {
      swift_once(&qword_283888, sub_BFC5C);
    }
    uint64_t v151 = *(void *)(v1 + 624);
    uint64_t v152 = *(void *)(v1 + 576);
    uint64_t v153 = *(void *)(v1 + 568);
    uint64_t v154 = sub_6960(v153, (uint64_t)qword_2969C8);
    uint64_t v155 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v152 + 16))(v151, v154, v153);
    uint64_t v156 = (os_log_s *)Logger.logObject.getter(v155);
    os_log_type_t v157 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v156, v157))
    {
      os_log_type_t v158 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)os_log_type_t v158 = 0;
      _os_log_impl( &dword_0,  v156,  v157,  "ResponseFactory+Utilities#responseOutput creating response with a dialog and a snippet on the result space",  v158,  2u);
      swift_slowDealloc(v158, -1LL, -1LL);
    }

    uint64_t v159 = *(void *)(v1 + 624);
    uint64_t v160 = *(void *)(v1 + 576);
    uint64_t v161 = *(void *)(v1 + 568);
    uint64_t v162 = *(void *)(v1 + 520);
    uint64_t v163 = *(void *)(v1 + 480);
    uint64_t v164 = *(void *)(v1 + 488);

    (*(void (**)(uint64_t, uint64_t))(v160 + 8))(v159, v161);
    *(void *)(v1 + 160) = v163;
    *(void *)(v1 + 168) = sub_1EA538();
    os_log_type_t v165 = sub_10974((void *)(v1 + 136));
    (*(void (**)(void *, uint64_t, uint64_t))(v164 + 16))(v165, v162, v163);
    uint64_t v166 = sub_6C5C(&qword_287980);
    uint64_t v167 = swift_allocObject(v166, 40LL, 7LL);
    *(_OWORD *)(v167 + swift_weakDestroy(v0 + 16) = xmmword_214980;
    *(void *)(v167 + 3sub_6C3C(v0 + 2) = v149;
    uint64_t v230 = v167;
    specialized Array._endMutation()(v167);
    *(void *)(v1 + 75sub_6C3C(v0 + 2) = v230;
    uint64_t v168 = async function pointer to dispatch thunk of ResponseGenerating.makeResponseOutput(resultModel:dialog:outputGenerationManifest:)[1];
    id v169 = v149;
    uint64_t v170 = (void *)swift_task_alloc(v168);
    *(void *)(v1 + 760) = v170;
    *uint64_t v170 = v1;
    v170[1] = sub_1E9090;
    return dispatch thunk of ResponseGenerating.makeResponseOutput(resultModel:dialog:outputGenerationManifest:)( *(void *)(v1 + 296),  v1 + 136,  v230,  *(void *)(v1 + 304),  *(void *)(v1 + 328),  *(void *)(v1 + 336));
  }

  uint64_t v89 = *(void *)(v1 + 520);
  uint64_t v90 = *(void *)(v1 + 480);
  uint64_t v91 = *(void *)(v1 + 488);
  sub_1F6CC(*(void *)(v1 + 368), (uint64_t *)&unk_286BA0);
  (*(void (**)(uint64_t, uint64_t))(v91 + 8))(v89, v90);
LABEL_23:
  uint64_t v51 = *(void *)(v1 + 400);
  sub_FF10(v10, v51, &qword_28DE90);
  int v52 = v12(v51, 1LL, v11);
  uint64_t v53 = *(void *)(v1 + 480);
  uint64_t v54 = *(void *)(v1 + 488);
  uint64_t v55 = *(void *)(v1 + 448);
  uint64_t v56 = *(void *)(v1 + 400);
  if (v52 == 1)
  {
    sub_1F6CC(*(void *)(v1 + 400), &qword_28DE90);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v54 + 56))(v55, 1LL, 1LL, v53);
  }

  else
  {
    sub_FF10(v56 + *(int *)(v11 + 20), *(void *)(v1 + 448), &qword_284170);
    sub_132158(v56, type metadata accessor for SnippetModelResponse);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v54 + 48))(v55, 1LL, v53) != 1)
    {
      (*(void (**)(void, void, void))(*(void *)(v1 + 488) + 32LL))( *(void *)(v1 + 512),  *(void *)(v1 + 448),  *(void *)(v1 + 480));
      if (qword_283888 != -1) {
        swift_once(&qword_283888, sub_BFC5C);
      }
      uint64_t v92 = *(void *)(v1 + 616);
      uint64_t v93 = *(void *)(v1 + 576);
      uint64_t v94 = *(void *)(v1 + 568);
      uint64_t v95 = sub_6960(v94, (uint64_t)qword_2969C8);
      uint64_t v96 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v93 + 16))(v92, v95, v94);
      uint64_t v97 = (os_log_s *)Logger.logObject.getter(v96);
      os_log_type_t v98 = static os_log_type_t.debug.getter();
      if (os_log_type_enabled(v97, v98))
      {
        os_log_type_t v99 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
        *(_WORD *)os_log_type_t v99 = 0;
        _os_log_impl( &dword_0,  v97,  v98,  "ResponseFactory+Utilities#responseOutput creating response with a snippet on the result space and no dialog",  v99,  2u);
        swift_slowDealloc(v99, -1LL, -1LL);
      }

      uint64_t v100 = *(void *)(v1 + 616);
      uint64_t v101 = *(void *)(v1 + 576);
      uint64_t v102 = *(void *)(v1 + 568);
      uint64_t v103 = *(void *)(v1 + 512);
      uint64_t v104 = *(void *)(v1 + 480);
      uint64_t v105 = *(void *)(v1 + 488);

      (*(void (**)(uint64_t, uint64_t))(v101 + 8))(v100, v102);
      *(void *)(v1 + 120) = v104;
      *(void *)(v1 + 128) = sub_1EA538();
      uint64_t v106 = sub_10974((void *)(v1 + 96));
      (*(void (**)(void *, uint64_t, uint64_t))(v105 + 16))(v106, v103, v104);
      uint64_t v107 = (void *)swift_task_alloc(async function pointer to dispatch thunk of ResponseGenerating.makeResponseOutput(resultModel:outputGenerationManifest:)[1]);
      *(void *)(v1 + 768) = v107;
      *uint64_t v107 = v1;
      v107[1] = sub_1E9310;
      return dispatch thunk of ResponseGenerating.makeResponseOutput(resultModel:outputGenerationManifest:)( *(void *)(v1 + 296),  v1 + 96,  *(void *)(v1 + 304),  *(void *)(v1 + 328),  *(void *)(v1 + 336));
    }
  }

  uint64_t v57 = *(void *)(v1 + 392);
  sub_1F6CC(*(void *)(v1 + 448), &qword_284170);
  sub_FF10(v10, v57, &qword_28DE90);
  int v58 = v12(v57, 1LL, v11);
  uint64_t v59 = *(void *)(v1 + 480);
  uint64_t v60 = *(void *)(v1 + 488);
  uint64_t v61 = *(void *)(v1 + 440);
  uint64_t v62 = *(void *)(v1 + 392);
  if (v58 == 1)
  {
    sub_1F6CC(*(void *)(v1 + 392), &qword_28DE90);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v60 + 56))(v61, 1LL, 1LL, v59);
  }

  else
  {
    sub_FF10(*(void *)(v1 + 392), *(void *)(v1 + 440), &qword_284170);
    sub_132158(v62, type metadata accessor for SnippetModelResponse);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v60 + 48))(v61, 1LL, v59) != 1)
    {
      uint64_t v126 = *(void *)(v1 + 360);
      uint64_t v127 = *(void *)(v1 + 320);
      (*(void (**)(void, void, void))(*(void *)(v1 + 488) + 32LL))( *(void *)(v1 + 504),  *(void *)(v1 + 440),  *(void *)(v1 + 480));
      sub_FF10(v127 + *(int *)(v9 + 28), v126, (uint64_t *)&unk_286BA0);
      uint64_t v128 = sub_6C5C(&qword_289340);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v128 - 8) + 48LL))(v126, 1LL, v128) != 1)
      {
        uint64_t v171 = *(void *)(v1 + 360);
        uint64_t v172 = *(void **)(v171 + *(int *)(v128 + 48));
        *(void *)(v1 + 776) = v172;
        uint64_t v173 = type metadata accessor for TemplatingResult(0LL);
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v173 - 8) + 8LL))(v171, v173);
        if (qword_283888 != -1) {
          swift_once(&qword_283888, sub_BFC5C);
        }
        uint64_t v174 = *(void *)(v1 + 608);
        uint64_t v175 = *(void *)(v1 + 576);
        uint64_t v176 = *(void *)(v1 + 568);
        uint64_t v177 = sub_6960(v176, (uint64_t)qword_2969C8);
        uint64_t v178 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v175 + 16))(v174, v177, v176);
        unint64_t v179 = (os_log_s *)Logger.logObject.getter(v178);
        os_log_type_t v180 = static os_log_type_t.debug.getter();
        if (os_log_type_enabled(v179, v180))
        {
          id v181 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
          *(_WORD *)id v181 = 0;
          _os_log_impl( &dword_0,  v179,  v180,  "ResponseFactory+Utilities#responseOutput creating response with a dialog and a snippet on the conversation space",  v181,  2u);
          swift_slowDealloc(v181, -1LL, -1LL);
        }

        uint64_t v182 = *(void *)(v1 + 608);
        uint64_t v183 = *(void *)(v1 + 576);
        uint64_t v184 = *(void *)(v1 + 568);
        uint64_t v185 = *(void *)(v1 + 504);
        uint64_t v186 = *(void *)(v1 + 480);
        uint64_t v187 = *(void *)(v1 + 488);

        (*(void (**)(uint64_t, uint64_t))(v183 + 8))(v182, v184);
        *(void *)(v1 + 80) = v186;
        *(void *)(v1 + 88) = sub_1EA538();
        uint64_t v188 = sub_10974((void *)(v1 + 56));
        (*(void (**)(void *, uint64_t, uint64_t))(v187 + 16))(v188, v185, v186);
        uint64_t v189 = sub_6C5C(&qword_287980);
        uint64_t v190 = swift_allocObject(v189, 40LL, 7LL);
        *(_OWORD *)(v190 + swift_weakDestroy(v0 + 16) = xmmword_214980;
        *(void *)(v190 + 3sub_6C3C(v0 + 2) = v172;
        uint64_t v231 = v190;
        specialized Array._endMutation()(v190);
        *(void *)(v1 + 784) = v231;
        uint64_t v191 = async function pointer to dispatch thunk of ResponseGenerating.makeResponseOutput(conversationModel:dialog:outputGenerationManifest:)[1];
        id v192 = v172;
        uint64_t v193 = (void *)swift_task_alloc(v191);
        *(void *)(v1 + 79sub_6C3C(v0 + 2) = v193;
        *uint64_t v193 = v1;
        v193[1] = sub_1E9574;
        return dispatch thunk of ResponseGenerating.makeResponseOutput(conversationModel:dialog:outputGenerationManifest:)( *(void *)(v1 + 296),  v1 + 56,  v231,  *(void *)(v1 + 304),  *(void *)(v1 + 328),  *(void *)(v1 + 336));
      }

      uint64_t v129 = *(void *)(v1 + 504);
      uint64_t v130 = *(void *)(v1 + 480);
      uint64_t v131 = *(void *)(v1 + 488);
      sub_1F6CC(*(void *)(v1 + 360), (uint64_t *)&unk_286BA0);
      (*(void (**)(uint64_t, uint64_t))(v131 + 8))(v129, v130);
      goto LABEL_30;
    }
  }

  sub_1F6CC(*(void *)(v1 + 440), &qword_284170);
LABEL_30:
  uint64_t v63 = *(void *)(v1 + 384);
  sub_FF10(v10, v63, &qword_28DE90);
  int v64 = v12(v63, 1LL, v11);
  uint64_t v65 = *(void *)(v1 + 480);
  uint64_t v66 = *(void *)(v1 + 488);
  uint64_t v67 = *(void *)(v1 + 432);
  uint64_t v68 = *(void *)(v1 + 384);
  if (v64 == 1)
  {
    sub_1F6CC(*(void *)(v1 + 384), &qword_28DE90);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v66 + 56))(v67, 1LL, 1LL, v65);
    goto LABEL_33;
  }

  sub_FF10(*(void *)(v1 + 384), *(void *)(v1 + 432), &qword_284170);
  sub_132158(v68, type metadata accessor for SnippetModelResponse);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v66 + 48))(v67, 1LL, v65) == 1)
  {
LABEL_33:
    uint64_t v69 = *(void *)(v1 + 352);
    uint64_t v70 = *(void *)(v1 + 320);
    sub_1F6CC(*(void *)(v1 + 432), &qword_284170);
    sub_FF10(v70 + *(int *)(v9 + 28), v69, (uint64_t *)&unk_286BA0);
    uint64_t v71 = sub_6C5C(&qword_289340);
    int v72 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v71 - 8) + 48LL))(v69, 1LL, v71);
    uint64_t v73 = *(void *)(v1 + 352);
    if (v72 == 1)
    {
      sub_1F6CC(*(void *)(v1 + 352), (uint64_t *)&unk_286BA0);
      if (qword_283888 != -1) {
        swift_once(&qword_283888, sub_BFC5C);
      }
      uint64_t v74 = *(void *)(v1 + 584);
      uint64_t v75 = *(void *)(v1 + 576);
      uint64_t v76 = *(void *)(v1 + 568);
      uint64_t v77 = sub_6960(v76, (uint64_t)qword_2969C8);
      uint64_t v78 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v75 + 16))(v74, v77, v76);
      uint64_t v79 = (os_log_s *)Logger.logObject.getter(v78);
      os_log_type_t v80 = static os_log_type_t.debug.getter();
      if (os_log_type_enabled(v79, v80))
      {
        uint64_t v81 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
        *(_WORD *)uint64_t v81 = 0;
        _os_log_impl(&dword_0, v79, v80, "ResponseFactory+Utilities#responseOutput creating an empty response", v81, 2u);
        swift_slowDealloc(v81, -1LL, -1LL);
      }

      uint64_t v82 = *(void *)(v1 + 584);
      uint64_t v83 = *(void *)(v1 + 576);
      uint64_t v84 = *(void *)(v1 + 568);

      (*(void (**)(uint64_t, uint64_t))(v83 + 8))(v82, v84);
      char v85 = (void *)swift_task_alloc(async function pointer to dispatch thunk of ResponseGenerating.makeResponseOutput(dialog:outputGenerationManifest:)[1]);
      *(void *)(v1 + 83sub_6C3C(v0 + 2) = v85;
      *char v85 = v1;
      v85[1] = sub_1E9CB4;
      return dispatch thunk of ResponseGenerating.makeResponseOutput(dialog:outputGenerationManifest:)( *(void *)(v1 + 296),  _swiftEmptyArrayStorage,  *(void *)(v1 + 304),  *(void *)(v1 + 328),  *(void *)(v1 + 336));
    }

    else
    {
      uint64_t v108 = *(void **)(v73 + *(int *)(v71 + 48));
      *(void *)(v1 + 808) = v108;
      uint64_t v109 = type metadata accessor for TemplatingResult(0LL);
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v109 - 8) + 8LL))(v73, v109);
      if (qword_283888 != -1) {
        swift_once(&qword_283888, sub_BFC5C);
      }
      uint64_t v110 = *(void *)(v1 + 592);
      uint64_t v111 = *(void *)(v1 + 576);
      uint64_t v112 = *(void *)(v1 + 568);
      uint64_t v113 = sub_6960(v112, (uint64_t)qword_2969C8);
      uint64_t v114 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v111 + 16))(v110, v113, v112);
      os_log_type_t v115 = (os_log_s *)Logger.logObject.getter(v114);
      os_log_type_t v116 = static os_log_type_t.debug.getter();
      if (os_log_type_enabled(v115, v116))
      {
        double v117 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
        *(_WORD *)double v117 = 0;
        _os_log_impl( &dword_0,  v115,  v116,  "ResponseFactory+Utilities#responseOutput creating response with a dialog and no snippets",  v117,  2u);
        swift_slowDealloc(v117, -1LL, -1LL);
      }

      uint64_t v118 = *(void *)(v1 + 592);
      uint64_t v119 = *(void *)(v1 + 576);
      uint64_t v120 = *(void *)(v1 + 568);

      (*(void (**)(uint64_t, uint64_t))(v119 + 8))(v118, v120);
      uint64_t v121 = sub_6C5C(&qword_287980);
      uint64_t v122 = swift_allocObject(v121, 40LL, 7LL);
      *(_OWORD *)(v122 + swift_weakDestroy(v0 + 16) = xmmword_214980;
      *(void *)(v122 + 3sub_6C3C(v0 + 2) = v108;
      uint64_t v229 = v122;
      specialized Array._endMutation()(v122);
      *(void *)(v1 + 8swift_weakDestroy(v0 + 16) = v229;
      uint64_t v123 = async function pointer to dispatch thunk of ResponseGenerating.makeResponseOutput(dialog:outputGenerationManifest:)[1];
      id v124 = v108;
      char v125 = (void *)swift_task_alloc(v123);
      *(void *)(v1 + 824) = v125;
      void *v125 = v1;
      v125[1] = sub_1E9A58;
      return dispatch thunk of ResponseGenerating.makeResponseOutput(dialog:outputGenerationManifest:)( *(void *)(v1 + 296),  v229,  *(void *)(v1 + 304),  *(void *)(v1 + 328),  *(void *)(v1 + 336));
    }
  }

  (*(void (**)(void, void, void))(*(void *)(v1 + 488) + 32LL))( *(void *)(v1 + 496),  *(void *)(v1 + 432),  *(void *)(v1 + 480));
  if (qword_283888 != -1) {
    swift_once(&qword_283888, sub_BFC5C);
  }
  uint64_t v132 = *(void *)(v1 + 600);
  uint64_t v133 = *(void *)(v1 + 576);
  uint64_t v134 = *(void *)(v1 + 568);
  uint64_t v135 = sub_6960(v134, (uint64_t)qword_2969C8);
  uint64_t v136 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v133 + 16))(v132, v135, v134);
  char v137 = (os_log_s *)Logger.logObject.getter(v136);
  os_log_type_t v138 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v137, v138))
  {
    uint64_t v139 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
    *(_WORD *)uint64_t v139 = 0;
    _os_log_impl( &dword_0,  v137,  v138,  "ResponseFactory+Utilities#responseOutput creating response with a snippet on the conversation space and no dialog.",  v139,  2u);
    swift_slowDealloc(v139, -1LL, -1LL);
  }

  uint64_t v140 = *(void *)(v1 + 600);
  uint64_t v141 = *(void *)(v1 + 576);
  uint64_t v142 = *(void *)(v1 + 568);
  uint64_t v144 = *(void *)(v1 + 488);
  uint64_t v143 = *(void *)(v1 + 496);
  uint64_t v145 = *(void *)(v1 + 480);

  (*(void (**)(uint64_t, uint64_t))(v141 + 8))(v140, v142);
  *(void *)(v1 + 40) = v145;
  *(void *)(v1 + 48) = sub_1EA538();
  uint64_t v146 = sub_10974((void *)(v1 + 16));
  (*(void (**)(void *, uint64_t, uint64_t))(v144 + 16))(v146, v143, v145);
  char v147 = (void *)swift_task_alloc(async function pointer to dispatch thunk of ResponseGenerating.makeResponseOutput(conversationModel:outputGenerationManifest:)[1]);
  *(void *)(v1 + 800) = v147;
  *char v147 = v1;
  v147[1] = sub_1E97F4;
  return dispatch thunk of ResponseGenerating.makeResponseOutput(conversationModel:outputGenerationManifest:)( *(void *)(v1 + 296),  v1 + 16,  *(void *)(v1 + 304),  *(void *)(v1 + 328),  *(void *)(v1 + 336));
}

uint64_t sub_1E8A88(uint64_t a1)
{
  uint64_t v4 = *(void *)(*(void *)v2 + 688LL);
  uint64_t v5 = *(void **)(*(void *)v2 + 680LL);
  uint64_t v6 = *(void *)(*(void *)v2 + 672LL);
  uint64_t v7 = *(void **)v2;
  v7[87] = v1;
  swift_task_dealloc(v4);

  __n128 v8 = swift_bridgeObjectRelease(v6);
  uint64_t v9 = v7[70];
  uint64_t v10 = v7[69];
  uint64_t v11 = v7[68];
  if (v1)
  {
    (*(void (**)(uint64_t, uint64_t, __n128))(v10 + 8))(v9, v11, v8);
    sub_1F6CC((uint64_t)(v7 + 32), &qword_284030);
    return swift_task_switch(sub_1E9EC8, 0LL, 0LL);
  }

  else
  {
    v7[88] = a1;
    (*(void (**)(uint64_t, uint64_t, __n128))(v10 + 8))(v9, v11, v8);
    sub_1F6CC((uint64_t)(v7 + 32), &qword_284030);
    int v13 = (void *)swift_task_alloc(async function pointer to dispatch thunk of ResponseGenerating.makeSuccessOutput(dialog:outputGenerationManifest:)[1]);
    v7[89] = v13;
    *int v13 = v7;
    v13[1] = sub_1E8B9C;
    return dispatch thunk of ResponseGenerating.makeSuccessOutput(dialog:outputGenerationManifest:)( v7[37],  a1,  v7[38],  v7[41],  v7[42]);
  }

uint64_t sub_1E8B9C()
{
  return swift_task_switch(sub_1E8BF0, 0LL, 0LL);
}

uint64_t sub_1E8BF0()
{
  uint64_t v1 = *(void *)(v0 + 640);
  uint64_t v2 = *(void *)(v0 + 632);
  uint64_t v3 = *(void *)(v0 + 624);
  uint64_t v4 = *(void *)(v0 + 616);
  uint64_t v5 = *(void *)(v0 + 608);
  uint64_t v6 = *(void *)(v0 + 600);
  uint64_t v7 = *(void *)(v0 + 592);
  uint64_t v8 = *(void *)(v0 + 584);
  uint64_t v9 = *(void *)(v0 + 560);
  uint64_t v11 = *(void *)(v0 + 536);
  uint64_t v12 = *(void *)(v0 + 528);
  uint64_t v13 = *(void *)(v0 + 520);
  uint64_t v14 = *(void *)(v0 + 512);
  uint64_t v15 = *(void *)(v0 + 504);
  uint64_t v16 = *(void *)(v0 + 496);
  uint64_t v17 = *(void *)(v0 + 472);
  uint64_t v18 = *(void *)(v0 + 464);
  uint64_t v19 = *(void *)(v0 + 456);
  uint64_t v20 = *(void *)(v0 + 448);
  uint64_t v21 = *(void *)(v0 + 440);
  uint64_t v22 = *(void *)(v0 + 432);
  uint64_t v23 = *(void *)(v0 + 424);
  uint64_t v24 = *(void *)(v0 + 416);
  uint64_t v25 = *(void *)(v0 + 408);
  uint64_t v26 = *(void *)(v0 + 400);
  uint64_t v27 = *(void *)(v0 + 392);
  uint64_t v28 = *(void *)(v0 + 384);
  uint64_t v29 = *(void *)(v0 + 376);
  uint64_t v30 = *(void *)(v0 + 368);
  uint64_t v31 = *(void *)(v0 + 360);
  uint64_t v32 = *(void *)(v0 + 352);
  swift_task_dealloc(*(void *)(v0 + 664));
  swift_task_dealloc(v1);
  swift_task_dealloc(v2);
  swift_task_dealloc(v3);
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  swift_task_dealloc(v6);
  swift_task_dealloc(v7);
  swift_task_dealloc(v8);
  swift_task_dealloc(v9);
  swift_task_dealloc(v11);
  swift_task_dealloc(v12);
  swift_task_dealloc(v13);
  swift_task_dealloc(v14);
  swift_task_dealloc(v15);
  swift_task_dealloc(v16);
  swift_task_dealloc(v17);
  swift_task_dealloc(v18);
  swift_task_dealloc(v19);
  swift_task_dealloc(v20);
  swift_task_dealloc(v21);
  swift_task_dealloc(v22);
  swift_task_dealloc(v23);
  swift_task_dealloc(v24);
  swift_task_dealloc(v25);
  swift_task_dealloc(v26);
  swift_task_dealloc(v27);
  swift_task_dealloc(v28);
  swift_task_dealloc(v29);
  swift_task_dealloc(v30);
  swift_task_dealloc(v31);
  swift_task_dealloc(v32);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1E8DEC()
{
  uint64_t v1 = (void *)(*(void *)v0 + 176LL);
  uint64_t v2 = (void *)(*(void *)v0 + 216LL);
  uint64_t v3 = *(void *)(*(void *)v0 + 728LL);
  swift_task_dealloc(*(void *)(*(void *)v0 + 736LL));
  swift_bridgeObjectRelease(v3);
  sub_6C3C(v2);
  sub_6C3C(v1);
  return swift_task_switch(sub_1E8E6C, 0LL, 0LL);
}

uint64_t sub_1E8E6C()
{
  uint64_t v1 = *(void *)(v0 + 536);
  uint64_t v2 = *(void *)(v0 + 528);
  uint64_t v3 = *(void *)(v0 + 480);
  uint64_t v4 = *(void *)(v0 + 488);

  uint64_t v5 = *(void (**)(uint64_t, uint64_t))(v4 + 8);
  v5(v2, v3);
  v5(v1, v3);
  uint64_t v6 = *(void *)(v0 + 640);
  uint64_t v7 = *(void *)(v0 + 632);
  uint64_t v8 = *(void *)(v0 + 624);
  uint64_t v9 = *(void *)(v0 + 616);
  uint64_t v10 = *(void *)(v0 + 608);
  uint64_t v11 = *(void *)(v0 + 600);
  uint64_t v12 = *(void *)(v0 + 592);
  uint64_t v13 = *(void *)(v0 + 584);
  uint64_t v14 = *(void *)(v0 + 560);
  uint64_t v16 = *(void *)(v0 + 536);
  uint64_t v17 = *(void *)(v0 + 528);
  uint64_t v18 = *(void *)(v0 + 520);
  uint64_t v19 = *(void *)(v0 + 512);
  uint64_t v20 = *(void *)(v0 + 504);
  uint64_t v21 = *(void *)(v0 + 496);
  uint64_t v22 = *(void *)(v0 + 472);
  uint64_t v23 = *(void *)(v0 + 464);
  uint64_t v24 = *(void *)(v0 + 456);
  uint64_t v25 = *(void *)(v0 + 448);
  uint64_t v26 = *(void *)(v0 + 440);
  uint64_t v27 = *(void *)(v0 + 432);
  uint64_t v28 = *(void *)(v0 + 424);
  uint64_t v29 = *(void *)(v0 + 416);
  uint64_t v30 = *(void *)(v0 + 408);
  uint64_t v31 = *(void *)(v0 + 400);
  uint64_t v32 = *(void *)(v0 + 392);
  uint64_t v33 = *(void *)(v0 + 384);
  uint64_t v34 = *(void *)(v0 + 376);
  uint64_t v35 = *(void *)(v0 + 368);
  uint64_t v36 = *(void *)(v0 + 360);
  uint64_t v37 = *(void *)(v0 + 352);
  swift_task_dealloc(*(void *)(v0 + 664));
  swift_task_dealloc(v6);
  swift_task_dealloc(v7);
  swift_task_dealloc(v8);
  swift_task_dealloc(v9);
  swift_task_dealloc(v10);
  swift_task_dealloc(v11);
  swift_task_dealloc(v12);
  swift_task_dealloc(v13);
  swift_task_dealloc(v14);
  swift_task_dealloc(v16);
  swift_task_dealloc(v17);
  swift_task_dealloc(v18);
  swift_task_dealloc(v19);
  swift_task_dealloc(v20);
  swift_task_dealloc(v21);
  swift_task_dealloc(v22);
  swift_task_dealloc(v23);
  swift_task_dealloc(v24);
  swift_task_dealloc(v25);
  swift_task_dealloc(v26);
  swift_task_dealloc(v27);
  swift_task_dealloc(v28);
  swift_task_dealloc(v29);
  swift_task_dealloc(v30);
  swift_task_dealloc(v31);
  swift_task_dealloc(v32);
  swift_task_dealloc(v33);
  swift_task_dealloc(v34);
  swift_task_dealloc(v35);
  swift_task_dealloc(v36);
  swift_task_dealloc(v37);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1E9090()
{
  uint64_t v1 = (void *)(*(void *)v0 + 136LL);
  uint64_t v2 = *(void *)(*(void *)v0 + 752LL);
  swift_task_dealloc(*(void *)(*(void *)v0 + 760LL));
  swift_bridgeObjectRelease(v2);
  sub_6C3C(v1);
  return swift_task_switch(sub_1E90FC, 0LL, 0LL);
}

uint64_t sub_1E90FC()
{
  uint64_t v1 = *(void *)(v0 + 520);
  uint64_t v2 = *(void *)(v0 + 480);
  uint64_t v3 = *(void *)(v0 + 488);

  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
  uint64_t v4 = *(void *)(v0 + 640);
  uint64_t v5 = *(void *)(v0 + 632);
  uint64_t v6 = *(void *)(v0 + 624);
  uint64_t v7 = *(void *)(v0 + 616);
  uint64_t v8 = *(void *)(v0 + 608);
  uint64_t v9 = *(void *)(v0 + 600);
  uint64_t v10 = *(void *)(v0 + 592);
  uint64_t v11 = *(void *)(v0 + 584);
  uint64_t v12 = *(void *)(v0 + 560);
  uint64_t v14 = *(void *)(v0 + 536);
  uint64_t v15 = *(void *)(v0 + 528);
  uint64_t v16 = *(void *)(v0 + 520);
  uint64_t v17 = *(void *)(v0 + 512);
  uint64_t v18 = *(void *)(v0 + 504);
  uint64_t v19 = *(void *)(v0 + 496);
  uint64_t v20 = *(void *)(v0 + 472);
  uint64_t v21 = *(void *)(v0 + 464);
  uint64_t v22 = *(void *)(v0 + 456);
  uint64_t v23 = *(void *)(v0 + 448);
  uint64_t v24 = *(void *)(v0 + 440);
  uint64_t v25 = *(void *)(v0 + 432);
  uint64_t v26 = *(void *)(v0 + 424);
  uint64_t v27 = *(void *)(v0 + 416);
  uint64_t v28 = *(void *)(v0 + 408);
  uint64_t v29 = *(void *)(v0 + 400);
  uint64_t v30 = *(void *)(v0 + 392);
  uint64_t v31 = *(void *)(v0 + 384);
  uint64_t v32 = *(void *)(v0 + 376);
  uint64_t v33 = *(void *)(v0 + 368);
  uint64_t v34 = *(void *)(v0 + 360);
  uint64_t v35 = *(void *)(v0 + 352);
  swift_task_dealloc(*(void *)(v0 + 664));
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  swift_task_dealloc(v6);
  swift_task_dealloc(v7);
  swift_task_dealloc(v8);
  swift_task_dealloc(v9);
  swift_task_dealloc(v10);
  swift_task_dealloc(v11);
  swift_task_dealloc(v12);
  swift_task_dealloc(v14);
  swift_task_dealloc(v15);
  swift_task_dealloc(v16);
  swift_task_dealloc(v17);
  swift_task_dealloc(v18);
  swift_task_dealloc(v19);
  swift_task_dealloc(v20);
  swift_task_dealloc(v21);
  swift_task_dealloc(v22);
  swift_task_dealloc(v23);
  swift_task_dealloc(v24);
  swift_task_dealloc(v25);
  swift_task_dealloc(v26);
  swift_task_dealloc(v27);
  swift_task_dealloc(v28);
  swift_task_dealloc(v29);
  swift_task_dealloc(v30);
  swift_task_dealloc(v31);
  swift_task_dealloc(v32);
  swift_task_dealloc(v33);
  swift_task_dealloc(v34);
  swift_task_dealloc(v35);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1E9310()
{
  uint64_t v1 = (void *)(*(void *)v0 + 96LL);
  swift_task_dealloc(*(void *)(*(void *)v0 + 768LL));
  sub_6C3C(v1);
  return swift_task_switch(sub_1E9370, 0LL, 0LL);
}

uint64_t sub_1E9370()
{
  uint64_t v1 = *(void *)(v0 + 640);
  uint64_t v2 = *(void *)(v0 + 632);
  uint64_t v3 = *(void *)(v0 + 624);
  uint64_t v4 = *(void *)(v0 + 616);
  uint64_t v5 = *(void *)(v0 + 608);
  uint64_t v6 = *(void *)(v0 + 600);
  uint64_t v7 = *(void *)(v0 + 592);
  uint64_t v8 = *(void *)(v0 + 584);
  uint64_t v9 = *(void *)(v0 + 560);
  uint64_t v11 = *(void *)(v0 + 536);
  uint64_t v12 = *(void *)(v0 + 528);
  uint64_t v13 = *(void *)(v0 + 520);
  uint64_t v14 = *(void *)(v0 + 512);
  uint64_t v15 = *(void *)(v0 + 504);
  uint64_t v16 = *(void *)(v0 + 496);
  uint64_t v17 = *(void *)(v0 + 472);
  uint64_t v18 = *(void *)(v0 + 464);
  uint64_t v19 = *(void *)(v0 + 456);
  uint64_t v20 = *(void *)(v0 + 448);
  uint64_t v21 = *(void *)(v0 + 440);
  uint64_t v22 = *(void *)(v0 + 432);
  uint64_t v23 = *(void *)(v0 + 424);
  uint64_t v24 = *(void *)(v0 + 416);
  uint64_t v25 = *(void *)(v0 + 408);
  uint64_t v26 = *(void *)(v0 + 400);
  uint64_t v27 = *(void *)(v0 + 392);
  uint64_t v28 = *(void *)(v0 + 384);
  uint64_t v29 = *(void *)(v0 + 376);
  uint64_t v30 = *(void *)(v0 + 368);
  uint64_t v31 = *(void *)(v0 + 360);
  uint64_t v32 = *(void *)(v0 + 352);
  swift_task_dealloc(*(void *)(v0 + 664));
  swift_task_dealloc(v1);
  swift_task_dealloc(v2);
  swift_task_dealloc(v3);
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  swift_task_dealloc(v6);
  swift_task_dealloc(v7);
  swift_task_dealloc(v8);
  swift_task_dealloc(v9);
  swift_task_dealloc(v11);
  swift_task_dealloc(v12);
  swift_task_dealloc(v13);
  swift_task_dealloc(v14);
  swift_task_dealloc(v15);
  swift_task_dealloc(v16);
  swift_task_dealloc(v17);
  swift_task_dealloc(v18);
  swift_task_dealloc(v19);
  swift_task_dealloc(v20);
  swift_task_dealloc(v21);
  swift_task_dealloc(v22);
  swift_task_dealloc(v23);
  swift_task_dealloc(v24);
  swift_task_dealloc(v25);
  swift_task_dealloc(v26);
  swift_task_dealloc(v27);
  swift_task_dealloc(v28);
  swift_task_dealloc(v29);
  swift_task_dealloc(v30);
  swift_task_dealloc(v31);
  swift_task_dealloc(v32);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1E9574()
{
  uint64_t v1 = (void *)(*(void *)v0 + 56LL);
  uint64_t v2 = *(void *)(*(void *)v0 + 784LL);
  swift_task_dealloc(*(void *)(*(void *)v0 + 792LL));
  swift_bridgeObjectRelease(v2);
  sub_6C3C(v1);
  return swift_task_switch(sub_1E95E0, 0LL, 0LL);
}

uint64_t sub_1E95E0()
{
  uint64_t v1 = *(void *)(v0 + 504);
  uint64_t v2 = *(void *)(v0 + 480);
  uint64_t v3 = *(void *)(v0 + 488);

  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
  uint64_t v4 = *(void *)(v0 + 640);
  uint64_t v5 = *(void *)(v0 + 632);
  uint64_t v6 = *(void *)(v0 + 624);
  uint64_t v7 = *(void *)(v0 + 616);
  uint64_t v8 = *(void *)(v0 + 608);
  uint64_t v9 = *(void *)(v0 + 600);
  uint64_t v10 = *(void *)(v0 + 592);
  uint64_t v11 = *(void *)(v0 + 584);
  uint64_t v12 = *(void *)(v0 + 560);
  uint64_t v14 = *(void *)(v0 + 536);
  uint64_t v15 = *(void *)(v0 + 528);
  uint64_t v16 = *(void *)(v0 + 520);
  uint64_t v17 = *(void *)(v0 + 512);
  uint64_t v18 = *(void *)(v0 + 504);
  uint64_t v19 = *(void *)(v0 + 496);
  uint64_t v20 = *(void *)(v0 + 472);
  uint64_t v21 = *(void *)(v0 + 464);
  uint64_t v22 = *(void *)(v0 + 456);
  uint64_t v23 = *(void *)(v0 + 448);
  uint64_t v24 = *(void *)(v0 + 440);
  uint64_t v25 = *(void *)(v0 + 432);
  uint64_t v26 = *(void *)(v0 + 424);
  uint64_t v27 = *(void *)(v0 + 416);
  uint64_t v28 = *(void *)(v0 + 408);
  uint64_t v29 = *(void *)(v0 + 400);
  uint64_t v30 = *(void *)(v0 + 392);
  uint64_t v31 = *(void *)(v0 + 384);
  uint64_t v32 = *(void *)(v0 + 376);
  uint64_t v33 = *(void *)(v0 + 368);
  uint64_t v34 = *(void *)(v0 + 360);
  uint64_t v35 = *(void *)(v0 + 352);
  swift_task_dealloc(*(void *)(v0 + 664));
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  swift_task_dealloc(v6);
  swift_task_dealloc(v7);
  swift_task_dealloc(v8);
  swift_task_dealloc(v9);
  swift_task_dealloc(v10);
  swift_task_dealloc(v11);
  swift_task_dealloc(v12);
  swift_task_dealloc(v14);
  swift_task_dealloc(v15);
  swift_task_dealloc(v16);
  swift_task_dealloc(v17);
  swift_task_dealloc(v18);
  swift_task_dealloc(v19);
  swift_task_dealloc(v20);
  swift_task_dealloc(v21);
  swift_task_dealloc(v22);
  swift_task_dealloc(v23);
  swift_task_dealloc(v24);
  swift_task_dealloc(v25);
  swift_task_dealloc(v26);
  swift_task_dealloc(v27);
  swift_task_dealloc(v28);
  swift_task_dealloc(v29);
  swift_task_dealloc(v30);
  swift_task_dealloc(v31);
  swift_task_dealloc(v32);
  swift_task_dealloc(v33);
  swift_task_dealloc(v34);
  swift_task_dealloc(v35);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1E97F4()
{
  uint64_t v1 = (void *)(*(void *)v0 + 16LL);
  swift_task_dealloc(*(void *)(*(void *)v0 + 800LL));
  sub_6C3C(v1);
  return swift_task_switch(sub_1E9854, 0LL, 0LL);
}

uint64_t sub_1E9854()
{
  uint64_t v1 = *(void *)(v0 + 640);
  uint64_t v2 = *(void *)(v0 + 632);
  uint64_t v3 = *(void *)(v0 + 624);
  uint64_t v4 = *(void *)(v0 + 616);
  uint64_t v5 = *(void *)(v0 + 608);
  uint64_t v6 = *(void *)(v0 + 600);
  uint64_t v7 = *(void *)(v0 + 592);
  uint64_t v8 = *(void *)(v0 + 584);
  uint64_t v9 = *(void *)(v0 + 560);
  uint64_t v11 = *(void *)(v0 + 536);
  uint64_t v12 = *(void *)(v0 + 528);
  uint64_t v13 = *(void *)(v0 + 520);
  uint64_t v14 = *(void *)(v0 + 512);
  uint64_t v15 = *(void *)(v0 + 504);
  uint64_t v16 = *(void *)(v0 + 496);
  uint64_t v17 = *(void *)(v0 + 472);
  uint64_t v18 = *(void *)(v0 + 464);
  uint64_t v19 = *(void *)(v0 + 456);
  uint64_t v20 = *(void *)(v0 + 448);
  uint64_t v21 = *(void *)(v0 + 440);
  uint64_t v22 = *(void *)(v0 + 432);
  uint64_t v23 = *(void *)(v0 + 424);
  uint64_t v24 = *(void *)(v0 + 416);
  uint64_t v25 = *(void *)(v0 + 408);
  uint64_t v26 = *(void *)(v0 + 400);
  uint64_t v27 = *(void *)(v0 + 392);
  uint64_t v28 = *(void *)(v0 + 384);
  uint64_t v29 = *(void *)(v0 + 376);
  uint64_t v30 = *(void *)(v0 + 368);
  uint64_t v31 = *(void *)(v0 + 360);
  uint64_t v32 = *(void *)(v0 + 352);
  swift_task_dealloc(*(void *)(v0 + 664));
  swift_task_dealloc(v1);
  swift_task_dealloc(v2);
  swift_task_dealloc(v3);
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  swift_task_dealloc(v6);
  swift_task_dealloc(v7);
  swift_task_dealloc(v8);
  swift_task_dealloc(v9);
  swift_task_dealloc(v11);
  swift_task_dealloc(v12);
  swift_task_dealloc(v13);
  swift_task_dealloc(v14);
  swift_task_dealloc(v15);
  swift_task_dealloc(v16);
  swift_task_dealloc(v17);
  swift_task_dealloc(v18);
  swift_task_dealloc(v19);
  swift_task_dealloc(v20);
  swift_task_dealloc(v21);
  swift_task_dealloc(v22);
  swift_task_dealloc(v23);
  swift_task_dealloc(v24);
  swift_task_dealloc(v25);
  swift_task_dealloc(v26);
  swift_task_dealloc(v27);
  swift_task_dealloc(v28);
  swift_task_dealloc(v29);
  swift_task_dealloc(v30);
  swift_task_dealloc(v31);
  swift_task_dealloc(v32);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1E9A58()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 816LL);
  swift_task_dealloc(*(void *)(*(void *)v0 + 824LL));
  swift_bridgeObjectRelease(v1);
  return swift_task_switch(sub_1E9AB8, 0LL, 0LL);
}

uint64_t sub_1E9AB8()
{
  uint64_t v1 = *(void *)(v0 + 640);
  uint64_t v2 = *(void *)(v0 + 632);
  uint64_t v3 = *(void *)(v0 + 624);
  uint64_t v4 = *(void *)(v0 + 616);
  uint64_t v5 = *(void *)(v0 + 608);
  uint64_t v6 = *(void *)(v0 + 600);
  uint64_t v7 = *(void *)(v0 + 592);
  uint64_t v8 = *(void *)(v0 + 584);
  uint64_t v9 = *(void *)(v0 + 560);
  uint64_t v11 = *(void *)(v0 + 536);
  uint64_t v12 = *(void *)(v0 + 528);
  uint64_t v13 = *(void *)(v0 + 520);
  uint64_t v14 = *(void *)(v0 + 512);
  uint64_t v15 = *(void *)(v0 + 504);
  uint64_t v16 = *(void *)(v0 + 496);
  uint64_t v17 = *(void *)(v0 + 472);
  uint64_t v18 = *(void *)(v0 + 464);
  uint64_t v19 = *(void *)(v0 + 456);
  uint64_t v20 = *(void *)(v0 + 448);
  uint64_t v21 = *(void *)(v0 + 440);
  uint64_t v22 = *(void *)(v0 + 432);
  uint64_t v23 = *(void *)(v0 + 424);
  uint64_t v24 = *(void *)(v0 + 416);
  uint64_t v25 = *(void *)(v0 + 408);
  uint64_t v26 = *(void *)(v0 + 400);
  uint64_t v27 = *(void *)(v0 + 392);
  uint64_t v28 = *(void *)(v0 + 384);
  uint64_t v29 = *(void *)(v0 + 376);
  uint64_t v30 = *(void *)(v0 + 368);
  uint64_t v31 = *(void *)(v0 + 360);
  uint64_t v32 = *(void *)(v0 + 352);
  swift_task_dealloc(*(void *)(v0 + 664));
  swift_task_dealloc(v1);
  swift_task_dealloc(v2);
  swift_task_dealloc(v3);
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  swift_task_dealloc(v6);
  swift_task_dealloc(v7);
  swift_task_dealloc(v8);
  swift_task_dealloc(v9);
  swift_task_dealloc(v11);
  swift_task_dealloc(v12);
  swift_task_dealloc(v13);
  swift_task_dealloc(v14);
  swift_task_dealloc(v15);
  swift_task_dealloc(v16);
  swift_task_dealloc(v17);
  swift_task_dealloc(v18);
  swift_task_dealloc(v19);
  swift_task_dealloc(v20);
  swift_task_dealloc(v21);
  swift_task_dealloc(v22);
  swift_task_dealloc(v23);
  swift_task_dealloc(v24);
  swift_task_dealloc(v25);
  swift_task_dealloc(v26);
  swift_task_dealloc(v27);
  swift_task_dealloc(v28);
  swift_task_dealloc(v29);
  swift_task_dealloc(v30);
  swift_task_dealloc(v31);
  swift_task_dealloc(v32);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1E9CB4()
{
  uint64_t v1 = *(void **)v0;
  uint64_t v36 = *(void **)v0;
  swift_task_dealloc(*(void *)(*(void *)v0 + 832LL));
  uint64_t v2 = v1[83];
  uint64_t v3 = v1[80];
  uint64_t v4 = v1[79];
  uint64_t v5 = v1[78];
  uint64_t v6 = v1[77];
  uint64_t v7 = v1[76];
  uint64_t v8 = v1[75];
  uint64_t v9 = v1[74];
  uint64_t v10 = v1[73];
  uint64_t v11 = v1[70];
  uint64_t v15 = v1[67];
  uint64_t v16 = v1[66];
  uint64_t v17 = v1[65];
  uint64_t v18 = v1[64];
  uint64_t v19 = v1[63];
  uint64_t v20 = v1[62];
  uint64_t v21 = v1[59];
  uint64_t v22 = v1[58];
  uint64_t v23 = v1[57];
  uint64_t v24 = v1[56];
  uint64_t v25 = v1[55];
  uint64_t v26 = v1[54];
  uint64_t v27 = v1[53];
  uint64_t v28 = v1[52];
  uint64_t v29 = v1[51];
  uint64_t v30 = v1[50];
  uint64_t v31 = v1[49];
  uint64_t v32 = v1[48];
  uint64_t v33 = v1[47];
  uint64_t v34 = v1[46];
  uint64_t v13 = v1 + 44;
  uint64_t v12 = v1[44];
  uint64_t v35 = v13[1];
  swift_task_dealloc(v2);
  swift_task_dealloc(v3);
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  swift_task_dealloc(v6);
  swift_task_dealloc(v7);
  swift_task_dealloc(v8);
  swift_task_dealloc(v9);
  swift_task_dealloc(v10);
  swift_task_dealloc(v11);
  swift_task_dealloc(v15);
  swift_task_dealloc(v16);
  swift_task_dealloc(v17);
  swift_task_dealloc(v18);
  swift_task_dealloc(v19);
  swift_task_dealloc(v20);
  swift_task_dealloc(v21);
  swift_task_dealloc(v22);
  swift_task_dealloc(v23);
  swift_task_dealloc(v24);
  swift_task_dealloc(v25);
  swift_task_dealloc(v26);
  swift_task_dealloc(v27);
  swift_task_dealloc(v28);
  swift_task_dealloc(v29);
  swift_task_dealloc(v30);
  swift_task_dealloc(v31);
  swift_task_dealloc(v32);
  swift_task_dealloc(v33);
  swift_task_dealloc(v34);
  swift_task_dealloc(v35);
  swift_task_dealloc(v12);
  return ((uint64_t (*)(void))v36[1])();
}

uint64_t sub_1E9EC8()
{
  uint64_t v1 = *(void *)(v0 + 640);
  uint64_t v2 = *(void *)(v0 + 632);
  uint64_t v3 = *(void *)(v0 + 624);
  uint64_t v4 = *(void *)(v0 + 616);
  uint64_t v5 = *(void *)(v0 + 608);
  uint64_t v6 = *(void *)(v0 + 600);
  uint64_t v7 = *(void *)(v0 + 592);
  uint64_t v8 = *(void *)(v0 + 584);
  uint64_t v9 = *(void *)(v0 + 560);
  uint64_t v11 = *(void *)(v0 + 536);
  uint64_t v12 = *(void *)(v0 + 528);
  uint64_t v13 = *(void *)(v0 + 520);
  uint64_t v14 = *(void *)(v0 + 512);
  uint64_t v15 = *(void *)(v0 + 504);
  uint64_t v16 = *(void *)(v0 + 496);
  uint64_t v17 = *(void *)(v0 + 472);
  uint64_t v18 = *(void *)(v0 + 464);
  uint64_t v19 = *(void *)(v0 + 456);
  uint64_t v20 = *(void *)(v0 + 448);
  uint64_t v21 = *(void *)(v0 + 440);
  uint64_t v22 = *(void *)(v0 + 432);
  uint64_t v23 = *(void *)(v0 + 424);
  uint64_t v24 = *(void *)(v0 + 416);
  uint64_t v25 = *(void *)(v0 + 408);
  uint64_t v26 = *(void *)(v0 + 400);
  uint64_t v27 = *(void *)(v0 + 392);
  uint64_t v28 = *(void *)(v0 + 384);
  uint64_t v29 = *(void *)(v0 + 376);
  uint64_t v30 = *(void *)(v0 + 368);
  uint64_t v31 = *(void *)(v0 + 360);
  uint64_t v32 = *(void *)(v0 + 352);
  swift_task_dealloc(*(void *)(v0 + 664));
  swift_task_dealloc(v1);
  swift_task_dealloc(v2);
  swift_task_dealloc(v3);
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  swift_task_dealloc(v6);
  swift_task_dealloc(v7);
  swift_task_dealloc(v8);
  swift_task_dealloc(v9);
  swift_task_dealloc(v11);
  swift_task_dealloc(v12);
  swift_task_dealloc(v13);
  swift_task_dealloc(v14);
  swift_task_dealloc(v15);
  swift_task_dealloc(v16);
  swift_task_dealloc(v17);
  swift_task_dealloc(v18);
  swift_task_dealloc(v19);
  swift_task_dealloc(v20);
  swift_task_dealloc(v21);
  swift_task_dealloc(v22);
  swift_task_dealloc(v23);
  swift_task_dealloc(v24);
  swift_task_dealloc(v25);
  swift_task_dealloc(v26);
  swift_task_dealloc(v27);
  swift_task_dealloc(v28);
  swift_task_dealloc(v29);
  swift_task_dealloc(v30);
  swift_task_dealloc(v31);
  swift_task_dealloc(v32);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t type metadata accessor for ResponseFactoryOutputContext(uint64_t a1)
{
  return sub_1E58C(a1, (uint64_t *)&unk_28DF98, (uint64_t)&nominal type descriptor for ResponseFactoryOutputContext);
}

uint64_t sub_1EA0D0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ResponseFactoryOutputContext(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16LL))(a2, a1, v4);
  return a2;
}

uint64_t sub_1EA114()
{
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v33 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v3 = (v33 + 32) & ~v33;
  unint64_t v4 = (*(void *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8LL;
  unint64_t v5 = (v4 + 15) & 0xFFFFFFFFFFFFFFF8LL;
  unint64_t v6 = (v5 + 15) & 0xFFFFFFFFFFFFFFF8LL;
  uint64_t v7 = (int *)type metadata accessor for ResponseFactoryOutputContext(0LL);
  uint64_t v8 = *((void *)v7 - 1);
  uint64_t v9 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v32 = *(void *)(v8 + 64);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  uint64_t v10 = *(void *)(v0 + v4);
  uint64_t v11 = (v9 + v6 + 8) & ~v9;
  swift_release(v10);

  uint64_t v12 = v0 + v11;
  swift_errorRelease(*(void *)(v0 + v11));
  uint64_t v13 = v0 + v11 + v7[5];
  uint64_t v14 = (int *)type metadata accessor for SnippetModelResponse(0LL);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, int *))(*((void *)v14 - 1) + 48LL))(v13, 1LL, v14))
  {
    uint64_t v31 = (v9 + v6 + 8) & ~v9;
    uint64_t v15 = type metadata accessor for SiriAudioSnippets(0LL);
    uint64_t v16 = *(void *)(v15 - 8);
    uint64_t v17 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v16 + 48);
    if (!v17(v13, 1LL, v15)) {
      (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v13, v15);
    }
    uint64_t v18 = v13 + v14[5];
    if (!v17(v18, 1LL, v15)) {
      (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v18, v15);
    }
    swift_bridgeObjectRelease(*(void *)(v13 + v14[6] + 8));
    swift_bridgeObjectRelease(*(void *)(v13 + v14[7]));
    uint64_t v11 = v31;
  }

  swift_errorRelease(*(void *)(v12 + v7[6]));
  uint64_t v19 = v12 + v7[7];
  uint64_t v20 = sub_6C5C(&qword_289340);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 48LL))(v19, 1LL, v20))
  {
    uint64_t v21 = type metadata accessor for TemplatingResult(0LL);
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v21 - 8) + 8LL))(v19, v21);
  }

  uint64_t v22 = v12 + v7[8];
  uint64_t v23 = type metadata accessor for NLContextUpdate(0LL);
  uint64_t v24 = *(void *)(v23 - 8);
  swift_bridgeObjectRelease(*(void *)(v12 + v7[9]));
  uint64_t v25 = (void *)(v12 + v7[11]);
  uint64_t v26 = type metadata accessor for ResponseFactoryOutputContext.AppIntentOutputContext(0LL);
  if (!(*(unsigned int (**)(void *, uint64_t, uint64_t))(*(void *)(v26 - 8) + 48LL))(v25, 1LL, v26))
  {
    if (v25[3]) {
      sub_6C3C(v25);
    }
    uint64_t v27 = (char *)v25 + *(int *)(v26 + 20);
    uint64_t v28 = type metadata accessor for AppIntentPerformOptions(0LL);
    uint64_t v29 = *(void *)(v28 - 8);
  }

  return swift_deallocObject(v0, v11 + v32, v33 | v9 | 7);
}

uint64_t type metadata accessor for ResponseFactoryOutputContext.AppIntentOutputContext(uint64_t a1)
{
  return sub_1E58C( a1,  (uint64_t *)&unk_28DEF8,  (uint64_t)&nominal type descriptor for ResponseFactoryOutputContext.AppIntentOutputContext);
}

uint64_t sub_1EA404(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ResponseFactoryOutputContext(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32LL))(a2, a1, v4);
  return a2;
}

uint64_t sub_1EA448(uint64_t a1)
{
  uint64_t v4 = *(void *)(v1 + 16);
  uint64_t v5 = *(void *)(v1 + 24);
  uint64_t v6 = *(void *)(v4 - 8);
  unint64_t v7 = (*(unsigned __int8 *)(v6 + 80) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  unint64_t v8 = (*(void *)(v6 + 64) + v7 + 7) & 0xFFFFFFFFFFFFFFF8LL;
  unint64_t v9 = (v8 + 15) & 0xFFFFFFFFFFFFFFF8LL;
  unint64_t v10 = (v9 + 15) & 0xFFFFFFFFFFFFFFF8LL;
  uint64_t v11 = *(unsigned __int8 *)(*(void *)(type metadata accessor for ResponseFactoryOutputContext(0LL) - 8) + 80LL);
  uint64_t v12 = v11 + v10 + 8;
  uint64_t v13 = *(void *)(v1 + v8);
  uint64_t v14 = *(void *)(v1 + v9);
  uint64_t v15 = v1 + v7;
  uint64_t v16 = *(void *)(v1 + v10);
  uint64_t v17 = v1 + (v12 & ~v11);
  uint64_t v18 = (void *)swift_task_alloc(dword_28DE74);
  *(void *)(v2 + swift_weakDestroy(v0 + 16) = v18;
  *uint64_t v18 = v2;
  v18[1] = sub_11C64;
  return sub_1E675C(a1, v15, v13, v14, v16, v17, v4, v5);
}

uint64_t sub_1EA530(uint64_t a1)
{
  return sub_1E6FB4(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

unint64_t sub_1EA538()
{
  unint64_t result = qword_286CA0;
  if (!qword_286CA0)
  {
    uint64_t v1 = type metadata accessor for SiriAudioSnippets(255LL);
    unint64_t result = swift_getWitnessTable(&protocol conformance descriptor for SiriAudioSnippets, v1);
    atomic_store(result, (unint64_t *)&qword_286CA0);
  }

  return result;
}

uint64_t *sub_1EA580(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = (uint64_t *)a1;
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80LL);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v9 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (uint64_t *)(v9 + ((v5 + 16LL) & ~(unint64_t)v5));
    swift_retain(v9);
  }

  else
  {
    uint64_t v7 = a2[3];
    if (v7)
    {
      uint64_t v8 = a2[4];
      *(void *)(a1 + 24) = v7;
      *(void *)(a1 + 3sub_6C3C(v0 + 2) = v8;
      (**(void (***)(uint64_t, uint64_t *))(v7 - 8))(a1, a2);
    }

    else
    {
      __int128 v10 = *((_OWORD *)a2 + 1);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(_OWORD *)(a1 + swift_weakDestroy(v0 + 16) = v10;
      *(void *)(a1 + 3sub_6C3C(v0 + 2) = a2[4];
    }

    uint64_t v11 = *(int *)(a3 + 20);
    uint64_t v12 = (char *)v4 + v11;
    uint64_t v13 = (char *)a2 + v11;
    uint64_t v14 = type metadata accessor for AppIntentPerformOptions(0LL);
    uint64_t v15 = *(void *)(v14 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1LL, v14))
    {
      uint64_t v16 = sub_6C5C(&qword_28DE98);
      memcpy(v12, v13, *(void *)(*(void *)(v16 - 8) + 64LL));
    }

    else
    {
      (*(void (**)(char *, char *, uint64_t))(v15 + 16))(v12, v13, v14);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v15 + 56))(v12, 0LL, 1LL, v14);
    }
  }

  return v4;
}

uint64_t sub_1EA6A0(void *a1, uint64_t a2)
{
  if (a1[3]) {
    sub_6C3C(a1);
  }
  uint64_t v4 = (char *)a1 + *(int *)(a2 + 20);
  uint64_t v5 = type metadata accessor for AppIntentPerformOptions(0LL);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1LL, v5);
  if (!(_DWORD)result) {
    return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v4, v5);
  }
  return result;
}

uint64_t sub_1EA724(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(a2 + 24);
  if (v6)
  {
    uint64_t v7 = *(void *)(a2 + 32);
    *(void *)(a1 + 24) = v6;
    *(void *)(a1 + 3sub_6C3C(v0 + 2) = v7;
    (**(void (***)(uint64_t, uint64_t))(v6 - 8))(a1, a2);
  }

  else
  {
    __int128 v8 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + swift_weakDestroy(v0 + 16) = v8;
    *(void *)(a1 + 3sub_6C3C(v0 + 2) = *(void *)(a2 + 32);
  }

  uint64_t v9 = *(int *)(a3 + 20);
  __int128 v10 = (void *)(a1 + v9);
  uint64_t v11 = (const void *)(a2 + v9);
  uint64_t v12 = type metadata accessor for AppIntentPerformOptions(0LL);
  uint64_t v13 = *(void *)(v12 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v13 + 48))(v11, 1LL, v12))
  {
    uint64_t v14 = sub_6C5C(&qword_28DE98);
    memcpy(v10, v11, *(void *)(*(void *)(v14 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v13 + 16))(v10, v11, v12);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v13 + 56))(v10, 0LL, 1LL, v12);
  }

  return a1;
}

uint64_t sub_1EA818(uint64_t a1, __int128 *a2, uint64_t a3)
{
  uint64_t v6 = *((void *)a2 + 3);
  if (*(void *)(a1 + 24))
  {
    if (v6)
    {
      sub_14ECD4((void *)a1, a2);
      goto LABEL_8;
    }

    sub_6C3C((void *)a1);
  }

  else if (v6)
  {
    *(void *)(a1 + 24) = v6;
    *(void *)(a1 + 3sub_6C3C(v0 + 2) = *((void *)a2 + 4);
    (**(void (***)(uint64_t, __int128 *))(v6 - 8))(a1, a2);
    goto LABEL_8;
  }

  __int128 v7 = *a2;
  __int128 v8 = a2[1];
  *(void *)(a1 + 3sub_6C3C(v0 + 2) = *((void *)a2 + 4);
  *(_OWORD *)a1 = v7;
  *(_OWORD *)(a1 + swift_weakDestroy(v0 + 16) = v8;
LABEL_8:
  uint64_t v9 = *(int *)(a3 + 20);
  __int128 v10 = (void *)(a1 + v9);
  uint64_t v11 = (char *)a2 + v9;
  uint64_t v12 = type metadata accessor for AppIntentPerformOptions(0LL);
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v13 + 48);
  int v15 = v14(v10, 1LL, v12);
  int v16 = v14(v11, 1LL, v12);
  if (!v15)
  {
    if (!v16)
    {
      (*(void (**)(void *, char *, uint64_t))(v13 + 24))(v10, v11, v12);
      return a1;
    }

    (*(void (**)(void *, uint64_t))(v13 + 8))(v10, v12);
    goto LABEL_13;
  }

  if (v16)
  {
LABEL_13:
    uint64_t v17 = sub_6C5C(&qword_28DE98);
    memcpy(v10, v11, *(void *)(*(void *)(v17 - 8) + 64LL));
    return a1;
  }

  (*(void (**)(void *, char *, uint64_t))(v13 + 16))(v10, v11, v12);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v13 + 56))(v10, 0LL, 1LL, v12);
  return a1;
}

uint64_t sub_1EA97C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __int128 v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + swift_weakDestroy(v0 + 16) = v4;
  *(void *)(a1 + 3sub_6C3C(v0 + 2) = *(void *)(a2 + 32);
  uint64_t v5 = *(int *)(a3 + 20);
  uint64_t v6 = (void *)(a1 + v5);
  __int128 v7 = (const void *)(a2 + v5);
  uint64_t v8 = type metadata accessor for AppIntentPerformOptions(0LL);
  uint64_t v9 = *(void *)(v8 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v9 + 48))(v7, 1LL, v8))
  {
    uint64_t v10 = sub_6C5C(&qword_28DE98);
    memcpy(v6, v7, *(void *)(*(void *)(v10 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v9 + 32))(v6, v7, v8);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v9 + 56))(v6, 0LL, 1LL, v8);
  }

  return a1;
}

uint64_t sub_1EAA40(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (*(void *)(a1 + 24)) {
    sub_6C3C((void *)a1);
  }
  __int128 v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + swift_weakDestroy(v0 + 16) = v6;
  *(void *)(a1 + 3sub_6C3C(v0 + 2) = *(void *)(a2 + 32);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (void *)(a2 + v7);
  uint64_t v10 = type metadata accessor for AppIntentPerformOptions(0LL);
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v11 + 48);
  int v13 = v12(v8, 1LL, v10);
  int v14 = v12(v9, 1LL, v10);
  if (!v13)
  {
    if (!v14)
    {
      (*(void (**)(void *, void *, uint64_t))(v11 + 40))(v8, v9, v10);
      return a1;
    }

    (*(void (**)(void *, uint64_t))(v11 + 8))(v8, v10);
    goto LABEL_8;
  }

  if (v14)
  {
LABEL_8:
    uint64_t v15 = sub_6C5C(&qword_28DE98);
    memcpy(v8, v9, *(void *)(*(void *)(v15 - 8) + 64LL));
    return a1;
  }

  (*(void (**)(void *, void *, uint64_t))(v11 + 32))(v8, v9, v10);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0LL, 1LL, v10);
  return a1;
}

uint64_t sub_1EAB68(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1EAB74);
}

uint64_t sub_1EAB74(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if ((_DWORD)a2 == 2147483646)
  {
    unint64_t v4 = *(void *)(a1 + 24);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    int v5 = v4 - 1;
    if (v5 < 0) {
      int v5 = -1;
    }
    return (v5 + 1);
  }

  else
  {
    uint64_t v9 = sub_6C5C(&qword_28DE98);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 48LL))( a1 + *(int *)(a3 + 20),  a2,  v9);
  }

uint64_t sub_1EAC00(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1EAC0C);
}

uint64_t sub_1EAC0C(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 2147483646)
  {
    *(void *)(result + 24) = a2;
  }

  else
  {
    uint64_t v7 = sub_6C5C(&qword_28DE98);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56LL))( v5 + *(int *)(a4 + 20),  a2,  a2,  v7);
  }

  return result;
}

void sub_1EAC84(uint64_t a1)
{
  v4[0] = "(";
  sub_67DE8( 319LL,  (unint64_t *)&unk_28DF08,  (uint64_t (*)(uint64_t))&type metadata accessor for AppIntentPerformOptions);
  if (v3 <= 0x3F)
  {
    v4[1] = *(void *)(v2 - 8) + 64LL;
    swift_initStructMetadata(a1, 256LL, 2LL, v4, a1 + 16);
  }

void *sub_1EAD08(void *a1, void *a2, int *a3)
{
  unint64_t v3 = a1;
  int v4 = *(_DWORD *)(*((void *)a3 - 1) + 80LL);
  uint64_t v5 = *a2;
  if ((v4 & 0x20000) != 0)
  {
    *a1 = v5;
    unint64_t v3 = (void *)(v5 + ((v4 + 16LL) & ~(unint64_t)v4));
    swift_retain(v5);
  }

  else
  {
    swift_errorRetain(*a2);
    *unint64_t v3 = v5;
    uint64_t v8 = a3[5];
    uint64_t v9 = (char *)v3 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = (int *)type metadata accessor for SnippetModelResponse(0LL);
    uint64_t v12 = *((void *)v11 - 1);
    if ((*(unsigned int (**)(char *, uint64_t, int *))(v12 + 48))(v10, 1LL, v11))
    {
      uint64_t v13 = sub_6C5C(&qword_28DE90);
      memcpy(v9, v10, *(void *)(*(void *)(v13 - 8) + 64LL));
    }

    else
    {
      uint64_t v14 = type metadata accessor for SiriAudioSnippets(0LL);
      uint64_t v15 = *(void *)(v14 - 8);
      uint64_t v70 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48);
      uint64_t v69 = v15;
      if (v70(v10, 1LL, v14))
      {
        uint64_t v16 = sub_6C5C(&qword_284170);
        memcpy(v9, v10, *(void *)(*(void *)(v16 - 8) + 64LL));
      }

      else
      {
        (*(void (**)(char *, char *, uint64_t))(v15 + 16))(v9, v10, v14);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v15 + 56))(v9, 0LL, 1LL, v14);
      }

      uint64_t v17 = v11[5];
      uint64_t v18 = &v9[v17];
      uint64_t v19 = &v10[v17];
      if (v70(&v10[v17], 1LL, v14))
      {
        uint64_t v20 = sub_6C5C(&qword_284170);
        memcpy(v18, v19, *(void *)(*(void *)(v20 - 8) + 64LL));
      }

      else
      {
        (*(void (**)(char *, char *, uint64_t))(v69 + 16))(v18, v19, v14);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v69 + 56))(v18, 0LL, 1LL, v14);
      }

      uint64_t v21 = v11[6];
      uint64_t v22 = &v9[v21];
      uint64_t v23 = &v10[v21];
      uint64_t v24 = *((void *)v23 + 1);
      *(void *)uint64_t v22 = *(void *)v23;
      *((void *)v22 + 1) = v24;
      uint64_t v25 = v11[7];
      uint64_t v26 = *(void *)&v10[v25];
      *(void *)&v9[v25] = v26;
      uint64_t v27 = *(void (**)(char *, void, uint64_t, int *, __n128))(v12 + 56);
      swift_bridgeObjectRetain(v24);
      __n128 v28 = swift_bridgeObjectRetain(v26);
      v27(v9, 0LL, 1LL, v11, v28);
    }

    uint64_t v29 = a3[6];
    uint64_t v30 = *(void *)((char *)a2 + v29);
    swift_errorRetain(v30);
    *(void *)((char *)v3 + v29) = v30;
    uint64_t v31 = a3[7];
    uint64_t v32 = (char *)v3 + v31;
    uint64_t v33 = (char *)a2 + v31;
    uint64_t v34 = sub_6C5C(&qword_289340);
    uint64_t v35 = *(void *)(v34 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v35 + 48))(v33, 1LL, v34))
    {
      uint64_t v36 = sub_6C5C((uint64_t *)&unk_286BA0);
      memcpy(v32, v33, *(void *)(*(void *)(v36 - 8) + 64LL));
    }

    else
    {
      uint64_t v37 = type metadata accessor for TemplatingResult(0LL);
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v37 - 8) + 16LL))(v32, v33, v37);
      uint64_t v38 = *(int *)(v34 + 48);
      uint64_t v39 = *(void **)&v33[v38];
      *(void *)&v32[v38] = v39;
      uint64_t v40 = *(void (**)(char *, void, uint64_t, uint64_t))(v35 + 56);
      id v41 = v39;
      v40(v32, 0LL, 1LL, v34);
    }

    uint64_t v42 = a3[8];
    uint64_t v43 = (char *)v3 + v42;
    uint64_t v44 = (char *)a2 + v42;
    uint64_t v45 = type metadata accessor for NLContextUpdate(0LL);
    uint64_t v46 = *(void *)(v45 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v46 + 48))(v44, 1LL, v45))
    {
      uint64_t v47 = sub_6C5C((uint64_t *)&unk_286C50);
      memcpy(v43, v44, *(void *)(*(void *)(v47 - 8) + 64LL));
    }

    else
    {
      (*(void (**)(char *, char *, uint64_t))(v46 + 16))(v43, v44, v45);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v46 + 56))(v43, 0LL, 1LL, v45);
    }

    uint64_t v48 = a3[9];
    uint64_t v49 = a3[10];
    uint64_t v50 = *(void *)((char *)a2 + v48);
    *(void *)((char *)v3 + v48) = v50;
    *((_BYTE *)v3 + v49) = *((_BYTE *)a2 + v49);
    uint64_t v51 = a3[11];
    int v52 = (_OWORD *)((char *)v3 + v51);
    uint64_t v53 = (_OWORD *)((char *)a2 + v51);
    uint64_t v54 = type metadata accessor for ResponseFactoryOutputContext.AppIntentOutputContext(0LL);
    uint64_t v55 = *(void *)(v54 - 8);
    uint64_t v56 = *(unsigned int (**)(_OWORD *, uint64_t, uint64_t, __n128))(v55 + 48);
    __n128 v57 = swift_bridgeObjectRetain(v50);
    if (v56(v53, 1LL, v54, v57))
    {
      uint64_t v58 = sub_6C5C(&qword_28DF38);
      memcpy(v52, v53, *(void *)(*(void *)(v58 - 8) + 64LL));
    }

    else
    {
      uint64_t v59 = *((void *)v53 + 3);
      if (v59)
      {
        uint64_t v60 = *((void *)v53 + 4);
        *((void *)v52 + 3) = v59;
        *((void *)v52 + 4) = v60;
        (**(void (***)(_OWORD *, _OWORD *))(v59 - 8))(v52, v53);
      }

      else
      {
        __int128 v61 = v53[1];
        *int v52 = *v53;
        v52[1] = v61;
        *((void *)v52 + 4) = *((void *)v53 + 4);
      }

      uint64_t v62 = *(int *)(v54 + 20);
      uint64_t v63 = (char *)v52 + v62;
      int v64 = (char *)v53 + v62;
      uint64_t v65 = type metadata accessor for AppIntentPerformOptions(0LL);
      uint64_t v66 = *(void *)(v65 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v66 + 48))(v64, 1LL, v65))
      {
        uint64_t v67 = sub_6C5C(&qword_28DE98);
        memcpy(v63, v64, *(void *)(*(void *)(v67 - 8) + 64LL));
      }

      else
      {
        (*(void (**)(char *, char *, uint64_t))(v66 + 16))(v63, v64, v65);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v66 + 56))(v63, 0LL, 1LL, v65);
      }

      (*(void (**)(_OWORD *, void, uint64_t, uint64_t))(v55 + 56))(v52, 0LL, 1LL, v54);
    }
  }

  return v3;
}

uint64_t sub_1EB1B0(void *a1, int *a2)
{
  int v4 = (char *)a1 + a2[5];
  uint64_t v5 = (int *)type metadata accessor for SnippetModelResponse(0LL);
  if (!(*(unsigned int (**)(char *, uint64_t, int *))(*((void *)v5 - 1) + 48LL))(v4, 1LL, v5))
  {
    uint64_t v6 = type metadata accessor for SiriAudioSnippets(0LL);
    uint64_t v7 = *(void *)(v6 - 8);
    uint64_t v8 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48);
    if (!v8(v4, 1LL, v6)) {
      (*(void (**)(char *, uint64_t))(v7 + 8))(v4, v6);
    }
    uint64_t v9 = &v4[v5[5]];
    if (!v8(v9, 1LL, v6)) {
      (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    }
    swift_bridgeObjectRelease(*(void *)&v4[v5[6] + 8]);
    swift_bridgeObjectRelease(*(void *)&v4[v5[7]]);
  }

  swift_errorRelease(*(void *)((char *)a1 + a2[6]));
  uint64_t v10 = (char *)a1 + a2[7];
  uint64_t v11 = sub_6C5C(&qword_289340);
  if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v11 - 8) + 48LL))(v10, 1LL, v11))
  {
    uint64_t v12 = type metadata accessor for TemplatingResult(0LL);
    (*(void (**)(char *, uint64_t))(*(void *)(v12 - 8) + 8LL))(v10, v12);
  }

  uint64_t v13 = (char *)a1 + a2[8];
  uint64_t v14 = type metadata accessor for NLContextUpdate(0LL);
  uint64_t v15 = *(void *)(v14 - 8);
  swift_bridgeObjectRelease(*(void *)((char *)a1 + a2[9]));
  uint64_t v16 = (void *)((char *)a1 + a2[11]);
  uint64_t v17 = type metadata accessor for ResponseFactoryOutputContext.AppIntentOutputContext(0LL);
  uint64_t result = (*(uint64_t (**)(void *, uint64_t, uint64_t))(*(void *)(v17 - 8) + 48LL))(v16, 1LL, v17);
  if (!(_DWORD)result)
  {
    if (v16[3]) {
      sub_6C3C(v16);
    }
    uint64_t v19 = (char *)v16 + *(int *)(v17 + 20);
    uint64_t v20 = type metadata accessor for AppIntentPerformOptions(0LL);
    uint64_t v21 = *(void *)(v20 - 8);
    uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v21 + 48))(v19, 1LL, v20);
    if (!(_DWORD)result) {
      return (*(uint64_t (**)(char *, uint64_t))(v21 + 8))(v19, v20);
    }
  }

  return result;
}

void *sub_1EB3E8(void *a1, void *a2, int *a3)
{
  uint64_t v6 = *a2;
  swift_errorRetain(*a2);
  *a1 = v6;
  uint64_t v7 = a3[5];
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = (int *)type metadata accessor for SnippetModelResponse(0LL);
  uint64_t v11 = *((void *)v10 - 1);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v11 + 48))(v9, 1LL, v10))
  {
    uint64_t v12 = sub_6C5C(&qword_28DE90);
    memcpy(v8, v9, *(void *)(*(void *)(v12 - 8) + 64LL));
  }

  else
  {
    uint64_t v13 = type metadata accessor for SiriAudioSnippets(0LL);
    uint64_t v14 = *(void *)(v13 - 8);
    uint64_t v69 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48);
    uint64_t v68 = v14;
    if (v69(v9, 1LL, v13))
    {
      uint64_t v15 = sub_6C5C(&qword_284170);
      memcpy(v8, v9, *(void *)(*(void *)(v15 - 8) + 64LL));
    }

    else
    {
      (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v8, v9, v13);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v14 + 56))(v8, 0LL, 1LL, v13);
    }

    uint64_t v16 = v10[5];
    uint64_t v17 = &v8[v16];
    uint64_t v18 = &v9[v16];
    if (v69(&v9[v16], 1LL, v13))
    {
      uint64_t v19 = sub_6C5C(&qword_284170);
      memcpy(v17, v18, *(void *)(*(void *)(v19 - 8) + 64LL));
    }

    else
    {
      (*(void (**)(char *, char *, uint64_t))(v68 + 16))(v17, v18, v13);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v68 + 56))(v17, 0LL, 1LL, v13);
    }

    uint64_t v20 = v10[6];
    uint64_t v21 = &v8[v20];
    uint64_t v22 = &v9[v20];
    uint64_t v23 = *((void *)v22 + 1);
    *(void *)uint64_t v21 = *(void *)v22;
    *((void *)v21 + 1) = v23;
    uint64_t v24 = v10[7];
    uint64_t v25 = *(void *)&v9[v24];
    *(void *)&v8[v24] = v25;
    uint64_t v26 = *(void (**)(char *, void, uint64_t, int *, __n128))(v11 + 56);
    swift_bridgeObjectRetain(v23);
    __n128 v27 = swift_bridgeObjectRetain(v25);
    v26(v8, 0LL, 1LL, v10, v27);
  }

  uint64_t v28 = a3[6];
  uint64_t v29 = *(void *)((char *)a2 + v28);
  swift_errorRetain(v29);
  *(void *)((char *)a1 + v28) = v29;
  uint64_t v30 = a3[7];
  uint64_t v31 = (char *)a1 + v30;
  uint64_t v32 = (char *)a2 + v30;
  uint64_t v33 = sub_6C5C(&qword_289340);
  uint64_t v34 = *(void *)(v33 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v34 + 48))(v32, 1LL, v33))
  {
    uint64_t v35 = sub_6C5C((uint64_t *)&unk_286BA0);
    memcpy(v31, v32, *(void *)(*(void *)(v35 - 8) + 64LL));
  }

  else
  {
    uint64_t v36 = type metadata accessor for TemplatingResult(0LL);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v36 - 8) + 16LL))(v31, v32, v36);
    uint64_t v37 = *(int *)(v33 + 48);
    uint64_t v38 = *(void **)&v32[v37];
    *(void *)&v31[v37] = v38;
    uint64_t v39 = *(void (**)(char *, void, uint64_t, uint64_t))(v34 + 56);
    id v40 = v38;
    v39(v31, 0LL, 1LL, v33);
  }

  uint64_t v41 = a3[8];
  uint64_t v42 = (char *)a1 + v41;
  uint64_t v43 = (char *)a2 + v41;
  uint64_t v44 = type metadata accessor for NLContextUpdate(0LL);
  uint64_t v45 = *(void *)(v44 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v45 + 48))(v43, 1LL, v44))
  {
    uint64_t v46 = sub_6C5C((uint64_t *)&unk_286C50);
    memcpy(v42, v43, *(void *)(*(void *)(v46 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(char *, char *, uint64_t))(v45 + 16))(v42, v43, v44);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v45 + 56))(v42, 0LL, 1LL, v44);
  }

  uint64_t v47 = a3[9];
  uint64_t v48 = a3[10];
  uint64_t v49 = *(void *)((char *)a2 + v47);
  *(void *)((char *)a1 + v4sub_6C3C(v0 + 7) = v49;
  *((_BYTE *)a1 + v48) = *((_BYTE *)a2 + v48);
  uint64_t v50 = a3[11];
  uint64_t v51 = (_OWORD *)((char *)a1 + v50);
  int v52 = (_OWORD *)((char *)a2 + v50);
  uint64_t v53 = type metadata accessor for ResponseFactoryOutputContext.AppIntentOutputContext(0LL);
  uint64_t v54 = *(void *)(v53 - 8);
  uint64_t v55 = *(unsigned int (**)(_OWORD *, uint64_t, uint64_t, __n128))(v54 + 48);
  __n128 v56 = swift_bridgeObjectRetain(v49);
  if (v55(v52, 1LL, v53, v56))
  {
    uint64_t v57 = sub_6C5C(&qword_28DF38);
    memcpy(v51, v52, *(void *)(*(void *)(v57 - 8) + 64LL));
  }

  else
  {
    uint64_t v58 = *((void *)v52 + 3);
    if (v58)
    {
      uint64_t v59 = *((void *)v52 + 4);
      *((void *)v51 + 3) = v58;
      *((void *)v51 + 4) = v59;
      (**(void (***)(_OWORD *, _OWORD *))(v58 - 8))(v51, v52);
    }

    else
    {
      __int128 v60 = v52[1];
      *uint64_t v51 = *v52;
      v51[1] = v60;
      *((void *)v51 + 4) = *((void *)v52 + 4);
    }

    uint64_t v61 = *(int *)(v53 + 20);
    uint64_t v62 = (char *)v51 + v61;
    uint64_t v63 = (char *)v52 + v61;
    uint64_t v64 = type metadata accessor for AppIntentPerformOptions(0LL);
    uint64_t v65 = *(void *)(v64 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v65 + 48))(v63, 1LL, v64))
    {
      uint64_t v66 = sub_6C5C(&qword_28DE98);
      memcpy(v62, v63, *(void *)(*(void *)(v66 - 8) + 64LL));
    }

    else
    {
      (*(void (**)(char *, char *, uint64_t))(v65 + 16))(v62, v63, v64);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v65 + 56))(v62, 0LL, 1LL, v64);
    }

    (*(void (**)(_OWORD *, void, uint64_t, uint64_t))(v54 + 56))(v51, 0LL, 1LL, v53);
  }

  return a1;
}

void *sub_1EB864(void *a1, void *a2, int *a3)
{
  uint64_t v6 = *a1;
  uint64_t v7 = *a2;
  swift_errorRetain(*a2);
  *a1 = v7;
  swift_errorRelease(v6);
  uint64_t v8 = a3[5];
  uint64_t v9 = (char *)a1 + v8;
  uint64_t v10 = (char *)a2 + v8;
  uint64_t v11 = (int *)type metadata accessor for SnippetModelResponse(0LL);
  uint64_t v12 = *((void *)v11 - 1);
  uint64_t v13 = *(uint64_t (**)(char *, uint64_t, int *))(v12 + 48);
  int v14 = v13(v9, 1LL, v11);
  int v15 = v13(v10, 1LL, v11);
  if (!v14)
  {
    if (v15)
    {
      sub_132158((uint64_t)v9, type metadata accessor for SnippetModelResponse);
      goto LABEL_7;
    }

    uint64_t v20 = type metadata accessor for SiriAudioSnippets(0LL);
    uint64_t v21 = *(void *)(v20 - 8);
    uint64_t v22 = *(uint64_t (**)(void))(v21 + 48);
    int v23 = ((uint64_t (*)(char *, uint64_t, uint64_t))v22)(v9, 1LL, v20);
    int v24 = ((uint64_t (*)(char *, uint64_t, uint64_t))v22)(v10, 1LL, v20);
    uint64_t v118 = v21;
    if (v23)
    {
      if (!v24)
      {
        (*(void (**)(char *, char *, uint64_t))(v21 + 16))(v9, v10, v20);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v21 + 56))(v9, 0LL, 1LL, v20);
        goto LABEL_19;
      }
    }

    else
    {
      if (!v24)
      {
        (*(void (**)(char *, char *, uint64_t))(v21 + 24))(v9, v10, v20);
LABEL_19:
        uint64_t v38 = v11[5];
        uint64_t v39 = &v10[v38];
        uint64_t v120 = &v9[v38];
        int v40 = v22();
        int v41 = ((uint64_t (*)(char *, uint64_t, uint64_t))v22)(v39, 1LL, v20);
        if (v40)
        {
          if (!v41)
          {
            (*(void (**)(char *, char *, uint64_t))(v118 + 16))(v120, v39, v20);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v118 + 56))(v120, 0LL, 1LL, v20);
            goto LABEL_28;
          }

          size_t v42 = *(void *)(*(void *)(sub_6C5C(&qword_284170) - 8) + 64LL);
          uint64_t v43 = v120;
        }

        else
        {
          if (!v41)
          {
            (*(void (**)(char *, char *, uint64_t))(v118 + 24))(v120, v39, v20);
            goto LABEL_28;
          }

          (*(void (**)(char *, uint64_t))(v118 + 8))(v120, v20);
          size_t v42 = *(void *)(*(void *)(sub_6C5C(&qword_284170) - 8) + 64LL);
          uint64_t v43 = v120;
        }

        memcpy(v43, v39, v42);
LABEL_28:
        uint64_t v44 = v11[6];
        uint64_t v45 = &v9[v44];
        uint64_t v46 = &v10[v44];
        *(void *)uint64_t v45 = *(void *)v46;
        uint64_t v47 = *((void *)v46 + 1);
        uint64_t v48 = *((void *)v45 + 1);
        *((void *)v45 + 1) = v47;
        swift_bridgeObjectRetain(v47);
        swift_bridgeObjectRelease(v48);
        uint64_t v49 = v11[7];
        uint64_t v50 = *(void *)&v9[v49];
        uint64_t v51 = *(void *)&v10[v49];
        *(void *)&v9[v49] = v51;
        swift_bridgeObjectRetain(v51);
        swift_bridgeObjectRelease(v50);
        goto LABEL_29;
      }

      (*(void (**)(char *, uint64_t))(v21 + 8))(v9, v20);
    }

    uint64_t v37 = sub_6C5C(&qword_284170);
    memcpy(v9, v10, *(void *)(*(void *)(v37 - 8) + 64LL));
    goto LABEL_19;
  }

  if (v15)
  {
LABEL_7:
    uint64_t v19 = sub_6C5C(&qword_28DE90);
    memcpy(v9, v10, *(void *)(*(void *)(v19 - 8) + 64LL));
    goto LABEL_29;
  }

  uint64_t v16 = type metadata accessor for SiriAudioSnippets(0LL);
  uint64_t v17 = *(void *)(v16 - 8);
  __src = *(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48);
  uint64_t v119 = v17;
  if (__src(v10, 1LL, v16))
  {
    uint64_t v18 = sub_6C5C(&qword_284170);
    memcpy(v9, v10, *(void *)(*(void *)(v18 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(char *, char *, uint64_t))(v17 + 16))(v9, v10, v16);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v17 + 56))(v9, 0LL, 1LL, v16);
  }

  uint64_t v25 = v11[5];
  uint64_t v26 = &v9[v25];
  __n128 v27 = &v10[v25];
  if (__src(&v10[v25], 1LL, v16))
  {
    uint64_t v28 = sub_6C5C(&qword_284170);
    memcpy(v26, v27, *(void *)(*(void *)(v28 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(char *, char *, uint64_t))(v119 + 16))(v26, v27, v16);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v119 + 56))(v26, 0LL, 1LL, v16);
  }

  uint64_t v29 = v11[6];
  uint64_t v30 = &v9[v29];
  uint64_t v31 = &v10[v29];
  *(void *)uint64_t v30 = *(void *)v31;
  uint64_t v32 = *((void *)v31 + 1);
  *((void *)v30 + 1) = v32;
  uint64_t v33 = v11[7];
  uint64_t v34 = *(void *)&v10[v33];
  *(void *)&v9[v33] = v34;
  uint64_t v35 = *(void (**)(char *, void, uint64_t, int *, __n128))(v12 + 56);
  swift_bridgeObjectRetain(v32);
  __n128 v36 = swift_bridgeObjectRetain(v34);
  v35(v9, 0LL, 1LL, v11, v36);
LABEL_29:
  uint64_t v52 = a3[6];
  uint64_t v53 = *(void *)((char *)a1 + v52);
  uint64_t v54 = *(void *)((char *)a2 + v52);
  swift_errorRetain(v54);
  *(void *)((char *)a1 + v5sub_6C3C(v0 + 2) = v54;
  swift_errorRelease(v53);
  uint64_t v55 = a3[7];
  __n128 v56 = (char *)a1 + v55;
  uint64_t v57 = (char *)a2 + v55;
  uint64_t v58 = sub_6C5C(&qword_289340);
  uint64_t v59 = *(void *)(v58 - 8);
  __int128 v60 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v59 + 48);
  int v61 = v60(v56, 1LL, v58);
  int v62 = v60(v57, 1LL, v58);
  if (v61)
  {
    if (!v62)
    {
      uint64_t v63 = type metadata accessor for TemplatingResult(0LL);
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v63 - 8) + 16LL))(v56, v57, v63);
      uint64_t v64 = *(int *)(v58 + 48);
      uint64_t v65 = *(void **)&v57[v64];
      *(void *)&v56[v64] = v65;
      uint64_t v66 = *(void (**)(char *, void, uint64_t, uint64_t))(v59 + 56);
      id v67 = v65;
      v66(v56, 0LL, 1LL, v58);
      goto LABEL_35;
    }

    goto LABEL_34;
  }

  if (v62)
  {
    sub_1F6CC((uint64_t)v56, &qword_289340);
LABEL_34:
    uint64_t v68 = sub_6C5C((uint64_t *)&unk_286BA0);
    memcpy(v56, v57, *(void *)(*(void *)(v68 - 8) + 64LL));
    goto LABEL_35;
  }

  uint64_t v93 = type metadata accessor for TemplatingResult(0LL);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v93 - 8) + 24LL))(v56, v57, v93);
  uint64_t v94 = *(int *)(v58 + 48);
  uint64_t v95 = *(void **)&v57[v94];
  uint64_t v96 = *(void **)&v56[v94];
  *(void *)&v56[v94] = v95;
  id v97 = v95;

LABEL_35:
  uint64_t v69 = a3[8];
  uint64_t v70 = (char *)a1 + v69;
  uint64_t v71 = (char *)a2 + v69;
  uint64_t v72 = type metadata accessor for NLContextUpdate(0LL);
  uint64_t v73 = *(void *)(v72 - 8);
  uint64_t v74 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v73 + 48);
  int v75 = v74(v70, 1LL, v72);
  int v76 = v74(v71, 1LL, v72);
  if (v75)
  {
    if (!v76)
    {
      (*(void (**)(char *, char *, uint64_t))(v73 + 16))(v70, v71, v72);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v73 + 56))(v70, 0LL, 1LL, v72);
      goto LABEL_41;
    }

    goto LABEL_40;
  }

  if (v76)
  {
    (*(void (**)(char *, uint64_t))(v73 + 8))(v70, v72);
LABEL_40:
    uint64_t v77 = sub_6C5C((uint64_t *)&unk_286C50);
    memcpy(v70, v71, *(void *)(*(void *)(v77 - 8) + 64LL));
    goto LABEL_41;
  }

  (*(void (**)(char *, char *, uint64_t))(v73 + 24))(v70, v71, v72);
LABEL_41:
  uint64_t v78 = a3[9];
  uint64_t v79 = *(void *)((char *)a1 + v78);
  uint64_t v80 = *(void *)((char *)a2 + v78);
  *(void *)((char *)a1 + v78) = v80;
  swift_bridgeObjectRetain(v80);
  swift_bridgeObjectRelease(v79);
  *((_BYTE *)a1 + a3[10]) = *((_BYTE *)a2 + a3[10]);
  uint64_t v81 = a3[11];
  uint64_t v82 = (uint64_t)a1 + v81;
  uint64_t v83 = (char *)a2 + v81;
  uint64_t v84 = type metadata accessor for ResponseFactoryOutputContext.AppIntentOutputContext(0LL);
  uint64_t v85 = *(void *)(v84 - 8);
  uint64_t v86 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v85 + 48);
  int v87 = v86(v82, 1LL, v84);
  int v88 = v86((uint64_t)v83, 1LL, v84);
  if (!v87)
  {
    if (v88)
    {
      sub_132158(v82, type metadata accessor for ResponseFactoryOutputContext.AppIntentOutputContext);
      goto LABEL_47;
    }

    uint64_t v98 = *((void *)v83 + 3);
    if (*(void *)(v82 + 24))
    {
      if (v98)
      {
        sub_14ECD4((void *)v82, v83);
LABEL_64:
        uint64_t v110 = *(int *)(v84 + 20);
        uint64_t v111 = (void *)(v82 + v110);
        uint64_t v112 = &v83[v110];
        uint64_t v113 = type metadata accessor for AppIntentPerformOptions(0LL);
        uint64_t v114 = *(void *)(v113 - 8);
        os_log_type_t v115 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v114 + 48);
        int v116 = v115(v111, 1LL, v113);
        int v117 = v115(v112, 1LL, v113);
        if (v116)
        {
          if (!v117)
          {
            (*(void (**)(void *, char *, uint64_t))(v114 + 16))(v111, v112, v113);
            (*(void (**)(void *, void, uint64_t, uint64_t))(v114 + 56))(v111, 0LL, 1LL, v113);
            return a1;
          }
        }

        else
        {
          if (!v117)
          {
            (*(void (**)(void *, char *, uint64_t))(v114 + 24))(v111, v112, v113);
            return a1;
          }

          (*(void (**)(void *, uint64_t))(v114 + 8))(v111, v113);
        }

        size_t v90 = *(void *)(*(void *)(sub_6C5C(&qword_28DE98) - 8) + 64LL);
        uint64_t v91 = v111;
        uint64_t v92 = v112;
        goto LABEL_48;
      }

      sub_6C3C((void *)v82);
    }

    else if (v98)
    {
      *(void *)(v82 + 24) = v98;
      *(void *)(v82 + 3sub_6C3C(v0 + 2) = *((void *)v83 + 4);
      (**(void (***)(uint64_t, char *))(v98 - 8))(v82, v83);
      goto LABEL_64;
    }

    __int128 v108 = *(_OWORD *)v83;
    __int128 v109 = *((_OWORD *)v83 + 1);
    *(void *)(v82 + 3sub_6C3C(v0 + 2) = *((void *)v83 + 4);
    *(_OWORD *)uint64_t v82 = v108;
    *(_OWORD *)(v82 + swift_weakDestroy(v0 + 16) = v109;
    goto LABEL_64;
  }

  if (v88)
  {
LABEL_47:
    size_t v90 = *(void *)(*(void *)(sub_6C5C(&qword_28DF38) - 8) + 64LL);
    uint64_t v91 = (void *)v82;
    uint64_t v92 = v83;
LABEL_48:
    memcpy(v91, v92, v90);
    return a1;
  }

  uint64_t v89 = *((void *)v83 + 3);
  if (v89)
  {
    *(void *)(v82 + 24) = v89;
    *(void *)(v82 + 3sub_6C3C(v0 + 2) = *((void *)v83 + 4);
    (**(void (***)(uint64_t, char *))(v89 - 8))(v82, v83);
  }

  else
  {
    __int128 v99 = *(_OWORD *)v83;
    __int128 v100 = *((_OWORD *)v83 + 1);
    *(void *)(v82 + 3sub_6C3C(v0 + 2) = *((void *)v83 + 4);
    *(_OWORD *)uint64_t v82 = v99;
    *(_OWORD *)(v82 + swift_weakDestroy(v0 + 16) = v100;
  }

  uint64_t v101 = *(int *)(v84 + 20);
  uint64_t v102 = (void *)(v82 + v101);
  uint64_t v103 = &v83[v101];
  uint64_t v104 = type metadata accessor for AppIntentPerformOptions(0LL);
  uint64_t v105 = *(void *)(v104 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v105 + 48))(v103, 1LL, v104))
  {
    uint64_t v106 = sub_6C5C(&qword_28DE98);
    memcpy(v102, v103, *(void *)(*(void *)(v106 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(void *, char *, uint64_t))(v105 + 16))(v102, v103, v104);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v105 + 56))(v102, 0LL, 1LL, v104);
  }

  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v85 + 56))(v82, 0LL, 1LL, v84);
  return a1;
}

void *sub_1EC11C(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = (int *)type metadata accessor for SnippetModelResponse(0LL);
  uint64_t v10 = *((void *)v9 - 1);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v10 + 48))(v8, 1LL, v9))
  {
    uint64_t v11 = sub_6C5C(&qword_28DE90);
    memcpy(v7, v8, *(void *)(*(void *)(v11 - 8) + 64LL));
  }

  else
  {
    uint64_t v12 = type metadata accessor for SiriAudioSnippets(0LL);
    uint64_t v13 = *(void *)(v12 - 8);
    uint64_t v48 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48);
    uint64_t v47 = v13;
    if (v48(v8, 1LL, v12))
    {
      uint64_t v14 = sub_6C5C(&qword_284170);
      memcpy(v7, v8, *(void *)(*(void *)(v14 - 8) + 64LL));
    }

    else
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v7, v8, v12);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v7, 0LL, 1LL, v12);
    }

    uint64_t v15 = v9[5];
    uint64_t v16 = &v7[v15];
    uint64_t v17 = &v8[v15];
    if (v48(&v8[v15], 1LL, v12))
    {
      uint64_t v18 = sub_6C5C(&qword_284170);
      memcpy(v16, v17, *(void *)(*(void *)(v18 - 8) + 64LL));
    }

    else
    {
      (*(void (**)(char *, char *, uint64_t))(v47 + 32))(v16, v17, v12);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v47 + 56))(v16, 0LL, 1LL, v12);
    }

    *(_OWORD *)&v7[v9[6]] = *(_OWORD *)&v8[v9[6]];
    *(void *)&v7[v9[7]] = *(void *)&v8[v9[7]];
    (*(void (**)(char *, void, uint64_t, int *))(v10 + 56))(v7, 0LL, 1LL, v9);
  }

  uint64_t v19 = a3[7];
  *(void *)((char *)a1 + a3[6]) = *(void *)((char *)a2 + a3[6]);
  uint64_t v20 = (char *)a1 + v19;
  uint64_t v21 = (char *)a2 + v19;
  uint64_t v22 = sub_6C5C(&qword_289340);
  uint64_t v23 = *(void *)(v22 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48))(v21, 1LL, v22))
  {
    uint64_t v24 = sub_6C5C((uint64_t *)&unk_286BA0);
    memcpy(v20, v21, *(void *)(*(void *)(v24 - 8) + 64LL));
  }

  else
  {
    uint64_t v25 = type metadata accessor for TemplatingResult(0LL);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v25 - 8) + 32LL))(v20, v21, v25);
    *(void *)&v20[*(int *)(v22 + 48)] = *(void *)&v21[*(int *)(v22 + 48)];
    (*(void (**)(char *, void, uint64_t, uint64_t))(v23 + 56))(v20, 0LL, 1LL, v22);
  }

  uint64_t v26 = a3[8];
  __n128 v27 = (char *)a1 + v26;
  uint64_t v28 = (char *)a2 + v26;
  uint64_t v29 = type metadata accessor for NLContextUpdate(0LL);
  uint64_t v30 = *(void *)(v29 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v30 + 48))(v28, 1LL, v29))
  {
    uint64_t v31 = sub_6C5C((uint64_t *)&unk_286C50);
    memcpy(v27, v28, *(void *)(*(void *)(v31 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(char *, char *, uint64_t))(v30 + 32))(v27, v28, v29);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v30 + 56))(v27, 0LL, 1LL, v29);
  }

  uint64_t v32 = a3[10];
  *(void *)((char *)a1 + a3[9]) = *(void *)((char *)a2 + a3[9]);
  *((_BYTE *)a1 + v3sub_6C3C(v0 + 2) = *((_BYTE *)a2 + v32);
  uint64_t v33 = a3[11];
  uint64_t v34 = (_OWORD *)((char *)a1 + v33);
  uint64_t v35 = (_OWORD *)((char *)a2 + v33);
  uint64_t v36 = type metadata accessor for ResponseFactoryOutputContext.AppIntentOutputContext(0LL);
  uint64_t v37 = *(void *)(v36 - 8);
  if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v37 + 48))(v35, 1LL, v36))
  {
    uint64_t v38 = sub_6C5C(&qword_28DF38);
    memcpy(v34, v35, *(void *)(*(void *)(v38 - 8) + 64LL));
  }

  else
  {
    __int128 v39 = v35[1];
    *uint64_t v34 = *v35;
    v34[1] = v39;
    *((void *)v34 + 4) = *((void *)v35 + 4);
    uint64_t v40 = *(int *)(v36 + 20);
    int v41 = (char *)v34 + v40;
    size_t v42 = (char *)v35 + v40;
    uint64_t v43 = type metadata accessor for AppIntentPerformOptions(0LL);
    uint64_t v44 = *(void *)(v43 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v44 + 48))(v42, 1LL, v43))
    {
      uint64_t v45 = sub_6C5C(&qword_28DE98);
      memcpy(v41, v42, *(void *)(*(void *)(v45 - 8) + 64LL));
    }

    else
    {
      (*(void (**)(char *, char *, uint64_t))(v44 + 32))(v41, v42, v43);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v44 + 56))(v41, 0LL, 1LL, v43);
    }

    (*(void (**)(_OWORD *, void, uint64_t, uint64_t))(v37 + 56))(v34, 0LL, 1LL, v36);
  }

  return a1;
}

void *sub_1EC53C(void *a1, void *a2, int *a3)
{
  uint64_t v6 = *a1;
  *a1 = *a2;
  swift_errorRelease(v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = (int *)type metadata accessor for SnippetModelResponse(0LL);
  uint64_t v11 = *((void *)v10 - 1);
  uint64_t v12 = *(uint64_t (**)(char *, uint64_t, int *))(v11 + 48);
  int v13 = v12(v8, 1LL, v10);
  int v14 = v12(v9, 1LL, v10);
  if (!v13)
  {
    if (v14)
    {
      sub_132158((uint64_t)v8, type metadata accessor for SnippetModelResponse);
      goto LABEL_7;
    }

    uint64_t v19 = type metadata accessor for SiriAudioSnippets(0LL);
    uint64_t v20 = *(void *)(v19 - 8);
    uint64_t v21 = *(uint64_t (**)(void))(v20 + 48);
    int v22 = ((uint64_t (*)(char *, uint64_t, uint64_t))v21)(v8, 1LL, v19);
    int v23 = ((uint64_t (*)(char *, uint64_t, uint64_t))v21)(v9, 1LL, v19);
    uint64_t v97 = v20;
    if (v22)
    {
      if (!v23)
      {
        (*(void (**)(char *, char *, uint64_t))(v20 + 32))(v8, v9, v19);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v20 + 56))(v8, 0LL, 1LL, v19);
        goto LABEL_19;
      }
    }

    else
    {
      if (!v23)
      {
        (*(void (**)(char *, char *, uint64_t))(v20 + 40))(v8, v9, v19);
LABEL_19:
        uint64_t v29 = v10[5];
        uint64_t v30 = &v9[v29];
        __int128 v99 = &v8[v29];
        int v31 = v21();
        int v32 = ((uint64_t (*)(char *, uint64_t, uint64_t))v21)(v30, 1LL, v19);
        if (v31)
        {
          if (!v32)
          {
            (*(void (**)(char *, char *, uint64_t))(v97 + 32))(v99, v30, v19);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v97 + 56))(v99, 0LL, 1LL, v19);
            goto LABEL_28;
          }

          size_t v33 = *(void *)(*(void *)(sub_6C5C(&qword_284170) - 8) + 64LL);
          uint64_t v34 = v99;
        }

        else
        {
          if (!v32)
          {
            (*(void (**)(char *, char *, uint64_t))(v97 + 40))(v99, v30, v19);
            goto LABEL_28;
          }

          (*(void (**)(char *, uint64_t))(v97 + 8))(v99, v19);
          size_t v33 = *(void *)(*(void *)(sub_6C5C(&qword_284170) - 8) + 64LL);
          uint64_t v34 = v99;
        }

        memcpy(v34, v30, v33);
LABEL_28:
        uint64_t v35 = v10[6];
        uint64_t v36 = &v8[v35];
        uint64_t v37 = &v9[v35];
        uint64_t v39 = *(void *)v37;
        uint64_t v38 = *((void *)v37 + 1);
        uint64_t v40 = *((void *)v36 + 1);
        *(void *)uint64_t v36 = v39;
        *((void *)v36 + 1) = v38;
        swift_bridgeObjectRelease(v40);
        uint64_t v41 = v10[7];
        uint64_t v42 = *(void *)&v8[v41];
        *(void *)&v8[v41] = *(void *)&v9[v41];
        swift_bridgeObjectRelease(v42);
        goto LABEL_29;
      }

      (*(void (**)(char *, uint64_t))(v20 + 8))(v8, v19);
    }

    uint64_t v28 = sub_6C5C(&qword_284170);
    memcpy(v8, v9, *(void *)(*(void *)(v28 - 8) + 64LL));
    goto LABEL_19;
  }

  if (v14)
  {
LABEL_7:
    uint64_t v18 = sub_6C5C(&qword_28DE90);
    memcpy(v8, v9, *(void *)(*(void *)(v18 - 8) + 64LL));
    goto LABEL_29;
  }

  uint64_t v15 = type metadata accessor for SiriAudioSnippets(0LL);
  uint64_t v16 = *(void *)(v15 - 8);
  __src = *(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48);
  uint64_t v98 = v16;
  if (__src(v9, 1LL, v15))
  {
    uint64_t v17 = sub_6C5C(&qword_284170);
    memcpy(v8, v9, *(void *)(*(void *)(v17 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(char *, char *, uint64_t))(v16 + 32))(v8, v9, v15);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v16 + 56))(v8, 0LL, 1LL, v15);
  }

  uint64_t v24 = v10[5];
  uint64_t v25 = &v8[v24];
  uint64_t v26 = &v9[v24];
  if (__src(&v9[v24], 1LL, v15))
  {
    uint64_t v27 = sub_6C5C(&qword_284170);
    memcpy(v25, v26, *(void *)(*(void *)(v27 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(char *, char *, uint64_t))(v98 + 32))(v25, v26, v15);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v98 + 56))(v25, 0LL, 1LL, v15);
  }

  *(_OWORD *)&v8[v10[6]] = *(_OWORD *)&v9[v10[6]];
  *(void *)&v8[v10[7]] = *(void *)&v9[v10[7]];
  (*(void (**)(char *, void, uint64_t, int *))(v11 + 56))(v8, 0LL, 1LL, v10);
LABEL_29:
  uint64_t v43 = a3[6];
  uint64_t v44 = *(void *)((char *)a1 + v43);
  *(void *)((char *)a1 + v43) = *(void *)((char *)a2 + v43);
  swift_errorRelease(v44);
  uint64_t v45 = a3[7];
  uint64_t v46 = (char *)a1 + v45;
  uint64_t v47 = (char *)a2 + v45;
  uint64_t v48 = sub_6C5C(&qword_289340);
  uint64_t v49 = *(void *)(v48 - 8);
  uint64_t v50 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v49 + 48);
  int v51 = v50(v46, 1LL, v48);
  int v52 = v50(v47, 1LL, v48);
  if (v51)
  {
    if (!v52)
    {
      uint64_t v53 = type metadata accessor for TemplatingResult(0LL);
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v53 - 8) + 32LL))(v46, v47, v53);
      *(void *)&v46[*(int *)(v48 + 48)] = *(void *)&v47[*(int *)(v48 + 48)];
      (*(void (**)(char *, void, uint64_t, uint64_t))(v49 + 56))(v46, 0LL, 1LL, v48);
      goto LABEL_35;
    }

    goto LABEL_34;
  }

  if (v52)
  {
    sub_1F6CC((uint64_t)v46, &qword_289340);
LABEL_34:
    uint64_t v54 = sub_6C5C((uint64_t *)&unk_286BA0);
    memcpy(v46, v47, *(void *)(*(void *)(v54 - 8) + 64LL));
    goto LABEL_35;
  }

  uint64_t v84 = type metadata accessor for TemplatingResult(0LL);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v84 - 8) + 40LL))(v46, v47, v84);
  uint64_t v85 = *(int *)(v48 + 48);
  uint64_t v86 = *(void **)&v46[v85];
  *(void *)&v46[v85] = *(void *)&v47[v85];

LABEL_35:
  uint64_t v55 = a3[8];
  __n128 v56 = (char *)a1 + v55;
  uint64_t v57 = (char *)a2 + v55;
  uint64_t v58 = type metadata accessor for NLContextUpdate(0LL);
  uint64_t v59 = *(void *)(v58 - 8);
  __int128 v60 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v59 + 48);
  int v61 = v60(v56, 1LL, v58);
  int v62 = v60(v57, 1LL, v58);
  if (v61)
  {
    if (!v62)
    {
      (*(void (**)(char *, char *, uint64_t))(v59 + 32))(v56, v57, v58);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v59 + 56))(v56, 0LL, 1LL, v58);
      goto LABEL_41;
    }

    goto LABEL_40;
  }

  if (v62)
  {
    (*(void (**)(char *, uint64_t))(v59 + 8))(v56, v58);
LABEL_40:
    uint64_t v63 = sub_6C5C((uint64_t *)&unk_286C50);
    memcpy(v56, v57, *(void *)(*(void *)(v63 - 8) + 64LL));
    goto LABEL_41;
  }

  (*(void (**)(char *, char *, uint64_t))(v59 + 40))(v56, v57, v58);
LABEL_41:
  uint64_t v64 = a3[9];
  uint64_t v65 = *(void *)((char *)a1 + v64);
  *(void *)((char *)a1 + v64) = *(void *)((char *)a2 + v64);
  swift_bridgeObjectRelease(v65);
  uint64_t v66 = a3[11];
  *((_BYTE *)a1 + a3[10]) = *((_BYTE *)a2 + a3[10]);
  uint64_t v67 = (uint64_t)a1 + v66;
  uint64_t v68 = (char *)a2 + v66;
  uint64_t v69 = type metadata accessor for ResponseFactoryOutputContext.AppIntentOutputContext(0LL);
  uint64_t v70 = *(void *)(v69 - 8);
  uint64_t v71 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v70 + 48);
  int v72 = v71(v67, 1LL, v69);
  int v73 = v71((uint64_t)v68, 1LL, v69);
  if (!v72)
  {
    if (!v73)
    {
      if (*(void *)(v67 + 24)) {
        sub_6C3C((void *)v67);
      }
      __int128 v87 = *((_OWORD *)v68 + 1);
      *(_OWORD *)uint64_t v67 = *(_OWORD *)v68;
      *(_OWORD *)(v67 + swift_weakDestroy(v0 + 16) = v87;
      *(void *)(v67 + 3sub_6C3C(v0 + 2) = *((void *)v68 + 4);
      uint64_t v88 = *(int *)(v69 + 20);
      uint64_t v89 = (void *)(v67 + v88);
      size_t v90 = &v68[v88];
      uint64_t v91 = type metadata accessor for AppIntentPerformOptions(0LL);
      uint64_t v92 = *(void *)(v91 - 8);
      uint64_t v93 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v92 + 48);
      int v94 = v93(v89, 1LL, v91);
      int v95 = v93(v90, 1LL, v91);
      if (v94)
      {
        if (!v95)
        {
          (*(void (**)(void *, char *, uint64_t))(v92 + 32))(v89, v90, v91);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v92 + 56))(v89, 0LL, 1LL, v91);
          return a1;
        }
      }

      else
      {
        if (!v95)
        {
          (*(void (**)(void *, char *, uint64_t))(v92 + 40))(v89, v90, v91);
          return a1;
        }

        (*(void (**)(void *, uint64_t))(v92 + 8))(v89, v91);
      }

      size_t v81 = *(void *)(*(void *)(sub_6C5C(&qword_28DE98) - 8) + 64LL);
      uint64_t v82 = v89;
      uint64_t v83 = v90;
      goto LABEL_48;
    }

    sub_132158(v67, type metadata accessor for ResponseFactoryOutputContext.AppIntentOutputContext);
LABEL_47:
    size_t v81 = *(void *)(*(void *)(sub_6C5C(&qword_28DF38) - 8) + 64LL);
    uint64_t v82 = (void *)v67;
    uint64_t v83 = v68;
LABEL_48:
    memcpy(v82, v83, v81);
    return a1;
  }

  if (v73) {
    goto LABEL_47;
  }
  __int128 v74 = *((_OWORD *)v68 + 1);
  *(_OWORD *)uint64_t v67 = *(_OWORD *)v68;
  *(_OWORD *)(v67 + swift_weakDestroy(v0 + 16) = v74;
  *(void *)(v67 + 3sub_6C3C(v0 + 2) = *((void *)v68 + 4);
  uint64_t v75 = *(int *)(v69 + 20);
  int v76 = (void *)(v67 + v75);
  uint64_t v77 = &v68[v75];
  uint64_t v78 = type metadata accessor for AppIntentPerformOptions(0LL);
  uint64_t v79 = *(void *)(v78 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v79 + 48))(v77, 1LL, v78))
  {
    uint64_t v80 = sub_6C5C(&qword_28DE98);
    memcpy(v76, v77, *(void *)(*(void *)(v80 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(void *, char *, uint64_t))(v79 + 32))(v76, v77, v78);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v79 + 56))(v76, 0LL, 1LL, v78);
  }

  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v70 + 56))(v67, 0LL, 1LL, v69);
  return a1;
}

uint64_t sub_1ECD2C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1ECD38);
}

uint64_t sub_1ECD38(char *a1, uint64_t a2, int *a3)
{
  if ((_DWORD)a2 == 2147483646)
  {
    uint64_t v4 = *(void *)a1;
    if (*(void *)a1 >= 0xFFFFFFFFuLL) {
      LODWORD(v4) = -1;
    }
    int v5 = v4 - 1;
    if (v5 < 0) {
      int v5 = -1;
    }
    return (v5 + 1);
  }

  else
  {
    uint64_t v9 = sub_6C5C(&qword_28DE90);
    uint64_t v10 = *(void *)(v9 - 8);
    if (*(_DWORD *)(v10 + 84) == (_DWORD)a2)
    {
      uint64_t v11 = v9;
      uint64_t v12 = a3[5];
    }

    else
    {
      uint64_t v13 = sub_6C5C((uint64_t *)&unk_286BA0);
      uint64_t v10 = *(void *)(v13 - 8);
      if (*(_DWORD *)(v10 + 84) == (_DWORD)a2)
      {
        uint64_t v11 = v13;
        uint64_t v12 = a3[7];
      }

      else
      {
        uint64_t v14 = sub_6C5C((uint64_t *)&unk_286C50);
        uint64_t v10 = *(void *)(v14 - 8);
        if (*(_DWORD *)(v10 + 84) == (_DWORD)a2)
        {
          uint64_t v11 = v14;
          uint64_t v12 = a3[8];
        }

        else
        {
          uint64_t v11 = sub_6C5C(&qword_28DF38);
          uint64_t v10 = *(void *)(v11 - 8);
          uint64_t v12 = a3[11];
        }
      }
    }

    return (*(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48))(&a1[v12], a2, v11);
  }

uint64_t sub_1ECE3C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1ECE48);
}

char *sub_1ECE48(char *result, uint64_t a2, int a3, int *a4)
{
  int v5 = result;
  if (a3 == 2147483646)
  {
    *(void *)uint64_t result = a2;
  }

  else
  {
    uint64_t v8 = sub_6C5C(&qword_28DE90);
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      uint64_t v10 = v8;
      uint64_t v11 = a4[5];
    }

    else
    {
      uint64_t v12 = sub_6C5C((uint64_t *)&unk_286BA0);
      uint64_t v9 = *(void *)(v12 - 8);
      if (*(_DWORD *)(v9 + 84) == a3)
      {
        uint64_t v10 = v12;
        uint64_t v11 = a4[7];
      }

      else
      {
        uint64_t v13 = sub_6C5C((uint64_t *)&unk_286C50);
        uint64_t v9 = *(void *)(v13 - 8);
        if (*(_DWORD *)(v9 + 84) == a3)
        {
          uint64_t v10 = v13;
          uint64_t v11 = a4[8];
        }

        else
        {
          uint64_t v10 = sub_6C5C(&qword_28DF38);
          uint64_t v9 = *(void *)(v10 - 8);
          uint64_t v11 = a4[11];
        }
      }
    }

    return (char *)(*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56))(&v5[v11], a2, a2, v10);
  }

  return result;
}

void sub_1ECF3C(uint64_t a1)
{
  v10[0] = "\b";
  sub_67DE8(319LL, &qword_28DFA8, type metadata accessor for SnippetModelResponse);
  if (v3 <= 0x3F)
  {
    v10[1] = *(void *)(v2 - 8) + 64LL;
    void v10[2] = "\b";
    sub_B3B00(319LL);
    if (v5 <= 0x3F)
    {
      v10[3] = *(void *)(v4 - 8) + 64LL;
      sub_67DE8(319LL, &qword_28D9F0, (uint64_t (*)(uint64_t))&type metadata accessor for NLContextUpdate);
      if (v7 <= 0x3F)
      {
        v10[4] = *(void *)(v6 - 8) + 64LL;
        v10[5] = "\b";
        v10[6] = &unk_21B798;
        sub_67DE8( 319LL,  (unint64_t *)&unk_28DFB0,  type metadata accessor for ResponseFactoryOutputContext.AppIntentOutputContext);
        if (v9 <= 0x3F)
        {
          v10[7] = *(void *)(v8 - 8) + 64LL;
          swift_initStructMetadata(a1, 256LL, 8LL, v10, a1 + 16);
        }
      }
    }
  }

uint64_t _s11descr275961V21ConfirmIntentStrategyCMa(uint64_t a1)
{
  uint64_t result = qword_28E020;
  if (!qword_28E020) {
    return swift_getSingletonMetadata(a1, &_s11descr275961V21ConfirmIntentStrategyCMn);
  }
  return result;
}

void sub_1ED07C(uint64_t a1)
{
  v4[0] = (char *)&value witness table for () + 64;
  v4[1] = (char *)&value witness table for Builtin.NativeObject + 64;
  void v4[2] = "(";
  uint64_t v4[3] = "(";
  sub_1EECB8(319LL);
  if (v3 <= 0x3F)
  {
    v4[4] = *(void *)(v2 - 8) + 64LL;
    swift_initClassMetadata2(a1, 0LL, 5LL, v4, a1 + 96);
  }

void *sub_1ED110()
{
  return v0;
}

uint64_t sub_1ED154@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v100 = a2;
  uint64_t v3 = sub_6C5C((uint64_t *)&unk_286CC0);
  uint64_t v4 = __chkstk_darwin(v3);
  uint64_t v96 = (uint64_t)v90 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v4);
  int v94 = (char *)v90 - v6;
  uint64_t v7 = sub_6C5C(&qword_284630);
  uint64_t v8 = __chkstk_darwin(v7);
  uint64_t v97 = (uint64_t)v90 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v8);
  uint64_t v107 = (char *)v90 - v10;
  uint64_t v11 = type metadata accessor for Parse(0LL);
  uint64_t v104 = *(void *)(v11 - 8);
  uint64_t v105 = v11;
  __chkstk_darwin(v11);
  uint64_t v103 = (char *)v90 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v102 = type metadata accessor for Input(0LL);
  uint64_t v13 = *(void *)(v102 - 8);
  __chkstk_darwin(v102);
  uint64_t v101 = (char *)v90 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v15 = type metadata accessor for Logger(0LL);
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v17 = __chkstk_darwin(v15);
  __int128 v99 = (char *)v90 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v19 = __chkstk_darwin(v17);
  uint64_t v98 = (char *)v90 - v20;
  uint64_t v21 = __chkstk_darwin(v19);
  uint64_t v93 = (char *)v90 - v22;
  uint64_t v23 = __chkstk_darwin(v21);
  uint64_t v25 = (char *)v90 - v24;
  __chkstk_darwin(v23);
  uint64_t v27 = (char *)v90 - v26;
  if (qword_283888 != -1) {
    swift_once(&qword_283888, sub_BFC5C);
  }
  uint64_t v28 = sub_6960(v15, (uint64_t)qword_2969C8);
  uint64_t v29 = *(void (**)(char *, uint64_t, uint64_t))(v16 + 16);
  uint64_t v108 = v28;
  __int128 v109 = v29;
  uint64_t v30 = ((uint64_t (*)(char *))v29)(v27);
  int v31 = (os_log_s *)Logger.logObject.getter(v30);
  os_log_type_t v32 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v31, v32))
  {
    size_t v33 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
    *(_WORD *)size_t v33 = 0;
    _os_log_impl(&dword_0, v31, v32, "ConfirmIntentStrategy#actionForInput...", v33, 2u);
    swift_slowDealloc(v33, -1LL, -1LL);
  }

  uint64_t v34 = *(void (**)(char *, uint64_t))(v16 + 8);
  v34(v27, v15);
  uint64_t v35 = v25;
  v109(v25, v108, v15);
  uint64_t v36 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v13 + 16);
  uint64_t v38 = v101;
  uint64_t v37 = v102;
  uint64_t v106 = a1;
  uint64_t v39 = v36(v101, a1, v102);
  uint64_t v40 = (os_log_s *)Logger.logObject.getter(v39);
  os_log_type_t v41 = static os_log_type_t.default.getter(v40);
  if (os_log_type_enabled(v40, v41))
  {
    uint64_t v42 = swift_slowAlloc(12LL, -1LL);
    uint64_t v91 = v13;
    uint64_t v43 = (uint8_t *)v42;
    uint64_t v44 = swift_slowAlloc(32LL, -1LL);
    uint64_t v92 = v35;
    uint64_t v45 = v44;
    v112[0] = v44;
    *(_DWORD *)uint64_t v43 = 136315138;
    v90[1] = v43 + 4;
    uint64_t v46 = sub_10430( (unint64_t *)&qword_284640,  (uint64_t (*)(uint64_t))&type metadata accessor for Input,  (uint64_t)&protocol conformance descriptor for Input);
    uint64_t v47 = dispatch thunk of CustomStringConvertible.description.getter(v37, v46);
    unint64_t v49 = v48;
    *(void *)&__int128 v110 = sub_6978(v47, v48, v112);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v110, (char *)&v110 + 8);
    __n128 v50 = swift_bridgeObjectRelease(v49);
    (*(void (**)(char *, uint64_t, __n128))(v91 + 8))(v38, v37, v50);
    _os_log_impl(&dword_0, v40, v41, "ConfirmIntentStrategy#actionForInput input:%s", v43, 0xCu);
    swift_arrayDestroy(v45, 1LL, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v45, -1LL, -1LL);
    swift_slowDealloc(v43, -1LL, -1LL);

    int v51 = v92;
  }

  else
  {
    (*(void (**)(char *, uint64_t))(v13 + 8))(v38, v37);

    int v51 = v35;
  }

  uint64_t v52 = ((uint64_t (*)(char *, uint64_t))v34)(v51, v15);
  uint64_t v53 = (uint64_t)v107;
  uint64_t v54 = v15;
  uint64_t v55 = (uint64_t)v103;
  Input.parse.getter(v52);
  double v56 = sub_B6EF8(v55, &v110);
  (*(void (**)(uint64_t, uint64_t, double))(v104 + 8))(v55, v105, v56);
  if (v111)
  {
    sub_FF54(&v110, (uint64_t)v112);
    uint64_t v57 = v113;
    uint64_t v58 = v114;
    sub_6EA8(v112, v113);
    dispatch thunk of ConfirmableIntent.confirmationState.getter(v57, v58);
    uint64_t v59 = type metadata accessor for CommonAudio.Confirmation(0LL);
    uint64_t v60 = *(void *)(v59 - 8);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v60 + 48))(v53, 1LL, v59) == 1)
    {
LABEL_10:
      int v61 = v98;
      uint64_t v62 = ((uint64_t (*)(char *, uint64_t, uint64_t))v109)(v98, v108, v54);
      uint64_t v63 = (os_log_s *)Logger.logObject.getter(v62);
      os_log_type_t v64 = static os_log_type_t.default.getter(v63);
      if (os_log_type_enabled(v63, v64))
      {
        uint64_t v65 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
        *(_WORD *)uint64_t v65 = 0;
        _os_log_impl( &dword_0,  v63,  v64,  "ConfirmIntentStrategy#actionForInput no valid confirmation in the intent, ignoring",  v65,  2u);
        swift_slowDealloc(v65, -1LL, -1LL);
      }

      uint64_t v66 = ((uint64_t (*)(char *, uint64_t))v34)(v61, v54);
      static ActionForInput.ignore()(v66);
      goto LABEL_21;
    }

    uint64_t v74 = v97;
    sub_FF10(v53, v97, &qword_284630);
    int v75 = (*(uint64_t (**)(uint64_t, uint64_t))(v60 + 88))(v74, v59);
    if (v75 == enum case for CommonAudio.Confirmation.yes(_:))
    {
      int v76 = (unsigned int *)&enum case for ConfirmationResponse.confirmed(_:);
    }

    else
    {
      if (v75 != enum case for CommonAudio.Confirmation.no(_:))
      {
        if (v75 == enum case for CommonAudio.Confirmation.cancel(_:))
        {
          uint64_t v84 = v93;
          uint64_t v85 = ((uint64_t (*)(char *, uint64_t, uint64_t))v109)(v93, v108, v54);
          uint64_t v86 = (os_log_s *)Logger.logObject.getter(v85);
          os_log_type_t v87 = static os_log_type_t.default.getter(v86);
          if (os_log_type_enabled(v86, v87))
          {
            uint64_t v88 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
            *(_WORD *)uint64_t v88 = 0;
            _os_log_impl(&dword_0, v86, v87, "ConfirmIntentStrategy#actionForInput request is cancelled", v88, 2u);
            swift_slowDealloc(v88, -1LL, -1LL);
          }

          uint64_t v89 = ((uint64_t (*)(char *, uint64_t))v34)(v84, v54);
          static ActionForInput.cancel()(v89);
          goto LABEL_21;
        }

        (*(void (**)(uint64_t, uint64_t))(v60 + 8))(v74, v59);
        goto LABEL_10;
      }

      int v76 = (unsigned int *)&enum case for ConfirmationResponse.rejected(_:);
    }

    uint64_t v77 = *v76;
    uint64_t v78 = type metadata accessor for ConfirmationResponse(0LL);
    uint64_t v79 = *(void *)(v78 - 8);
    uint64_t v80 = (uint64_t)v94;
    (*(void (**)(char *, uint64_t, uint64_t))(v79 + 104))(v94, v77, v78);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v79 + 56))(v80, 0LL, 1LL, v78);
    uint64_t v81 = v96;
    sub_45F6C(v80, v96, (uint64_t *)&unk_286CC0);
    uint64_t v82 = v95 + qword_28E118;
    swift_beginAccess(v95 + qword_28E118, &v110, 33LL, 0LL);
    sub_1EF698(v81, v82);
    uint64_t v83 = swift_endAccess(&v110);
    static ActionForInput.handle()(v83);
LABEL_21:
    sub_1F6CC(v53, &qword_284630);
    return sub_6C3C(v112);
  }

  sub_1F6CC((uint64_t)&v110, &qword_284638);
  uint64_t v67 = v99;
  uint64_t v68 = ((uint64_t (*)(char *, uint64_t, uint64_t))v109)(v99, v108, v15);
  uint64_t v69 = (os_log_s *)Logger.logObject.getter(v68);
  os_log_type_t v70 = static os_log_type_t.default.getter(v69);
  if (os_log_type_enabled(v69, v70))
  {
    uint64_t v71 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
    *(_WORD *)uint64_t v71 = 0;
    _os_log_impl(&dword_0, v69, v70, "ConfirmIntentStrategy#actionForInput received invalid intent", v71, 2u);
    swift_slowDealloc(v71, -1LL, -1LL);
  }

  uint64_t v72 = ((uint64_t (*)(char *, uint64_t))v34)(v67, v54);
  return static ActionForInput.ignore()(v72);
}

uint64_t sub_1ED9F0(uint64_t a1, void *a2, void *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v6 = v5;
  uint64_t v12 = *(void *)(v5 + 16);
  uint64_t v13 = (void *)swift_allocObject(&unk_275A90, 64LL, 7LL);
  v13[2] = v6;
  v13[3] = a1;
  v13[4] = a2;
  void v13[5] = a4;
  v13[6] = a5;
  v13[7] = a3;
  uint64_t v14 = *(void (**)(uint64_t, id, void *, uint64_t (*)(uint64_t), void *))(*(void *)v12 + 240LL);
  swift_retain(v6);
  swift_retain(a1);
  id v15 = a2;
  swift_retain(a5);
  id v16 = a3;
  v14(a1, v15, a3, sub_1EF5EC, v13);
  return swift_release(v13);
}

uint64_t sub_1EDAB4( uint64_t a1, void *a2, uint64_t a3, void *a4, void (*a5)(void *), uint64_t a6, void *a7)
{
  uint64_t v82 = a7;
  uint64_t v93 = a5;
  uint64_t v94 = a6;
  uint64_t v95 = a4;
  uint64_t v91 = a2;
  uint64_t v92 = a3;
  uint64_t v88 = a1;
  uint64_t v79 = *a2;
  uint64_t v7 = sub_6C5C((uint64_t *)&unk_286C50);
  __chkstk_darwin(v7);
  uint64_t v90 = (uint64_t)&v79 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v80 = sub_6C5C(&qword_289340);
  uint64_t v81 = *(void *)(v80 - 8);
  uint64_t v9 = *(void *)(v81 + 64);
  uint64_t v10 = __chkstk_darwin(v80);
  uint64_t v83 = (char *)&v79 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v11 = __chkstk_darwin(v10);
  os_log_type_t v87 = (char *)&v79 - v12;
  __chkstk_darwin(v11);
  uint64_t v89 = (uint64_t)&v79 - v13;
  uint64_t v14 = sub_6C5C(&qword_2845A0);
  __chkstk_darwin(v14);
  uint64_t v86 = (char *)&v79 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v16 = sub_6C5C((uint64_t *)&unk_286BD0);
  __chkstk_darwin(v16);
  uint64_t v85 = (char *)&v79 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v18 = sub_6C5C(&qword_2845A8);
  __chkstk_darwin(v18);
  uint64_t v84 = (char *)&v79 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v20 = type metadata accessor for AdditionalMetricsDescription.SourceFunction(0LL);
  uint64_t v21 = *(void *)(v20 - 8);
  __chkstk_darwin(v20);
  uint64_t v23 = (char *)&v79 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v24 = type metadata accessor for AdditionalMetricsDescription.ModuleName(0LL);
  uint64_t v25 = *(void *)(v24 - 8);
  __chkstk_darwin(v24);
  uint64_t v27 = (char *)&v79 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v28 = sub_6C5C((uint64_t *)&unk_286BB0);
  __chkstk_darwin(v28);
  uint64_t v30 = (uint64_t *)((char *)&v79 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  sub_FF10(v88, (uint64_t)v30, (uint64_t *)&unk_286BB0);
  if (swift_getEnumCaseMultiPayload(v30, v28) == 1)
  {
    uint64_t v31 = *v30;
    (*(void (**)(char *, void, uint64_t))(v25 + 104))( v27,  enum case for AdditionalMetricsDescription.ModuleName.ccifs(_:),  v24);
    (*(void (**)(char *, void, uint64_t))(v21 + 104))( v23,  enum case for AdditionalMetricsDescription.SourceFunction.prompt(_:),  v20);
    swift_getErrorValue(v31, v99, v98);
    uint64_t v32 = Error.localizedDescription.getter(v98[1], v98[2]);
    uint64_t v34 = v33;
    uint64_t v90 = static AdditionalMetricsDescription.encodeInfo(module:source:statusReason:extraInfo:)( v27,  v23,  v32,  v33,  0LL,  1LL);
    uint64_t v36 = v35;
    __n128 v37 = swift_bridgeObjectRelease(v34);
    (*(void (**)(char *, uint64_t, __n128))(v21 + 8))(v23, v20, v37);
    (*(void (**)(char *, uint64_t))(v25 + 8))(v27, v24);
    uint64_t v39 = v91[6];
    uint64_t v38 = v91[7];
    uint64_t v91 = sub_6EA8(v91 + 3, v39);
    uint64_t v40 = enum case for ActivityType.failed(_:);
    uint64_t v41 = type metadata accessor for ActivityType(0LL);
    uint64_t v42 = *(void *)(v41 - 8);
    uint64_t v43 = (uint64_t)v84;
    (*(void (**)(char *, uint64_t, uint64_t))(v42 + 104))(v84, v40, v41);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v42 + 56))(v43, 0LL, 1LL, v41);
    uint64_t v44 = type metadata accessor for TemplatingResult(0LL);
    uint64_t v45 = (uint64_t)v85;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v44 - 8) + 56LL))(v85, 1LL, 1LL, v44);
    uint64_t v46 = enum case for SiriKitReliabilityCodes.renderingError(_:);
    uint64_t v47 = type metadata accessor for SiriKitReliabilityCodes(0LL);
    uint64_t v48 = *(void *)(v47 - 8);
    uint64_t v49 = (uint64_t)v86;
    (*(void (**)(char *, uint64_t, uint64_t))(v48 + 104))(v86, v46, v47);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v48 + 56))(v49, 0LL, 1LL, v47);
    dispatch thunk of SiriKitTaskLoggingProviding.submitMetric(app:intent:activityType:templateResult:statusReason:description:mediaItemType:)( v92,  v95,  v43,  v45,  v49,  v90,  v36,  0LL,  1,  v39,  v38);
    swift_bridgeObjectRelease(v36);
    sub_1F6CC(v49, &qword_2845A0);
    sub_1F6CC(v45, (uint64_t *)&unk_286BD0);
    sub_1F6CC(v43, &qword_2845A8);
    v96[0] = v31;
    char v97 = 1;
    swift_errorRetain(v31);
    v93(v96);
    swift_errorRelease(v31);
    return sub_1F6CC((uint64_t)v96, (uint64_t *)&unk_286C60);
  }

  else
  {
    uint64_t v51 = v80;
    uint64_t v52 = *(int *)(v80 + 48);
    uint64_t v53 = type metadata accessor for TemplatingResult(0LL);
    uint64_t v54 = *(void (**)(uint64_t, uint64_t *, uint64_t))(*(void *)(v53 - 8) + 32LL);
    uint64_t v88 = *(void *)(v53 - 8);
    uint64_t v55 = v88;
    uint64_t v56 = v89;
    v54(v89, v30, v53);
    uint64_t v57 = *(void **)((char *)v30 + v52);
    *(void *)(v56 + v5sub_6C3C(v0 + 2) = v57;
    uint64_t v58 = v56;
    uint64_t v59 = *(char **)(v79 + 80);
    uint64_t v85 = *(char **)(v79 + 88);
    uint64_t v84 = v59;
    swift_getAssociatedTypeWitness(0LL);
    swift_getAssociatedTypeWitness(0LL);
    id v60 = v57;
    sub_98F88(v90);
    int v61 = v91;
    uint64_t v82 = sub_6EA8(v91 + 8, v91[11]);
    uint64_t v62 = *(int *)(v51 + 48);
    uint64_t v63 = *(void (**)(char *, uint64_t, uint64_t))(v55 + 16);
    uint64_t v64 = (uint64_t)v87;
    uint64_t v86 = (char *)v53;
    v63(v87, v58, v53);
    *(void *)(v64 + v6sub_6C3C(v0 + 2) = v60;
    uint64_t v65 = *(int *)(v51 + 48);
    uint64_t v66 = (uint64_t)v83;
    v63(v83, v58, v53);
    *(void *)(v66 + v65) = v60;
    uint64_t v67 = *(unsigned __int8 *)(v81 + 80);
    uint64_t v68 = (v67 + 56) & ~v67;
    unint64_t v69 = (v9 + v68 + 7) & 0xFFFFFFFFFFFFFFF8LL;
    os_log_type_t v70 = (void *)swift_allocObject(&unk_275AB8, v69 + 16, v67 | 7);
    uint64_t v71 = v85;
    v70[2] = v84;
    v70[3] = v71;
    uint64_t v72 = v92;
    v70[4] = v61;
    v70[5] = v72;
    int v73 = v95;
    v70[6] = v95;
    sub_45F6C(v66, (uint64_t)v70 + v68, &qword_289340);
    uint64_t v74 = (void *)((char *)v70 + v69);
    uint64_t v75 = v94;
    *uint64_t v74 = v93;
    v74[1] = v75;
    id v76 = v60;
    swift_retain(v61);
    swift_retain(v72);
    id v77 = v73;
    swift_retain(v75);
    uint64_t v78 = v90;
    sub_1761E0(v64, v76, v90, (void (*)(uint64_t *))sub_1EF600, (uint64_t)v70);

    swift_release(v70);
    sub_1F6CC(v78, (uint64_t *)&unk_286C50);
    sub_1F6CC(v89, &qword_289340);
    return (*(uint64_t (**)(uint64_t, char *))(v88 + 8))(v64, v86);
  }

uint64_t sub_1EE1CC( uint64_t a1, void *a2, uint64_t a3, void *a4, void (*a5)(void *), uint64_t a6)
{
  uint64_t v94 = a5;
  uint64_t v95 = a6;
  uint64_t v92 = a3;
  uint64_t v93 = a4;
  uint64_t v88 = a1;
  uint64_t v91 = a2;
  uint64_t v83 = *a2;
  uint64_t v6 = sub_6C5C((uint64_t *)&unk_286C50);
  __chkstk_darwin(v6);
  uint64_t v90 = (uint64_t)&v79 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v80 = sub_6C5C(&qword_289340);
  uint64_t v81 = *(void *)(v80 - 8);
  uint64_t v8 = *(void *)(v81 + 64);
  uint64_t v9 = __chkstk_darwin(v80);
  uint64_t v82 = (char *)&v79 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v10 = __chkstk_darwin(v9);
  uint64_t v89 = (uint64_t)&v79 - v11;
  __chkstk_darwin(v10);
  uint64_t v86 = (char *)&v79 - v12;
  uint64_t v13 = sub_6C5C(&qword_2845A0);
  __chkstk_darwin(v13);
  os_log_type_t v87 = (char *)&v79 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v15 = sub_6C5C((uint64_t *)&unk_286BD0);
  __chkstk_darwin(v15);
  uint64_t v85 = (uint64_t *)((char *)&v79 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  uint64_t v17 = sub_6C5C(&qword_2845A8);
  __chkstk_darwin(v17);
  uint64_t v84 = (char *)&v79 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v19 = type metadata accessor for AdditionalMetricsDescription.SourceFunction(0LL);
  uint64_t v20 = *(void *)(v19 - 8);
  __chkstk_darwin(v19);
  uint64_t v22 = (char *)&v79 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v23 = type metadata accessor for AdditionalMetricsDescription.ModuleName(0LL);
  uint64_t v24 = *(void *)(v23 - 8);
  __chkstk_darwin(v23);
  uint64_t v26 = (char *)&v79 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v27 = sub_6C5C((uint64_t *)&unk_286BB0);
  __chkstk_darwin(v27);
  uint64_t v29 = (uint64_t *)((char *)&v79 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  sub_FF10(v88, (uint64_t)v29, (uint64_t *)&unk_286BB0);
  if (swift_getEnumCaseMultiPayload(v29, v27) == 1)
  {
    uint64_t v30 = *v29;
    (*(void (**)(char *, void, uint64_t))(v24 + 104))( v26,  enum case for AdditionalMetricsDescription.ModuleName.ccifs(_:),  v23);
    (*(void (**)(char *, void, uint64_t))(v20 + 104))( v22,  enum case for AdditionalMetricsDescription.SourceFunction.rejResp(_:),  v19);
    swift_getErrorValue(v30, v99, v98);
    uint64_t v31 = Error.localizedDescription.getter(v98[1], v98[2]);
    uint64_t v33 = v32;
    uint64_t v34 = static AdditionalMetricsDescription.encodeInfo(module:source:statusReason:extraInfo:)( v26,  v22,  v31,  v32,  0LL,  1LL);
    uint64_t v89 = v35;
    uint64_t v90 = v34;
    __n128 v36 = swift_bridgeObjectRelease(v33);
    (*(void (**)(char *, uint64_t, __n128))(v20 + 8))(v22, v19, v36);
    (*(void (**)(char *, uint64_t))(v24 + 8))(v26, v23);
    uint64_t v38 = v91[6];
    uint64_t v37 = v91[7];
    sub_6EA8(v91 + 3, v38);
    uint64_t v39 = enum case for ActivityType.failed(_:);
    uint64_t v40 = type metadata accessor for ActivityType(0LL);
    uint64_t v41 = *(void *)(v40 - 8);
    uint64_t v42 = (uint64_t)v84;
    (*(void (**)(char *, uint64_t, uint64_t))(v41 + 104))(v84, v39, v40);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v41 + 56))(v42, 0LL, 1LL, v40);
    uint64_t v43 = type metadata accessor for TemplatingResult(0LL);
    uint64_t v44 = (uint64_t)v85;
    (*(void (**)(void *, uint64_t, uint64_t, uint64_t))(*(void *)(v43 - 8) + 56LL))(v85, 1LL, 1LL, v43);
    uint64_t v45 = enum case for SiriKitReliabilityCodes.renderingError(_:);
    uint64_t v46 = type metadata accessor for SiriKitReliabilityCodes(0LL);
    uint64_t v47 = *(void *)(v46 - 8);
    uint64_t v48 = (uint64_t)v87;
    (*(void (**)(char *, uint64_t, uint64_t))(v47 + 104))(v87, v45, v46);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v47 + 56))(v48, 0LL, 1LL, v46);
    uint64_t v78 = v37;
    uint64_t v49 = v89;
    dispatch thunk of SiriKitTaskLoggingProviding.submitMetric(app:intent:activityType:templateResult:statusReason:description:mediaItemType:)( v92,  v93,  v42,  v44,  v48,  v90,  v89,  0LL,  1,  v38,  v78);
    swift_bridgeObjectRelease(v49);
    sub_1F6CC(v48, &qword_2845A0);
    sub_1F6CC(v44, (uint64_t *)&unk_286BD0);
    sub_1F6CC(v42, &qword_2845A8);
    v96[0] = v30;
    char v97 = 1;
    swift_errorRetain(v30);
    v94(v96);
    swift_errorRelease(v30);
    return sub_1F6CC((uint64_t)v96, (uint64_t *)&unk_286C60);
  }

  else
  {
    uint64_t v51 = v80;
    uint64_t v52 = *(int *)(v80 + 48);
    uint64_t v53 = type metadata accessor for TemplatingResult(0LL);
    uint64_t v54 = *(void (**)(char *, uint64_t *, uint64_t))(*(void *)(v53 - 8) + 32LL);
    uint64_t v88 = *(void *)(v53 - 8);
    uint64_t v55 = v88;
    uint64_t v56 = (uint64_t)v86;
    v54(v86, v29, v53);
    uint64_t v57 = *(void **)((char *)v29 + v52);
    *(void *)(v56 + v5sub_6C3C(v0 + 2) = v57;
    uint64_t v58 = v91;
    uint64_t v85 = sub_6EA8(v91 + 8, v91[11]);
    uint64_t v59 = *(int *)(v51 + 48);
    id v60 = *(void (**)(uint64_t, uint64_t, uint64_t))(v55 + 16);
    uint64_t v61 = v89;
    os_log_type_t v87 = (char *)v53;
    v60(v89, v56, v53);
    *(void *)(v61 + v59) = v57;
    uint64_t v62 = type metadata accessor for NLContextUpdate(0LL);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v62 - 8) + 56LL))(v90, 1LL, 1LL, v62);
    uint64_t v63 = *(int *)(v51 + 48);
    uint64_t v64 = (uint64_t)v82;
    v60((uint64_t)v82, v56, v53);
    *(void *)(v64 + v6sub_6C3C(v0 + 3) = v57;
    uint64_t v65 = *(unsigned __int8 *)(v81 + 80);
    uint64_t v66 = (v65 + 56) & ~v65;
    unint64_t v67 = (v8 + v66 + 7) & 0xFFFFFFFFFFFFFFF8LL;
    uint64_t v68 = (void *)swift_allocObject(&unk_275A68, v67 + 16, v65 | 7);
    uint64_t v69 = v83;
    v68[2] = *(void *)(v83 + 80);
    v68[3] = *(void *)(v69 + 88);
    v68[4] = v58;
    uint64_t v71 = v92;
    os_log_type_t v70 = v93;
    v68[5] = v92;
    v68[6] = v70;
    sub_45F6C(v64, (uint64_t)v68 + v66, &qword_289340);
    uint64_t v72 = (void *)((char *)v68 + v67);
    uint64_t v73 = v95;
    *uint64_t v72 = v94;
    v72[1] = v73;
    id v74 = v57;
    swift_retain(v58);
    swift_retain(v71);
    id v75 = v70;
    swift_retain(v73);
    uint64_t v76 = v89;
    uint64_t v77 = v90;
    sub_176898(v89, v74, v90, (void (*)(uint64_t *))sub_1EF594, (uint64_t)v68);

    swift_release(v68);
    sub_1F6CC(v77, (uint64_t *)&unk_286C50);
    sub_1F6CC(v56, &qword_289340);
    return (*(uint64_t (**)(uint64_t, char *))(v88 + 8))(v76, v87);
  }

uint64_t sub_1EE868( uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t (*a6)(uint64_t), uint64_t a7, unsigned int *a8, unsigned int *a9)
{
  __n128 v50 = a8;
  uint64_t v61 = a7;
  uint64_t v62 = a6;
  uint64_t v58 = a3;
  uint64_t v59 = a4;
  uint64_t v52 = a2;
  uint64_t v60 = a1;
  uint64_t v55 = a9;
  uint64_t v56 = a5;
  uint64_t v9 = sub_6C5C(&qword_2845A0);
  __chkstk_darwin(v9);
  uint64_t v57 = (char *)&v49 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v54 = sub_6C5C(&qword_289340);
  __chkstk_darwin(v54);
  uint64_t v53 = (char *)&v49 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v12 = sub_6C5C((uint64_t *)&unk_286BD0);
  __chkstk_darwin(v12);
  uint64_t v51 = (char *)&v49 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v14 = sub_6C5C(&qword_2845A8);
  __chkstk_darwin(v14);
  uint64_t v16 = (char *)&v49 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v17 = type metadata accessor for AdditionalMetricsDescription.StatusReason(0LL);
  uint64_t v18 = *(void *)(v17 - 8);
  __chkstk_darwin(v17);
  uint64_t v20 = (char *)&v49 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v21 = type metadata accessor for AdditionalMetricsDescription.SourceFunction(0LL);
  uint64_t v22 = *(void *)(v21 - 8);
  __chkstk_darwin(v21);
  uint64_t v24 = (char *)&v49 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v25 = type metadata accessor for AdditionalMetricsDescription.ModuleName(0LL);
  uint64_t v26 = *(void *)(v25 - 8);
  __chkstk_darwin(v25);
  uint64_t v28 = (char *)&v49 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  (*(void (**)(char *, void, uint64_t))(v26 + 104))( v28,  enum case for AdditionalMetricsDescription.ModuleName.ccifs(_:),  v25);
  (*(void (**)(char *, void, uint64_t))(v22 + 104))(v24, *v50, v21);
  (*(void (**)(char *, void, uint64_t))(v18 + 104))( v20,  enum case for AdditionalMetricsDescription.StatusReason.success(_:),  v17);
  uint64_t v29 = static AdditionalMetricsDescription.encodeInfo(module:source:statusReason:extraInfo:)(v28, v24, v20, 0LL, 1LL);
  uint64_t v49 = v30;
  __n128 v50 = (unsigned int *)v29;
  (*(void (**)(char *, uint64_t))(v18 + 8))(v20, v17);
  (*(void (**)(char *, uint64_t))(v22 + 8))(v24, v21);
  (*(void (**)(char *, uint64_t))(v26 + 8))(v28, v25);
  uint64_t v32 = v52[6];
  uint64_t v31 = v52[7];
  sub_6EA8(v52 + 3, v32);
  uint64_t v33 = *v55;
  uint64_t v34 = type metadata accessor for ActivityType(0LL);
  uint64_t v35 = *(void *)(v34 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v35 + 104))(v16, v33, v34);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v35 + 56))(v16, 0LL, 1LL, v34);
  uint64_t v36 = *(int *)(v54 + 48);
  uint64_t v37 = type metadata accessor for TemplatingResult(0LL);
  uint64_t v38 = *(void *)(v37 - 8);
  uint64_t v39 = v53;
  uint64_t v40 = v56;
  (*(void (**)(char *, uint64_t, uint64_t))(v38 + 16))(v53, v56, v37);
  *(void *)&v39[v36] = *(void *)(v40 + v36);
  uint64_t v41 = v39;
  uint64_t v42 = (uint64_t)v51;
  (*(void (**)(char *, char *, uint64_t))(v38 + 32))(v51, v41, v37);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v38 + 56))(v42, 0LL, 1LL, v37);
  uint64_t v43 = enum case for SiriKitReliabilityCodes.success(_:);
  uint64_t v44 = type metadata accessor for SiriKitReliabilityCodes(0LL);
  uint64_t v45 = *(void *)(v44 - 8);
  uint64_t v46 = (uint64_t)v57;
  (*(void (**)(char *, uint64_t, uint64_t))(v45 + 104))(v57, v43, v44);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v45 + 56))(v46, 0LL, 1LL, v44);
  uint64_t v47 = v49;
  dispatch thunk of SiriKitTaskLoggingProviding.submitMetric(app:intent:activityType:templateResult:statusReason:description:mediaItemType:)( v58,  v59,  v16,  v42,  v46,  v50,  v49,  0LL,  1,  v32,  v31);
  swift_bridgeObjectRelease(v47);
  sub_1F6CC(v46, &qword_2845A0);
  sub_1F6CC(v42, (uint64_t *)&unk_286BD0);
  sub_1F6CC((uint64_t)v16, &qword_2845A8);
  return v62(v60);
}

uint64_t sub_1EEC88()
{
  return swift_deallocClassInstance( v0,  *(unsigned int *)(*(void *)v0 + 48LL),  *(unsigned __int16 *)(*(void *)v0 + 52LL));
}

uint64_t type metadata accessor for CommonConfirmIntentFlowStrategy( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_20280(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for CommonConfirmIntentFlowStrategy);
}

void sub_1EECB8(uint64_t a1)
{
  if (!qword_28E1A0)
  {
    uint64_t v2 = type metadata accessor for ConfirmationResponse(255LL);
    unint64_t v3 = type metadata accessor for Optional(a1, v2);
    if (!v4) {
      atomic_store(v3, (unint64_t *)&qword_28E1A0);
    }
  }

uint64_t sub_1EED0C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1ED154(a1, a2);
}

uint64_t sub_1EED2C( uint64_t a1, uint64_t a2, void *a3, uint64_t a4, void (*a5)(uint64_t *), uint64_t a6)
{
  return sub_1EEEBC(a1, a3, a5, a6);
}

uint64_t sub_1EED58(uint64_t a1, void *a2, void *a3, uint64_t a4, uint64_t a5)
{
  return sub_1ED9F0(a1, a2, a3, a4, a5);
}

uint64_t sub_1EED78(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return sub_1EEDC4( a1,  a2,  a3,  a4,  a5,  a6,  a7,  (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))&ConfirmIntentFlowStrategy.makeRepromptOnEmptyParse(app:intent:intentResponse:_:));
}

uint64_t sub_1EED84(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return sub_1EEDC4( a1,  a2,  a3,  a4,  a5,  a6,  a7,  (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))&ConfirmIntentFlowStrategy.makeRepromptOnLowConfidence(app:intent:intentResponse:_:));
}

uint64_t sub_1EED90(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_1EF4A4(a1, a2, a4, a5);
}

uint64_t sub_1EEDB8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return sub_1EEDC4( a1,  a2,  a3,  a4,  a5,  a6,  a7,  (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))&ConfirmIntentFlowStrategy.makeFlowCancelledResponse(app:intent:intentResponse:_:));
}

uint64_t sub_1EEDC4( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t (*a8)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v14 = type metadata accessor for CommonConfirmIntentFlowStrategy(0LL, *(void *)(a6 + 80), *(void *)(a6 + 88), a4);
  return a8(a1, a2, a3, a4, a5, v14, a7);
}

uint64_t sub_1EEE44( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v15 = type metadata accessor for CommonConfirmIntentFlowStrategy(0LL, *(void *)(a7 + 80), *(void *)(a7 + 88), a4);
  return ConfirmIntentFlowStrategy.makeErrorResponse(app:intent:intentResponse:error:_:)( a1,  a2,  a3,  a4,  a5,  a6,  v15,  a8);
}

uint64_t sub_1EEEBC(uint64_t a1, void *a2, void (*a3)(uint64_t *), uint64_t a4)
{
  uint64_t v5 = v4;
  uint64_t v64 = a4;
  uint64_t v65 = a3;
  id v59 = a2;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness(255LL);
  uint64_t v6 = type metadata accessor for ConfirmIntentAnswer(255LL);
  uint64_t v7 = sub_45D50(&qword_284010);
  uint64_t v8 = type metadata accessor for Result(0LL, v6, v7, &protocol self-conformance witness table for Error);
  uint64_t v62 = *(void *)(v8 - 8);
  uint64_t v63 = v8;
  __chkstk_darwin(v8);
  uint64_t v61 = (uint64_t *)((char *)&v54 - v9);
  uint64_t v10 = type metadata accessor for Logger(0LL);
  uint64_t v66 = *(void *)(v10 - 8);
  uint64_t v11 = __chkstk_darwin(v10);
  uint64_t v13 = (char *)&v54 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v11);
  uint64_t v60 = (char *)&v54 - v14;
  uint64_t v57 = sub_6C5C((uint64_t *)&unk_286CC0);
  uint64_t v15 = __chkstk_darwin(v57);
  uint64_t v17 = (char *)&v54 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v15);
  uint64_t v19 = (char *)&v54 - v18;
  uint64_t v20 = type metadata accessor for ConfirmationResponse(0LL);
  uint64_t v21 = *(void *)(v20 - 8);
  __chkstk_darwin(v20);
  uint64_t v23 = (char *)&v54 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v24 = v5 + qword_28E118;
  swift_beginAccess(v5 + qword_28E118, v69, 0LL, 0LL);
  sub_FF10(v24, (uint64_t)v19, (uint64_t *)&unk_286CC0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48))(v19, 1LL, v20) == 1)
  {
    sub_1F6CC((uint64_t)v19, (uint64_t *)&unk_286CC0);
    if (qword_283888 != -1) {
      swift_once(&qword_283888, sub_BFC5C);
    }
    uint64_t v25 = sub_6960(v10, (uint64_t)qword_2969C8);
    uint64_t v26 = v66;
    uint64_t v27 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v66 + 16))(v13, v25, v10);
    uint64_t v28 = (os_log_s *)Logger.logObject.getter(v27);
    os_log_type_t v29 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v28, v29))
    {
      uint64_t v30 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)uint64_t v30 = 0;
      _os_log_impl( &dword_0,  v28,  v29,  "ConfirmIntentStrategy#parseConfirmationResponse confirmationResponse is nil, this is not expected",  v30,  2u);
      swift_slowDealloc(v30, -1LL, -1LL);
    }

    (*(void (**)(char *, uint64_t))(v26 + 8))(v13, v10);
    uint64_t v31 = type metadata accessor for PlaybackCode(0LL);
    uint64_t v32 = sub_10430( &qword_2845E8,  (uint64_t (*)(uint64_t))&type metadata accessor for PlaybackCode,  (uint64_t)&protocol conformance descriptor for PlaybackCode);
    uint64_t v33 = swift_allocError(v31, v32, 0LL, 0LL);
    (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v31 - 8) + 104LL))( v34,  enum case for PlaybackCode.ceGE52(_:),  v31);
    uint64_t v35 = v61;
    *uint64_t v61 = v33;
    uint64_t v36 = v63;
    swift_storeEnumTagMultiPayload(v35, v63, 1LL);
    v65(v35);
    return (*(uint64_t (**)(uint64_t *, uint64_t))(v62 + 8))(v35, v36);
  }

  else
  {
    uint64_t v38 = *(void (**)(char *, char *, uint64_t))(v21 + 32);
    uint64_t v56 = v23;
    v38(v23, v19, v20);
    if (qword_283888 != -1) {
      swift_once(&qword_283888, sub_BFC5C);
    }
    uint64_t v39 = sub_6960(v10, (uint64_t)qword_2969C8);
    uint64_t v40 = v66;
    uint64_t v41 = v60;
    (*(void (**)(char *, uint64_t, uint64_t))(v66 + 16))(v60, v39, v10);
    uint64_t v42 = swift_retain_n(v5, 2LL);
    uint64_t v43 = (os_log_s *)Logger.logObject.getter(v42);
    os_log_type_t v44 = static os_log_type_t.default.getter(v43);
    if (os_log_type_enabled(v43, v44))
    {
      uint64_t v45 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
      uint64_t v55 = swift_slowAlloc(32LL, -1LL);
      uint64_t v68 = v55;
      *(_DWORD *)uint64_t v45 = 136315138;
      uint64_t v54 = v45 + 4;
      sub_FF10(v24, (uint64_t)v17, (uint64_t *)&unk_286CC0);
      uint64_t v46 = String.init<A>(describing:)(v17, v57);
      unint64_t v48 = v47;
      uint64_t v67 = sub_6978(v46, v47, &v68);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v67, &v68);
      swift_release_n(v5, 2LL);
      swift_bridgeObjectRelease(v48);
      _os_log_impl( &dword_0,  v43,  v44,  "ConfirmIntentStrategy#parseConfirmationResponse confirmation response: %s",  v45,  0xCu);
      uint64_t v49 = v55;
      swift_arrayDestroy(v55, 1LL, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v49, -1LL, -1LL);
      swift_slowDealloc(v45, -1LL, -1LL);

      (*(void (**)(char *, uint64_t))(v66 + 8))(v60, v10);
    }

    else
    {

      swift_release_n(v5, 2LL);
      (*(void (**)(char *, uint64_t))(v40 + 8))(v41, v10);
    }

    __n128 v50 = v56;
    (*(void (**)(char *, char *, uint64_t))(v21 + 16))(v17, v56, v20);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v21 + 56))(v17, 0LL, 1LL, v20);
    id v51 = v59;
    uint64_t v52 = v61;
    ConfirmIntentAnswer.init(confirmationResponse:intent:)(v17, v51, AssociatedTypeWitness);
    uint64_t v53 = v63;
    swift_storeEnumTagMultiPayload(v52, v63, 0LL);
    v65(v52);
    (*(void (**)(uint64_t *, uint64_t))(v62 + 8))(v52, v53);
    return (*(uint64_t (**)(char *, uint64_t))(v21 + 8))(v50, v20);
  }

uint64_t sub_1EF4A4(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v9 = (void *)swift_allocObject(&unk_275A40, 56LL, 7LL);
  v9[2] = v4;
  v9[3] = a1;
  v9[4] = a2;
  v9[5] = a3;
  v9[6] = a4;
  swift_retain(v4);
  swift_retain(a1);
  id v10 = a2;
  swift_retain(a4);
  sub_1F1800(a1, (uint64_t)sub_1EF580, (uint64_t)v9);
  return swift_release(v9);
}

uint64_t sub_1EF544()
{
  swift_release(*(void *)(v0 + 48));
  return swift_deallocObject(v0, 56LL, 7LL);
}

uint64_t sub_1EF580(uint64_t a1)
{
  return sub_1EE1CC( a1,  *(void **)(v1 + 16),  *(void *)(v1 + 24),  *(void **)(v1 + 32),  *(void (**)(void *))(v1 + 40),  *(void *)(v1 + 48));
}

uint64_t sub_1EF594(uint64_t a1)
{
  return sub_1EF614( a1,  (unsigned int *)&enum case for AdditionalMetricsDescription.SourceFunction.rejResp(_:),  &enum case for ActivityType.confirmationRejected(_:));
}

uint64_t sub_1EF5A8()
{
  swift_release(*(void *)(v0 + 48));
  return swift_deallocObject(v0, 64LL, 7LL);
}

uint64_t sub_1EF5EC(uint64_t a1)
{
  return sub_1EDAB4( a1,  *(void **)(v1 + 16),  *(void *)(v1 + 24),  *(void **)(v1 + 32),  *(void (**)(void *))(v1 + 40),  *(void *)(v1 + 48),  *(void **)(v1 + 56));
}

uint64_t sub_1EF600(uint64_t a1)
{
  return sub_1EF614( a1,  (unsigned int *)&enum case for AdditionalMetricsDescription.SourceFunction.prompt(_:),  &enum case for ActivityType.confirmIntent(_:));
}

uint64_t sub_1EF614(uint64_t a1, unsigned int *a2, unsigned int *a3)
{
  uint64_t v7 = *(void *)(sub_6C5C(&qword_289340) - 8);
  unint64_t v8 = (*(unsigned __int8 *)(v7 + 80) + 56LL) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  uint64_t v9 = v3 + ((*(void *)(v7 + 64) + v8 + 7) & 0xFFFFFFFFFFFFFFF8LL);
  return sub_1EE868( a1,  *(void **)(v3 + 32),  *(void *)(v3 + 40),  *(void *)(v3 + 48),  v3 + v8,  *(uint64_t (**)(uint64_t))v9,  *(void *)(v9 + 8),  a2,  a3);
}

uint64_t sub_1EF698(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_6C5C((uint64_t *)&unk_286CC0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40LL))(a2, a1, v4);
  return a2;
}

Swift::Int sub_1EF6E0()
{
  return Hasher._finalize()();
}

uint64_t sub_1EF734(uint64_t a1)
{
  return String.hash(into:)(a1, 0xD00000000000001ALL, 0x800000000021D140LL);
}

Swift::Int sub_1EF750(uint64_t a1)
{
  return Hasher._finalize()();
}

uint64_t sub_1EF7A0@<X0>(uint64_t *a1@<X0>, BOOL *a2@<X8>)
{
  v3._uint64_t countAndFlagsBits = *a1;
  uint64_t v4 = (void *)a1[1];
  v3._object = v4;
  Swift::Int v5 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_26B850, v3);
  uint64_t result = swift_bridgeObjectRelease(v4);
  *a2 = v5 != 0;
  return result;
}

void sub_1EF7F0(void *a1@<X8>)
{
  *a1 = 0xD00000000000001ALL;
  a1[1] = 0x800000000021D140LL;
}

unint64_t sub_1EF810()
{
  uint64_t v0 = type metadata accessor for DialogHistoryProvider();
  uint64_t v1 = swift_allocObject(v0, 24LL, 7LL);
  unint64_t result = sub_1EF870();
  *(void *)(v1 + swift_weakDestroy(v0 + 16) = result;
  qword_296C50 = v1;
  return result;
}

uint64_t sub_1EF84C()
{
  return swift_deallocClassInstance(v0, 24LL, 7LL);
}

unint64_t sub_1EF870()
{
  id v0 = objc_allocWithZone(&OBJC_CLASS___NSUserDefaults);
  NSString v1 = String._bridgeToObjectiveC()();
  id v2 = [v0 initWithSuiteName:v1];

  if (!v2)
  {
    __int128 v8 = 0u;
    __int128 v9 = 0u;
LABEL_9:
    sub_1F6CC((uint64_t)&v8, &qword_284028);
    return sub_75310((uint64_t)&_swiftEmptyArrayStorage);
  }

  NSString v3 = String._bridgeToObjectiveC()();
  id v4 = [v2 objectForKey:v3];

  if (v4)
  {
    _bridgeAnyObjectToAny(_:)(v7, v4);
    swift_unknownObjectRelease(v4);
  }

  else
  {
    memset(v7, 0, sizeof(v7));
  }

  sub_4AE18((uint64_t)v7, (uint64_t)&v8);
  if (!*((void *)&v9 + 1)) {
    goto LABEL_9;
  }
  uint64_t v5 = sub_6C5C(&qword_28E270);
  return sub_75310((uint64_t)&_swiftEmptyArrayStorage);
}

uint64_t sub_1EF9CC(uint64_t a1, void *a2, void *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v68 = a3;
  uint64_t v69 = a4;
  sub_30240();
  uint64_t v70 = v5;
  if (v10)
  {
    unint64_t v11 = v10;
    uint64_t v74 = (uint64_t)v9;
    unint64_t v75 = v10;
    uint64_t v78 = 0x7C295C3F2A2E285CLL;
    unint64_t v79 = 0xEF5D5C3F2A2E5B5CLL;
    uint64_t v72 = 0LL;
    unint64_t v73 = 0xE000000000000000LL;
    uint64_t v12 = v9;
    unint64_t v13 = sub_6D68();
    uint64_t v14 = StringProtocol.replacingOccurrences<A, B>(of:with:options:range:)( &v78,  &v72,  1025LL,  0LL,  0LL,  1LL,  &type metadata for String,  &type metadata for String,  &type metadata for String,  v13,  v13,  v13);
    unint64_t v16 = v15;
    uint64_t v71 = v12;
    uint64_t v17 = String.count.getter(v12, v11);
    uint64_t result = String.count.getter(v14, v16);
    if (__OFSUB__(v17, result))
    {
      __break(1u);
      goto LABEL_43;
    }

    if (v17 - result < 35 || String.count.getter(v14, v16) <= 5)
    {
      swift_bridgeObjectRelease(v16);
    }

    else
    {
      swift_bridgeObjectRelease(v11);
      uint64_t v71 = (uint64_t *)v14;
      unint64_t v11 = v16;
    }
  }

  else
  {
    sub_30240();
    uint64_t v71 = v19;
    unint64_t v11 = v20;
  }

  sub_30600();
  uint64_t v66 = a1;
  uint64_t v67 = a5;
  if (!v22)
  {
    uint64_t v30 = a2;
    sub_30600();
    uint64_t v23 = v37;
    unint64_t v24 = v38;
    uint64_t v36 = v69;
    goto LABEL_25;
  }

  uint64_t v23 = v21;
  unint64_t v24 = v22;
  uint64_t v25 = a2;
  sub_30240();
  if (!v27)
  {
    uint64_t v30 = a2;
    sub_30240();
    uint64_t v36 = v69;
    if (!v40) {
      goto LABEL_25;
    }
    uint64_t v28 = v39;
    unint64_t v34 = v40;
    goto LABEL_20;
  }

  uint64_t v28 = v26;
  unint64_t v29 = v27;
  uint64_t v30 = v25;
  uint64_t v74 = v26;
  unint64_t v75 = v27;
  uint64_t v78 = 0x7C295C3F2A2E285CLL;
  unint64_t v79 = 0xEF5D5C3F2A2E5B5CLL;
  uint64_t v72 = 0LL;
  unint64_t v73 = 0xE000000000000000LL;
  unint64_t v31 = sub_6D68();
  uint64_t v32 = StringProtocol.replacingOccurrences<A, B>(of:with:options:range:)( &v78,  &v72,  1025LL,  0LL,  0LL,  1LL,  &type metadata for String,  &type metadata for String,  &type metadata for String,  v31,  v31,  v31);
  unint64_t v34 = v33;
  uint64_t v35 = String.count.getter(v28, v29);
  uint64_t result = String.count.getter(v32, v34);
  if (__OFSUB__(v35, result))
  {
LABEL_43:
    __break(1u);
    return result;
  }

  if (v35 - result >= 35)
  {
    uint64_t v36 = v69;
    if (String.count.getter(v32, v34) <= 5)
    {
      swift_bridgeObjectRelease(v34);
      unint64_t v34 = v29;
    }

    else
    {
      swift_bridgeObjectRelease(v29);
      uint64_t v28 = v32;
    }
  }

  else
  {
    swift_bridgeObjectRelease(v34);
    unint64_t v34 = v29;
    uint64_t v36 = v69;
  }

void sub_1EFF70()
{
  NSString v1 = (void *)(v0 + 16);
  swift_beginAccess(v0 + 16, v18, 0LL, 0LL);
  uint64_t v2 = *(void *)(v0 + 16);
  if (*(void *)(v2 + 16))
  {
    swift_bridgeObjectRetain(v2);
    unint64_t v3 = sub_9A744(0xD00000000000001ALL, 0x800000000021D140LL);
    if ((v4 & 1) != 0) {
      uint64_t v5 = *(void *)(*(void *)(v2 + 56) + 8 * v3);
    }
    else {
      uint64_t v5 = 0LL;
    }
    swift_bridgeObjectRelease(v2);
  }

  else
  {
    uint64_t v5 = 0LL;
  }

  BOOL v6 = __OFADD__(v5, 1LL);
  uint64_t v7 = v5 + 1;
  if (v6)
  {
    __break(1u);
  }

  else
  {
    swift_beginAccess(v1, v17, 33LL, 0LL);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v1);
    uint64_t v16 = *v1;
    *NSString v1 = 0x8000000000000000LL;
    sub_33938(v7, 0xD00000000000001ALL, 0x800000000021D140LL, isUniquelyReferenced_nonNull_native);
    uint64_t v9 = *v1;
    *NSString v1 = v16;
    swift_bridgeObjectRelease(v9);
    swift_endAccess(v17);
    id v10 = objc_allocWithZone(&OBJC_CLASS___NSUserDefaults);
    NSString v11 = String._bridgeToObjectiveC()();
    id v12 = [v10 initWithSuiteName:v11];

    if (v12)
    {
      uint64_t v13 = *v1;
      swift_bridgeObjectRetain(v13);
      Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease(v13);
      NSString v15 = String._bridgeToObjectiveC()();
      [v12 setObject:isa forKey:v15];
    }
  }

uint64_t sub_1F0144()
{
  return swift_deallocObject(v0, 32LL, 7LL);
}

void *assignWithCopy for SiriForAirPlayDialogMemory(void *a1, void *a2)
{
  *a1 = *a2;
  sub_14ECD4(a1 + 1, a2 + 1);
  return a1;
}

uint64_t assignWithTake for SiriForAirPlayDialogMemory(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  sub_6C3C((void *)(a1 + 8));
  *(_OWORD *)(a1 + sub_6C3C(v0 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  return a1;
}

uint64_t storeEnumTagSinglePayload for SiriForAirPlayDialogMemory(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 40) = 0LL;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + sub_6C3C(v0 + 8) = 0u;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(_BYTE *)(result + 4sub_6C3C(v0 + 8) = 1;
    }
  }

  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 3sub_6C3C(v0 + 2) = (a2 - 1);
      return result;
    }

    *(_BYTE *)(result + 4sub_6C3C(v0 + 8) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }

  return result;
}

ValueMetadata *type metadata accessor for SiriForAirPlayDialogMemory()
{
  return &type metadata for SiriForAirPlayDialogMemory;
}

uint64_t storeEnumTagSinglePayload for DialogMemoryID(uint64_t a1, int a2, int a3)
{
  else {
    int v3 = 2;
  }
  else {
    LODWORD(v4) = v3;
  }
  if (a3) {
    uint64_t v4 = v4;
  }
  else {
    uint64_t v4 = 0LL;
  }
  if (a2) {
    return ((uint64_t (*)(void))((char *)sub_1F0278 + 4 * byte_21B8E0[v4]))();
  }
  else {
    return ((uint64_t (*)(void))((char *)sub_1F0298 + 4 * byte_21B8E5[v4]))();
  }
}

_BYTE *sub_1F0278(_BYTE *result, char a2)
{
  *uint64_t result = a2;
  return result;
}

_BYTE *sub_1F0298(_BYTE *result)
{
  *uint64_t result = 0;
  return result;
}

_DWORD *sub_1F02A0(_DWORD *result, int a2)
{
  *uint64_t result = a2;
  return result;
}

_WORD *sub_1F02A8(_WORD *result, __int16 a2)
{
  *uint64_t result = a2;
  return result;
}

_WORD *sub_1F02B0(_WORD *result)
{
  *uint64_t result = 0;
  return result;
}

_DWORD *sub_1F02B8(_DWORD *result)
{
  *uint64_t result = 0;
  return result;
}

ValueMetadata *type metadata accessor for DialogMemoryID()
{
  return &type metadata for DialogMemoryID;
}

unint64_t sub_1F02D8()
{
  unint64_t result = qword_28E278;
  if (!qword_28E278)
  {
    unint64_t result = swift_getWitnessTable(&unk_21BA34, &type metadata for DialogMemoryID);
    atomic_store(result, (unint64_t *)&qword_28E278);
  }

  return result;
}

void sub_1F031C()
{
}

void sub_1F0328()
{
}

void sub_1F0334(SEL *a1)
{
  id v3 = [v1 mediaItems];
  if (!v3) {
    return;
  }
  uint64_t v4 = v3;
  unint64_t v5 = sub_687D0();
  uint64_t v6 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v4, v5);

  if ((unint64_t)v6 >> 62)
  {
    if (v6 < 0) {
      uint64_t v10 = v6;
    }
    else {
      uint64_t v10 = v6 & 0xFFFFFFFFFFFFFF8LL;
    }
    swift_bridgeObjectRetain(v6);
    uint64_t v11 = _CocoaArrayWrapper.endIndex.getter(v10);
    swift_bridgeObjectRelease(v6);
    if (v11) {
      goto LABEL_4;
    }
LABEL_13:
    swift_bridgeObjectRelease(v6);
    return;
  }

BOOL sub_1F0460(uint64_t a1)
{
  return MediaIntentCommons.isGrounding()();
}

BOOL sub_1F0494(uint64_t a1)
{
  return MediaIntentCommons.isUserRecognized()();
}

BOOL sub_1F04C8(uint64_t a1, void *a2, uint64_t a3)
{
  v5.value._uint64_t countAndFlagsBits = a1;
  v5.value._object = a2;
  return MediaIntentCommons.isAppAttributionRequired(bundleIdentifier:)(v5);
}

uint64_t sub_1F0514(uint64_t a1)
{
  return MediaIntentCommons.getFallbackUsername()().value._countAndFlagsBits;
}

BOOL sub_1F0548(uint64_t a1)
{
  return MediaIntentCommons.useDialogMemoryForAppAttribution()();
}

uint64_t sub_1F057C(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for INUpdateMediaAffinityIntent, a1);
  return MediaIntentCommons.wholeHouseAudioMetadata()(a1, WitnessTable);
}

uint64_t sub_1F05B0(uint64_t a1)
{
  return MediaIntentCommons.proxiedAppName()().value._countAndFlagsBits;
}

uint64_t sub_1F05E4()
{
  return PrivateMediaIntentDataProviding.getSharedUserID()().value._countAndFlagsBits;
}

uint64_t sub_1F05F0()
{
  return CommonIntentSignals.getLocaleOverride()().value._countAndFlagsBits;
}

uint64_t sub_1F05FC(uint64_t a1)
{
  return PrivateMediaIntentDataProviding.isAppAttributionRequired.getter( a1,  &protocol witness table for INUpdateMediaAffinityIntent);
}

uint64_t sub_1F0608(uint64_t a1)
{
  return PrivateMediaIntentDataProviding.useDialogMemoryForAttribution.getter( a1,  &protocol witness table for INUpdateMediaAffinityIntent);
}

uint64_t sub_1F0614(uint64_t a1)
{
  return PrivateMediaIntentDataProviding.fallbackUsername.getter( a1,  &protocol witness table for INUpdateMediaAffinityIntent);
}

uint64_t sub_1F0620()
{
  return INUpdateMediaAffinityIntent.privateMediaIntentData.getter();
}

uint64_t sub_1F0640(uint64_t a1)
{
  return PrivateMediaIntentDataProviding.isUserConfidenceEnoughToBeRecognized.getter( a1,  &protocol witness table for INUpdateMediaAffinityIntent);
}

uint64_t sub_1F064C(Swift::String a1)
{
  return PrivateMediaIntentDataProviding.localizedAppName(for:)(a1).value._countAndFlagsBits;
}

BOOL sub_1F0658()
{
  return CommonIntentSignals.isExpertSFAUser()();
}

BOOL sub_1F0664()
{
  return CommonIntentSignals.handledBySiriForAirPlay()();
}

uint64_t sub_1F0670(uint64_t a1)
{
  v2[0] = (char *)&value witness table for Builtin.NativeObject + 64;
  v2[1] = "(";
  v2[2] = "(";
  v2[3] = &unk_21BBE0;
  return swift_initClassMetadata2(a1, 0LL, 4LL, v2, a1 + 96);
}

void *sub_1F06C8()
{
  return v0;
}

uint64_t sub_1F06FC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = type metadata accessor for Logger(0LL);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  __int128 v8 = (char *)v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  if (qword_283888 != -1) {
    swift_once(&qword_283888, sub_BFC5C);
  }
  uint64_t v9 = sub_6960(v5, (uint64_t)qword_2969C8);
  uint64_t v10 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, v9, v5);
  uint64_t v11 = (os_log_s *)Logger.logObject.getter(v10);
  os_log_type_t v12 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v11, v12))
  {
    uint64_t v13 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
    *(_WORD *)uint64_t v13 = 0;
    _os_log_impl(&dword_0, v11, v12, "CommonDialogProvider#makeGenericErrorDialog", v13, 2u);
    swift_slowDealloc(v13, -1LL, -1LL);
  }

  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  unint64_t v14 = sub_74D54((uint64_t)_swiftEmptyArrayStorage);
  uint64_t v19 = 0LL;
  memset(v18, 0, sizeof(v18));
  __chkstk_darwin(v14);
  *(void *)&v18[-5] = v15;
  *((void *)&v18[-5] + 1) = v16;
  strcpy((char *)&v18[-4], "GenericError");
  BYTE13(v18[-4]) = 0;
  HIWORD(v18[-4]) = -5120;
  sub_200268( (uint64_t)"catServiceExecute",  17LL,  2u,  a2,  a3,  "CatService#execute family=%{signpost.telemetry:string1,public}@ id=%{signpost.telemetry:string2,public}@ enableTelemetry=YES ",  125LL,  2,  v15,  v16,  0x45636972656E6547LL,  0xEC000000726F7272LL,  (void (*)(uint64_t (*)(), uint64_t))sub_3CAE4,  (uint64_t)&v18[-6]);
  swift_bridgeObjectRelease(v14);
  return sub_1F6CC((uint64_t)v18, &qword_283FE8);
}

uint64_t sub_1F0928(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v7 = sub_74D54((uint64_t)_swiftEmptyArrayStorage);
  uint64_t v8 = v3[2];
  uint64_t v9 = v3[13];
  uint64_t v10 = v3[14];
  uint64_t v23 = 0LL;
  memset(v22, 0, sizeof(v22));
  uint64_t v13 = v9;
  uint64_t v14 = v10;
  uint64_t v15 = 0x6E496567726142LL;
  unint64_t v16 = 0xE700000000000000LL;
  uint64_t v17 = v8;
  unint64_t v18 = v7;
  uint64_t v19 = a1;
  unint64_t v20 = v22;
  uint64_t v21 = 0LL;
  sub_200268( (uint64_t)"catServiceExecute",  17LL,  2u,  a2,  a3,  "CatService#execute family=%{signpost.telemetry:string1,public}@ id=%{signpost.telemetry:string2,public}@ enableTelemetry=YES ",  125LL,  2,  v9,  v10,  0x6E496567726142LL,  0xE700000000000000LL,  (void (*)(uint64_t (*)(), uint64_t))sub_3CAE4,  (uint64_t)v12);
  swift_bridgeObjectRelease(v7);
  return sub_1F6CC((uint64_t)v22, &qword_283FE8);
}

double sub_1F0A10( uint64_t a1, uint64_t a2, uint64_t a3, void *a4, void *a5, void (*a6)(uint64_t *), uint64_t a7)
{
  uint64_t v8 = v7;
  uint64_t v111 = a7;
  __int128 v110 = a6;
  id v112 = a5;
  uint64_t v113 = a1;
  uint64_t v109 = *v7;
  uint64_t v105 = sub_6C5C((uint64_t *)&unk_286BB0);
  __chkstk_darwin(v105);
  uint64_t v106 = (uint64_t *)((char *)&v104 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  uint64_t v13 = type metadata accessor for Logger(0LL);
  uint64_t v14 = *(void *)(v13 - 8);
  __chkstk_darwin(v13);
  unint64_t v16 = (char *)&v104 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  if (qword_283888 != -1) {
    swift_once(&qword_283888, sub_BFC5C);
  }
  uint64_t v17 = sub_6960(v13, (uint64_t)qword_2969C8);
  uint64_t v18 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v14 + 16))(v16, v17, v13);
  uint64_t v19 = (os_log_s *)Logger.logObject.getter(v18);
  os_log_type_t v20 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v19, v20))
  {
    uint64_t v21 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
    *(_WORD *)uint64_t v21 = 0;
    _os_log_impl(&dword_0, v19, v20, "CommonDialogProvider#makePromptForConfirmationDialog", v21, 2u);
    swift_slowDealloc(v21, -1LL, -1LL);
  }

  (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
  uint64_t v22 = sub_6C5C(&qword_2844D0);
  uint64_t inited = swift_initStackObject(v22, v119);
  *(_OWORD *)(inited + swift_weakDestroy(v0 + 16) = xmmword_214510;
  *(void *)(inited + 3sub_6C3C(v0 + 2) = 7368801LL;
  *(void *)(inited + 40) = 0xE300000000000000LL;
  *(void *)(inited + 7sub_6C3C(v0 + 2) = type metadata accessor for App(0LL);
  uint64_t v24 = v113;
  *(void *)(inited + 4sub_6C3C(v0 + 8) = v113;
  swift_retain(v24);
  unint64_t v25 = sub_74D54(inited);
  unint64_t v120 = v25;
  if (a2 == 0x657449616964656DLL && a3 == 0xEA0000000000736DLL
    || (_stringCompareWithSmolCheck(_:_:expecting:)(0x657449616964656DLL, 0xEA0000000000736DLL) & 1) != 0)
  {
    id v26 = [a4 itemToConfirm];
    _bridgeAnyObjectToAny(_:)(&v116, v26);
    swift_unknownObjectRelease(v26);
    uint64_t v27 = sub_1641C(0LL, (unint64_t *)&qword_289310, &OBJC_CLASS___INMediaItem_ptr);
    if (swift_dynamicCast(v115, &v116, (char *)&type metadata for Any + 8, v27, 6LL))
    {
      uint64_t v28 = *(void **)&v115[0];
      id v29 = [*(id *)&v115[0] artist];
      if (v29)
      {
        uint64_t v30 = v29;
        uint64_t v31 = static String._unconditionallyBridgeFromObjectiveC(_:)(v29);
        uint64_t v33 = v32;
      }

      else
      {
        uint64_t v31 = 0LL;
        uint64_t v33 = 0LL;
      }

      id v43 = [v28 title];
      *(void *)&__int128 v107 = v31;
      if (!v43)
      {
        if (!v33) {
          goto LABEL_34;
        }
        object = String.lowercased()()._object;
        goto LABEL_25;
      }

      uint64_t v44 = v43;
      static String._unconditionallyBridgeFromObjectiveC(_:)(v43);
      uint64_t v46 = v45;

      Swift::String v47 = String.lowercased()();
      unint64_t v48 = v47._object;
      swift_bridgeObjectRelease(v46);
      if (v33)
      {
        Swift::String v49 = String.lowercased()();
        object = v49._object;
        if (v47._object)
        {
          if (v49._object)
          {
            if (v47._countAndFlagsBits == v49._countAndFlagsBits && v47._object == v49._object)
            {
              swift_bridgeObjectRelease_n(v47._object, 2LL);
LABEL_34:
              uint64_t v34 = 0LL;
              unint64_t v35 = 0LL;
              goto LABEL_35;
            }

            char v56 = _stringCompareWithSmolCheck(_:_:expecting:)(v47._countAndFlagsBits, v47._object);
            swift_bridgeObjectRelease(v47._object);
            unint64_t v51 = swift_bridgeObjectRelease(v49._object).n128_u64[0];
            if ((v56 & 1) != 0) {
              goto LABEL_34;
            }
LABEL_29:
            id v52 = objc_msgSend(v28, "title", *(double *)&v51);
            id v53 = v112;
            if (v52)
            {
              char v54 = v52;
              uint64_t v34 = static String._unconditionallyBridgeFromObjectiveC(_:)(v52);
              unint64_t v35 = v55;
            }

            else
            {
              uint64_t v34 = 0LL;
              unint64_t v35 = 0LL;
            }

LABEL_56:
                  if (!v64)
                  {

                    goto LABEL_65;
                  }

                  if ((v64 & 0x2000000000000000LL) != 0) {
                    uint64_t v77 = HIBYTE(v64) & 0xF;
                  }
                  else {
                    uint64_t v77 = v34 & 0xFFFFFFFFFFFFLL;
                  }

                  if (v77)
                  {
                    swift_bridgeObjectRelease(v35);
                    swift_bridgeObjectRelease(*((void *)&v107 + 1));
                    *(void *)&__int128 v107 = 0LL;
                    unint64_t v67 = 0xE400000000000000LL;
                    char v78 = 1;
                    *((void *)&v107 + 1) = 0xE000000000000000LL;
                    uint64_t v68 = 1497451600LL;
                    goto LABEL_68;
                  }

uint64_t sub_1F16B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v11 = sub_6C5C(&qword_2844D0);
  uint64_t inited = swift_initStackObject(v11, v30);
  *(_OWORD *)(inited + swift_weakDestroy(v0 + 16) = xmmword_214510;
  *(void *)(inited + 3sub_6C3C(v0 + 2) = 0x6574656D61726170LL;
  *(void *)(inited + 40) = 0xE900000000000072LL;
  *(void *)(inited + 7sub_6C3C(v0 + 2) = &type metadata for String;
  *(void *)(inited + 4sub_6C3C(v0 + 8) = a2;
  *(void *)(inited + 56) = a3;
  swift_bridgeObjectRetain(a3);
  unint64_t v13 = sub_74D54(inited);
  uint64_t v14 = v5[2];
  uint64_t v15 = v5[13];
  uint64_t v16 = v5[14];
  uint64_t v29 = 0LL;
  memset(v28, 0, sizeof(v28));
  uint64_t v19 = v15;
  uint64_t v20 = v16;
  unint64_t v21 = 0xD00000000000001BLL;
  unint64_t v22 = 0x8000000000223FE0LL;
  uint64_t v23 = v14;
  unint64_t v24 = v13;
  uint64_t v25 = a1;
  id v26 = v28;
  uint64_t v27 = 0LL;
  sub_200268( (uint64_t)"catServiceExecute",  17LL,  2u,  a4,  a5,  "CatService#execute family=%{signpost.telemetry:string1,public}@ id=%{signpost.telemetry:string2,public}@ enableTelemetry=YES ",  125LL,  2,  v15,  v16,  0xD00000000000001BLL,  0x8000000000223FE0LL,  (void (*)(uint64_t (*)(), uint64_t))sub_3CAE4,  (uint64_t)v18);
  swift_bridgeObjectRelease(v13);
  return sub_1F6CC((uint64_t)v28, &qword_283FE8);
}

uint64_t sub_1F1800(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v7 = sub_74D54((uint64_t)_swiftEmptyArrayStorage);
  uint64_t v8 = v3[2];
  uint64_t v9 = v3[13];
  uint64_t v10 = v3[14];
  uint64_t v23 = 0LL;
  memset(v22, 0, sizeof(v22));
  uint64_t v13 = v9;
  uint64_t v14 = v10;
  unint64_t v15 = 0xD000000000000023LL;
  unint64_t v16 = 0x8000000000223FB0LL;
  uint64_t v17 = v8;
  unint64_t v18 = v7;
  uint64_t v19 = a1;
  uint64_t v20 = v22;
  uint64_t v21 = 0LL;
  sub_200268( (uint64_t)"catServiceExecute",  17LL,  2u,  a2,  a3,  "CatService#execute family=%{signpost.telemetry:string1,public}@ id=%{signpost.telemetry:string2,public}@ enableTelemetry=YES ",  125LL,  2,  v9,  v10,  0xD000000000000023LL,  0x8000000000223FB0LL,  (void (*)(uint64_t (*)(), uint64_t))sub_3CAE4,  (uint64_t)v12);
  swift_bridgeObjectRelease(v7);
  return sub_1F6CC((uint64_t)v22, &qword_283FE8);
}

uint64_t sub_1F18EC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v7 = sub_74D54((uint64_t)_swiftEmptyArrayStorage);
  uint64_t v8 = v3[2];
  uint64_t v9 = v3[13];
  uint64_t v10 = v3[14];
  uint64_t v23 = 0LL;
  memset(v22, 0, sizeof(v22));
  uint64_t v13 = v9;
  uint64_t v14 = v10;
  unint64_t v15 = 0xD000000000000014LL;
  unint64_t v16 = 0x8000000000223F90LL;
  uint64_t v17 = v8;
  unint64_t v18 = v7;
  uint64_t v19 = a1;
  uint64_t v20 = v22;
  uint64_t v21 = 0LL;
  sub_200268( (uint64_t)"catServiceExecute",  17LL,  2u,  a2,  a3,  "CatService#execute family=%{signpost.telemetry:string1,public}@ id=%{signpost.telemetry:string2,public}@ enableTelemetry=YES ",  125LL,  2,  v9,  v10,  0xD000000000000014LL,  0x8000000000223F90LL,  (void (*)(uint64_t (*)(), uint64_t))sub_3CAE4,  (uint64_t)v12);
  swift_bridgeObjectRelease(v7);
  return sub_1F6CC((uint64_t)v22, &qword_283FE8);
}

uint64_t sub_1F19D8(uint64_t a1, uint64_t a2)
{
  unint64_t v5 = sub_74D54((uint64_t)_swiftEmptyArrayStorage);
  uint64_t v6 = v2[2];
  uint64_t v7 = v2[13];
  uint64_t v8 = v2[14];
  uint64_t v21 = 0LL;
  memset(v20, 0, sizeof(v20));
  uint64_t v11 = v7;
  uint64_t v12 = v8;
  unint64_t v13 = 0xD000000000000017LL;
  unint64_t v14 = 0x8000000000223F70LL;
  uint64_t v15 = v6;
  unint64_t v16 = v5;
  uint64_t v17 = 0LL;
  unint64_t v18 = v20;
  uint64_t v19 = 0LL;
  sub_200268( (uint64_t)"catServiceExecute",  17LL,  2u,  a1,  a2,  "CatService#execute family=%{signpost.telemetry:string1,public}@ id=%{signpost.telemetry:string2,public}@ enableTelemetry=YES ",  125LL,  2,  v7,  v8,  0xD000000000000017LL,  0x8000000000223F70LL,  (void (*)(uint64_t (*)(), uint64_t))sub_3CAE4,  (uint64_t)v10);
  swift_bridgeObjectRelease(v5);
  return sub_1F6CC((uint64_t)v20, &qword_283FE8);
}

uint64_t sub_1F1AB8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = v3[2];
  uint64_t v8 = v3[13];
  uint64_t v9 = v3[14];
  unint64_t v10 = sub_74D54((uint64_t)_swiftEmptyArrayStorage);
  uint64_t v23 = 0LL;
  memset(v22, 0, sizeof(v22));
  uint64_t v13 = v8;
  uint64_t v14 = v9;
  unint64_t v15 = 0xD000000000000011LL;
  unint64_t v16 = 0x8000000000223F50LL;
  uint64_t v17 = v7;
  unint64_t v18 = v10;
  uint64_t v19 = a1;
  uint64_t v20 = v22;
  uint64_t v21 = 0LL;
  sub_200268( (uint64_t)"catServiceExecute",  17LL,  2u,  a2,  a3,  "CatService#execute family=%{signpost.telemetry:string1,public}@ id=%{signpost.telemetry:string2,public}@ enableTelemetry=YES ",  125LL,  2,  v8,  v9,  0xD000000000000011LL,  0x8000000000223F50LL,  (void (*)(uint64_t (*)(), uint64_t))sub_3CAE4,  (uint64_t)v12);
  swift_bridgeObjectRelease(v10);
  return sub_1F6CC((uint64_t)v22, &qword_283FE8);
}

uint64_t sub_1F1BAC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = v3[2];
  uint64_t v8 = v3[13];
  uint64_t v9 = v3[14];
  unint64_t v10 = sub_74D54((uint64_t)_swiftEmptyArrayStorage);
  uint64_t v23 = 0LL;
  memset(v22, 0, sizeof(v22));
  uint64_t v13 = v8;
  uint64_t v14 = v9;
  unint64_t v15 = 0xD000000000000013LL;
  unint64_t v16 = 0x8000000000223F30LL;
  uint64_t v17 = v7;
  unint64_t v18 = v10;
  uint64_t v19 = a1;
  uint64_t v20 = v22;
  uint64_t v21 = 0LL;
  sub_200268( (uint64_t)"catServiceExecute",  17LL,  2u,  a2,  a3,  "CatService#execute family=%{signpost.telemetry:string1,public}@ id=%{signpost.telemetry:string2,public}@ enableTelemetry=YES ",  125LL,  2,  v8,  v9,  0xD000000000000013LL,  0x8000000000223F30LL,  (void (*)(uint64_t (*)(), uint64_t))sub_3CAE4,  (uint64_t)v12);
  swift_bridgeObjectRelease(v10);
  return sub_1F6CC((uint64_t)v22, &qword_283FE8);
}

uint64_t sub_1F1CA0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v7 = sub_74D54((uint64_t)_swiftEmptyArrayStorage);
  uint64_t v8 = v3[2];
  uint64_t v9 = v3[13];
  uint64_t v10 = v3[14];
  uint64_t v23 = 0LL;
  memset(v22, 0, sizeof(v22));
  uint64_t v13 = v9;
  uint64_t v14 = v10;
  uint64_t v15 = 0x416D7269666E6F43LL;
  unint64_t v16 = 0xEA00000000007070LL;
  uint64_t v17 = v8;
  unint64_t v18 = v7;
  uint64_t v19 = a1;
  uint64_t v20 = v22;
  uint64_t v21 = 0LL;
  sub_200268( (uint64_t)"catServiceExecute",  17LL,  2u,  a2,  a3,  "CatService#execute family=%{signpost.telemetry:string1,public}@ id=%{signpost.telemetry:string2,public}@ enableTelemetry=YES ",  125LL,  2,  v9,  v10,  0x416D7269666E6F43LL,  0xEA00000000007070LL,  (void (*)(uint64_t (*)(), uint64_t))sub_3CAE4,  (uint64_t)v12);
  swift_bridgeObjectRelease(v7);
  return sub_1F6CC((uint64_t)v22, &qword_283FE8);
}

uint64_t sub_1F1D8C(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  unint64_t v5 = v4;
  uint64_t v10 = *v4;
  unint64_t v11 = sub_74D54((uint64_t)_swiftEmptyArrayStorage);
  uint64_t v12 = objc_opt_self(&OBJC_CLASS___INPlayMediaIntent);
  uint64_t v13 = swift_dynamicCastObjCClass(a2, v12);
  if (v13)
  {
    uint64_t v14 = (void *)v13;
    id v15 = a2;
    if ((_s23AudioFlowDelegatePlugin22InternalSignalsManagerC10doesIntent_4haveSbSo8INIntentC_SaySSGtFZ_0( v14,  (uint64_t)&off_269DE0) & 1) != 0)
    {
      *((void *)&v28 + 1) = &type metadata for Bool;
      LOBYTE(v2sub_6C3C(v0 + 7) = 1;
      sub_21964(&v27, v26);
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v11);
      v25[13] = v11;
      sub_33808(v26, 0xD000000000000012LL, 0x8000000000223F10LL, isUniquelyReferenced_nonNull_native);

      swift_bridgeObjectRelease(0x8000000000000000LL);
    }

    else
    {
    }
  }

  uint64_t v17 = v5[2];
  uint64_t v18 = v5[13];
  uint64_t v19 = v5[14];
  *(void *)&v26[0] = a2;
  uint64_t v20 = *(void *)(v10 + 80);
  id v21 = a2;
  uint64_t v22 = sub_6C5C(&qword_285BC8);
  uint64_t v23 = swift_dynamicCast(&v27, v26, v20, v22, 6LL);
  if ((v23 & 1) == 0)
  {
    uint64_t v29 = 0LL;
    __int128 v27 = 0u;
    __int128 v28 = 0u;
  }

  __chkstk_darwin(v23);
  v25[2] = v18;
  v25[3] = v19;
  v25[4] = 0xD000000000000017LL;
  void v25[5] = 0x8000000000223EF0LL;
  v25[6] = v17;
  v25[7] = v11;
  v25[8] = a1;
  v25[9] = &v27;
  v25[10] = 0LL;
  sub_200268( (uint64_t)"catServiceExecute",  17LL,  2u,  a3,  a4,  "CatService#execute family=%{signpost.telemetry:string1,public}@ id=%{signpost.telemetry:string2,public}@ enableTelemetry=YES ",  125LL,  2,  v18,  v19,  0xD000000000000017LL,  0x8000000000223EF0LL,  (void (*)(uint64_t (*)(), uint64_t))sub_3CAE4,  (uint64_t)v25);
  swift_bridgeObjectRelease(v11);
  return sub_1F6CC((uint64_t)&v27, &qword_283FE8);
}

uint64_t sub_1F1F9C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v9 = v4[2];
  uint64_t v10 = v4[13];
  uint64_t v11 = v4[14];
  unint64_t v12 = sub_74D54((uint64_t)_swiftEmptyArrayStorage);
  uint64_t v15 = v10;
  uint64_t v16 = v11;
  uint64_t v17 = 0x6F656D6954707041LL;
  unint64_t v18 = 0xEA00000000007475LL;
  uint64_t v19 = v9;
  unint64_t v20 = v12;
  uint64_t v21 = a1;
  uint64_t v22 = a2;
  uint64_t v23 = 0LL;
  sub_200268( (uint64_t)"catServiceExecute",  17LL,  2u,  a3,  a4,  "CatService#execute family=%{signpost.telemetry:string1,public}@ id=%{signpost.telemetry:string2,public}@ enableTelemetry=YES ",  125LL,  2,  v10,  v11,  0x6F656D6954707041LL,  0xEA00000000007475LL,  (void (*)(uint64_t (*)(), uint64_t))sub_3CAE4,  (uint64_t)v14);
  return swift_bridgeObjectRelease(v12);
}

void sub_1F2074(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v8 = *v5;
  sub_1F4978(a3, (uint64_t)v12);
  if (v13)
  {
    uint64_t v9 = sub_6C5C(&qword_285BC8);
    else {
      uint64_t v10 = 0LL;
    }
  }

  else
  {
    sub_1F6CC((uint64_t)v12, &qword_283FE8);
    uint64_t v10 = 0LL;
  }

  sub_1F49C0(v10, a4, a5);
}

uint64_t sub_1F2118(void *a1, void (*a2)(uint64_t *), uint64_t a3)
{
  uint64_t v6 = sub_6C5C((uint64_t *)&unk_286BB0);
  __chkstk_darwin(v6);
  uint64_t v8 = (uint64_t *)((char *)&v44 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  uint64_t v9 = objc_opt_self(&OBJC_CLASS___INPlayMediaIntent);
  if (swift_dynamicCastObjCClass(a1, v9))
  {
    id v45 = a1;
    sub_30544();
    uint64_t v11 = v10;
    uint64_t v12 = sub_6C5C(&qword_28E308);
    uint64_t inited = swift_initStackObject(v12, v48);
    *(_OWORD *)(inited + swift_weakDestroy(v0 + 16) = xmmword_219300;
    *(void *)(inited + 3sub_6C3C(v0 + 2) = 0xD000000000000016LL;
    *(void *)(inited + 40) = 0x8000000000221980LL;
    if (v11)
    {
      Swift::String v14 = String.lowercased()();
      Swift::String v15 = String.lowercased()();
      object = v15._object;
      if (v14._object)
      {
        if (v14._countAndFlagsBits == v15._countAndFlagsBits && v14._object == v15._object)
        {
          swift_bridgeObjectRelease_n(v14._object, 2LL);
          char v17 = 1;
        }

        else
        {
          char v17 = _stringCompareWithSmolCheck(_:_:expecting:)(v14._countAndFlagsBits, v14._object);
          swift_bridgeObjectRelease(v14._object);
          swift_bridgeObjectRelease(v15._object);
        }

        *(_BYTE *)(inited + 4sub_6C3C(v0 + 8) = v17 & 1;
        strcpy((char *)(inited + 56), "isStoryTelling");
        *(_BYTE *)(inited + 71) = -18;
        goto LABEL_13;
      }
    }

    else
    {
      object = String.lowercased()()._object;
    }

    swift_bridgeObjectRelease(object);
    *(_BYTE *)(inited + 4sub_6C3C(v0 + 8) = 0;
    strcpy((char *)(inited + 56), "isStoryTelling");
    *(_BYTE *)(inited + 71) = -18;
    if (!v11)
    {
      uint64_t v23 = String.lowercased()()._object;
      goto LABEL_17;
    }

LABEL_21:
    Swift::String v28 = String.lowercased()();
    Swift::String v29 = String.lowercased()();
    __int128 v27 = v29._object;
    if (v28._object)
    {
      if (v28._countAndFlagsBits == v29._countAndFlagsBits && v28._object == v29._object)
      {
        swift_bridgeObjectRelease_n(v28._object, 2LL);
        char v30 = 1;
      }

      else
      {
        char v30 = _stringCompareWithSmolCheck(_:_:expecting:)(v28._countAndFlagsBits, v28._object);
        swift_bridgeObjectRelease(v28._object);
        swift_bridgeObjectRelease(v29._object);
      }

      *(_BYTE *)(inited + 96) = v30 & 1;
      *(void *)(inited + 104) = 0xD000000000000011LL;
      *(void *)(inited + 11sub_6C3C(v0 + 2) = 0x80000000002219A0LL;
      goto LABEL_29;
    }

uint64_t sub_1F28B8(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5, uint64_t a6)
{
  uint64_t v7 = v6;
  uint64_t v31 = a5;
  uint64_t v32 = a6;
  v30[0] = *v6;
  v30[1] = a1;
  uint64_t v11 = type metadata accessor for Logger(0LL);
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  Swift::String v14 = (char *)v30 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  if (qword_283888 != -1) {
    swift_once(&qword_283888, sub_BFC5C);
  }
  uint64_t v15 = sub_6960(v11, (uint64_t)qword_2969C8);
  uint64_t v16 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v12 + 16))(v14, v15, v11);
  char v17 = (os_log_s *)Logger.logObject.getter(v16);
  os_log_type_t v18 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v17, v18))
  {
    uint64_t v19 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
    *(_WORD *)uint64_t v19 = 0;
    _os_log_impl(&dword_0, v17, v18, "CommonDialogProvider#makePromptForDisambiguationDialog...", v19, 2u);
    swift_slowDealloc(v19, -1LL, -1LL);
  }

  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  uint64_t v20 = sub_6C5C(&qword_2844D0);
  uint64_t inited = swift_initStackObject(v20, v36);
  *(_OWORD *)(inited + swift_weakDestroy(v0 + 16) = xmmword_214510;
  *(void *)(inited + 3sub_6C3C(v0 + 2) = 0x6574656D61726170LL;
  *(void *)(inited + 40) = 0xE900000000000072LL;
  *(void *)(inited + 7sub_6C3C(v0 + 2) = &type metadata for String;
  *(void *)(inited + 4sub_6C3C(v0 + 8) = a2;
  *(void *)(inited + 56) = a3;
  swift_bridgeObjectRetain(a3);
  unint64_t v22 = sub_74D54(inited);
  uint64_t v23 = v7[13];
  uint64_t v24 = v7[14];
  unint64_t v35 = a4;
  uint64_t v25 = *(void *)(v30[0] + 80LL);
  id v26 = a4;
  uint64_t v27 = sub_6C5C(&qword_285BC8);
  uint64_t v28 = swift_dynamicCast(v33, &v35, v25, v27, 6LL);
  if ((v28 & 1) == 0)
  {
    uint64_t v34 = 0LL;
    memset(v33, 0, sizeof(v33));
  }

  __chkstk_darwin(v28);
  v30[-10] = v23;
  v30[-9] = v24;
  v30[-8] = 0xD000000000000015LL;
  v30[-7] = 0x8000000000223E70LL;
  sub_200268( (uint64_t)"catServiceExecute",  17LL,  2u,  v31,  v32,  "CatService#execute family=%{signpost.telemetry:string1,public}@ id=%{signpost.telemetry:string2,public}@ enableTelemetry=YES ",  125LL,  2,  v23,  v24,  0xD000000000000015LL,  0x8000000000223E70LL,  (void (*)(uint64_t (*)(), uint64_t))sub_3CAE4,  (uint64_t)&v30[-12]);
  swift_bridgeObjectRelease(v22);
  return sub_1F6CC((uint64_t)v33, &qword_283FE8);
}

uint64_t sub_1F2B78(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10 = *v5;
  unint64_t v11 = sub_74D54((uint64_t)_swiftEmptyArrayStorage);
  uint64_t v12 = v5[2];
  uint64_t v13 = v5[13];
  uint64_t v14 = v5[14];
  uint64_t v23 = a2;
  uint64_t v15 = *(void *)(v10 + 80);
  id v16 = a2;
  uint64_t v17 = sub_6C5C(&qword_285BC8);
  uint64_t v18 = swift_dynamicCast(v21, &v23, v15, v17, 6LL);
  if ((v18 & 1) == 0)
  {
    uint64_t v22 = 0LL;
    memset(v21, 0, sizeof(v21));
  }

  __chkstk_darwin(v18);
  _OWORD v20[2] = v13;
  void v20[3] = v14;
  void v20[4] = 0xD000000000000018LL;
  v20[5] = 0x800000000021D800LL;
  v20[6] = v12;
  v20[7] = v11;
  v20[8] = a1;
  v20[9] = v21;
  v20[10] = 0LL;
  sub_200268( (uint64_t)"catServiceExecute",  17LL,  2u,  a4,  a5,  "CatService#execute family=%{signpost.telemetry:string1,public}@ id=%{signpost.telemetry:string2,public}@ enableTelemetry=YES ",  125LL,  2,  v13,  v14,  0xD000000000000018LL,  0x800000000021D800LL,  (void (*)(uint64_t (*)(), uint64_t))sub_3CAE4,  (uint64_t)v20);
  swift_bridgeObjectRelease(v11);
  return sub_1F6CC((uint64_t)v21, &qword_283FE8);
}

uint64_t sub_1F2CDC( uint64_t a1, void (*a2)(char *, uint64_t), uint64_t a3, void (*a4)(char *, uint64_t), void (*a5)(uint64_t), uint64_t a6, void *a7)
{
  uint64_t v108 = a3;
  uint64_t v109 = a4;
  uint64_t v116 = sub_6C5C((uint64_t *)&unk_286BB0);
  __chkstk_darwin(v116);
  __int128 v117 = (uint64_t *)((char *)&v106 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  uint64_t v110 = sub_6C5C(&qword_28E300);
  uint64_t v13 = __chkstk_darwin(v110);
  uint64_t v111 = (char *)&v106 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v13);
  id v112 = (char *)&v106 - v15;
  uint64_t v119 = type metadata accessor for Logger(0LL);
  *(void *)&__int128 v118 = *(void *)(v119 - 8);
  uint64_t v16 = __chkstk_darwin(v119);
  os_log_type_t v115 = (char *)&v106 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v18 = __chkstk_darwin(v16);
  uint64_t v20 = (char *)&v106 - v19;
  __chkstk_darwin(v18);
  uint64_t v22 = (char *)&v106 - v21;
  uint64_t v23 = type metadata accessor for Locale(0LL);
  uint64_t v24 = *(void *)(v23 - 8);
  __chkstk_darwin(v23);
  id v26 = (char *)&v106 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  if (a2)
  {
    uint64_t v108 = a1;
    uint64_t v113 = a6;
    unint64_t v114 = a5;
    uint64_t v27 = a7[6];
    uint64_t v28 = a7[7];
    sub_6EA8(a7 + 3, v27);
    uint64_t v29 = type metadata accessor for PlayMediaAlternativesViewProvider();
    uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata(v29);
    uint64_t v31 = (void *)objc_opt_self(&OBJC_CLASS___NSBundle);
    uint64_t v109 = a2;
    id v32 = objc_msgSend(v31, "bundleForClass:", ObjCClassFromMetadata, swift_bridgeObjectRetain(a2).n128_f64[0]);
    static SiriAudioEnvironment.siriLocale.getter(v32);
    uint64_t v33 = dispatch thunk of StringsFileResolving.value(for:table:bundle:locale:defaultValue:)( 0x5050415F4E45504FLL,  0xE800000000000000LL,  0x656D614E707041LL,  0xE700000000000000LL,  v32,  v26,  0LL,  0xE000000000000000LL,  v27,  v28);
    unint64_t v35 = v34;

    (*(void (**)(char *, uint64_t))(v24 + 8))(v26, v23);
    if (qword_283888 != -1) {
      swift_once(&qword_283888, sub_BFC5C);
    }
    uint64_t v36 = v119;
    uint64_t v37 = sub_6960(v119, (uint64_t)qword_2969C8);
    uint64_t v38 = v118;
    __int128 v107 = *(void (**)(char *, uint64_t, uint64_t))(v118 + 16);
    v107(v22, v37, v36);
    uint64_t v39 = swift_bridgeObjectRetain_n(v35, 2LL);
    uint64_t v40 = (os_log_s *)Logger.logObject.getter(v39);
    os_log_type_t v41 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v40, v41))
    {
      uint64_t v106 = v37;
      uint64_t v42 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
      uint64_t v43 = swift_slowAlloc(32LL, -1LL);
      uint64_t v121 = v43;
      *(_DWORD *)uint64_t v42 = 136315138;
      swift_bridgeObjectRetain(v35);
      uint64_t v120 = sub_6978(v33, v35, &v121);
      uint64_t v37 = v106;
      uint64_t v36 = v119;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v120, &v121);
      swift_bridgeObjectRelease_n(v35, 3LL);
      _os_log_impl(&dword_0, v40, v41, "CommonDialogProvider#makeOpenAppDialog using template: %s", v42, 0xCu);
      swift_arrayDestroy(v43, 1LL, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v43, -1LL, -1LL);
      swift_slowDealloc(v42, -1LL, -1LL);
    }

    else
    {

      swift_bridgeObjectRelease_n(v35, 2LL);
    }

    uint64_t v58 = *(void (**)(char *, uint64_t))(v38 + 8);
    v58(v22, v36);
    uint64_t v59 = v115;
    uint64_t v60 = sub_6C5C((uint64_t *)&unk_289320);
    uint64_t v61 = swift_allocObject(v60, 72LL, 7LL);
    __int128 v118 = xmmword_214510;
    *(_OWORD *)(v61 + swift_weakDestroy(v0 + 16) = xmmword_214510;
    *(void *)(v61 + 56) = &type metadata for String;
    *(void *)(v61 + 64) = sub_6DAC();
    double v62 = v109;
    *(void *)(v61 + 3sub_6C3C(v0 + 2) = v108;
    *(void *)(v61 + 40) = v62;
    uint64_t v63 = String.init(format:_:)(v33, v35, v61);
    uint64_t v65 = v64;
    v107(v59, v37, v36);
    swift_bridgeObjectRetain(v35);
    unint64_t v67 = (os_log_s *)Logger.logObject.getter(v66);
    os_log_type_t v68 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v67, v68))
    {
      uint64_t v69 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
      uint64_t v70 = swift_slowAlloc(32LL, -1LL);
      uint64_t v121 = v70;
      uint64_t v109 = v58;
      *(_DWORD *)uint64_t v69 = 136315138;
      swift_bridgeObjectRetain(v35);
      uint64_t v120 = sub_6978(v33, v35, &v121);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v120, &v121);
      swift_bridgeObjectRelease_n(v35, 3LL);
      _os_log_impl(&dword_0, v67, v68, "CommonDialogProvider#makeOpenAppDialog formatted dialog: %s", v69, 0xCu);
      swift_arrayDestroy(v70, 1LL, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v70, -1LL, -1LL);
      swift_slowDealloc(v69, -1LL, -1LL);

      v109(v115, v119);
    }

    else
    {

      swift_bridgeObjectRelease_n(v35, 2LL);
      v58(v59, v36);
    }

    id v71 = [objc_allocWithZone(DialogExecutionResult) init];
    NSString v72 = String._bridgeToObjectiveC()();
    [v71 setCatId:v72];

    id v73 = [objc_allocWithZone(DialogElement) init];
    NSString v74 = String._bridgeToObjectiveC()();
    [v73 setFullPrint:v74];

    NSString v75 = String._bridgeToObjectiveC()();
    [v73 setFullSpeak:v75];

    uint64_t v76 = sub_6C5C(&qword_287980);
    uint64_t v77 = swift_allocObject(v76, 40LL, 7LL);
    *(_OWORD *)(v77 + swift_weakDestroy(v0 + 16) = xmmword_214980;
    *(void *)(v77 + 3sub_6C3C(v0 + 2) = v73;
    uint64_t v121 = v77;
    specialized Array._endMutation()(v77);
    uint64_t v78 = v121;
    sub_1641C(0LL, (unint64_t *)&qword_284008, &OBJC_CLASS___DialogElement_ptr);
    id v79 = v73;
    Class isa = Array._bridgeToObjectiveC()().super.isa;
    objc_msgSend(v71, "setDialog:", isa, swift_bridgeObjectRelease(v78).n128_f64[0]);

    uint64_t v81 = v110;
    uint64_t v82 = *(int *)(v110 + 48);
    uint64_t v83 = sub_6C5C(&qword_284018);
    uint64_t v84 = swift_allocObject(v83, 48LL, 7LL);
    *(_OWORD *)(v84 + swift_weakDestroy(v0 + 16) = v118;
    *(void *)(v84 + 3sub_6C3C(v0 + 2) = v63;
    *(void *)(v84 + 40) = v65;
    uint64_t v85 = swift_allocObject(v83, 48LL, 7LL);
    *(_OWORD *)(v85 + swift_weakDestroy(v0 + 16) = v118;
    *(void *)(v85 + 3sub_6C3C(v0 + 2) = v63;
    *(void *)(v85 + 40) = v65;
    swift_bridgeObjectRetain(v65);
    char v86 = v112;
    TemplatingResult.init(templateIdentifier:speak:print:)(0xD000000000000019LL, 0x8000000000223E30LL, v84, v85);
    *(void *)&v86[v82] = v71;
    uint64_t v87 = *(int *)(v81 + 48);
    uint64_t v88 = type metadata accessor for TemplatingResult(0LL);
    uint64_t v89 = *(void *)(v88 - 8);
    uint64_t v90 = v111;
    (*(void (**)(char *, char *, uint64_t))(v89 + 16))(v111, v86, v88);
    *(void *)&v90[v87] = v71;
    uint64_t v91 = *(int *)(sub_6C5C(&qword_289340) + 48);
    uint64_t v92 = *(void (**)(uint64_t *, char *, uint64_t))(v89 + 32);
    uint64_t v93 = (uint64_t)v117;
    v92(v117, v90, v88);
    *(void *)(v93 + v91) = v71;
    swift_storeEnumTagMultiPayload(v93, v116, 0LL);
    id v94 = v71;
    v114(v93);

    sub_1F6CC(v93, (uint64_t *)&unk_286BB0);
    uint64_t v95 = &qword_28E300;
    uint64_t v96 = (uint64_t)v86;
  }

  else
  {
    uint64_t v44 = a6;
    uint64_t v46 = v108;
    unint64_t v45 = (unint64_t)v109;
    if (qword_283888 != -1) {
      swift_once(&qword_283888, sub_BFC5C);
    }
    uint64_t v47 = v119;
    uint64_t v48 = sub_6960(v119, (uint64_t)qword_2969C8);
    uint64_t v49 = v118;
    (*(void (**)(char *, uint64_t, uint64_t))(v118 + 16))(v20, v48, v47);
    uint64_t v50 = (void *)v45;
    uint64_t v51 = swift_bridgeObjectRetain_n(v45, 2LL);
    id v52 = (os_log_s *)Logger.logObject.getter(v51);
    os_log_type_t v53 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v52, v53))
    {
      char v54 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
      uint64_t v55 = swift_slowAlloc(32LL, -1LL);
      uint64_t v113 = v44;
      unint64_t v114 = a5;
      uint64_t v56 = v55;
      uint64_t v121 = v55;
      *(_DWORD *)char v54 = 136315138;
      swift_bridgeObjectRetain(v45);
      uint64_t v120 = sub_6978(v46, v45, &v121);
      uint64_t v50 = (void *)v45;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v120, &v121);
      swift_bridgeObjectRelease_n(v45, 3LL);
      _os_log_impl( &dword_0,  v52,  v53,  "CommonDialogProvider#makeOpenAppDialog couldn't resolve localized name for bundle: %s",  v54,  0xCu);
      swift_arrayDestroy(v56, 1LL, (char *)&type metadata for Any + 8);
      uint64_t v57 = v56;
      a5 = v114;
      swift_slowDealloc(v57, -1LL, -1LL);
      swift_slowDealloc(v54, -1LL, -1LL);

      (*(void (**)(char *, uint64_t))(v118 + 8))(v20, v47);
    }

    else
    {

      swift_bridgeObjectRelease_n(v45, 2LL);
      (*(void (**)(char *, uint64_t))(v49 + 8))(v20, v47);
    }

    uint64_t v121 = 0LL;
    unint64_t v122 = 0xE000000000000000LL;
    _StringGuts.grow(_:)(36LL);
    swift_bridgeObjectRelease(v122);
    uint64_t v121 = 0xD000000000000022LL;
    unint64_t v122 = 0x8000000000223E00LL;
    v97._uint64_t countAndFlagsBits = v46;
    v97._object = v50;
    String.append(_:)(v97);
    uint64_t v98 = v121;
    unint64_t v99 = v122;
    unint64_t v100 = sub_6C9C();
    uint64_t v101 = swift_allocError(&type metadata for String, v100, 0LL, 0LL);
    *uint64_t v102 = v98;
    v102[1] = v99;
    uint64_t v103 = v116;
    uint64_t v104 = v117;
    *__int128 v117 = v101;
    swift_storeEnumTagMultiPayload(v104, v103, 1LL);
    a5((uint64_t)v104);
    uint64_t v95 = (uint64_t *)&unk_286BB0;
    uint64_t v96 = (uint64_t)v104;
  }

  return sub_1F6CC(v96, v95);
}

uint64_t sub_1F376C( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v15 = *v9;
  uint64_t v16 = sub_6C5C(&qword_2844D0);
  uint64_t inited = swift_initStackObject(v16, v31);
  *(_OWORD *)(inited + swift_weakDestroy(v0 + 16) = xmmword_214510;
  *(void *)(inited + 3sub_6C3C(v0 + 2) = 0x6574656D61726170LL;
  *(void *)(inited + 40) = 0xE900000000000072LL;
  *(void *)(inited + 7sub_6C3C(v0 + 2) = &type metadata for String;
  *(void *)(inited + 4sub_6C3C(v0 + 8) = a2;
  *(void *)(inited + 56) = a3;
  swift_bridgeObjectRetain(a3);
  unint64_t v18 = sub_74D54(inited);
  uint64_t v19 = v9[2];
  uint64_t v20 = v9[13];
  uint64_t v21 = v9[14];
  char v30 = a5;
  uint64_t v22 = *(void *)(v15 + 80);
  id v23 = a5;
  uint64_t v24 = sub_6C5C(&qword_285BC8);
  uint64_t v25 = swift_dynamicCast(v28, &v30, v22, v24, 6LL);
  if ((v25 & 1) == 0)
  {
    uint64_t v29 = 0LL;
    memset(v28, 0, sizeof(v28));
  }

  __chkstk_darwin(v25);
  v27[2] = v20;
  v27[3] = v21;
  v27[4] = 0xD000000000000014LL;
  v27[5] = 0x8000000000223E50LL;
  v27[6] = v19;
  v27[7] = v18;
  v27[8] = a1;
  void v27[9] = v28;
  v27[10] = 0LL;
  sub_200268( (uint64_t)"catServiceExecute",  17LL,  2u,  a8,  a9,  "CatService#execute family=%{signpost.telemetry:string1,public}@ id=%{signpost.telemetry:string2,public}@ enableTelemetry=YES ",  125LL,  2,  v20,  v21,  0xD000000000000014LL,  0x8000000000223E50LL,  (void (*)(uint64_t (*)(), uint64_t))sub_3CAE4,  (uint64_t)v27);
  swift_bridgeObjectRelease(v18);
  return sub_1F6CC((uint64_t)v28, &qword_283FE8);
}

uint64_t sub_1F3928()
{
  return swift_deallocClassInstance(v0, 120LL, 7LL);
}

uint64_t type metadata accessor for CommonDialogProvider(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_20280(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for CommonDialogProvider);
}

uint64_t sub_1F3954( uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6, uint64_t a7, uint64_t a8, void *a9)
{
  NSString v72 = a2;
  uint64_t v74 = a1;
  uint64_t v68 = sub_6C5C((uint64_t *)&unk_286BB0);
  __chkstk_darwin(v68);
  uint64_t v70 = (uint64_t *)((char *)&v59 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  uint64_t v16 = type metadata accessor for Logger(0LL);
  uint64_t v66 = *(void *)(v16 - 8);
  uint64_t v67 = v16;
  __chkstk_darwin(v16);
  id v71 = (char *)&v59 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  unint64_t v18 = (void *)swift_allocObject(&unk_275F88, 64LL, 7LL);
  _OWORD v18[2] = a4;
  v18[3] = a5;
  v18[4] = a6;
  v18[5] = a7;
  uint64_t v69 = a7;
  v18[6] = a8;
  v18[7] = a9;
  uint64_t v19 = (void *)swift_allocObject(&unk_275FB0, 40LL, 7LL);
  v19[2] = a3;
  v19[3] = sub_1F4C30;
  v19[4] = v18;
  swift_retain(a4);
  swift_retain(a5);
  uint64_t v20 = a6;
  swift_retain(a8);
  id v21 = a9;
  uint64_t v73 = a3;
  swift_retain(a3);
  uint64_t v22 = swift_retain(v18);
  uint64_t v23 = App.appIdentifier.getter(v22);
  if (v24)
  {
    uint64_t v25 = v23;
    uint64_t v26 = v24;
    uint64_t v27 = v72;
    sub_157C4(v72[2] + 16LL, (uint64_t)v77);
    uint64_t v28 = v78;
    uint64_t v29 = v79;
    sub_6EA8(v77, v78);
    uint64_t v76 = 0LL;
    memset(v75, 0, sizeof(v75));
    char v30 = (void *)swift_allocObject(&unk_275FD8, 56LL, 7LL);
    void v30[2] = v25;
    v30[3] = v26;
    v30[4] = sub_1F4C48;
    void v30[5] = v19;
    void v30[6] = v27;
    swift_bridgeObjectRetain(v26);
    swift_retain(v19);
    swift_retain(v27);
    dispatch thunk of AppNameResolving.localizedAppName(for:helper:completion:)( v25,  v26,  v75,  sub_1F4754,  v30,  v28,  v29);
    swift_bridgeObjectRelease(v26);
    swift_release(v30);
    sub_1F6CC((uint64_t)v75, &qword_2860C0);
    sub_6C3C(v77);
    swift_release(v18);
    swift_release(v73);
    uint64_t v31 = v19;
  }

  else
  {
    id v32 = v71;
    uint64_t v65 = v18;
    id v64 = v21;
    NSString v72 = v20;
    uint64_t v33 = v66;
    uint64_t v34 = v67;
    uint64_t v63 = a4;
    uint64_t v61 = a5;
    uint64_t v60 = a8;
    if (qword_283888 != -1) {
      swift_once(&qword_283888, sub_BFC5C);
    }
    uint64_t v35 = sub_6960(v34, (uint64_t)qword_2969C8);
    (*(void (**)(char *, uint64_t, uint64_t))(v33 + 16))(v32, v35, v34);
    uint64_t v36 = v74;
    uint64_t v37 = swift_retain_n(v74, 2LL);
    uint64_t v38 = (os_log_s *)Logger.logObject.getter(v37);
    os_log_type_t v39 = static os_log_type_t.error.getter();
    BOOL v40 = os_log_type_enabled(v38, v39);
    double v62 = v19;
    if (v40)
    {
      os_log_type_t v41 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
      uint64_t v42 = swift_slowAlloc(32LL, -1LL);
      v77[0] = v42;
      *(_DWORD *)os_log_type_t v41 = 136315138;
      uint64_t v59 = v41 + 4;
      *(void *)&v75[0] = v36;
      uint64_t v43 = type metadata accessor for App(0LL);
      uint64_t v44 = sub_10430( (unint64_t *)&qword_283AB0,  (uint64_t (*)(uint64_t))&type metadata accessor for App,  (uint64_t)&protocol conformance descriptor for App);
      uint64_t v45 = dispatch thunk of CustomStringConvertible.description.getter(v43, v44);
      unint64_t v47 = v46;
      *(void *)&v75[0] = sub_6978(v45, v46, v77);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v75, (char *)v75 + 8);
      swift_release_n(v36, 2LL);
      swift_bridgeObjectRelease(v47);
      _os_log_impl( &dword_0,  v38,  v39,  "CommonDialogProvider#makeOpenAppDialog no bundle identifier in app: %s",  v41,  0xCu);
      swift_arrayDestroy(v42, 1LL, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v42, -1LL, -1LL);
      swift_slowDealloc(v41, -1LL, -1LL);

      (*(void (**)(char *, uint64_t))(v33 + 8))(v71, v34);
    }

    else
    {

      swift_release_n(v36, 2LL);
      (*(void (**)(char *, uint64_t))(v33 + 8))(v32, v34);
    }

    uint64_t v48 = v73;
    uint64_t v49 = v60;
    uint64_t v50 = v61;
    uint64_t v51 = v70;
    unint64_t v52 = sub_6C9C();
    uint64_t v53 = swift_allocError(&type metadata for String, v52, 0LL, 0LL);
    *char v54 = 0xD000000000000019LL;
    v54[1] = 0x8000000000220890LL;
    *uint64_t v51 = v53;
    swift_storeEnumTagMultiPayload(v51, v68, 1LL);
    uint64_t v55 = v63;
    swift_retain(v63);
    swift_retain(v50);
    uint64_t v56 = v72;
    swift_retain(v49);
    id v57 = v64;
    sub_202F90((uint64_t)v51, v48, v55, v50, v56, v69, v49, v57);
    swift_release(v55);
    swift_release(v50);

    swift_release(v49);
    sub_1F6CC((uint64_t)v51, (uint64_t *)&unk_286BB0);
    swift_release(v65);
    swift_release(v48);
    uint64_t v31 = v62;
  }

  return swift_release(v31);
}

uint64_t sub_1F3EC8(uint64_t a1, uint64_t *a2, void *a3, void (*a4)(char *), uint64_t a5)
{
  uint64_t v60 = a2;
  uint64_t v59 = sub_6C5C((uint64_t *)&unk_286BB0);
  __chkstk_darwin(v59);
  uint64_t v10 = (char *)&v53 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v11 = type metadata accessor for Logger(0LL);
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v14 = (char *)&v53 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v15 = (void *)swift_allocObject(&unk_275F38, 40LL, 7LL);
  _OWORD v15[2] = a3;
  v15[3] = a4;
  v15[4] = a5;
  swift_retain(a3);
  uint64_t v16 = swift_retain(a5);
  uint64_t v17 = App.appIdentifier.getter(v16);
  if (v18)
  {
    uint64_t v19 = v18;
    uint64_t v20 = v60;
    uint64_t v21 = v17;
    sub_157C4(v60[2] + 16, (uint64_t)v63);
    uint64_t v22 = v64;
    uint64_t v23 = v65;
    sub_6EA8(v63, v64);
    uint64_t v62 = 0LL;
    memset(v61, 0, sizeof(v61));
    uint64_t v24 = (void *)swift_allocObject(&unk_275F60, 56LL, 7LL);
    v24[2] = v21;
    v24[3] = v19;
    v24[4] = sub_1F4BDC;
    void v24[5] = v15;
    v24[6] = v20;
    swift_bridgeObjectRetain(v19);
    swift_retain(v15);
    swift_retain(v20);
    dispatch thunk of AppNameResolving.localizedAppName(for:helper:completion:)( v21,  v19,  v61,  sub_1F4754,  v24,  v22,  v23);
    swift_bridgeObjectRelease(v19);
    swift_release(v24);
    sub_1F6CC((uint64_t)v61, &qword_2860C0);
    sub_6C3C(v63);
    uint64_t v25 = v15;
  }

  else
  {
    id v57 = a3;
    uint64_t v58 = v15;
    uint64_t v60 = (uint64_t *)v10;
    uint64_t v55 = a5;
    uint64_t v56 = a4;
    if (qword_283888 != -1) {
      swift_once(&qword_283888, sub_BFC5C);
    }
    uint64_t v26 = v11;
    uint64_t v27 = sub_6960(v11, (uint64_t)qword_2969C8);
    uint64_t v28 = v12;
    uint64_t v29 = *(void (**)(char *, uint64_t, uint64_t))(v12 + 16);
    char v30 = v14;
    v29(v14, v27, v26);
    uint64_t v31 = a1;
    uint64_t v32 = swift_retain_n(a1, 2LL);
    uint64_t v33 = (os_log_s *)Logger.logObject.getter(v32);
    os_log_type_t v34 = static os_log_type_t.error.getter();
    int v35 = v34;
    if (os_log_type_enabled(v33, v34))
    {
      int v54 = v35;
      uint64_t v36 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
      uint64_t v37 = swift_slowAlloc(32LL, -1LL);
      v63[0] = v37;
      *(_DWORD *)uint64_t v36 = 136315138;
      uint64_t v53 = v36 + 4;
      *(void *)&v61[0] = a1;
      uint64_t v38 = type metadata accessor for App(0LL);
      uint64_t v39 = sub_10430( (unint64_t *)&qword_283AB0,  (uint64_t (*)(uint64_t))&type metadata accessor for App,  (uint64_t)&protocol conformance descriptor for App);
      uint64_t v40 = dispatch thunk of CustomStringConvertible.description.getter(v38, v39);
      unint64_t v42 = v41;
      *(void *)&v61[0] = sub_6978(v40, v41, v63);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v61, (char *)v61 + 8);
      swift_release_n(v31, 2LL);
      swift_bridgeObjectRelease(v42);
      _os_log_impl( &dword_0,  v33,  (os_log_type_t)v54,  "CommonDialogProvider#makeOpenAppDialog no bundle identifier in app: %s",  v36,  0xCu);
      swift_arrayDestroy(v37, 1LL, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v37, -1LL, -1LL);
      swift_slowDealloc(v36, -1LL, -1LL);
    }

    else
    {

      swift_release_n(a1, 2LL);
    }

    (*(void (**)(char *, uint64_t))(v28 + 8))(v30, v26);
    uint64_t v43 = v55;
    uint64_t v44 = v56;
    unint64_t v46 = v57;
    uint64_t v45 = v58;
    uint64_t v48 = v59;
    unint64_t v47 = v60;
    unint64_t v49 = sub_6C9C();
    uint64_t v50 = swift_allocError(&type metadata for String, v49, 0LL, 0LL);
    *uint64_t v51 = 0xD000000000000019LL;
    v51[1] = 0x8000000000220890LL;
    *unint64_t v47 = v50;
    swift_storeEnumTagMultiPayload(v47, v48, 1LL);
    sub_E075C((uint64_t)v47, v46, v44, v43);
    sub_1F6CC((uint64_t)v47, (uint64_t *)&unk_286BB0);
    uint64_t v25 = v45;
  }

  return swift_release(v25);
}

uint64_t sub_1F4300(uint64_t a1, uint64_t *a2, void (*a3)(uint64_t, uint64_t), uint64_t a4)
{
  uint64_t v51 = a2;
  uint64_t v7 = sub_6C5C((uint64_t *)&unk_286BB0);
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)v45 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v10 = type metadata accessor for Logger(0LL);
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)v45 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v14 = swift_allocObject(&unk_275EE8, 32LL, 7LL);
  *(void *)(v14 + swift_weakDestroy(v0 + 16) = a3;
  *(void *)(v14 + 24) = a4;
  uint64_t v50 = a4;
  uint64_t v15 = swift_retain(a4);
  uint64_t v16 = App.appIdentifier.getter(v15);
  if (v17)
  {
    uint64_t v18 = v16;
    uint64_t v19 = v17;
    uint64_t v20 = v51;
    sub_157C4(v51[2] + 16, (uint64_t)v54);
    uint64_t v21 = v55;
    uint64_t v22 = v56;
    sub_6EA8(v54, v55);
    uint64_t v53 = 0LL;
    memset(v52, 0, sizeof(v52));
    uint64_t v23 = (void *)swift_allocObject(&unk_275F10, 56LL, 7LL);
    v23[2] = v18;
    v23[3] = v19;
    v23[4] = sub_1F4748;
    v23[5] = v14;
    v23[6] = v20;
    swift_bridgeObjectRetain(v19);
    swift_retain(v14);
    swift_retain(v20);
    dispatch thunk of AppNameResolving.localizedAppName(for:helper:completion:)( v18,  v19,  v52,  sub_1F4754,  v23,  v21,  v22);
    swift_bridgeObjectRelease(v19);
    swift_release(v23);
    sub_1F6CC((uint64_t)v52, &qword_2860C0);
    sub_6C3C(v54);
    uint64_t v24 = v14;
  }

  else
  {
    uint64_t v48 = v7;
    uint64_t v49 = v14;
    uint64_t v51 = (uint64_t *)v9;
    unint64_t v47 = a3;
    if (qword_283888 != -1) {
      swift_once(&qword_283888, sub_BFC5C);
    }
    uint64_t v25 = sub_6960(v10, (uint64_t)qword_2969C8);
    (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v13, v25, v10);
    uint64_t v26 = swift_retain_n(a1, 2LL);
    uint64_t v27 = (os_log_s *)Logger.logObject.getter(v26);
    os_log_type_t v28 = static os_log_type_t.error.getter();
    int v29 = v28;
    if (os_log_type_enabled(v27, v28))
    {
      int v46 = v29;
      char v30 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
      uint64_t v31 = swift_slowAlloc(32LL, -1LL);
      v54[0] = v31;
      *(_DWORD *)char v30 = 136315138;
      v45[1] = v30 + 4;
      *(void *)&v52[0] = a1;
      uint64_t v32 = type metadata accessor for App(0LL);
      uint64_t v33 = sub_10430( (unint64_t *)&qword_283AB0,  (uint64_t (*)(uint64_t))&type metadata accessor for App,  (uint64_t)&protocol conformance descriptor for App);
      uint64_t v34 = dispatch thunk of CustomStringConvertible.description.getter(v32, v33);
      unint64_t v36 = v35;
      *(void *)&v52[0] = sub_6978(v34, v35, v54);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v52, (char *)v52 + 8);
      swift_release_n(a1, 2LL);
      swift_bridgeObjectRelease(v36);
      _os_log_impl( &dword_0,  v27,  (os_log_type_t)v46,  "CommonDialogProvider#makeOpenAppDialog no bundle identifier in app: %s",  v30,  0xCu);
      swift_arrayDestroy(v31, 1LL, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v31, -1LL, -1LL);
      swift_slowDealloc(v30, -1LL, -1LL);
    }

    else
    {

      swift_release_n(a1, 2LL);
    }

    (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
    uint64_t v37 = v47;
    uint64_t v38 = v48;
    uint64_t v39 = v51;
    uint64_t v40 = v49;
    unint64_t v41 = sub_6C9C();
    uint64_t v42 = swift_allocError(&type metadata for String, v41, 0LL, 0LL);
    *uint64_t v43 = 0xD000000000000019LL;
    v43[1] = 0x8000000000220890LL;
    *uint64_t v39 = v42;
    swift_storeEnumTagMultiPayload(v39, v38, 1LL);
    sub_1064AC((uint64_t)v39, v37, v50);
    sub_1F6CC((uint64_t)v39, (uint64_t *)&unk_286BB0);
    uint64_t v24 = v40;
  }

  return swift_release(v24);
}

uint64_t sub_1F4724()
{
  return swift_deallocObject(v0, 32LL, 7LL);
}

void sub_1F4748(uint64_t a1)
{
}

uint64_t sub_1F4758(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v9 = sub_6C5C(&qword_2844D0);
  uint64_t inited = swift_initStackObject(v9, v26);
  *(_OWORD *)(inited + swift_weakDestroy(v0 + 16) = xmmword_2160E0;
  *(void *)(inited + 3sub_6C3C(v0 + 2) = 0x79616C507369LL;
  *(void *)(inited + 40) = 0xE600000000000000LL;
  if (a1)
  {
    uint64_t v11 = objc_opt_self(&OBJC_CLASS___INPlayMediaIntent);
    BOOL v12 = swift_dynamicCastObjCClass(a1, v11) != 0;
  }

  else
  {
    BOOL v12 = 0;
  }

  *(_BYTE *)(inited + 4sub_6C3C(v0 + 8) = v12;
  *(void *)(inited + 7sub_6C3C(v0 + 2) = &type metadata for Bool;
  *(void *)(inited + 80) = 0xD000000000000010LL;
  *(void *)(inited + 8sub_6C3C(v0 + 8) = 0x8000000000220170LL;
  *(void *)(inited + 120) = &type metadata for Int;
  *(void *)(inited + 96) = a2;
  unint64_t v13 = sub_74D54(inited);
  unint64_t v14 = v13;
  uint64_t v15 = v4[2];
  uint64_t v16 = v4[13];
  uint64_t v17 = v4[14];
  if (!a1
    || (uint64_t v23 = a1,
        uint64_t v18 = sub_1641C(0LL, (unint64_t *)&qword_286618, &OBJC_CLASS___INIntent_ptr),
        id v19 = a1,
        uint64_t v20 = sub_6C5C(&qword_285BC8),
        unint64_t v13 = swift_dynamicCast(v24, &v23, v18, v20, 6LL),
        (v13 & 1) == 0))
  {
    uint64_t v25 = 0LL;
    memset(v24, 0, sizeof(v24));
  }

  __chkstk_darwin(v13);
  _OWORD v22[2] = v16;
  v22[3] = v17;
  v22[4] = 0x6769626D61736944LL;
  void v22[5] = 0xEF70704165746175LL;
  v22[6] = v15;
  v22[7] = v14;
  v22[8] = 0LL;
  v22[9] = v24;
  v22[10] = 0LL;
  sub_200268( (uint64_t)"catServiceExecute",  17LL,  2u,  a3,  a4,  "CatService#execute family=%{signpost.telemetry:string1,public}@ id=%{signpost.telemetry:string2,public}@ enableTelemetry=YES ",  125LL,  2,  v16,  v17,  0x6769626D61736944LL,  0xEF70704165746175LL,  (void (*)(uint64_t (*)(), uint64_t))sub_3CAE4,  (uint64_t)v22);
  swift_bridgeObjectRelease(v14);
  return sub_1F6CC((uint64_t)v24, &qword_283FE8);
}

uint64_t sub_1F4978(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_6C5C(&qword_283FE8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16LL))(a2, a1, v4);
  return a2;
}

uint64_t sub_1F49C0(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = *v3;
  uint64_t v8 = sub_6C5C(&qword_2844D0);
  uint64_t inited = swift_initStackObject(v8, v26);
  *(_OWORD *)(inited + swift_weakDestroy(v0 + 16) = xmmword_2168F0;
  *(void *)(inited + 3sub_6C3C(v0 + 2) = 0x616C507261437369LL;
  *(void *)(inited + 40) = 0xE900000000000079LL;
  uint64_t v10 = static SiriAudioEnvironment.isCarPlay.getter(inited);
  *(_BYTE *)(inited + 4sub_6C3C(v0 + 8) = v10 & 1;
  *(void *)(inited + 7sub_6C3C(v0 + 2) = &type metadata for Bool;
  *(void *)(inited + 80) = 0x68637461577369LL;
  *(void *)(inited + 8sub_6C3C(v0 + 8) = 0xE700000000000000LL;
  uint64_t v11 = static SiriAudioEnvironment.isWatch.getter(v10);
  *(_BYTE *)(inited + 96) = v11 & 1;
  *(void *)(inited + 120) = &type metadata for Bool;
  *(void *)(inited + 12sub_6C3C(v0 + 8) = 0x6F50656D6F487369LL;
  *(void *)(inited + 136) = 0xE900000000000064LL;
  char v12 = static SiriAudioEnvironment.isHomePod.getter(v11);
  *(void *)(inited + 16sub_6C3C(v0 + 8) = &type metadata for Bool;
  *(_BYTE *)(inited + 144) = v12 & 1;
  unint64_t v13 = sub_74D54(inited);
  unint64_t v14 = v13;
  uint64_t v15 = v3[2];
  uint64_t v16 = v3[13];
  uint64_t v17 = v3[14];
  if (!a1
    || (uint64_t v23 = a1,
        uint64_t v18 = *(void *)(v7 + 80),
        id v19 = a1,
        uint64_t v20 = sub_6C5C(&qword_285BC8),
        unint64_t v13 = swift_dynamicCast(v24, &v23, v18, v20, 6LL),
        (v13 & 1) == 0))
  {
    uint64_t v25 = 0LL;
    memset(v24, 0, sizeof(v24));
  }

  __chkstk_darwin(v13);
  _OWORD v22[2] = v16;
  v22[3] = v17;
  v22[4] = 0xD000000000000021LL;
  void v22[5] = 0x8000000000223EC0LL;
  v22[6] = v15;
  v22[7] = v14;
  v22[8] = 0LL;
  v22[9] = v24;
  v22[10] = 0LL;
  sub_200268( (uint64_t)"catServiceExecute",  17LL,  2u,  a2,  a3,  "CatService#execute family=%{signpost.telemetry:string1,public}@ id=%{signpost.telemetry:string2,public}@ enableTelemetry=YES ",  125LL,  2,  v16,  v17,  0xD000000000000021LL,  0x8000000000223EC0LL,  (void (*)(uint64_t (*)(), uint64_t))sub_3CAE4,  (uint64_t)v22);
  swift_bridgeObjectRelease(v14);
  return sub_1F6CC((uint64_t)v24, &qword_283FE8);
}

void sub_1F4BDC(uint64_t a1)
{
}

uint64_t sub_1F4BEC()
{
  swift_release(*(void *)(v0 + 48));
  return swift_deallocObject(v0, 64LL, 7LL);
}

void sub_1F4C30(uint64_t a1, char a2)
{
}

uint64_t sub_1F4C48(uint64_t a1)
{
  return sub_202828(a1, *(void *)(v1 + 16), *(void (**)(uint64_t, void))(v1 + 24), *(void *)(v1 + 32));
}

uint64_t sub_1F4C58(uint64_t a1, void (*a2)(char *, uint64_t))
{
  return sub_1F2CDC( a1,  a2,  *(void *)(v2 + 16),  *(void (**)(char *, uint64_t))(v2 + 24),  *(void (**)(uint64_t))(v2 + 32),  *(void *)(v2 + 40),  *(void **)(v2 + 48));
}

void sub_1F4C78(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for Logger(0LL);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  if (qword_283888 != -1) {
    swift_once(&qword_283888, sub_BFC5C);
  }
  uint64_t v8 = sub_6960(v4, (uint64_t)qword_2969C8);
  uint64_t v9 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, v8, v4);
  uint64_t v10 = (os_log_s *)Logger.logObject.getter(v9);
  os_log_type_t v11 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v10, v11))
  {
    char v12 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
    *(_WORD *)char v12 = 0;
    _os_log_impl(&dword_0, v10, v11, "AceServiceInvoker#showSpinningOrb Showing the spinning orb...", v12, 2u);
    swift_slowDealloc(v12, -1LL, -1LL);
  }

  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  id v13 = [objc_allocWithZone(SAUIAddViews) init];
  id v14 = [objc_allocWithZone(SAAceView) init];
  uint64_t v15 = sub_6C5C(&qword_287980);
  uint64_t v16 = swift_allocObject(v15, 40LL, 7LL);
  *(_OWORD *)(v16 + swift_weakDestroy(v0 + 16) = xmmword_214980;
  *(void *)(v16 + 3sub_6C3C(v0 + 2) = v14;
  uint64_t v21 = v16;
  specialized Array._endMutation()(v16);
  uint64_t v17 = v21;
  sub_1F4EC0();
  id v18 = v14;
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v17);
  [v13 setViews:isa];

  [v13 setDialogPhase:SAUIDialogPhaseClarificationValue];
  [v13 setTemporary:1];
  dispatch thunk of AceServiceInvoker.submitAndForget(_:)(v13, a1, a2);
}

unint64_t sub_1F4EC0()
{
  unint64_t result = qword_284648;
  if (!qword_284648)
  {
    uint64_t v1 = objc_opt_self(&OBJC_CLASS___SAAceView);
    unint64_t result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_284648);
  }

  return result;
}

void sub_1F4EFC(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
}

void sub_1F4F10(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
}

void sub_1F4F24(uint64_t a1@<X0>, unint64_t *a2@<X2>, void *a3@<X3>, uint64_t a4@<X8>)
{
  uint64_t v79 = a2;
  uint64_t v80 = a3;
  uint64_t v81 = a1;
  uint64_t v74 = a4;
  uint64_t v4 = type metadata accessor for PommesContext.Source(0LL);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v70 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v8 = sub_6C5C(&qword_285F70);
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)&v70 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v11 = sub_6C5C(&qword_2860A8);
  __chkstk_darwin(v11);
  uint64_t v73 = (char *)&v70 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v13 = sub_6C5C(&qword_2860A0);
  __chkstk_darwin(v13);
  uint64_t v15 = (char *)&v70 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v16 = type metadata accessor for RREntity(0LL);
  uint64_t v77 = *(void *)(v16 - 8);
  uint64_t v78 = v16;
  __chkstk_darwin(v16);
  NSString v72 = (char *)&v70 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v18 = type metadata accessor for NLContextUpdate(0LL);
  uint64_t v75 = *(void *)(v18 - 8);
  uint64_t v76 = v18;
  __chkstk_darwin(v18);
  uint64_t v82 = (char *)&v70 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v20 = type metadata accessor for Logger(0LL);
  uint64_t v21 = *(void *)(v20 - 8);
  __chkstk_darwin(v20);
  uint64_t v23 = (char *)&v70 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  if (qword_283888 != -1) {
    swift_once(&qword_283888, sub_BFC5C);
  }
  uint64_t v24 = sub_6960(v20, (uint64_t)qword_2969C8);
  uint64_t v25 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v21 + 16))(v23, v24, v20);
  uint64_t v26 = (os_log_s *)Logger.logObject.getter(v25);
  os_log_type_t v27 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v26, v27))
  {
    os_log_type_t v28 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
    uint64_t v71 = v5;
    int v29 = v7;
    uint64_t v30 = v4;
    uint64_t v31 = v10;
    uint64_t v32 = v15;
    uint64_t v33 = v28;
    *(_WORD *)os_log_type_t v28 = 0;
    _os_log_impl( &dword_0,  v26,  v27,  "CommonNLContextProvider: makeContextForHandleIntent clearing conversation state",  v28,  2u);
    uint64_t v34 = v33;
    uint64_t v15 = v32;
    uint64_t v10 = v31;
    uint64_t v4 = v30;
    uint64_t v7 = v29;
    uint64_t v5 = v71;
    swift_slowDealloc(v34, -1LL, -1LL);
  }

  uint64_t v35 = (*(uint64_t (**)(char *, uint64_t))(v21 + 8))(v23, v20);
  unint64_t v36 = v82;
  NLContextUpdate.init()(v35);
  uint64_t v37 = sub_6C5C(&qword_287980);
  uint64_t v38 = swift_allocObject(v37, 40LL, 7LL);
  *(_OWORD *)(v38 + swift_weakDestroy(v0 + 16) = xmmword_214980;
  uint64_t v39 = sub_1641C(0LL, v79, v80);
  uint64_t v40 = v81;
  uint64_t v41 = static ConversationStateAttachmentUtils.makeAttachmentToClearSlotResolutionState<A>(intent:)(v81, v39);
  *(void *)(v38 + 3sub_6C3C(v0 + 2) = v41;
  uint64_t v83 = v38;
  specialized Array._endMutation()(v41);
  NLContextUpdate.conversationStateAttachments.setter(v83);
  uint64_t v42 = objc_opt_self(&OBJC_CLASS___INPlayMediaIntent);
  uint64_t v43 = (void *)swift_dynamicCastObjCClass(v40, v42);
  if (v43)
  {
    id v44 = [v43 mediaItems];
    uint64_t v46 = v77;
    uint64_t v45 = v78;
    if (!v44) {
      goto LABEL_25;
    }
  }

  else
  {
    uint64_t v47 = objc_opt_self(&OBJC_CLASS___INAddMediaIntent);
    uint64_t v48 = (void *)swift_dynamicCastObjCClass(v40, v47);
    uint64_t v49 = v40;
    uint64_t v46 = v77;
    uint64_t v45 = v78;
    if (!v48)
    {
      uint64_t v50 = objc_opt_self(&OBJC_CLASS___INUpdateMediaAffinityIntent);
      uint64_t v48 = (void *)swift_dynamicCastObjCClass(v49, v50);
      if (!v48)
      {
        uint64_t v51 = objc_opt_self(&OBJC_CLASS___INSearchForMediaIntent);
        uint64_t v48 = (void *)swift_dynamicCastObjCClass(v49, v51);
        if (!v48) {
          goto LABEL_25;
        }
      }
    }

    id v44 = [v48 mediaItems];
    if (!v44) {
      goto LABEL_25;
    }
  }

  uint64_t v52 = sub_1641C(0LL, (unint64_t *)&qword_289310, &OBJC_CLASS___INMediaItem_ptr);
  uint64_t v53 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v44, v52);

  if (!((unint64_t)v53 >> 62))
  {
LABEL_24:
    swift_bridgeObjectRelease(v53);
LABEL_25:
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v46 + 56))(v15, 1LL, 1LL, v45);
    goto LABEL_26;
  }

  if (v53 < 0) {
    uint64_t v64 = v53;
  }
  else {
    uint64_t v64 = v53 & 0xFFFFFFFFFFFFFF8LL;
  }
  swift_bridgeObjectRetain(v53);
  uint64_t v65 = _CocoaArrayWrapper.endIndex.getter(v64);
  swift_bridgeObjectRelease(v53);
  if (!v65) {
    goto LABEL_24;
  }
LABEL_15:
  if ((v53 & 0xC000000000000001LL) != 0)
  {
    id v54 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0LL, v53);
LABEL_18:
    uint64_t v55 = v54;
    swift_bridgeObjectRelease(v53);
    uint64_t v56 = type metadata accessor for GroupIdentifier(0LL);
    uint64_t v57 = (uint64_t)v73;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v56 - 8) + 56LL))(v73, 1LL, 1LL, v56);
    INMediaItem.toRREntity(groupIdentifier:targetApp:)(v57, 0LL);

    sub_1F6CC(v57, &qword_2860A8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v46 + 48))(v15, 1LL, v45) != 1)
    {
      uint64_t v58 = v15;
      uint64_t v59 = v72;
      (*(void (**)(char *, char *, uint64_t))(v46 + 32))(v72, v58, v45);
      uint64_t v60 = sub_6C5C(&qword_287DB0);
      uint64_t v61 = *(unsigned __int8 *)(v46 + 80);
      uint64_t v62 = (v61 + 32) & ~v61;
      uint64_t v63 = swift_allocObject(v60, v62 + *(void *)(v46 + 72), v61 | 7);
      *(_OWORD *)(v63 + swift_weakDestroy(v0 + 16) = xmmword_214510;
      (*(void (**)(uint64_t, char *, uint64_t))(v46 + 16))(v63 + v62, v59, v45);
      NLContextUpdate.rrEntities.setter(v63);
      (*(void (**)(char *, uint64_t))(v46 + 8))(v59, v45);
LABEL_27:
      (*(void (**)(char *, void, uint64_t))(v5 + 104))( v7,  enum case for PommesContext.Source.pluginDefined(_:),  v4);
      PommesContext.init(source:domain:listenAfterSpeaking:)(v7, 0x616964656DLL, 0xE500000000000000LL, 0LL);
      uint64_t v66 = type metadata accessor for PommesContext(0LL);
      (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v66 - 8) + 56LL))(v10, 0LL, 1LL, v66);
      NLContextUpdate.pommesContext.setter(v10);
      uint64_t v68 = v74;
      uint64_t v67 = v75;
      uint64_t v69 = v76;
      (*(void (**)(uint64_t, char *, uint64_t))(v75 + 32))(v74, v36, v76);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v67 + 56))(v68, 0LL, 1LL, v69);
      return;
    }

void sub_1F55A4(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = type metadata accessor for PommesContext.Source(0LL);
  uint64_t v72 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v73 = (char *)&v66 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v6 = sub_6C5C(&qword_285F70);
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)&v66 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v9 = sub_6C5C(&qword_2860A8);
  __chkstk_darwin(v9);
  uint64_t v69 = (char *)&v66 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v11 = sub_6C5C(&qword_2860A0);
  __chkstk_darwin(v11);
  uint64_t v74 = (char *)&v66 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v13 = type metadata accessor for RREntity(0LL);
  uint64_t v75 = *(void *)(v13 - 8);
  uint64_t v76 = v13;
  __chkstk_darwin(v13);
  uint64_t v68 = (char *)&v66 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v15 = type metadata accessor for NLContextUpdate(0LL);
  uint64_t v70 = *(void *)(v15 - 8);
  uint64_t v71 = v15;
  __chkstk_darwin(v15);
  uint64_t v17 = (char *)&v66 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v18 = type metadata accessor for Logger(0LL);
  uint64_t v19 = *(void *)(v18 - 8);
  __chkstk_darwin(v18);
  uint64_t v21 = (char *)&v66 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  if (qword_283888 != -1) {
    swift_once(&qword_283888, sub_BFC5C);
  }
  uint64_t v22 = sub_6960(v18, (uint64_t)qword_2969C8);
  uint64_t v23 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v19 + 16))(v21, v22, v18);
  uint64_t v24 = (os_log_s *)Logger.logObject.getter(v23);
  os_log_type_t v25 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v24, v25))
  {
    uint64_t v26 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
    uint64_t v67 = v17;
    uint64_t v27 = a1;
    uint64_t v28 = v4;
    int v29 = v8;
    uint64_t v30 = a2;
    uint64_t v31 = v26;
    *(_WORD *)uint64_t v26 = 0;
    _os_log_impl( &dword_0,  v24,  v25,  "CommonNLContextProvider: makeContextForHandleIntent clearing conversation state",  v26,  2u);
    uint64_t v32 = v31;
    a2 = v30;
    uint64_t v8 = v29;
    uint64_t v4 = v28;
    a1 = v27;
    uint64_t v17 = v67;
    swift_slowDealloc(v32, -1LL, -1LL);
  }

  uint64_t v33 = (*(uint64_t (**)(char *, uint64_t))(v19 + 8))(v21, v18);
  NLContextUpdate.init()(v33);
  uint64_t v34 = sub_6C5C(&qword_287980);
  uint64_t v35 = swift_allocObject(v34, 40LL, 7LL);
  *(_OWORD *)(v35 + swift_weakDestroy(v0 + 16) = xmmword_214980;
  uint64_t v36 = type metadata accessor for DetermineIntent();
  uint64_t v37 = static ConversationStateAttachmentUtils.makeAttachmentToClearSlotResolutionState<A>(intent:)(a1, v36);
  *(void *)(v35 + 3sub_6C3C(v0 + 2) = v37;
  uint64_t v77 = v35;
  specialized Array._endMutation()(v37);
  NLContextUpdate.conversationStateAttachments.setter(v77);
  uint64_t v38 = objc_opt_self(&OBJC_CLASS___INPlayMediaIntent);
  uint64_t v39 = (void *)swift_dynamicCastObjCClass(a1, v38);
  if (v39)
  {
    id v40 = [v39 mediaItems];
    uint64_t v43 = v75;
    uint64_t v42 = v76;
    uint64_t v44 = (uint64_t)v74;
    if (!v40) {
      goto LABEL_25;
    }
  }

  else
  {
    uint64_t v45 = objc_opt_self(&OBJC_CLASS___INAddMediaIntent);
    uint64_t v46 = (void *)swift_dynamicCastObjCClass(a1, v45);
    uint64_t v43 = v75;
    uint64_t v42 = v76;
    uint64_t v44 = (uint64_t)v74;
    if (!v46)
    {
      uint64_t v47 = objc_opt_self(&OBJC_CLASS___INUpdateMediaAffinityIntent);
      uint64_t v46 = (void *)swift_dynamicCastObjCClass(a1, v47);
      if (!v46)
      {
        uint64_t v48 = objc_opt_self(&OBJC_CLASS___INSearchForMediaIntent);
        uint64_t v46 = (void *)swift_dynamicCastObjCClass(a1, v48);
        if (!v46) {
          goto LABEL_25;
        }
      }
    }

    id v40 = [v46 mediaItems];
    if (!v40) {
      goto LABEL_25;
    }
  }

  uint64_t v49 = sub_1641C(0LL, (unint64_t *)&qword_289310, &OBJC_CLASS___INMediaItem_ptr);
  uint64_t v50 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v40, v49);

  if (!((unint64_t)v50 >> 62))
  {
LABEL_24:
    __n128 v41 = swift_bridgeObjectRelease(v50);
LABEL_25:
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, __n128))(v43 + 56))(v44, 1LL, 1LL, v42, v41);
    goto LABEL_26;
  }

  if (v50 < 0) {
    uint64_t v60 = v50;
  }
  else {
    uint64_t v60 = v50 & 0xFFFFFFFFFFFFFF8LL;
  }
  swift_bridgeObjectRetain(v50);
  uint64_t v61 = _CocoaArrayWrapper.endIndex.getter(v60);
  swift_bridgeObjectRelease(v50);
  if (!v61) {
    goto LABEL_24;
  }
LABEL_15:
  if ((v50 & 0xC000000000000001LL) != 0)
  {
    id v51 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0LL, v50);
LABEL_18:
    uint64_t v52 = v51;
    swift_bridgeObjectRelease(v50);
    uint64_t v53 = type metadata accessor for GroupIdentifier(0LL);
    uint64_t v54 = (uint64_t)v69;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v53 - 8) + 56LL))(v69, 1LL, 1LL, v53);
    INMediaItem.toRREntity(groupIdentifier:targetApp:)(v54, 0LL);

    sub_1F6CC(v54, &qword_2860A8);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v43 + 48))(v44, 1LL, v42) != 1)
    {
      uint64_t v55 = v68;
      (*(void (**)(char *, uint64_t, uint64_t))(v43 + 32))(v68, v44, v42);
      uint64_t v56 = sub_6C5C(&qword_287DB0);
      uint64_t v57 = *(unsigned __int8 *)(v43 + 80);
      uint64_t v58 = (v57 + 32) & ~v57;
      uint64_t v59 = swift_allocObject(v56, v58 + *(void *)(v43 + 72), v57 | 7);
      *(_OWORD *)(v59 + swift_weakDestroy(v0 + 16) = xmmword_214510;
      (*(void (**)(uint64_t, char *, uint64_t))(v43 + 16))(v59 + v58, v55, v42);
      NLContextUpdate.rrEntities.setter(v59);
      (*(void (**)(char *, uint64_t))(v43 + 8))(v55, v42);
LABEL_27:
      uint64_t v62 = v73;
      (*(void (**)(char *, void, uint64_t))(v72 + 104))( v73,  enum case for PommesContext.Source.pluginDefined(_:),  v4);
      PommesContext.init(source:domain:listenAfterSpeaking:)(v62, 0x616964656DLL, 0xE500000000000000LL, 0LL);
      uint64_t v63 = type metadata accessor for PommesContext(0LL);
      (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v63 - 8) + 56LL))(v8, 0LL, 1LL, v63);
      NLContextUpdate.pommesContext.setter(v8);
      uint64_t v65 = v70;
      uint64_t v64 = v71;
      (*(void (**)(uint64_t, char *, uint64_t))(v70 + 32))(a2, v17, v71);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v65 + 56))(a2, 0LL, 1LL, v64);
      return;
    }

void sub_1F5C24(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
}

uint64_t sub_1F5C3C(uint64_t a1)
{
  uint64_t v1 = App.appIdentifier.getter(a1);
  uint64_t v3 = v2;
  uint64_t v4 = static BundleIdentifiers.music.getter();
  uint64_t v6 = v5;
  if (!v3)
  {
    uint64_t result = swift_bridgeObjectRelease(v5);
    goto LABEL_7;
  }

  if (v1 == v4 && v3 == v5) {
    goto LABEL_10;
  }
  char v7 = _stringCompareWithSmolCheck(_:_:expecting:)(v1, v3);
  swift_bridgeObjectRelease(v3);
  swift_bridgeObjectRelease(v6);
  uint64_t result = 0LL;
  if ((v7 & 1) == 0)
  {
LABEL_7:
    uint64_t v9 = App.appIdentifier.getter(result);
    uint64_t v3 = v10;
    uint64_t v11 = static BundleIdentifiers.podcasts.getter();
    uint64_t v6 = v12;
    if (v3)
    {
      if (v9 == v11 && v3 == v12)
      {
LABEL_10:
        uint64_t v13 = v3;
LABEL_11:
        swift_bridgeObjectRelease(v13);
        swift_bridgeObjectRelease(v6);
        return 0LL;
      }

      char v14 = _stringCompareWithSmolCheck(_:_:expecting:)(v9, v3);
      swift_bridgeObjectRelease(v3);
      swift_bridgeObjectRelease(v6);
      uint64_t result = 0LL;
      if ((v14 & 1) != 0) {
        return result;
      }
    }

    else
    {
      uint64_t result = swift_bridgeObjectRelease(v12);
    }

    uint64_t v15 = App.appIdentifier.getter(result);
    uint64_t v17 = v16;
    uint64_t v18 = static BundleIdentifiers.soundscapes.getter();
    uint64_t v6 = v19;
    if (v17)
    {
      if (v15 == v18 && v17 == v19)
      {
        uint64_t v13 = v17;
        goto LABEL_11;
      }

      char v20 = _stringCompareWithSmolCheck(_:_:expecting:)(v15, v17);
      swift_bridgeObjectRelease(v17);
      swift_bridgeObjectRelease(v6);
      uint64_t result = 0LL;
      if ((v20 & 1) != 0) {
        return result;
      }
    }

    else
    {
      swift_bridgeObjectRelease(v19);
    }

    return 1LL;
  }

  return result;
}

uint64_t sub_1F5DBC(uint64_t a1)
{
  uint64_t v1 = App.appIdentifier.getter(a1);
  uint64_t v3 = v2;
  uint64_t v4 = static BundleIdentifiers.music.getter();
  uint64_t v6 = v5;
  if (v3)
  {
    if (v1 == v4 && v3 == v5) {
      goto LABEL_10;
    }
    char v7 = _stringCompareWithSmolCheck(_:_:expecting:)(v1, v3);
    swift_bridgeObjectRelease(v3);
    swift_bridgeObjectRelease(v6);
    uint64_t result = 0LL;
    if ((v7 & 1) != 0) {
      return result;
    }
  }

  else
  {
    uint64_t result = swift_bridgeObjectRelease(v5);
  }

  uint64_t v9 = App.appIdentifier.getter(result);
  uint64_t v3 = v10;
  uint64_t v11 = static BundleIdentifiers.podcasts.getter();
  uint64_t v6 = v12;
  if (!v3)
  {
    uint64_t result = swift_bridgeObjectRelease(v12);
    goto LABEL_15;
  }

  if (v9 == v11 && v3 == v12)
  {
LABEL_10:
    uint64_t v13 = v3;
LABEL_11:
    swift_bridgeObjectRelease(v13);
    swift_bridgeObjectRelease(v6);
    return 0LL;
  }

  char v14 = _stringCompareWithSmolCheck(_:_:expecting:)(v9, v3);
  swift_bridgeObjectRelease(v3);
  swift_bridgeObjectRelease(v6);
  uint64_t result = 0LL;
  if ((v14 & 1) == 0)
  {
LABEL_15:
    uint64_t v15 = App.appIdentifier.getter(result);
    uint64_t v17 = v16;
    uint64_t v18 = static BundleIdentifiers.soundscapes.getter();
    uint64_t v6 = v19;
    if (!v17)
    {
      swift_bridgeObjectRelease(v19);
      return 1LL;
    }

    if (v15 != v18 || v17 != v19)
    {
      char v20 = _stringCompareWithSmolCheck(_:_:expecting:)(v15, v17);
      swift_bridgeObjectRelease(v17);
      swift_bridgeObjectRelease(v6);
      return (v20 & 1) == 0;
    }

    uint64_t v13 = v17;
    goto LABEL_11;
  }

  return result;
}

uint64_t sub_1F5F40()
{
  uint64_t v0 = type metadata accessor for OS_dispatch_queue.Attributes(0LL);
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v12 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v4 = type metadata accessor for DispatchQoS(0LL);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = __chkstk_darwin(v4);
  uint64_t v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v9 = static DispatchQoS.userInteractive.getter(v6);
  static OS_dispatch_queue.Attributes.concurrent.getter(v9);
  uint64_t v10 = static DispatchQueues.queue(_:qos:attributes:)(0xD00000000000001DLL, 0x8000000000224110LL, v8, v3);
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v8, v4);
  qword_28E310 = v10;
  return result;
}

uint64_t sub_1F6044(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = (void *)(a1 + OBJC_IVAR____TtCO23AudioFlowDelegatePlugin9PlayMedia20HandleIntentStrategy_executorProvider);
  uint64_t v5 = v4[3];
  uint64_t v6 = v4[4];
  sub_6EA8(v4, v5);
  uint64_t v7 = dispatch thunk of ExecutorProviding.currentRequestId.getter(v5, v6);
  uint64_t v9 = v8;
  uint64_t v10 = type metadata accessor for AirPlayRouteProvider(0LL);
  swift_allocObject(v10, *(unsigned int *)(v10 + 48), *(unsigned __int16 *)(v10 + 52));
  uint64_t v11 = AirPlayRouteProvider.init(refId:)(v7, v9);
  uint64_t v12 = swift_allocObject(&unk_276528, 32LL, 7LL);
  *(void *)(v12 + swift_weakDestroy(v0 + 16) = v11;
  *(void *)(v12 + 24) = a1;
  swift_retain(v11);
  swift_retain(a1);
  dispatch thunk of AirPlayRouteProvider.getRouteIdsFrom(intent:completion:)(a2, sub_200248, v12);
  swift_release(v12);
  return swift_release(v11);
}

uint64_t sub_1F611C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = type metadata accessor for Logger(0LL);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  if (a1) {
    return dispatch thunk of AirPlayRouteProvider.discoverAndSetOutputDevices(for:deviceProvider:mediaRemoteAPIProvider:)( a1,  a3 + OBJC_IVAR____TtCO23AudioFlowDelegatePlugin9PlayMedia20HandleIntentStrategy_deviceProvider,  a3 + OBJC_IVAR____TtCO23AudioFlowDelegatePlugin9PlayMedia20HandleIntentStrategy_mediaRemoteAPIProvider);
  }
  if (qword_283888 != -1) {
    swift_once(&qword_283888, sub_BFC5C);
  }
  uint64_t v10 = sub_6960(v5, (uint64_t)qword_2969C8);
  uint64_t v11 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, v10, v5);
  uint64_t v12 = (os_log_s *)Logger.logObject.getter(v11);
  os_log_type_t v13 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v12, v13))
  {
    char v14 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
    *(_WORD *)char v14 = 0;
    _os_log_impl( &dword_0,  v12,  v13,  "HandleIntentStrategy#makePreHandleIntentOutput Routes not found in the intent",  v14,  2u);
    swift_slowDealloc(v14, -1LL, -1LL);
  }

  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_1F6280(uint64_t a1, uint64_t a2)
{
  uint64_t v42 = a2;
  uint64_t v43 = a1;
  uint64_t v2 = type metadata accessor for AirPlayRouteSetupState(0LL);
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = __chkstk_darwin(v2);
  uint64_t v6 = (char *)&v38 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v4);
  uint64_t v8 = (char *)&v38 - v7;
  uint64_t v9 = type metadata accessor for Logger(0LL);
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = __chkstk_darwin(v9);
  __n128 v41 = (char *)&v38 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v11);
  char v14 = (char *)&v38 - v13;
  if (qword_283888 != -1) {
    swift_once(&qword_283888, sub_BFC5C);
  }
  uint64_t v15 = sub_6960(v9, (uint64_t)qword_2969C8);
  uint64_t v16 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 16);
  uint64_t v39 = v15;
  id v40 = v16;
  uint64_t v17 = ((uint64_t (*)(char *))v16)(v14);
  uint64_t v18 = (os_log_s *)Logger.logObject.getter(v17);
  os_log_type_t v19 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v18, v19))
  {
    char v20 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
    *(_WORD *)char v20 = 0;
    _os_log_impl( &dword_0,  v18,  v19,  "HandleIntentStrategy#makePreHandleIntentOutput Waiting for device search to be completed",  v20,  2u);
    swift_slowDealloc(v20, -1LL, -1LL);
  }

  uint64_t v38 = *(void (**)(char *, uint64_t))(v10 + 8);
  v38(v14, v9);
  uint64_t v21 = v43;
  uint64_t v22 = *(void *)(v43
                  + OBJC_IVAR____TtCO23AudioFlowDelegatePlugin9PlayMedia20HandleIntentStrategy_executorProvider
                  + 24);
  uint64_t v23 = *(void *)(v43
                  + OBJC_IVAR____TtCO23AudioFlowDelegatePlugin9PlayMedia20HandleIntentStrategy_executorProvider
                  + 32);
  sub_6EA8( (void *)(v43 + OBJC_IVAR____TtCO23AudioFlowDelegatePlugin9PlayMedia20HandleIntentStrategy_executorProvider),  v22);
  uint64_t v24 = dispatch thunk of ExecutorProviding.currentRequestId.getter(v22, v23);
  uint64_t v26 = v25;
  uint64_t v27 = type metadata accessor for AirPlayRouteProvider(0LL);
  swift_allocObject(v27, *(unsigned int *)(v27 + 48), *(unsigned __int16 *)(v27 + 52));
  uint64_t v28 = AirPlayRouteProvider.init(refId:)(v24, v26);
  uint64_t v29 = dispatch thunk of AirPlayRouteProvider.waitForDeviceDiscovery()();
  dispatch thunk of AirPlayRouteSetupContext.state.getter(v29);
  (*(void (**)(char *, void, uint64_t))(v3 + 104))(v6, enum case for AirPlayRouteSetupState.error(_:), v2);
  uint64_t v30 = sub_10430( (unint64_t *)&unk_2876F0,  (uint64_t (*)(uint64_t))&type metadata accessor for AirPlayRouteSetupState,  (uint64_t)&protocol conformance descriptor for AirPlayRouteSetupState);
  LOBYTE(v24) = dispatch thunk of static Equatable.== infix(_:_:)(v8, v6, v2, v30);
  uint64_t v31 = *(void (**)(char *, uint64_t))(v3 + 8);
  v31(v6, v2);
  v31(v8, v2);
  if ((v24 & 1) == 0)
  {
    uint64_t v32 = v41;
    uint64_t v33 = v40(v41, v39, v9);
    uint64_t v34 = (os_log_s *)Logger.logObject.getter(v33);
    os_log_type_t v35 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v34, v35))
    {
      uint64_t v36 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)uint64_t v36 = 0;
      _os_log_impl( &dword_0,  v34,  v35,  "HandleIntentStrategy#makePreHandleIntentOutput Starting to set AirPlay routes. Device search has been completed",  v36,  2u);
      swift_slowDealloc(v36, -1LL, -1LL);
    }

    v38(v32, v9);
    dispatch thunk of AirPlayRouteProvider.setOutputDevices(_:)(v21 + OBJC_IVAR____TtCO23AudioFlowDelegatePlugin9PlayMedia20HandleIntentStrategy_mediaRemoteAPIProvider);
  }

  return swift_release(v28);
}

uint64_t sub_1F65D8( uint64_t a1, void *a2, uint64_t a3, uint64_t a4, void (*a5)(__int128 *), uint64_t a6, uint64_t a7)
{
  unint64_t v134 = a7;
  uint64_t v154 = a6;
  uint64_t v155 = a5;
  uint64_t v152 = a3;
  uint64_t v153 = a4;
  uint64_t v148 = a2;
  uint64_t v137 = type metadata accessor for AdditionalMetricsDescription.StatusReason(0LL);
  uint64_t v136 = *(void *)(v137 - 8);
  __chkstk_darwin(v137);
  uint64_t v135 = (char *)&v127 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v9 = sub_6C5C((uint64_t *)&unk_286C50);
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)&v127 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v140 = type metadata accessor for AceOutput(0LL);
  uint64_t v139 = *(void *)(v140 - 8);
  __chkstk_darwin(v140);
  uint64_t v141 = (char *)&v127 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v13 = sub_6C5C(&qword_289340);
  uint64_t v14 = __chkstk_darwin(v13);
  os_log_type_t v138 = (char *)&v127 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v14);
  uint64_t v17 = (char *)&v127 - v16;
  uint64_t v18 = sub_6C5C(&qword_2845A0);
  __chkstk_darwin(v18);
  uint64_t v151 = (char *)&v127 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v20 = sub_6C5C((uint64_t *)&unk_286BD0);
  __chkstk_darwin(v20);
  uint64_t v150 = (char *)&v127 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v22 = sub_6C5C(&qword_2845A8);
  __chkstk_darwin(v22);
  uint64_t v149 = (char *)&v127 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  char v147 = (void *)type metadata accessor for AdditionalMetricsDescription.SourceFunction(0LL);
  uint64_t v145 = *(v147 - 1);
  __chkstk_darwin(v147);
  uint64_t v144 = (char *)&v127 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v146 = type metadata accessor for AdditionalMetricsDescription.ModuleName(0LL);
  uint64_t v143 = *(void *)(v146 - 8);
  __chkstk_darwin(v146);
  uint64_t v142 = (char *)&v127 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v26 = type metadata accessor for Logger(0LL);
  uint64_t v27 = *(void *)(v26 - 8);
  __chkstk_darwin(v26);
  uint64_t v29 = (char *)&v127 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v30 = sub_6C5C((uint64_t *)&unk_286BB0);
  __chkstk_darwin(v30);
  uint64_t v32 = (uint64_t *)((char *)&v127 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  sub_FF10(a1, (uint64_t)v32, (uint64_t *)&unk_286BB0);
  if (swift_getEnumCaseMultiPayload(v32, v30) == 1)
  {
    uint64_t v33 = *v32;
    if (qword_283888 != -1) {
      swift_once(&qword_283888, sub_BFC5C);
    }
    uint64_t v34 = sub_6960(v26, (uint64_t)qword_2969C8);
    (*(void (**)(char *, uint64_t, uint64_t))(v27 + 16))(v29, v34, v26);
    swift_errorRetain(v33);
    uint64_t v35 = swift_errorRetain(v33);
    uint64_t v36 = (os_log_s *)Logger.logObject.getter(v35);
    os_log_type_t v37 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v36, v37))
    {
      uint64_t v38 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
      uint64_t v39 = swift_slowAlloc(32LL, -1LL);
      *(void *)&__int128 v159 = v39;
      *(_DWORD *)uint64_t v38 = 136446210;
      uint64_t v141 = (char *)(v38 + 4);
      uint64_t v156 = v33;
      swift_errorRetain(v33);
      uint64_t v40 = sub_6C5C(&qword_284010);
      uint64_t v41 = String.init<A>(describing:)(&v156, v40);
      unint64_t v43 = v42;
      uint64_t v156 = sub_6978(v41, v42, (uint64_t *)&v159);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v156, v157);
      swift_bridgeObjectRelease(v43);
      swift_errorRelease(v33);
      swift_errorRelease(v33);
      _os_log_impl( &dword_0,  v36,  v37,  "HandleIntentStrategy#makePreHandleIntentOutput playMediaDialogProvider.makePreHandleIntentDialog failed with error: %{public}s",  v38,  0xCu);
      swift_arrayDestroy(v39, 1LL, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v39, -1LL, -1LL);
      swift_slowDealloc(v38, -1LL, -1LL);
    }

    else
    {
      swift_errorRelease(v33);
      swift_errorRelease(v33);
    }

    (*(void (**)(char *, uint64_t))(v27 + 8))(v29, v26);
    uint64_t v64 = v143;
    uint64_t v65 = v142;
    uint64_t v66 = v146;
    (*(void (**)(char *, void, uint64_t))(v143 + 104))( v142,  enum case for AdditionalMetricsDescription.ModuleName.pmhis(_:),  v146);
    uint64_t v67 = v145;
    uint64_t v68 = v144;
    uint64_t v69 = v147;
    (*(void (**)(char *, void, void *))(v145 + 104))( v144,  enum case for AdditionalMetricsDescription.SourceFunction.preHandle(_:),  v147);
    swift_getErrorValue(v33, v158, v157);
    uint64_t v70 = Error.localizedDescription.getter(v157[1], v157[2]);
    uint64_t v72 = v71;
    uint64_t v141 = (char *)static AdditionalMetricsDescription.encodeInfo(module:source:statusReason:extraInfo:)( v65,  v68,  v70,  v71,  2LL,  0LL);
    uint64_t v74 = v73;
    swift_bridgeObjectRelease(v72);
    (*(void (**)(char *, void *))(v67 + 8))(v68, v69);
    (*(void (**)(char *, uint64_t))(v64 + 8))(v65, v66);
    uint64_t v75 = *(void *)((char *)v148
                    + OBJC_IVAR____TtCO23AudioFlowDelegatePlugin9PlayMedia20HandleIntentStrategy_siriKitTaskLoggingProvider
                    + 24);
    uint64_t v76 = *(void *)((char *)v148
                    + OBJC_IVAR____TtCO23AudioFlowDelegatePlugin9PlayMedia20HandleIntentStrategy_siriKitTaskLoggingProvider
                    + 32);
    uint64_t v148 = sub_6EA8( (void *)((char *)v148 + OBJC_IVAR____TtCO23AudioFlowDelegatePlugin9PlayMedia20HandleIntentStrategy_siriKitTaskLoggingProvider),  v75);
    uint64_t v77 = enum case for ActivityType.failed(_:);
    uint64_t v78 = type metadata accessor for ActivityType(0LL);
    uint64_t v79 = *(void *)(v78 - 8);
    uint64_t v80 = (uint64_t)v149;
    (*(void (**)(char *, uint64_t, uint64_t))(v79 + 104))(v149, v77, v78);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v79 + 56))(v80, 0LL, 1LL, v78);
    uint64_t v81 = type metadata accessor for TemplatingResult(0LL);
    uint64_t v82 = (uint64_t)v150;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v81 - 8) + 56LL))(v150, 1LL, 1LL, v81);
    uint64_t v83 = enum case for SiriKitReliabilityCodes.renderingError(_:);
    uint64_t v84 = type metadata accessor for SiriKitReliabilityCodes(0LL);
    uint64_t v85 = *(void *)(v84 - 8);
    uint64_t v86 = (uint64_t)v151;
    (*(void (**)(char *, uint64_t, uint64_t))(v85 + 104))(v151, v83, v84);
    uint64_t v87 = (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v85 + 56))(v86, 0LL, 1LL, v84);
    uint64_t v88 = v153;
    uint64_t v89 = INPlayMediaIntent.firstMediaItemType()(v87);
    dispatch thunk of SiriKitTaskLoggingProviding.submitMetric(app:intent:activityType:templateResult:statusReason:description:mediaItemType:)( v152,  v88,  v80,  v82,  v86,  v141,  v74,  v89,  0,  v75,  v76);
    swift_bridgeObjectRelease(v74);
    sub_1F6CC(v86, &qword_2845A0);
    sub_1F6CC(v82, (uint64_t *)&unk_286BD0);
    sub_1F6CC(v80, &qword_2845A8);
    *(void *)&__int128 v159 = v33;
    char v162 = 1;
    swift_errorRetain(v33);
    v155(&v159);
    swift_errorRelease(v33);
  }

  else
  {
    uint64_t v133 = v13;
    uint64_t v44 = *(int *)(v13 + 48);
    uint64_t v45 = type metadata accessor for TemplatingResult(0LL);
    uint64_t v130 = *(void *)(v45 - 8);
    uint64_t v46 = *(void (**)(char *, char *, uint64_t))(v130 + 32);
    uint64_t v132 = v45;
    uint64_t v129 = v46;
    ((void (*)(char *, uint64_t *))v46)(v17, v32);
    uint64_t v47 = *(uint64_t *)((char *)v32 + v44);
    uint64_t v131 = v44;
    *(void *)&v17[v44] = v47;
    uint64_t v48 = v148;
    uint64_t v49 = *(void *)((char *)v148
                    + OBJC_IVAR____TtCO23AudioFlowDelegatePlugin9PlayMedia20HandleIntentStrategy_deviceProvider
                    + 24);
    uint64_t v50 = *(void *)((char *)v148
                    + OBJC_IVAR____TtCO23AudioFlowDelegatePlugin9PlayMedia20HandleIntentStrategy_deviceProvider
                    + 32);
    sub_6EA8( (void *)((char *)v148 + OBJC_IVAR____TtCO23AudioFlowDelegatePlugin9PlayMedia20HandleIntentStrategy_deviceProvider),  v49);
    uint64_t v51 = dispatch thunk of DeviceProviding.isHomePod.getter(v49, v50);
    char v52 = v51;
    char v53 = static SiriAudioEnvironment.isTextToSpeechEnabled.getter(v51);
    uint64_t v54 = type metadata accessor for NLContextUpdate(0LL);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v54 - 8) + 56LL))(v11, 1LL, 1LL, v54);
    uint64_t v161 = 0LL;
    __int128 v159 = 0u;
    __int128 v160 = 0u;
    char v55 = sub_73FF0();
    uint64_t v128 = v17;
    if ((v55 & 1) != 0)
    {
      uint64_t v56 = v134;
      if (v134 >> 62)
      {
        if ((v134 & 0x8000000000000000LL) != 0LL) {
          uint64_t v126 = v134;
        }
        else {
          uint64_t v126 = v134 & 0xFFFFFFFFFFFFFF8LL;
        }
        swift_bridgeObjectRetain(v134);
        uint64_t v57 = _CocoaArrayWrapper.endIndex.getter(v126);
        swift_bridgeObjectRelease(v56);
      }

      else
      {
        uint64_t v57 = *(void *)((char *)&dword_10 + (v134 & 0xFFFFFFFFFFFFF8LL));
      }

      if (v57)
      {
        uint64_t v58 = sub_252A8((uint64_t)v17, 1);
        uint64_t v59 = sub_26CE0((uint64_t)v58, v56, 0);
        swift_bridgeObjectRelease(v58);
        uint64_t v60 = static String._unconditionallyBridgeFromObjectiveC(_:)(SAUIDialogPhaseCompletionValue);
        uint64_t v62 = v61;
        id v63 = sub_2744C(v60, v61, v59, (uint64_t)_swiftEmptyArrayStorage);
        swift_bridgeObjectRelease(v59);
        swift_bridgeObjectRelease(v62);
        static AceOutputHelper.makeAceOutput(addViews:nlContextUpdate:additionalCommands:flowActivity:)( v63,  v11,  _swiftEmptyArrayStorage,  &v159);
      }

      else
      {
        id v90 = sub_24FF8((uint64_t)v17, 1, 0LL, 0LL);
        static AceOutputHelper.makeAceOutput(addDialogs:nlContextUpdate:additionalCommands:flowActivity:)( v90,  v11,  _swiftEmptyArrayStorage,  &v159);
      }
    }

    else
    {
      sub_73640( (uint64_t)v17,  v53 & 1,  v134,  0,  1,  v52 & 1,  (uint64_t)v11,  (uint64_t)_swiftEmptyArrayStorage,  (uint64_t)&v159);
    }

    sub_1F6CC((uint64_t)&v159, &qword_2845C8);
    sub_1F6CC((uint64_t)v11, (uint64_t *)&unk_286C50);
    uint64_t v91 = v143;
    uint64_t v92 = v142;
    uint64_t v93 = v146;
    (*(void (**)(char *, void, uint64_t))(v143 + 104))( v142,  enum case for AdditionalMetricsDescription.ModuleName.pmhis(_:),  v146);
    uint64_t v94 = v145;
    uint64_t v95 = v144;
    uint64_t v96 = v147;
    (*(void (**)(char *, void, void *))(v145 + 104))( v144,  enum case for AdditionalMetricsDescription.SourceFunction.preHandle(_:),  v147);
    uint64_t v97 = v136;
    uint64_t v98 = v135;
    uint64_t v99 = v137;
    (*(void (**)(char *, void, uint64_t))(v136 + 104))( v135,  enum case for AdditionalMetricsDescription.StatusReason.success(_:),  v137);
    uint64_t v148 = (void *)static AdditionalMetricsDescription.encodeInfo(module:source:statusReason:extraInfo:)( v92,  v95,  v98,  0LL,  1LL);
    unint64_t v134 = v100;
    (*(void (**)(char *, uint64_t))(v97 + 8))(v98, v99);
    (*(void (**)(char *, void *))(v94 + 8))(v95, v96);
    (*(void (**)(char *, uint64_t))(v91 + 8))(v92, v93);
    uint64_t v101 = *(void *)((char *)v48
                     + OBJC_IVAR____TtCO23AudioFlowDelegatePlugin9PlayMedia20HandleIntentStrategy_siriKitTaskLoggingProvider
                     + 24);
    uint64_t v102 = *(void *)((char *)v48
                     + OBJC_IVAR____TtCO23AudioFlowDelegatePlugin9PlayMedia20HandleIntentStrategy_siriKitTaskLoggingProvider
                     + 32);
    char v147 = sub_6EA8( (void *)((char *)v48 + OBJC_IVAR____TtCO23AudioFlowDelegatePlugin9PlayMedia20HandleIntentStrategy_siriKitTaskLoggingProvider),  v101);
    uint64_t v103 = enum case for ActivityType.showInterstitial(_:);
    uint64_t v104 = type metadata accessor for ActivityType(0LL);
    uint64_t v105 = *(void *)(v104 - 8);
    uint64_t v106 = (uint64_t)v149;
    (*(void (**)(char *, uint64_t, uint64_t))(v105 + 104))(v149, v103, v104);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v105 + 56))(v106, 0LL, 1LL, v104);
    uint64_t v107 = *(int *)(v133 + 48);
    uint64_t v108 = v130;
    uint64_t v109 = v138;
    uint64_t v110 = (uint64_t)v128;
    uint64_t v111 = v132;
    (*(void (**)(char *, char *, uint64_t))(v130 + 16))(v138, v128, v132);
    *(void *)&v109[v107] = *(void *)(v110 + v131);
    uint64_t v112 = (uint64_t)v150;
    v129(v150, v109, v111);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v108 + 56))(v112, 0LL, 1LL, v111);
    uint64_t v113 = enum case for SiriKitReliabilityCodes.success(_:);
    uint64_t v114 = type metadata accessor for SiriKitReliabilityCodes(0LL);
    uint64_t v115 = *(void *)(v114 - 8);
    uint64_t v116 = (uint64_t)v151;
    (*(void (**)(char *, uint64_t, uint64_t))(v115 + 104))(v151, v113, v114);
    uint64_t v117 = (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v115 + 56))(v116, 0LL, 1LL, v114);
    uint64_t v118 = v153;
    uint64_t v119 = INPlayMediaIntent.firstMediaItemType()(v117);
    uint64_t v120 = v134;
    dispatch thunk of SiriKitTaskLoggingProviding.submitMetric(app:intent:activityType:templateResult:statusReason:description:mediaItemType:)( v152,  v118,  v106,  v112,  v116,  v148,  v134,  v119,  0,  v101,  v102);
    swift_bridgeObjectRelease(v120);
    sub_1F6CC(v116, &qword_2845A0);
    sub_1F6CC(v112, (uint64_t *)&unk_286BD0);
    sub_1F6CC(v106, &qword_2845A8);
    uint64_t v121 = v140;
    *((void *)&v160 + 1) = v140;
    uint64_t v161 = &protocol witness table for AceOutput;
    unint64_t v122 = sub_10974(&v159);
    uint64_t v123 = v139;
    id v124 = v141;
    (*(void (**)(void *, char *, uint64_t))(v139 + 16))(v122, v141, v121);
    char v162 = 0;
    v155(&v159);
    (*(void (**)(char *, uint64_t))(v123 + 8))(v124, v121);
    sub_1F6CC(v110, &qword_289340);
  }

  return sub_1F6CC((uint64_t)&v159, (uint64_t *)&unk_286C60);
}

uint64_t sub_1F729C( uint64_t a1, void *a2, uint64_t a3, void *a4, void (*a5)(__int128 *), uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v139 = a8;
  uint64_t v138 = a7;
  uint64_t v154 = a3;
  uint64_t v155 = a6;
  uint64_t v152 = a5;
  uint64_t v156 = a2;
  os_log_type_t v157 = a4;
  uint64_t v146 = (char *)a1;
  uint64_t v142 = type metadata accessor for AdditionalMetricsDescription.StatusReason(0LL);
  uint64_t v141 = *(void *)(v142 - 8);
  __chkstk_darwin(v142);
  uint64_t v140 = (char *)&v128 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v145 = type metadata accessor for AceOutput(0LL);
  uint64_t v144 = *(void *)(v145 - 8);
  __chkstk_darwin(v145);
  uint64_t v149 = (char *)&v128 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v10 = sub_6C5C((uint64_t *)&unk_286C50);
  __chkstk_darwin(v10);
  uint64_t v148 = (uint64_t)&v128 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v147 = sub_6C5C(&qword_289340);
  uint64_t v12 = __chkstk_darwin(v147);
  uint64_t v143 = (char *)&v128 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v12);
  uint64_t v15 = (char *)&v128 - v14;
  uint64_t v16 = sub_6C5C(&qword_2845A0);
  __chkstk_darwin(v16);
  uint64_t v153 = (char *)&v128 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v18 = sub_6C5C((uint64_t *)&unk_286BD0);
  __chkstk_darwin(v18);
  uint64_t v151 = (char *)&v128 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v20 = sub_6C5C(&qword_2845A8);
  __chkstk_darwin(v20);
  uint64_t v150 = (char *)&v128 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v22 = type metadata accessor for AdditionalMetricsDescription.SourceFunction(0LL);
  uint64_t v23 = *(void *)(v22 - 8);
  __chkstk_darwin(v22);
  uint64_t v25 = (char *)&v128 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v26 = type metadata accessor for AdditionalMetricsDescription.ModuleName(0LL);
  uint64_t v27 = *(void *)(v26 - 8);
  __chkstk_darwin(v26);
  uint64_t v29 = (char *)&v128 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v30 = sub_6C5C((uint64_t *)&unk_286BB0);
  __chkstk_darwin(v30);
  uint64_t v32 = (uint64_t *)((char *)&v128 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  sub_FF10((uint64_t)v146, (uint64_t)v32, (uint64_t *)&unk_286BB0);
  if (swift_getEnumCaseMultiPayload(v32, v30) == 1)
  {
    uint64_t v33 = *v32;
    (*(void (**)(char *, void, uint64_t))(v27 + 104))( v29,  enum case for AdditionalMetricsDescription.ModuleName.pmhis(_:),  v26);
    (*(void (**)(char *, void, uint64_t))(v23 + 104))( v25,  enum case for AdditionalMetricsDescription.SourceFunction.handled(_:),  v22);
    swift_getErrorValue(v33, v159, v158);
    uint64_t v34 = Error.localizedDescription.getter(v158[1], v158[2]);
    uint64_t v36 = v35;
    uint64_t v149 = (char *)static AdditionalMetricsDescription.encodeInfo(module:source:statusReason:extraInfo:)( v29,  v25,  v34,  v35,  2LL,  0LL);
    uint64_t v38 = v37;
    swift_bridgeObjectRelease(v36);
    (*(void (**)(char *, uint64_t))(v23 + 8))(v25, v22);
    (*(void (**)(char *, uint64_t))(v27 + 8))(v29, v26);
    uint64_t v39 = *(void *)((char *)v156
                    + OBJC_IVAR____TtCO23AudioFlowDelegatePlugin9PlayMedia20HandleIntentStrategy_siriKitTaskLoggingProvider
                    + 24);
    uint64_t v148 = *(void *)((char *)v156
                     + OBJC_IVAR____TtCO23AudioFlowDelegatePlugin9PlayMedia20HandleIntentStrategy_siriKitTaskLoggingProvider
                     + 32);
    uint64_t v156 = sub_6EA8( (void *)((char *)v156 + OBJC_IVAR____TtCO23AudioFlowDelegatePlugin9PlayMedia20HandleIntentStrategy_siriKitTaskLoggingProvider),  v39);
    uint64_t v40 = enum case for ActivityType.failed(_:);
    uint64_t v41 = type metadata accessor for ActivityType(0LL);
    unint64_t v42 = v157;
    uint64_t v43 = *(void *)(v41 - 8);
    uint64_t v44 = (uint64_t)v150;
    (*(void (**)(char *, uint64_t, uint64_t))(v43 + 104))(v150, v40, v41);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v43 + 56))(v44, 0LL, 1LL, v41);
    uint64_t v45 = type metadata accessor for TemplatingResult(0LL);
    uint64_t v46 = (uint64_t)v151;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v45 - 8) + 56LL))(v151, 1LL, 1LL, v45);
    uint64_t v47 = enum case for SiriKitReliabilityCodes.renderingError(_:);
    uint64_t v48 = type metadata accessor for SiriKitReliabilityCodes(0LL);
    uint64_t v49 = *(void *)(v48 - 8);
    uint64_t v50 = (uint64_t)v153;
    (*(void (**)(char *, uint64_t, uint64_t))(v49 + 104))(v153, v47, v48);
    uint64_t v51 = (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v49 + 56))(v50, 0LL, 1LL, v48);
    uint64_t v52 = INPlayMediaIntent.firstMediaItemType()(v51);
    dispatch thunk of SiriKitTaskLoggingProviding.submitMetric(app:intent:activityType:templateResult:statusReason:description:mediaItemType:)( v154,  v42,  v44,  v46,  v50,  v149,  v38,  v52,  0,  v39,  v148);
    swift_bridgeObjectRelease(v38);
    sub_1F6CC(v50, &qword_2845A0);
    sub_1F6CC(v46, (uint64_t *)&unk_286BD0);
    sub_1F6CC(v44, &qword_2845A8);
    *(void *)&__int128 v160 = v33;
    char v163 = 1;
    swift_errorRetain(v33);
    v152(&v160);
    swift_errorRelease(v33);
  }

  else
  {
    uint64_t v130 = v29;
    uint64_t v137 = v25;
    uint64_t v136 = v23;
    uint64_t v135 = v26;
    uint64_t v53 = *(int *)(v147 + 48);
    uint64_t v54 = type metadata accessor for TemplatingResult(0LL);
    uint64_t v133 = *(void *)(v54 - 8);
    char v55 = *(void (**)(char *, char *, uint64_t))(v133 + 32);
    uint64_t v134 = v54;
    uint64_t v131 = v55;
    ((void (*)(char *, uint64_t *))v55)(v15, v32);
    uint64_t v56 = *(uint64_t *)((char *)v32 + v53);
    uint64_t v146 = v15;
    uint64_t v132 = v53;
    *(void *)&v15[v53] = v56;
    uint64_t v58 = v156;
    uint64_t v57 = (uint64_t)v157;
    sub_1F7F0C(v157);
    uint64_t v59 = v148;
    sub_1F4F24(v57, (unint64_t *)&qword_285320, &OBJC_CLASS___INPlayMediaIntent_ptr, v148);
    uint64_t v60 = *(void *)((char *)v58
                    + OBJC_IVAR____TtCO23AudioFlowDelegatePlugin9PlayMedia20HandleIntentStrategy_deviceProvider
                    + 24);
    uint64_t v61 = *(void *)((char *)v58
                    + OBJC_IVAR____TtCO23AudioFlowDelegatePlugin9PlayMedia20HandleIntentStrategy_deviceProvider
                    + 32);
    sub_6EA8( (void *)((char *)v58 + OBJC_IVAR____TtCO23AudioFlowDelegatePlugin9PlayMedia20HandleIntentStrategy_deviceProvider),  v60);
    id v62 = (id)dispatch thunk of DeviceProviding.isHomePod.getter(v60, v61);
    char v63 = (char)v62;
    uint64_t v64 = *(void **)(*(void *)((char *)v58
                               + OBJC_IVAR____TtCO23AudioFlowDelegatePlugin9PlayMedia20HandleIntentStrategy_playMediaViewProvider)
                   + 224LL);
    uint64_t v129 = v22;
    if (v64)
    {
      uint64_t v65 = sub_6C5C(&qword_287980);
      uint64_t v66 = swift_allocObject(v65, 40LL, 7LL);
      *(_OWORD *)(v66 + swift_weakDestroy(v0 + 16) = xmmword_214980;
      *(void *)(v66 + 3sub_6C3C(v0 + 2) = v64;
      *(void *)&__int128 v160 = v66;
      specialized Array._endMutation()(v66);
      uint64_t v67 = v160;
      id v62 = v64;
    }

    else
    {
      uint64_t v67 = (uint64_t)_swiftEmptyArrayStorage;
    }

    uint64_t v68 = v137;
    uint64_t v69 = v130;
    char v70 = static SiriAudioEnvironment.isTextToSpeechEnabled.getter(v62);
    uint64_t v71 = v139;
    if ((unint64_t)v67 >> 62)
    {
      if (v67 < 0) {
        uint64_t v124 = v67;
      }
      else {
        uint64_t v124 = v67 & 0xFFFFFFFFFFFFFF8LL;
      }
      uint64_t v125 = sub_1641C(0LL, &qword_287D88, &OBJC_CLASS___SABaseCommand_ptr);
      swift_bridgeObjectRetain(v67);
      uint64_t v126 = v125;
      uint64_t v68 = v137;
      uint64_t v73 = _bridgeCocoaArray<A>(_:)(v124, v126);
      swift_bridgeObjectRelease(v67);
    }

    else
    {
      uint64_t v72 = swift_bridgeObjectRetain(v67);
      dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter(v72);
      sub_1641C(0LL, &qword_287D88, &OBJC_CLASS___SABaseCommand_ptr);
      uint64_t v73 = v67;
    }

    swift_bridgeObjectRelease(v67);
    char v162 = 0LL;
    __int128 v160 = 0u;
    __int128 v161 = 0u;
    if ((sub_73FF0() & 1) != 0)
    {
      if ((unint64_t)v71 >> 62)
      {
        if (v71 < 0) {
          uint64_t v127 = v71;
        }
        else {
          uint64_t v127 = v71 & 0xFFFFFFFFFFFFFF8LL;
        }
        swift_bridgeObjectRetain(v71);
        uint64_t v74 = _CocoaArrayWrapper.endIndex.getter(v127);
        swift_bridgeObjectRelease(v71);
      }

      else
      {
        uint64_t v74 = *(void *)((char *)&dword_10 + (v71 & 0xFFFFFFFFFFFFF8LL));
      }

      if (v74)
      {
        uint64_t v75 = sub_252A8((uint64_t)v146, 1);
        uint64_t v76 = sub_26CE0((uint64_t)v75, v71, 0);
        swift_bridgeObjectRelease(v75);
        uint64_t v77 = static String._unconditionallyBridgeFromObjectiveC(_:)(SAUIDialogPhaseCompletionValue);
        uint64_t v79 = v78;
        id v80 = sub_2744C(v77, v78, v76, (uint64_t)_swiftEmptyArrayStorage);
        swift_bridgeObjectRelease(v79);
        uint64_t v81 = v76;
        uint64_t v68 = v137;
        swift_bridgeObjectRelease(v81);
        static AceOutputHelper.makeAceOutput(addViews:nlContextUpdate:additionalCommands:flowActivity:)( v80,  v59,  v73,  &v160);
      }

      else
      {
        id v82 = sub_24FF8((uint64_t)v146, 1, 0LL, 0LL);
        static AceOutputHelper.makeAceOutput(addDialogs:nlContextUpdate:additionalCommands:flowActivity:)( v82,  v59,  v73,  &v160);
      }
    }

    else
    {
      sub_73640((uint64_t)v146, v70 & 1, v71, 0, 1, v63 & 1, v59, v73, (uint64_t)&v160);
    }

    swift_bridgeObjectRelease(v73);
    sub_1F6CC((uint64_t)&v160, &qword_2845C8);
    uint64_t v83 = sub_40004(v71);
    uint64_t v84 = v83;
    uint64_t v85 = v136;
    if (*(void *)(v83 + 16))
    {
      swift_bridgeObjectRelease(v83);
      uint64_t v86 = (uint64_t)v150;
      uint64_t v87 = v135;
    }

    else
    {
      static SiriKitEventSender.current.getter(&v160, v83);
      uint64_t v88 = *((void *)&v161 + 1);
      uint64_t v89 = v162;
      sub_6EA8(&v160, *((uint64_t *)&v161 + 1));
      type metadata accessor for SiriKitEvent(0LL);
      uint64_t v90 = static SiriKitEvent.uufrReady()();
      uint64_t v85 = v136;
      uint64_t v87 = v135;
      uint64_t v91 = v88;
      uint64_t v68 = v137;
      dispatch thunk of SiriKitEventSending.send(_:)(v90, v91, v89);
      uint64_t v86 = (uint64_t)v150;
      swift_release(v90);
      sub_6C3C(&v160);
      swift_bridgeObjectRelease(v84);
    }

    (*(void (**)(char *, void, uint64_t))(v27 + 104))( v69,  enum case for AdditionalMetricsDescription.ModuleName.pmhis(_:),  v87);
    uint64_t v92 = v129;
    (*(void (**)(char *, void, uint64_t))(v85 + 104))( v68,  enum case for AdditionalMetricsDescription.SourceFunction.handled(_:),  v129);
    uint64_t v93 = v27;
    uint64_t v94 = v68;
    uint64_t v95 = v141;
    uint64_t v96 = v87;
    uint64_t v97 = v140;
    uint64_t v98 = v142;
    (*(void (**)(char *, void, uint64_t))(v141 + 104))( v140,  enum case for AdditionalMetricsDescription.StatusReason.success(_:),  v142);
    uint64_t v150 = (char *)static AdditionalMetricsDescription.encodeInfo(module:source:statusReason:extraInfo:)( v69,  v94,  v97,  0LL,  1LL);
    uint64_t v139 = v99;
    (*(void (**)(char *, uint64_t))(v95 + 8))(v97, v98);
    (*(void (**)(char *, uint64_t))(v85 + 8))(v94, v92);
    (*(void (**)(char *, uint64_t))(v93 + 8))(v69, v96);
    uint64_t v101 = *(void *)((char *)v156
                     + OBJC_IVAR____TtCO23AudioFlowDelegatePlugin9PlayMedia20HandleIntentStrategy_siriKitTaskLoggingProvider
                     + 24);
    uint64_t v100 = *(void *)((char *)v156
                     + OBJC_IVAR____TtCO23AudioFlowDelegatePlugin9PlayMedia20HandleIntentStrategy_siriKitTaskLoggingProvider
                     + 32);
    uint64_t v156 = sub_6EA8( (void *)((char *)v156 + OBJC_IVAR____TtCO23AudioFlowDelegatePlugin9PlayMedia20HandleIntentStrategy_siriKitTaskLoggingProvider),  v101);
    uint64_t v102 = enum case for ActivityType.completed(_:);
    uint64_t v103 = type metadata accessor for ActivityType(0LL);
    uint64_t v104 = *(void *)(v103 - 8);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v104 + 104))(v86, v102, v103);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v104 + 56))(v86, 0LL, 1LL, v103);
    uint64_t v105 = *(int *)(v147 + 48);
    uint64_t v106 = v133;
    uint64_t v107 = v143;
    uint64_t v108 = (uint64_t)v146;
    uint64_t v109 = v134;
    (*(void (**)(char *, char *, uint64_t))(v133 + 16))(v143, v146, v134);
    *(void *)&v107[v105] = *(void *)(v108 + v132);
    uint64_t v110 = (uint64_t)v151;
    v131(v151, v107, v109);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v106 + 56))(v110, 0LL, 1LL, v109);
    uint64_t v111 = enum case for SiriKitReliabilityCodes.success(_:);
    uint64_t v112 = type metadata accessor for SiriKitReliabilityCodes(0LL);
    uint64_t v113 = *(void *)(v112 - 8);
    uint64_t v114 = (uint64_t)v153;
    (*(void (**)(char *, uint64_t, uint64_t))(v113 + 104))(v153, v111, v112);
    uint64_t v115 = (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v113 + 56))(v114, 0LL, 1LL, v112);
    uint64_t v116 = v157;
    uint64_t v117 = INPlayMediaIntent.firstMediaItemType()(v115);
    uint64_t v118 = v139;
    dispatch thunk of SiriKitTaskLoggingProviding.submitMetric(app:intent:activityType:templateResult:statusReason:description:mediaItemType:)( v154,  v116,  v86,  v110,  v114,  v150,  v139,  v117,  0,  v101,  v100);
    swift_bridgeObjectRelease(v118);
    sub_1F6CC(v114, &qword_2845A0);
    sub_1F6CC(v110, (uint64_t *)&unk_286BD0);
    sub_1F6CC(v86, &qword_2845A8);
    uint64_t v119 = v145;
    *((void *)&v161 + 1) = v145;
    char v162 = &protocol witness table for AceOutput;
    uint64_t v120 = sub_10974(&v160);
    uint64_t v121 = v144;
    unint64_t v122 = v149;
    (*(void (**)(void *, char *, uint64_t))(v144 + 16))(v120, v149, v119);
    char v163 = 0;
    v152(&v160);
    (*(void (**)(char *, uint64_t))(v121 + 8))(v122, v119);
    sub_1F6CC(v148, (uint64_t *)&unk_286C50);
    sub_1F6CC(v108, &qword_289340);
  }

  return sub_1F6CC((uint64_t)&v160, (uint64_t *)&unk_286C60);
}

uint64_t sub_1F7F0C(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for Logger(0LL);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v24[-1] - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  if (qword_283888 != -1) {
    swift_once(&qword_283888, sub_BFC5C);
  }
  uint64_t v8 = sub_6960(v4, (uint64_t)qword_2969C8);
  uint64_t v9 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, v8, v4);
  uint64_t v10 = (os_log_s *)Logger.logObject.getter(v9);
  os_log_type_t v11 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v10, v11))
  {
    uint64_t v12 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
    *(_WORD *)uint64_t v12 = 0;
    _os_log_impl(&dword_0, v10, v11, "HandleIntentStrategy#registerCorrection Registering correction/undo", v12, 2u);
    swift_slowDealloc(v12, -1LL, -1LL);
  }

  uint64_t v13 = (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  uint64_t v14 = static SiriEnvironmentWrapper.retrieve()(v13);
  if (v14)
  {
    uint64_t v15 = v14;
    uint64_t v16 = SiriEnvironment.correctionsClientProvider.getter();
    uint64_t v17 = swift_release(v15);
    dispatch thunk of SiriCorrectionsClientProvider.correctionsClient.getter(v27, v17);
    swift_release(v16);
  }

  else
  {
    uint64_t v28 = 0LL;
    memset(v27, 0, sizeof(v27));
  }

  sub_FF10((uint64_t)v27, (uint64_t)v24, &qword_28E4D0);
  uint64_t v18 = v25;
  if (v25)
  {
    uint64_t v19 = v26;
    sub_6EA8(v24, v25);
    uint64_t v20 = swift_allocObject(&unk_276280, 32LL, 7LL);
    *(void *)(v20 + swift_weakDestroy(v0 + 16) = a1;
    *(void *)(v20 + 24) = v2;
    id v21 = a1;
    swift_retain(v2);
    dispatch thunk of SiriCorrectionsClient.register(action:)(&unk_28E4E0, v20, v18, v19);
    swift_release(v20);
    sub_1F6CC((uint64_t)v27, &qword_28E4D0);
    return sub_6C3C(v24);
  }

  else
  {
    sub_1F6CC((uint64_t)v27, &qword_28E4D0);
    return sub_1F6CC((uint64_t)v24, &qword_28E4D0);
  }

uint64_t sub_1F8140(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[3] = a2;
  v3[4] = a3;
  v3[2] = a1;
  return swift_task_switch(sub_1F815C, 0LL, 0LL);
}

uint64_t sub_1F815C()
{
  uint64_t v1 = swift_task_alloc(32LL);
  *(void *)(v0 + 40) = v1;
  *(_OWORD *)(v1 + swift_weakDestroy(v0 + 16) = *(_OWORD *)(v0 + 24);
  uint64_t v2 = (void *)swift_task_alloc(async function pointer to withCheckedContinuation<A>(isolation:function:_:)[1]);
  *(void *)(v0 + 4sub_6C3C(v0 + 8) = v2;
  uint64_t v3 = type metadata accessor for CorrectionsActionOutcome(0LL);
  *uint64_t v2 = v0;
  v2[1] = sub_1F81FC;
  return withCheckedContinuation<A>(isolation:function:_:)( *(void *)(v0 + 16),  0LL,  0LL,  0xD000000000000016LL,  0x8000000000224130LL,  sub_1FF430,  v1,  v3);
}

uint64_t sub_1F81FC()
{
  uint64_t v1 = *(void *)(*v0 + 40);
  uint64_t v3 = *v0;
  swift_task_dealloc(*(void *)(*v0 + 48));
  swift_task_dealloc(v1);
  return (*(uint64_t (**)(void))(v3 + 8))();
}

uint64_t sub_1F824C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_6C5C(&qword_28E4E8);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void *)(v7 + 64);
  __chkstk_darwin(v6);
  static ExecutorProvider.shared.getter(v21);
  uint64_t v9 = v22;
  uint64_t v10 = v23;
  sub_6EA8(v21, v22);
  uint64_t v11 = dispatch thunk of ExecutorProviding.currentRequestId.getter(v9, v10);
  uint64_t v13 = v12;
  sub_6C3C(v21);
  uint64_t v14 = type metadata accessor for AirPlayRouteProvider(0LL);
  swift_allocObject(v14, *(unsigned int *)(v14 + 48), *(unsigned __int16 *)(v14 + 52));
  uint64_t v15 = AirPlayRouteProvider.init(refId:)(v11, v13);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))( (char *)&v21[-1] - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL),  a1,  v6);
  uint64_t v16 = *(unsigned __int8 *)(v7 + 80);
  uint64_t v17 = (v16 + 24) & ~v16;
  uint64_t v18 = swift_allocObject(&unk_2762A8, v17 + v8, v16 | 7);
  *(void *)(v18 + swift_weakDestroy(v0 + 16) = a3;
  (*(void (**)(uint64_t, char *, uint64_t))(v7 + 32))( v18 + v17,  (char *)&v21[-1] - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL),  v6);
  swift_retain(a3);
  dispatch thunk of AirPlayRouteProvider.getRouteIdsFrom(intent:completion:)(a2, sub_1FF4B0, v18);
  swift_release(v15);
  return swift_release(v18);
}

double sub_1F83B4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_6C5C(&qword_28E4E8);
  uint64_t v50 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v48 = v7;
  uint64_t v49 = (char *)&v43 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v8 = type metadata accessor for Logger(0LL);
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v43 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  if (a1)
  {
    uint64_t v12 = a1;
  }

  else
  {
    uint64_t v13 = sub_6C5C(&qword_284018);
    uint64_t v12 = swift_allocObject(v13, 48LL, 7LL);
    *(_OWORD *)(v12 + swift_weakDestroy(v0 + 16) = xmmword_214510;
    type metadata accessor for PlaybackController(0LL);
    *(void *)(v12 + 3sub_6C3C(v0 + 2) = static PlaybackController.localDevice.getter();
    *(void *)(v12 + 40) = v14;
  }

  uint64_t v15 = qword_283888;
  swift_bridgeObjectRetain(a1);
  if (v15 != -1) {
    swift_once(&qword_283888, sub_BFC5C);
  }
  uint64_t v16 = sub_6960(v8, (uint64_t)qword_2969C8);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, v16, v8);
  uint64_t v17 = swift_bridgeObjectRetain_n(v12, 2LL);
  uint64_t v18 = (os_log_s *)Logger.logObject.getter(v17);
  uint64_t v19 = v9;
  os_log_type_t v20 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v18, v20))
  {
    uint64_t v46 = a2;
    uint64_t v21 = swift_slowAlloc(12LL, -1LL);
    uint64_t v45 = v19;
    uint64_t v22 = (uint8_t *)v21;
    uint64_t v23 = swift_slowAlloc(32LL, -1LL);
    uint64_t v47 = v6;
    uint64_t v24 = v23;
    uint64_t v52 = v23;
    *(_DWORD *)uint64_t v22 = 136315138;
    uint64_t v43 = v22 + 4;
    swift_bridgeObjectRetain(v12);
    uint64_t v26 = Array.description.getter(v25, &type metadata for String);
    uint64_t v44 = v8;
    uint64_t v27 = a3;
    uint64_t v28 = v26;
    unint64_t v30 = v29;
    swift_bridgeObjectRelease(v12);
    uint64_t v31 = v28;
    a3 = v27;
    uint64_t v51 = sub_6978(v31, v30, &v52);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v51, &v52);
    swift_bridgeObjectRelease_n(v12, 2LL);
    unint64_t v32 = v30;
    a2 = v46;
    swift_bridgeObjectRelease(v32);
    _os_log_impl( &dword_0,  v18,  v20,  "HandleIntentStrategy#registerCorrection executing pause as a correction/undo, devices: %s",  v22,  0xCu);
    swift_arrayDestroy(v24, 1LL, (char *)&type metadata for Any + 8);
    uint64_t v33 = v24;
    uint64_t v6 = v47;
    swift_slowDealloc(v33, -1LL, -1LL);
    swift_slowDealloc(v22, -1LL, -1LL);

    (*(void (**)(char *, uint64_t))(v45 + 8))(v11, v44);
  }

  else
  {

    swift_bridgeObjectRelease_n(v12, 2LL);
    (*(void (**)(char *, uint64_t))(v19 + 8))(v11, v8);
  }

  uint64_t v34 = (void *)(a2 + OBJC_IVAR____TtCO23AudioFlowDelegatePlugin9PlayMedia20HandleIntentStrategy_playbackController);
  uint64_t v35 = *(void *)(a2
                  + OBJC_IVAR____TtCO23AudioFlowDelegatePlugin9PlayMedia20HandleIntentStrategy_playbackController
                  + 24);
  uint64_t v36 = *(void *)(a2
                  + OBJC_IVAR____TtCO23AudioFlowDelegatePlugin9PlayMedia20HandleIntentStrategy_playbackController
                  + 32);
  sub_6EA8(v34, v35);
  uint64_t v38 = v49;
  uint64_t v37 = v50;
  (*(void (**)(char *, uint64_t, uint64_t))(v50 + 16))(v49, a3, v6);
  uint64_t v39 = *(unsigned __int8 *)(v37 + 80);
  uint64_t v40 = (v39 + 16) & ~v39;
  uint64_t v41 = swift_allocObject(&unk_2762D0, v40 + v48, v39 | 7);
  (*(void (**)(uint64_t, char *, uint64_t))(v37 + 32))(v41 + v40, v38, v6);
  dispatch thunk of PlaybackControlling.pause(devices:with:)(v12, sub_1FF558, v41, v35, v36);
  swift_release(v41);
  *(void *)&double result = swift_bridgeObjectRelease(v12).n128_u64[0];
  return result;
}

uint64_t sub_1F873C(uint64_t a1, uint64_t a2)
{
  v19[1] = a2;
  uint64_t v3 = type metadata accessor for PlaybackControllingError(0LL);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v7 = type metadata accessor for CorrectionsActionOutcome(0LL);
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v11 = sub_6C5C(&qword_28E4F0);
  __chkstk_darwin(v11);
  uint64_t v13 = (char *)v19 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  sub_FF10(a1, (uint64_t)v13, &qword_28E4F0);
  if (swift_getEnumCaseMultiPayload(v13, v11) == 1)
  {
    uint64_t v14 = (*(uint64_t (**)(char *, char *, uint64_t))(v4 + 32))(v6, v13, v3);
    *(_OWORD *)uint64_t v10 = 0u;
    *((_OWORD *)v10 + 1) = 0u;
    *((void *)v10 + 4) = 0LL;
    *((void *)v10 + 5) = PlaybackControllingError.description.getter(v14);
    *((void *)v10 + 6) = v15;
    (*(void (**)(char *, void, uint64_t))(v8 + 104))( v10,  enum case for CorrectionsActionOutcome.failure(_:),  v7);
    uint64_t v16 = sub_6C5C(&qword_28E4E8);
    CheckedContinuation.resume(returning:)(v10, v16);
    return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  }

  else
  {
    *((void *)v10 + 4) = 0LL;
    *(_OWORD *)uint64_t v10 = 0u;
    *((_OWORD *)v10 + 1) = 0u;
    (*(void (**)(char *, void, uint64_t))(v8 + 104))( v10,  enum case for CorrectionsActionOutcome.success(_:),  v7);
    uint64_t v18 = sub_6C5C(&qword_28E4E8);
    return CheckedContinuation.resume(returning:)(v10, v18);
  }

uint64_t PlayMedia.HandleIntentStrategy.makeFailureHandlingIntentResponse(app:intent:intentResponse:_:)( uint64_t a1, void *a2, void *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v6 = v5;
  uint64_t v41 = a4;
  uint64_t v42 = a5;
  uint64_t v10 = type metadata accessor for Logger(0LL);
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = __chkstk_darwin(v10);
  uint64_t v14 = (char *)&v40 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  static SiriEnvironmentWrapper.store()(v12);
  if (qword_283888 != -1) {
    swift_once(&qword_283888, sub_BFC5C);
  }
  uint64_t v15 = sub_6960(v10, (uint64_t)qword_2969C8);
  uint64_t v16 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v11 + 16))(v14, v15, v10);
  uint64_t v17 = (os_log_s *)Logger.logObject.getter(v16);
  os_log_type_t v18 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v17, v18))
  {
    uint64_t v19 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
    *(_WORD *)uint64_t v19 = 0;
    _os_log_impl(&dword_0, v17, v18, "PlayMedia+HandleIntentStategy#makeFailureHandlingIntentResponse", v19, 2u);
    swift_slowDealloc(v19, -1LL, -1LL);
  }

  (*(void (**)(char *, uint64_t))(v11 + 8))(v14, v10);
  uint64_t v40 = *(void *)(v6
                  + OBJC_IVAR____TtCO23AudioFlowDelegatePlugin9PlayMedia20HandleIntentStrategy_playMediaDialogProvider);
  uint64_t v20 = sub_6C5C(&qword_2844D0);
  uint64_t inited = swift_initStackObject(v20, v46);
  *(_OWORD *)(inited + swift_weakDestroy(v0 + 16) = xmmword_214510;
  strcpy((char *)(inited + 32), "MetricsError");
  *(_BYTE *)(inited + 45) = 0;
  *(_WORD *)(inited + 46) = -5120;
  uint64_t v22 = (void *)0xE000000000000000LL;
  unint64_t v44 = 0LL;
  unint64_t v45 = 0xE000000000000000LL;
  _StringGuts.grow(_:)(40LL);
  swift_bridgeObjectRelease(v45);
  unint64_t v44 = 0xD000000000000023LL;
  unint64_t v45 = 0x8000000000224000LL;
  id v23 = [a3 userActivity];
  if (v23)
  {
    uint64_t v24 = v23;
    id v25 = [v23 activityType];

    uint64_t v26 = static String._unconditionallyBridgeFromObjectiveC(_:)(v25);
    uint64_t v22 = v27;
  }

  else
  {
    uint64_t v26 = 0LL;
  }

  v28._uint64_t countAndFlagsBits = v26;
  v28._object = v22;
  String.append(_:)(v28);
  swift_bridgeObjectRelease(v22);
  v29._uint64_t countAndFlagsBits = 95LL;
  v29._object = (void *)0xE100000000000000LL;
  String.append(_:)(v29);
  id v43 = [a3 code];
  v30._uint64_t countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter( &type metadata for Int,  &protocol witness table for Int);
  object = v30._object;
  String.append(_:)(v30);
  swift_bridgeObjectRelease(object);
  unint64_t v32 = v44;
  unint64_t v33 = v45;
  *(void *)(inited + 7sub_6C3C(v0 + 2) = &type metadata for String;
  *(void *)(inited + 4sub_6C3C(v0 + 8) = v32;
  *(void *)(inited + 56) = v33;
  unint64_t v34 = sub_74D54(inited);
  uint64_t v35 = (void *)swift_allocObject(&unk_2760C8, 64LL, 7LL);
  v35[2] = v6;
  v35[3] = a1;
  uint64_t v36 = v41;
  uint64_t v37 = v42;
  v35[4] = a2;
  v35[5] = v36;
  void v35[6] = v37;
  v35[7] = a3;
  swift_retain(v6);
  swift_retain(a1);
  id v38 = a2;
  swift_retain(v37);
  sub_155880(v34, a1, v38, a3, (uint64_t)sub_1FE778, (uint64_t)v35);
  swift_release(v35);
  return swift_bridgeObjectRelease(v34);
}

uint64_t sub_1F8C54( uint64_t a1, void *a2, uint64_t a3, uint64_t a4, void (*a5)(__int128 *), uint64_t a6, void *a7)
{
  uint64_t v114 = a7;
  uint64_t v127 = a6;
  uint64_t v128 = a5;
  uint64_t v125 = a3;
  uint64_t v126 = a4;
  uint64_t v129 = a2;
  uint64_t v8 = sub_6C5C((uint64_t *)&unk_286C50);
  __chkstk_darwin(v8);
  uint64_t v115 = (char *)&v106 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v118 = type metadata accessor for AceOutput(0LL);
  uint64_t v117 = *(void *)(v118 - 8);
  __chkstk_darwin(v118);
  uint64_t v119 = (char *)&v106 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v121 = sub_6C5C(&qword_289340);
  uint64_t v11 = __chkstk_darwin(v121);
  uint64_t v116 = (char *)&v106 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v11);
  uint64_t v120 = (char *)&v106 - v13;
  uint64_t v14 = sub_6C5C(&qword_2845A0);
  __chkstk_darwin(v14);
  uint64_t v124 = (char *)&v106 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v16 = sub_6C5C((uint64_t *)&unk_286BD0);
  __chkstk_darwin(v16);
  uint64_t v123 = (char *)&v106 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v18 = sub_6C5C(&qword_2845A8);
  __chkstk_darwin(v18);
  unint64_t v122 = (char *)&v106 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v20 = type metadata accessor for AdditionalMetricsDescription.SourceFunction(0LL);
  uint64_t v21 = *(void *)(v20 - 8);
  __chkstk_darwin(v20);
  id v23 = (char *)&v106 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v24 = type metadata accessor for AdditionalMetricsDescription.ModuleName(0LL);
  uint64_t v25 = *(void *)(v24 - 8);
  __chkstk_darwin(v24);
  uint64_t v27 = (char *)&v106 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v28 = sub_6C5C((uint64_t *)&unk_286BB0);
  __chkstk_darwin(v28);
  Swift::String v30 = (uint64_t *)((char *)&v106 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  sub_FF10(a1, (uint64_t)v30, (uint64_t *)&unk_286BB0);
  if (swift_getEnumCaseMultiPayload(v30, v28) == 1)
  {
    uint64_t v31 = *v30;
    (*(void (**)(char *, void, uint64_t))(v25 + 104))( v27,  enum case for AdditionalMetricsDescription.ModuleName.pmhis(_:),  v24);
    (*(void (**)(char *, void, uint64_t))(v21 + 104))( v23,  enum case for AdditionalMetricsDescription.SourceFunction.failHandleResp(_:),  v20);
    swift_getErrorValue(v31, v131, v130);
    uint64_t v32 = Error.localizedDescription.getter(v130[1], v130[2]);
    uint64_t v34 = v33;
    uint64_t v121 = static AdditionalMetricsDescription.encodeInfo(module:source:statusReason:extraInfo:)( v27,  v23,  v32,  v33,  1LL,  0LL);
    uint64_t v36 = v35;
    swift_bridgeObjectRelease(v34);
    (*(void (**)(char *, uint64_t))(v21 + 8))(v23, v20);
    (*(void (**)(char *, uint64_t))(v25 + 8))(v27, v24);
    uint64_t v37 = *(void *)((char *)v129
                    + OBJC_IVAR____TtCO23AudioFlowDelegatePlugin9PlayMedia20HandleIntentStrategy_siriKitTaskLoggingProvider
                    + 24);
    uint64_t v38 = *(void *)((char *)v129
                    + OBJC_IVAR____TtCO23AudioFlowDelegatePlugin9PlayMedia20HandleIntentStrategy_siriKitTaskLoggingProvider
                    + 32);
    uint64_t v129 = sub_6EA8( (void *)((char *)v129 + OBJC_IVAR____TtCO23AudioFlowDelegatePlugin9PlayMedia20HandleIntentStrategy_siriKitTaskLoggingProvider),  v37);
    uint64_t v39 = enum case for ActivityType.failed(_:);
    uint64_t v40 = type metadata accessor for ActivityType(0LL);
    uint64_t v41 = *(void *)(v40 - 8);
    uint64_t v42 = (uint64_t)v122;
    (*(void (**)(char *, uint64_t, uint64_t))(v41 + 104))(v122, v39, v40);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v41 + 56))(v42, 0LL, 1LL, v40);
    uint64_t v43 = type metadata accessor for TemplatingResult(0LL);
    uint64_t v44 = (uint64_t)v123;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v43 - 8) + 56LL))(v123, 1LL, 1LL, v43);
    uint64_t v45 = enum case for SiriKitReliabilityCodes.renderingError(_:);
    uint64_t v46 = type metadata accessor for SiriKitReliabilityCodes(0LL);
    uint64_t v47 = *(void *)(v46 - 8);
    uint64_t v48 = (uint64_t)v124;
    (*(void (**)(char *, uint64_t, uint64_t))(v47 + 104))(v124, v45, v46);
    uint64_t v49 = (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v47 + 56))(v48, 0LL, 1LL, v46);
    uint64_t v50 = v126;
    uint64_t v51 = INPlayMediaIntent.firstMediaItemType()(v49);
    dispatch thunk of SiriKitTaskLoggingProviding.submitMetric(app:intent:activityType:templateResult:statusReason:description:mediaItemType:)( v125,  v50,  v42,  v44,  v48,  v121,  v36,  v51,  0,  v37,  v38);
    swift_bridgeObjectRelease(v36);
    sub_1F6CC(v48, &qword_2845A0);
    sub_1F6CC(v44, (uint64_t *)&unk_286BD0);
    sub_1F6CC(v42, &qword_2845A8);
    *(void *)&__int128 v132 = v31;
    char v135 = 1;
    swift_errorRetain(v31);
    v128(&v132);
    swift_errorRelease(v31);
  }

  else
  {
    uint64_t v109 = v27;
    uint64_t v110 = v25;
    uint64_t v111 = v23;
    uint64_t v112 = v21;
    uint64_t v113 = v20;
    uint64_t v52 = *(int *)(v121 + 48);
    uint64_t v53 = type metadata accessor for TemplatingResult(0LL);
    uint64_t v107 = *(void *)(v53 - 8);
    uint64_t v54 = (uint64_t)v120;
    uint64_t v106 = *(void (**)(char *, uint64_t *, uint64_t))(v107 + 32);
    v106(v120, v30, v53);
    uint64_t v55 = *(uint64_t *)((char *)v30 + v52);
    uint64_t v108 = v52;
    *(void *)(v54 + v5sub_6C3C(v0 + 2) = v55;
    uint64_t v56 = *(void *)((char *)v129
                    + OBJC_IVAR____TtCO23AudioFlowDelegatePlugin9PlayMedia20HandleIntentStrategy_deviceProvider
                    + 24);
    uint64_t v57 = *(void *)((char *)v129
                    + OBJC_IVAR____TtCO23AudioFlowDelegatePlugin9PlayMedia20HandleIntentStrategy_deviceProvider
                    + 32);
    sub_6EA8( (void *)((char *)v129 + OBJC_IVAR____TtCO23AudioFlowDelegatePlugin9PlayMedia20HandleIntentStrategy_deviceProvider),  v56);
    uint64_t v58 = dispatch thunk of DeviceProviding.isHomePod.getter(v56, v57);
    char v59 = v58;
    char v60 = static SiriAudioEnvironment.isTextToSpeechEnabled.getter(v58);
    uint64_t v61 = type metadata accessor for NLContextUpdate(0LL);
    uint64_t v62 = (uint64_t)v115;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v61 - 8) + 56LL))(v115, 1LL, 1LL, v61);
    uint64_t v134 = 0LL;
    __int128 v132 = 0u;
    __int128 v133 = 0u;
    if ((sub_73FF0() & 1) != 0)
    {
      char v63 = v114;
      uint64_t v64 = v113;
      if (((unint64_t)_swiftEmptyArrayStorage & 0xC000000000000000LL) != 0
        && _CocoaArrayWrapper.endIndex.getter(_swiftEmptyArrayStorage))
      {
        uint64_t v99 = sub_252A8(v54, 1);
        uint64_t v100 = sub_26CE0((uint64_t)v99, (uint64_t)_swiftEmptyArrayStorage, 0);
        swift_bridgeObjectRelease(v99);
        uint64_t v101 = static String._unconditionallyBridgeFromObjectiveC(_:)(SAUIDialogPhaseCompletionValue);
        uint64_t v103 = v102;
        id v104 = sub_2744C(v101, v102, v100, (uint64_t)_swiftEmptyArrayStorage);
        uint64_t v105 = v100;
        uint64_t v64 = v113;
        swift_bridgeObjectRelease(v105);
        swift_bridgeObjectRelease(v103);
        static AceOutputHelper.makeAceOutput(addViews:nlContextUpdate:additionalCommands:flowActivity:)( v104,  v62,  _swiftEmptyArrayStorage,  &v132);
      }

      else
      {
        id v65 = sub_24FF8(v54, 1, 0LL, 0LL);
        static AceOutputHelper.makeAceOutput(addDialogs:nlContextUpdate:additionalCommands:flowActivity:)( v65,  v62,  _swiftEmptyArrayStorage,  &v132);
      }
    }

    else
    {
      sub_73640( v54,  v60 & 1,  (uint64_t)_swiftEmptyArrayStorage,  0,  1,  v59 & 1,  v62,  (uint64_t)_swiftEmptyArrayStorage,  (uint64_t)&v132);
      char v63 = v114;
      uint64_t v64 = v113;
    }

    sub_1F6CC((uint64_t)&v132, &qword_2845C8);
    sub_1F6CC(v62, (uint64_t *)&unk_286C50);
    uint64_t v66 = v110;
    uint64_t v67 = v109;
    uint64_t v68 = v24;
    (*(void (**)(char *, void, uint64_t))(v110 + 104))( v109,  enum case for AdditionalMetricsDescription.ModuleName.pmhis(_:),  v24);
    uint64_t v69 = v112;
    char v70 = v111;
    (*(void (**)(char *, void, uint64_t))(v112 + 104))( v111,  enum case for AdditionalMetricsDescription.SourceFunction.failHandleResp(_:),  v64);
    *(void *)&__int128 v132 = [v63 code];
    uint64_t v71 = dispatch thunk of CustomStringConvertible.description.getter( &type metadata for Int,  &protocol witness table for Int);
    uint64_t v73 = v72;
    uint64_t v115 = (char *)static AdditionalMetricsDescription.encodeInfo(module:source:statusReason:extraInfo:)( v67,  v70,  v71,  v72,  2LL,  0LL);
    uint64_t v75 = v74;
    swift_bridgeObjectRelease(v73);
    (*(void (**)(char *, uint64_t))(v69 + 8))(v70, v64);
    (*(void (**)(char *, uint64_t))(v66 + 8))(v67, v68);
    uint64_t v77 = *(void *)((char *)v129
                    + OBJC_IVAR____TtCO23AudioFlowDelegatePlugin9PlayMedia20HandleIntentStrategy_siriKitTaskLoggingProvider
                    + 24);
    uint64_t v76 = *(void *)((char *)v129
                    + OBJC_IVAR____TtCO23AudioFlowDelegatePlugin9PlayMedia20HandleIntentStrategy_siriKitTaskLoggingProvider
                    + 32);
    uint64_t v129 = sub_6EA8( (void *)((char *)v129 + OBJC_IVAR____TtCO23AudioFlowDelegatePlugin9PlayMedia20HandleIntentStrategy_siriKitTaskLoggingProvider),  v77);
    uint64_t v78 = enum case for ActivityType.failed(_:);
    uint64_t v79 = type metadata accessor for ActivityType(0LL);
    uint64_t v80 = *(void *)(v79 - 8);
    uint64_t v81 = (uint64_t)v122;
    (*(void (**)(char *, uint64_t, uint64_t))(v80 + 104))(v122, v78, v79);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v80 + 56))(v81, 0LL, 1LL, v79);
    uint64_t v82 = (uint64_t)v120;
    uint64_t v83 = *(int *)(v121 + 48);
    uint64_t v84 = v107;
    uint64_t v85 = v116;
    (*(void (**)(char *, char *, uint64_t))(v107 + 16))(v116, v120, v53);
    *(void *)&v85[v83] = *(void *)(v82 + v108);
    uint64_t v86 = (uint64_t)v123;
    v106(v123, (uint64_t *)v85, v53);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v84 + 56))(v86, 0LL, 1LL, v53);
    uint64_t v87 = enum case for SiriKitReliabilityCodes.handleIntentFailure(_:);
    uint64_t v88 = type metadata accessor for SiriKitReliabilityCodes(0LL);
    uint64_t v89 = *(void *)(v88 - 8);
    uint64_t v90 = (uint64_t)v124;
    (*(void (**)(char *, uint64_t, uint64_t))(v89 + 104))(v124, v87, v88);
    uint64_t v91 = (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v89 + 56))(v90, 0LL, 1LL, v88);
    uint64_t v92 = v126;
    uint64_t v93 = INPlayMediaIntent.firstMediaItemType()(v91);
    dispatch thunk of SiriKitTaskLoggingProviding.submitMetric(app:intent:activityType:templateResult:statusReason:description:mediaItemType:)( v125,  v92,  v81,  v86,  v90,  v115,  v75,  v93,  0,  v77,  v76);
    swift_bridgeObjectRelease(v75);
    sub_1F6CC(v90, &qword_2845A0);
    sub_1F6CC(v86, (uint64_t *)&unk_286BD0);
    sub_1F6CC(v81, &qword_2845A8);
    uint64_t v94 = v118;
    *((void *)&v133 + 1) = v118;
    uint64_t v134 = &protocol witness table for AceOutput;
    uint64_t v95 = sub_10974(&v132);
    uint64_t v96 = v117;
    uint64_t v97 = v119;
    (*(void (**)(void *, char *, uint64_t))(v117 + 16))(v95, v119, v94);
    char v135 = 0;
    v128(&v132);
    (*(void (**)(char *, uint64_t))(v96 + 8))(v97, v94);
    sub_1F6CC(v82, &qword_289340);
  }

  return sub_1F6CC((uint64_t)&v132, (uint64_t *)&unk_286C60);
}

uint64_t sub_1F96A4(uint64_t a1, void *a2, void *a3, uint64_t a4, uint64_t a5)
{
  return sub_1FAB2C( a1,  a2,  a3,  a4,  a5,  "HandleIntentStrategy#preHandleIntentOutputWithRF response is being handled using Response Framework2.0. for a pp: %s Insights:%{public}s",  (void (*)(uint64_t, id, id, uint64_t, uint64_t, uint64_t, id, id, uint64_t, uint64_t))sub_1FE8C4);
}

uint64_t sub_1F96B8(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v25 = a5;
  uint64_t v13 = type metadata accessor for ResponseFactoryOutputContext(0LL);
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = *(void *)(v14 + 64);
  __chkstk_darwin(v13);
  uint64_t v16 = (char *)v23 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v17 = *(void *)(a2 + OBJC_IVAR____TtCO23AudioFlowDelegatePlugin9PlayMedia20HandleIntentStrategy_responseFactory + 24);
  uint64_t v24 = *(void *)(a2 + OBJC_IVAR____TtCO23AudioFlowDelegatePlugin9PlayMedia20HandleIntentStrategy_responseFactory + 32);
  v23[1] = sub_6EA8( (void *)(a2 + OBJC_IVAR____TtCO23AudioFlowDelegatePlugin9PlayMedia20HandleIntentStrategy_responseFactory),  v17);
  sub_1EA0D0(a1, (uint64_t)v16);
  uint64_t v18 = *(unsigned __int8 *)(v14 + 80);
  uint64_t v19 = (v18 + 56) & ~v18;
  uint64_t v20 = (void *)swift_allocObject(&unk_276258, v19 + v15, v18 | 7);
  _OWORD v20[2] = a2;
  void v20[3] = a3;
  void v20[4] = a4;
  v20[5] = a6;
  v20[6] = a7;
  sub_1EA404((uint64_t)v16, (uint64_t)v20 + v19);
  swift_retain(a2);
  swift_retain(a3);
  id v21 = a4;
  swift_retain(a7);
  sub_1E60D4(a3, (uint64_t)v21, v25, a1, (uint64_t)sub_1FF040, (uint64_t)v20, v17, v24);
  return swift_release(v20);
}

uint64_t sub_1F9800( uint64_t a1, void *a2, uint64_t a3, uint64_t a4, void (*a5)(uint64_t), uint64_t a6, uint64_t a7)
{
  uint64_t v150 = a7;
  id v169 = a5;
  uint64_t v170 = a6;
  uint64_t v167 = a4;
  uint64_t v166 = a3;
  os_log_type_t v165 = a2;
  uint64_t v8 = sub_6C5C(&qword_2845A0);
  __chkstk_darwin(v8);
  uint64_t v168 = (char *)&v146 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v10 = sub_6C5C((uint64_t *)&unk_286BA0);
  __chkstk_darwin(v10);
  uint64_t v151 = (uint64_t)&v146 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v12 = sub_6C5C((uint64_t *)&unk_286BD0);
  uint64_t v13 = __chkstk_darwin(v12);
  uint64_t v155 = (char *)&v146 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v13);
  uint64_t v16 = (char *)&v146 - v15;
  uint64_t v17 = sub_6C5C(&qword_2845A8);
  uint64_t v18 = __chkstk_darwin(v17);
  uint64_t v154 = (char *)&v146 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v18);
  os_log_type_t v158 = (char *)&v146 - v20;
  uint64_t v148 = type metadata accessor for AdditionalMetricsDescription.StatusReason(0LL);
  uint64_t v147 = *(void *)(v148 - 8);
  __chkstk_darwin(v148);
  uint64_t v146 = (char *)&v146 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v164 = type metadata accessor for AdditionalMetricsDescription.SourceFunction(0LL);
  uint64_t v162 = *(void *)(v164 - 8);
  __chkstk_darwin(v164);
  __int128 v161 = (char *)&v146 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v163 = type metadata accessor for AdditionalMetricsDescription.ModuleName(0LL);
  uint64_t v160 = *(void *)(v163 - 8);
  __chkstk_darwin(v163);
  __int128 v159 = (char *)&v146 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v24 = type metadata accessor for Logger(0LL);
  uint64_t v25 = *(void *)(v24 - 8);
  uint64_t v26 = __chkstk_darwin(v24);
  uint64_t v28 = (char *)&v146 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v29 = __chkstk_darwin(v26);
  uint64_t v31 = (char *)&v146 - v30;
  __chkstk_darwin(v29);
  uint64_t v33 = (char *)&v146 - v32;
  if (qword_283888 != -1) {
    swift_once(&qword_283888, sub_BFC5C);
  }
  uint64_t v34 = sub_6960(v24, (uint64_t)qword_2969C8);
  uint64_t v35 = *(void (**)(char *, uint64_t, uint64_t))(v25 + 16);
  uint64_t v156 = v34;
  os_log_type_t v157 = v35;
  ((void (*)(char *))v35)(v33);
  uint64_t v36 = sub_FF10(a1, (uint64_t)&v177, (uint64_t *)&unk_286C60);
  uint64_t v37 = (os_log_s *)Logger.logObject.getter(v36);
  os_log_type_t v38 = static os_log_type_t.debug.getter();
  BOOL v39 = os_log_type_enabled(v37, v38);
  uint64_t v171 = a1;
  uint64_t v153 = v28;
  uint64_t v152 = v16;
  if (v39)
  {
    uint64_t v40 = swift_slowAlloc(22LL, -1LL);
    uint64_t v41 = swift_slowAlloc(64LL, -1LL);
    uint64_t v149 = (uint64_t)v31;
    uint64_t v42 = v41;
    uint64_t v174 = v41;
    *(_DWORD *)uint64_t v40 = 136315394;
    sub_FF10((uint64_t)&v177, (uint64_t)&v172, (uint64_t *)&unk_286C60);
    uint64_t v43 = sub_6C5C((uint64_t *)&unk_286C60);
    uint64_t v44 = String.init<A>(describing:)(&v172, v43);
    uint64_t v45 = v24;
    unint64_t v47 = v46;
    uint64_t v172 = sub_6978(v44, v46, &v174);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v172, v173);
    unint64_t v48 = v47;
    uint64_t v24 = v45;
    swift_bridgeObjectRelease(v48);
    uint64_t v49 = sub_1F6CC((uint64_t)&v177, (uint64_t *)&unk_286C60);
    *(_WORD *)(v40 + 1sub_6C3C(v0 + 2) = 2082;
    uint64_t v50 = static Insights.responseFramework.getter(v49);
    unint64_t v52 = v51;
    uint64_t v172 = sub_6978(v50, v51, &v174);
    a1 = v171;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v172, v173);
    swift_bridgeObjectRelease(v52);
    _os_log_impl( &dword_0,  v37,  v38,  "HandleIntentStrategy#preHandleIntentOutputWithRF returning final output: %s Insights:%{public}s",  (uint8_t *)v40,  0x16u);
    swift_arrayDestroy(v42, 2LL, (char *)&type metadata for Any + 8);
    uint64_t v53 = v42;
    uint64_t v31 = (char *)v149;
    swift_slowDealloc(v53, -1LL, -1LL);
    swift_slowDealloc(v40, -1LL, -1LL);
  }

  else
  {
    sub_1F6CC((uint64_t)&v177, (uint64_t *)&unk_286C60);
  }

  uint64_t v54 = *(void (**)(char *, uint64_t))(v25 + 8);
  v54(v33, v24);
  sub_FF10(a1, (uint64_t)&v177, (uint64_t *)&unk_286C60);
  if ((v180 & 1) != 0)
  {
    uint64_t v55 = v177;
    v157(v31, v156, v24);
    swift_errorRetain(v55);
    uint64_t v56 = swift_errorRetain(v55);
    uint64_t v57 = (os_log_s *)Logger.logObject.getter(v56);
    os_log_type_t v58 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v57, v58))
    {
      char v59 = (void (*)(uint64_t, uint64_t))v54;
      uint64_t v60 = swift_slowAlloc(22LL, -1LL);
      uint64_t v61 = swift_slowAlloc(64LL, -1LL);
      uint64_t v177 = v61;
      *(_DWORD *)uint64_t v60 = 136446466;
      uint64_t v149 = (uint64_t)v31;
      uint64_t v172 = v55;
      swift_errorRetain(v55);
      uint64_t v62 = sub_6C5C(&qword_284010);
      uint64_t v63 = String.init<A>(describing:)(&v172, v62);
      unint64_t v65 = v64;
      uint64_t v172 = sub_6978(v63, v64, &v177);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v172, v173);
      swift_bridgeObjectRelease(v65);
      swift_errorRelease(v55);
      uint64_t v66 = swift_errorRelease(v55);
      *(_WORD *)(v60 + 1sub_6C3C(v0 + 2) = 2082;
      uint64_t v67 = static Insights.responseFramework.getter(v66);
      unint64_t v69 = v68;
      uint64_t v172 = sub_6978(v67, v68, &v177);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v172, v173);
      swift_bridgeObjectRelease(v69);
      _os_log_impl( &dword_0,  v57,  v58,  "HandleIntentStrategy#preHandleIntentOutputWithRF failed with error: %{public}s, Insights:%{public}s",  (uint8_t *)v60,  0x16u);
      swift_arrayDestroy(v61, 2LL, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v61, -1LL, -1LL);
      swift_slowDealloc(v60, -1LL, -1LL);

      v59(v149, v24);
    }

    else
    {
      swift_errorRelease(v55);
      swift_errorRelease(v55);

      v54(v31, v24);
    }

    uint64_t v92 = v160;
    uint64_t v93 = v159;
    uint64_t v94 = v163;
    (*(void (**)(char *, void, uint64_t))(v160 + 104))( v159,  enum case for AdditionalMetricsDescription.ModuleName.pmhis(_:),  v163);
    uint64_t v95 = v162;
    uint64_t v96 = v161;
    uint64_t v97 = v164;
    (*(void (**)(char *, void, uint64_t))(v162 + 104))( v161,  enum case for AdditionalMetricsDescription.SourceFunction.preHandle(_:),  v164);
    swift_getErrorValue(v55, v176, v175);
    uint64_t v98 = Error.localizedDescription.getter(v175[1], v175[2]);
    uint64_t v100 = v99;
    os_log_type_t v158 = (char *)static AdditionalMetricsDescription.encodeInfo(module:source:statusReason:extraInfo:)( v93,  v96,  v98,  v99,  0LL,  1LL);
    uint64_t v102 = v101;
    __n128 v103 = swift_bridgeObjectRelease(v100);
    (*(void (**)(char *, uint64_t, __n128))(v95 + 8))(v96, v97, v103);
    (*(void (**)(char *, uint64_t))(v92 + 8))(v93, v94);
    uint64_t v104 = *(void *)((char *)v165
                     + OBJC_IVAR____TtCO23AudioFlowDelegatePlugin9PlayMedia20HandleIntentStrategy_siriKitTaskLoggingProvider
                     + 24);
    uint64_t v105 = *(void *)((char *)v165
                     + OBJC_IVAR____TtCO23AudioFlowDelegatePlugin9PlayMedia20HandleIntentStrategy_siriKitTaskLoggingProvider
                     + 32);
    os_log_type_t v165 = sub_6EA8( (void *)((char *)v165 + OBJC_IVAR____TtCO23AudioFlowDelegatePlugin9PlayMedia20HandleIntentStrategy_siriKitTaskLoggingProvider),  v104);
    uint64_t v106 = enum case for ActivityType.failed(_:);
    uint64_t v107 = type metadata accessor for ActivityType(0LL);
    uint64_t v108 = *(void *)(v107 - 8);
    uint64_t v109 = (uint64_t)v154;
    (*(void (**)(char *, uint64_t, uint64_t))(v108 + 104))(v154, v106, v107);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v108 + 56))(v109, 0LL, 1LL, v107);
    uint64_t v110 = type metadata accessor for TemplatingResult(0LL);
    uint64_t v111 = (uint64_t)v155;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v110 - 8) + 56LL))(v155, 1LL, 1LL, v110);
    uint64_t v112 = enum case for SiriKitReliabilityCodes.renderingError(_:);
    uint64_t v113 = type metadata accessor for SiriKitReliabilityCodes(0LL);
    uint64_t v114 = *(void *)(v113 - 8);
    uint64_t v115 = (uint64_t)v168;
    (*(void (**)(char *, uint64_t, uint64_t))(v114 + 104))(v168, v112, v113);
    uint64_t v116 = (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v114 + 56))(v115, 0LL, 1LL, v113);
    uint64_t v117 = v167;
    uint64_t v118 = INPlayMediaIntent.firstMediaItemType()(v116);
    dispatch thunk of SiriKitTaskLoggingProviding.submitMetric(app:intent:activityType:templateResult:statusReason:description:mediaItemType:)( v166,  v117,  v109,  v111,  v115,  v158,  v102,  v118,  0,  v104,  v105);
    swift_bridgeObjectRelease(v102);
    sub_1F6CC(v115, &qword_2845A0);
    sub_1F6CC(v111, (uint64_t *)&unk_286BD0);
    sub_1F6CC(v109, &qword_2845A8);
    v169(v171);
    return swift_errorRelease(v55);
  }

  else
  {
    uint64_t v155 = (char *)v54;
    sub_1F6CC((uint64_t)&v177, (uint64_t *)&unk_286C60);
    uint64_t v70 = v160;
    uint64_t v71 = v159;
    uint64_t v72 = v163;
    (*(void (**)(char *, void, uint64_t))(v160 + 104))( v159,  enum case for AdditionalMetricsDescription.ModuleName.pmhis(_:),  v163);
    uint64_t v73 = v162;
    uint64_t v74 = v161;
    uint64_t v75 = v164;
    (*(void (**)(char *, void, uint64_t))(v162 + 104))( v161,  enum case for AdditionalMetricsDescription.SourceFunction.preHandle(_:),  v164);
    uint64_t v76 = v147;
    uint64_t v77 = v146;
    uint64_t v78 = v148;
    (*(void (**)(char *, void, uint64_t))(v147 + 104))( v146,  enum case for AdditionalMetricsDescription.StatusReason.success(_:),  v148);
    uint64_t v149 = static AdditionalMetricsDescription.encodeInfo(module:source:statusReason:extraInfo:)( v71,  v74,  v77,  0LL,  1LL);
    uint64_t v154 = v79;
    (*(void (**)(char *, uint64_t))(v76 + 8))(v77, v78);
    (*(void (**)(char *, uint64_t))(v73 + 8))(v74, v75);
    (*(void (**)(char *, uint64_t))(v70 + 8))(v71, v72);
    sub_157C4( (uint64_t)v165 + OBJC_IVAR____TtCO23AudioFlowDelegatePlugin9PlayMedia20HandleIntentStrategy_siriKitTaskLoggingProvider,  (uint64_t)&v177);
    uint64_t v81 = v178;
    uint64_t v80 = v179;
    sub_6EA8(&v177, v178);
    uint64_t v82 = enum case for ActivityType.showInterstitial(_:);
    uint64_t v83 = type metadata accessor for ActivityType(0LL);
    uint64_t v84 = *(void *)(v83 - 8);
    uint64_t v85 = v158;
    (*(void (**)(char *, uint64_t, uint64_t))(v84 + 104))(v158, v82, v83);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v84 + 56))(v85, 0LL, 1LL, v83);
    uint64_t v86 = type metadata accessor for ResponseFactoryOutputContext(0LL);
    uint64_t v87 = v151;
    sub_FF10(v150 + *(int *)(v86 + 28), v151, (uint64_t *)&unk_286BA0);
    uint64_t v88 = sub_6C5C(&qword_289340);
    uint64_t v89 = v24;
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v88 - 8) + 48LL))(v87, 1LL, v88) == 1)
    {
      sub_1F6CC(v87, (uint64_t *)&unk_286BA0);
      uint64_t v90 = type metadata accessor for TemplatingResult(0LL);
      uint64_t v91 = (uint64_t)v152;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v90 - 8) + 56LL))(v152, 1LL, 1LL, v90);
    }

    else
    {

      uint64_t v120 = type metadata accessor for TemplatingResult(0LL);
      uint64_t v121 = *(void *)(v120 - 8);
      uint64_t v91 = (uint64_t)v152;
      (*(void (**)(char *, uint64_t, uint64_t))(v121 + 32))(v152, v87, v120);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v121 + 56))(v91, 0LL, 1LL, v120);
    }

    uint64_t v122 = enum case for SiriKitReliabilityCodes.success(_:);
    uint64_t v123 = type metadata accessor for SiriKitReliabilityCodes(0LL);
    uint64_t v124 = *(void *)(v123 - 8);
    uint64_t v125 = (uint64_t)v168;
    (*(void (**)(char *, uint64_t, uint64_t))(v124 + 104))(v168, v122, v123);
    uint64_t v126 = (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v124 + 56))(v125, 0LL, 1LL, v123);
    uint64_t v127 = v167;
    uint64_t v128 = INPlayMediaIntent.firstMediaItemType()(v126);
    uint64_t v145 = v80;
    uint64_t v129 = (uint64_t)v158;
    uint64_t v130 = v154;
    dispatch thunk of SiriKitTaskLoggingProviding.submitMetric(app:intent:activityType:templateResult:statusReason:description:mediaItemType:)( v166,  v127,  v158,  v91,  v125,  v149,  v154,  v128,  0,  v81,  v145);
    swift_bridgeObjectRelease(v130);
    sub_1F6CC(v125, &qword_2845A0);
    sub_1F6CC(v91, (uint64_t *)&unk_286BD0);
    sub_1F6CC(v129, &qword_2845A8);
    sub_6C3C(&v177);
    uint64_t v131 = v153;
    uint64_t v132 = v89;
    uint64_t v133 = ((uint64_t (*)(char *, uint64_t, uint64_t))v157)(v153, v156, v89);
    uint64_t v134 = (os_log_s *)Logger.logObject.getter(v133);
    os_log_type_t v135 = static os_log_type_t.debug.getter();
    BOOL v136 = os_log_type_enabled(v134, v135);
    uint64_t v137 = v171;
    if (v136)
    {
      uint64_t v138 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
      uint64_t v139 = v131;
      uint64_t v140 = swift_slowAlloc(32LL, -1LL);
      uint64_t v177 = v140;
      *(_DWORD *)uint64_t v138 = 136446210;
      uint64_t v141 = static Insights.responseFramework.getter(v140);
      unint64_t v143 = v142;
      uint64_t v172 = sub_6978(v141, v142, &v177);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v172, v173);
      swift_bridgeObjectRelease(v143);
      _os_log_impl( &dword_0,  v134,  v135,  "HandleIntentStrategy#preHandleIntentOutputWithRF completed successfully. Insights:%{public}s",  v138,  0xCu);
      swift_arrayDestroy(v140, 1LL, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v140, -1LL, -1LL);
      swift_slowDealloc(v138, -1LL, -1LL);

      uint64_t v144 = v139;
    }

    else
    {

      uint64_t v144 = v131;
    }

    ((void (*)(char *, uint64_t))v155)(v144, v132);
    return ((uint64_t (*)(uint64_t))v169)(v137);
  }

uint64_t sub_1FA620(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unsigned int a6, uint64_t a7)
{
  uint64_t v12 = *a1;
  uint64_t v13 = a1[1];
  uint64_t v14 = swift_allocObject(&unk_276208, 32LL, 7LL);
  *(void *)(v14 + swift_weakDestroy(v0 + 16) = v12;
  *(void *)(v14 + 24) = v13;
  uint64_t v15 = (void *)(a2 + OBJC_IVAR____TtCO23AudioFlowDelegatePlugin9PlayMedia20HandleIntentStrategy_snippetModelProvider);
  uint64_t v16 = *(void *)(a2
                  + OBJC_IVAR____TtCO23AudioFlowDelegatePlugin9PlayMedia20HandleIntentStrategy_snippetModelProvider
                  + 24);
  uint64_t v17 = v15[4];
  sub_6EA8(v15, v16);
  uint64_t v18 = (void *)swift_allocObject(&unk_276230, 40LL, 7LL);
  _OWORD v18[2] = sub_64F88;
  v18[3] = v14;
  v18[4] = a7;
  uint64_t v19 = *(void (**)(uint64_t, uint64_t, uint64_t, void, uint64_t (*)(uint64_t), void *, uint64_t, uint64_t))(v17 + 8);
  swift_retain(v13);
  swift_retain(a7);
  v19(a3, a4, a5, a6, sub_1FF0A8, v18, v16, v17);
  return swift_release(v18);
}

uint64_t sub_1FA720(uint64_t *a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5, uint64_t a6)
{
  uint64_t v11 = *a1;
  uint64_t v10 = a1[1];
  uint64_t v12 = swift_allocObject(&unk_2761E0, 32LL, 7LL);
  *(void *)(v12 + swift_weakDestroy(v0 + 16) = v11;
  *(void *)(v12 + 24) = v10;
  uint64_t v13 = *(void **)(a2
                   + OBJC_IVAR____TtCO23AudioFlowDelegatePlugin9PlayMedia20HandleIntentStrategy_playMediaDialogProvider);
  swift_retain(v12);
  swift_retain(a6);
  swift_retain(v10);
  sub_16B164(a3, a4, v13, (uint64_t (*)(uint64_t))sub_1646C, v12, a6);
  swift_release_n(v12, 2LL);
  return swift_release(a6);
}

uint64_t sub_1FA7D0(uint64_t a1, uint64_t (*a2)(uint64_t), uint64_t a3, uint64_t a4)
{
  return sub_1FC1B4( a1,  a2,  a3,  a4,  "HandleIntentStrategy#preHandledIntentOutputContext dialogResult: %s Insights:%{public}s");
}

uint64_t sub_1FA7DC(uint64_t a1, uint64_t a2, void (*a3)(char *), uint64_t a4)
{
  uint64_t v35 = a4;
  uint64_t v36 = a3;
  uint64_t v6 = type metadata accessor for ResponseFactoryOutputContext(0LL);
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)v32 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v9 = type metadata accessor for Logger(0LL);
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)v32 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v13 = swift_projectBox(a1);
  uint64_t v14 = (void *)(a2 + OBJC_IVAR____TtCO23AudioFlowDelegatePlugin9PlayMedia20HandleIntentStrategy_deviceProvider);
  uint64_t v15 = *(void *)(a2 + OBJC_IVAR____TtCO23AudioFlowDelegatePlugin9PlayMedia20HandleIntentStrategy_deviceProvider + 24);
  uint64_t v16 = v14[4];
  sub_6EA8(v14, v15);
  LOBYTE(v15) = dispatch thunk of DeviceProviding.isHomePod.getter(v15, v16);
  swift_beginAccess(v13, v40, 1LL, 0LL);
  *(_BYTE *)(v13 + *(int *)(v6 + swift_bridgeObjectRelease(*(void *)(v0 + 40)) = v15 & 1;
  if (qword_283888 != -1) {
    swift_once(&qword_283888, sub_BFC5C);
  }
  uint64_t v17 = sub_6960(v9, (uint64_t)qword_2969C8);
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v12, v17, v9);
  uint64_t v18 = swift_retain_n(a1, 2LL);
  uint64_t v19 = (os_log_s *)Logger.logObject.getter(v18);
  os_log_type_t v20 = static os_log_type_t.debug.getter();
  uint64_t v21 = v10;
  if (os_log_type_enabled(v19, v20))
  {
    uint64_t v22 = swift_slowAlloc(22LL, -1LL);
    uint64_t v34 = swift_slowAlloc(64LL, -1LL);
    v39[0] = v34;
    *(_DWORD *)uint64_t v22 = 136446466;
    v32[1] = v22 + 4;
    swift_beginAccess(v13, v38, 0LL, 0LL);
    sub_1EA0D0(v13, (uint64_t)v8);
    uint64_t v23 = String.init<A>(describing:)(v8, v6);
    unint64_t v25 = v24;
    uint64_t v37 = sub_6978(v23, v24, v39);
    uint64_t v33 = v21;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v37, v38);
    swift_release_n(a1, 2LL);
    uint64_t v26 = swift_bridgeObjectRelease(v25);
    *(_WORD *)(v22 + 1sub_6C3C(v0 + 2) = 2082;
    uint64_t v27 = static Insights.responseFramework.getter(v26);
    unint64_t v29 = v28;
    uint64_t v37 = sub_6978(v27, v28, v39);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v37, v38);
    swift_bridgeObjectRelease(v29);
    _os_log_impl( &dword_0,  v19,  v20,  "HandleIntentStrategy#preHandledIntentOutputContext created output context:  %{public}s Insights:%{public}s",  (uint8_t *)v22,  0x16u);
    uint64_t v30 = v34;
    swift_arrayDestroy(v34, 2LL, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v30, -1LL, -1LL);
    swift_slowDealloc(v22, -1LL, -1LL);

    (*(void (**)(char *, uint64_t))(v33 + 8))(v12, v9);
  }

  else
  {

    swift_release_n(a1, 2LL);
    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  }

  swift_beginAccess(v13, v39, 0LL, 0LL);
  sub_1EA0D0(v13, (uint64_t)v8);
  v36(v8);
  return sub_1FF044((uint64_t)v8);
}

uint64_t sub_1FAB18(uint64_t a1, void *a2, void *a3, uint64_t a4, uint64_t a5)
{
  return sub_1FAB2C( a1,  a2,  a3,  a4,  a5,  "PlayMedia+HandleIntentStategy#handledIntentOutputWithRF response is being handled using Response Framework2.0 . for app: %s Insights:%{public}s",  (void (*)(uint64_t, id, id, uint64_t, uint64_t, uint64_t, id, id, uint64_t, uint64_t))sub_1FF5B8);
}

uint64_t sub_1FAB2C( uint64_t a1, void *a2, void *a3, uint64_t a4, uint64_t a5, const char *a6, void (*a7)(uint64_t, id, id, uint64_t, uint64_t, uint64_t, id, id, uint64_t, uint64_t))
{
  uint64_t v44 = a4;
  uint64_t v45 = a7;
  uint64_t v42 = a6;
  id v43 = a2;
  uint64_t v8 = v7;
  uint64_t v12 = type metadata accessor for Logger(0LL);
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  uint64_t v15 = (char *)&v38 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  if (qword_283888 != -1) {
    swift_once(&qword_283888, sub_BFC5C);
  }
  uint64_t v16 = sub_6960(v12, (uint64_t)qword_2969C8);
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v15, v16, v12);
  uint64_t v17 = swift_retain_n(a1, 2LL);
  uint64_t v18 = (os_log_s *)Logger.logObject.getter(v17);
  os_log_type_t v19 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v18, v19))
  {
    uint64_t v20 = swift_slowAlloc(22LL, -1LL);
    uint64_t v41 = v7;
    uint64_t v21 = v20;
    uint64_t v38 = swift_slowAlloc(64LL, -1LL);
    uint64_t v46 = a1;
    uint64_t v47 = v38;
    *(_DWORD *)uint64_t v21 = 136315394;
    BOOL v39 = a3;
    uint64_t v22 = type metadata accessor for App(0LL);
    uint64_t v40 = a5;
    uint64_t v23 = v22;
    uint64_t v24 = sub_10430( (unint64_t *)&qword_283AB0,  (uint64_t (*)(uint64_t))&type metadata accessor for App,  (uint64_t)&protocol conformance descriptor for App);
    uint64_t v25 = dispatch thunk of CustomStringConvertible.description.getter(v23, v24);
    unint64_t v27 = v26;
    uint64_t v46 = sub_6978(v25, v26, &v47);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v46, &v47);
    swift_bridgeObjectRelease(v27);
    uint64_t v28 = swift_release_n(a1, 2LL);
    *(_WORD *)(v21 + 1sub_6C3C(v0 + 2) = 2082;
    uint64_t v29 = static Insights.responseFramework.getter(v28);
    unint64_t v31 = v30;
    uint64_t v46 = sub_6978(v29, v30, &v47);
    a5 = v40;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v46, &v47);
    unint64_t v32 = v31;
    a3 = v39;
    swift_bridgeObjectRelease(v32);
    _os_log_impl(&dword_0, v18, v19, v42, (uint8_t *)v21, 0x16u);
    uint64_t v33 = v38;
    swift_arrayDestroy(v38, 2LL, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v33, -1LL, -1LL);
    uint64_t v34 = v21;
    uint64_t v8 = v41;
    swift_slowDealloc(v34, -1LL, -1LL);
  }

  else
  {
    swift_release_n(a1, 2LL);
  }

  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  swift_retain(a1);
  swift_retain(v8);
  id v35 = v43;
  id v36 = a3;
  swift_retain(a5);
  v45(a1, v35, v36, v8, v8, a1, v35, v36, v44, a5);
  swift_release(a5);

  swift_release(a1);
  return swift_release(v8);
}

uint64_t sub_1FAE40( uint64_t a1, void *a2, uint64_t a3, void *a4, void (*a5)(uint64_t), uint64_t a6, void *a7, uint64_t a8)
{
  uint64_t v141 = a8;
  id v139 = a7;
  uint64_t v159 = a6;
  uint64_t v160 = a5;
  __int128 v161 = a4;
  uint64_t v157 = a3;
  uint64_t v156 = a2;
  uint64_t v9 = sub_6C5C(&qword_2845A0);
  __chkstk_darwin(v9);
  os_log_type_t v158 = (char *)&v137 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v11 = sub_6C5C((uint64_t *)&unk_286BA0);
  __chkstk_darwin(v11);
  uint64_t v13 = (char *)&v137 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v14 = sub_6C5C((uint64_t *)&unk_286BD0);
  uint64_t v15 = __chkstk_darwin(v14);
  uint64_t v147 = (char *)&v137 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v15);
  uint64_t v144 = (char *)&v137 - v17;
  uint64_t v18 = sub_6C5C(&qword_2845A8);
  uint64_t v19 = __chkstk_darwin(v18);
  uint64_t v146 = (char *)&v137 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v19);
  unint64_t v143 = (char *)&v137 - v21;
  uint64_t v22 = type metadata accessor for AdditionalMetricsDescription.SourceFunction(0LL);
  uint64_t v154 = *(void *)(v22 - 8);
  __chkstk_darwin(v22);
  uint64_t v153 = (char *)&v137 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v155 = type metadata accessor for AdditionalMetricsDescription.ModuleName(0LL);
  uint64_t v152 = *(void *)(v155 - 8);
  __chkstk_darwin(v155);
  uint64_t v150 = (char *)&v137 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v25 = type metadata accessor for Logger(0LL);
  uint64_t v26 = *(void *)(v25 - 8);
  uint64_t v27 = __chkstk_darwin(v25);
  uint64_t v145 = (char *)&v137 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v29 = __chkstk_darwin(v27);
  unint64_t v31 = (char *)&v137 - v30;
  __chkstk_darwin(v29);
  uint64_t v33 = (char *)&v137 - v32;
  if (qword_283888 != -1) {
    swift_once(&qword_283888, sub_BFC5C);
  }
  uint64_t v34 = sub_6960(v25, (uint64_t)qword_2969C8);
  id v35 = *(void (**)(char *, uint64_t, uint64_t))(v26 + 16);
  uint64_t v148 = v34;
  uint64_t v149 = v35;
  ((void (*)(char *))v35)(v33);
  uint64_t v36 = sub_FF10(a1, (uint64_t)&v168, (uint64_t *)&unk_286C60);
  uint64_t v37 = (os_log_s *)Logger.logObject.getter(v36);
  os_log_type_t v38 = static os_log_type_t.debug.getter();
  BOOL v39 = os_log_type_enabled(v37, v38);
  uint64_t v162 = a1;
  unint64_t v142 = v13;
  if (v39)
  {
    uint64_t v40 = swift_slowAlloc(22LL, -1LL);
    uint64_t v138 = v31;
    uint64_t v41 = v40;
    uint64_t v42 = swift_slowAlloc(64LL, -1LL);
    uint64_t v165 = v42;
    *(_DWORD *)uint64_t v41 = 136315394;
    uint64_t v140 = v22;
    sub_FF10((uint64_t)&v168, (uint64_t)&v163, (uint64_t *)&unk_286C60);
    uint64_t v43 = sub_6C5C((uint64_t *)&unk_286C60);
    uint64_t v44 = String.init<A>(describing:)(&v163, v43);
    unint64_t v46 = v45;
    uint64_t v163 = sub_6978(v44, v45, &v165);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v163, v164);
    swift_bridgeObjectRelease(v46);
    uint64_t v47 = sub_1F6CC((uint64_t)&v168, (uint64_t *)&unk_286C60);
    *(_WORD *)(v41 + 1sub_6C3C(v0 + 2) = 2082;
    uint64_t v48 = static Insights.responseFramework.getter(v47);
    unint64_t v50 = v49;
    uint64_t v163 = sub_6978(v48, v49, &v165);
    uint64_t v22 = v140;
    a1 = v162;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v163, v164);
    swift_bridgeObjectRelease(v50);
    _os_log_impl( &dword_0,  v37,  v38,  "PlayMedia+HandleIntentStategy#handledIntentOutputWithRF created output: %s. Insights:%{public}s",  (uint8_t *)v41,  0x16u);
    swift_arrayDestroy(v42, 2LL, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v42, -1LL, -1LL);
    uint64_t v51 = v41;
    unint64_t v31 = v138;
    swift_slowDealloc(v51, -1LL, -1LL);
  }

  else
  {
    sub_1F6CC((uint64_t)&v168, (uint64_t *)&unk_286C60);
  }

  uint64_t v151 = *(void (**)(char *, uint64_t))(v26 + 8);
  v151(v33, v25);
  sub_FF10(a1, (uint64_t)&v168, (uint64_t *)&unk_286C60);
  if ((v171 & 1) != 0)
  {
    uint64_t v52 = (uint64_t)v168;
    v149(v31, v148, v25);
    swift_errorRetain(v52);
    uint64_t v53 = swift_errorRetain(v52);
    uint64_t v54 = (os_log_s *)Logger.logObject.getter(v53);
    uint64_t v55 = v31;
    os_log_type_t v56 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v54, v56))
    {
      uint64_t v57 = swift_slowAlloc(22LL, -1LL);
      id v58 = (id)swift_slowAlloc(64LL, -1LL);
      uint64_t v140 = v25;
      id v59 = v58;
      id v168 = v58;
      *(_DWORD *)uint64_t v57 = 136446466;
      uint64_t v163 = v52;
      swift_errorRetain(v52);
      uint64_t v60 = sub_6C5C(&qword_284010);
      uint64_t v61 = String.init<A>(describing:)(&v163, v60);
      unint64_t v63 = v62;
      uint64_t v163 = sub_6978(v61, v62, (uint64_t *)&v168);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v163, v164);
      swift_bridgeObjectRelease(v63);
      swift_errorRelease(v52);
      uint64_t v64 = swift_errorRelease(v52);
      *(_WORD *)(v57 + 1sub_6C3C(v0 + 2) = 2082;
      uint64_t v65 = static Insights.responseFramework.getter(v64);
      unint64_t v67 = v66;
      uint64_t v163 = sub_6978(v65, v66, (uint64_t *)&v168);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v163, v164);
      swift_bridgeObjectRelease(v67);
      _os_log_impl( &dword_0,  v54,  v56,  "PlayMedia+HandleIntentStategy#handledIntentOutputWithRF failed with error: %{public}s, Insights:%{public}s",  (uint8_t *)v57,  0x16u);
      swift_arrayDestroy(v59, 2LL, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v59, -1LL, -1LL);
      swift_slowDealloc(v57, -1LL, -1LL);

      unint64_t v68 = v55;
      uint64_t v69 = v140;
    }

    else
    {
      swift_errorRelease(v52);
      swift_errorRelease(v52);

      unint64_t v68 = v55;
      uint64_t v69 = v25;
    }

    v151(v68, v69);
    uint64_t v92 = v152;
    uint64_t v93 = v150;
    uint64_t v94 = v155;
    (*(void (**)(char *, void, uint64_t))(v152 + 104))( v150,  enum case for AdditionalMetricsDescription.ModuleName.pmhis(_:),  v155);
    uint64_t v95 = v154;
    uint64_t v96 = v153;
    (*(void (**)(char *, void, uint64_t))(v154 + 104))( v153,  enum case for AdditionalMetricsDescription.SourceFunction.handled(_:),  v22);
    swift_getErrorValue(v52, v167, v166);
    uint64_t v97 = Error.localizedDescription.getter(v166[1], v166[2]);
    uint64_t v99 = v98;
    uint64_t v151 = (void (*)(char *, uint64_t))static AdditionalMetricsDescription.encodeInfo(module:source:statusReason:extraInfo:)( v93,  v96,  v97,  v98,  0LL,  1LL);
    uint64_t v101 = v100;
    swift_bridgeObjectRelease(v99);
    (*(void (**)(char *, uint64_t))(v95 + 8))(v96, v22);
    (*(void (**)(char *, uint64_t))(v92 + 8))(v93, v94);
    uint64_t v102 = *(void *)((char *)v156
                     + OBJC_IVAR____TtCO23AudioFlowDelegatePlugin9PlayMedia20HandleIntentStrategy_siriKitTaskLoggingProvider
                     + 24);
    uint64_t v103 = *(void *)((char *)v156
                     + OBJC_IVAR____TtCO23AudioFlowDelegatePlugin9PlayMedia20HandleIntentStrategy_siriKitTaskLoggingProvider
                     + 32);
    uint64_t v156 = sub_6EA8( (void *)((char *)v156 + OBJC_IVAR____TtCO23AudioFlowDelegatePlugin9PlayMedia20HandleIntentStrategy_siriKitTaskLoggingProvider),  v102);
    uint64_t v104 = enum case for ActivityType.failed(_:);
    uint64_t v105 = type metadata accessor for ActivityType(0LL);
    uint64_t v106 = *(void *)(v105 - 8);
    uint64_t v107 = (uint64_t)v146;
    (*(void (**)(char *, uint64_t, uint64_t))(v106 + 104))(v146, v104, v105);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v106 + 56))(v107, 0LL, 1LL, v105);
    uint64_t v108 = type metadata accessor for TemplatingResult(0LL);
    uint64_t v109 = (uint64_t)v147;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v108 - 8) + 56LL))(v147, 1LL, 1LL, v108);
    uint64_t v110 = enum case for SiriKitReliabilityCodes.renderingError(_:);
    uint64_t v111 = type metadata accessor for SiriKitReliabilityCodes(0LL);
    uint64_t v112 = *(void *)(v111 - 8);
    uint64_t v113 = (uint64_t)v158;
    (*(void (**)(char *, uint64_t, uint64_t))(v112 + 104))(v158, v110, v111);
    uint64_t v114 = (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v112 + 56))(v113, 0LL, 1LL, v111);
    uint64_t v115 = v161;
    uint64_t v116 = INPlayMediaIntent.firstMediaItemType()(v114);
    dispatch thunk of SiriKitTaskLoggingProviding.submitMetric(app:intent:activityType:templateResult:statusReason:description:mediaItemType:)( v157,  v115,  v107,  v109,  v113,  v151,  v101,  v116,  0,  v102,  v103);
    swift_bridgeObjectRelease(v101);
    sub_1F6CC(v113, &qword_2845A0);
    sub_1F6CC(v109, (uint64_t *)&unk_286BD0);
    sub_1F6CC(v107, &qword_2845A8);
    v160(v162);
    return swift_errorRelease(v52);
  }

  else
  {
    uint64_t v140 = v25;
    sub_1F6CC((uint64_t)&v168, (uint64_t *)&unk_286C60);
    uint64_t v70 = v156;
    sub_1F7F0C(v161);
    uint64_t v71 = v152;
    uint64_t v72 = v150;
    uint64_t v73 = v155;
    (*(void (**)(char *, void, uint64_t))(v152 + 104))( v150,  enum case for AdditionalMetricsDescription.ModuleName.pmhis(_:),  v155);
    uint64_t v74 = v154;
    uint64_t v75 = v153;
    (*(void (**)(char *, void, uint64_t))(v154 + 104))( v153,  enum case for AdditionalMetricsDescription.SourceFunction.handled(_:),  v22);
    id v168 = [v139 code];
    uint64_t v76 = dispatch thunk of CustomStringConvertible.description.getter( &type metadata for Int,  &protocol witness table for Int);
    uint64_t v78 = v77;
    uint64_t v147 = (char *)static AdditionalMetricsDescription.encodeInfo(module:source:statusReason:extraInfo:)( v72,  v75,  v76,  v77,  0LL,  1LL);
    uint64_t v80 = v79;
    swift_bridgeObjectRelease(v78);
    (*(void (**)(char *, uint64_t))(v74 + 8))(v75, v22);
    (*(void (**)(char *, uint64_t))(v71 + 8))(v72, v73);
    sub_157C4( (uint64_t)v70 + OBJC_IVAR____TtCO23AudioFlowDelegatePlugin9PlayMedia20HandleIntentStrategy_siriKitTaskLoggingProvider,  (uint64_t)&v168);
    uint64_t v82 = v169;
    uint64_t v81 = v170;
    sub_6EA8(&v168, v169);
    uint64_t v83 = enum case for ActivityType.completed(_:);
    uint64_t v84 = type metadata accessor for ActivityType(0LL);
    uint64_t v85 = *(void *)(v84 - 8);
    uint64_t v86 = (uint64_t)v143;
    (*(void (**)(char *, uint64_t, uint64_t))(v85 + 104))(v143, v83, v84);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v85 + 56))(v86, 0LL, 1LL, v84);
    uint64_t v87 = type metadata accessor for ResponseFactoryOutputContext(0LL);
    uint64_t v88 = (uint64_t)v142;
    sub_FF10(v141 + *(int *)(v87 + 28), (uint64_t)v142, (uint64_t *)&unk_286BA0);
    uint64_t v89 = sub_6C5C(&qword_289340);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v89 - 8) + 48LL))(v88, 1LL, v89) == 1)
    {
      sub_1F6CC(v88, (uint64_t *)&unk_286BA0);
      uint64_t v90 = type metadata accessor for TemplatingResult(0LL);
      uint64_t v91 = (uint64_t)v144;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v90 - 8) + 56LL))(v144, 1LL, 1LL, v90);
    }

    else
    {

      uint64_t v118 = type metadata accessor for TemplatingResult(0LL);
      uint64_t v119 = *(void *)(v118 - 8);
      uint64_t v91 = (uint64_t)v144;
      (*(void (**)(char *, uint64_t, uint64_t))(v119 + 32))(v144, v88, v118);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v119 + 56))(v91, 0LL, 1LL, v118);
    }

    uint64_t v120 = enum case for SiriKitReliabilityCodes.success(_:);
    uint64_t v121 = type metadata accessor for SiriKitReliabilityCodes(0LL);
    uint64_t v122 = *(void *)(v121 - 8);
    uint64_t v123 = (uint64_t)v158;
    (*(void (**)(char *, uint64_t, uint64_t))(v122 + 104))(v158, v120, v121);
    uint64_t v124 = (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v122 + 56))(v123, 0LL, 1LL, v121);
    uint64_t v125 = v161;
    uint64_t v126 = INPlayMediaIntent.firstMediaItemType()(v124);
    dispatch thunk of SiriKitTaskLoggingProviding.submitMetric(app:intent:activityType:templateResult:statusReason:description:mediaItemType:)( v157,  v125,  v86,  v91,  v123,  v147,  v80,  v126,  0,  v82,  v81);
    swift_bridgeObjectRelease(v80);
    sub_1F6CC(v123, &qword_2845A0);
    sub_1F6CC(v91, (uint64_t *)&unk_286BD0);
    sub_1F6CC(v86, &qword_2845A8);
    sub_6C3C(&v168);
    uint64_t v127 = v145;
    uint64_t v128 = v140;
    uint64_t v129 = ((uint64_t (*)(char *, uint64_t, uint64_t))v149)(v145, v148, v140);
    uint64_t v130 = (os_log_s *)Logger.logObject.getter(v129);
    os_log_type_t v131 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v130, v131))
    {
      uint64_t v132 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
      id v133 = (id)swift_slowAlloc(32LL, -1LL);
      id v168 = v133;
      *(_DWORD *)uint64_t v132 = 136446210;
      uint64_t v134 = static Insights.responseFramework.getter(v133);
      unint64_t v136 = v135;
      uint64_t v163 = sub_6978(v134, v135, (uint64_t *)&v168);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v163, v164);
      swift_bridgeObjectRelease(v136);
      _os_log_impl( &dword_0,  v130,  v131,  "PlayMedia+HandleIntentStategy#handledIntentOutputWithRF completed successfully. Insights:%{public}s",  v132,  0xCu);
      swift_arrayDestroy(v133, 1LL, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v133, -1LL, -1LL);
      swift_slowDealloc(v132, -1LL, -1LL);
    }

    v151(v127, v128);
    return ((uint64_t (*)(uint64_t))v160)(v162);
  }

uint64_t sub_1FBC04(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unsigned int a6, uint64_t a7)
{
  uint64_t v12 = *a1;
  uint64_t v13 = a1[1];
  uint64_t v14 = swift_allocObject(&unk_276488, 32LL, 7LL);
  *(void *)(v14 + swift_weakDestroy(v0 + 16) = v12;
  *(void *)(v14 + 24) = v13;
  uint64_t v15 = (void *)(a2 + OBJC_IVAR____TtCO23AudioFlowDelegatePlugin9PlayMedia20HandleIntentStrategy_snippetModelProvider);
  uint64_t v16 = *(void *)(a2
                  + OBJC_IVAR____TtCO23AudioFlowDelegatePlugin9PlayMedia20HandleIntentStrategy_snippetModelProvider
                  + 24);
  uint64_t v17 = v15[4];
  sub_6EA8(v15, v16);
  uint64_t v18 = (void *)swift_allocObject(&unk_2764B0, 40LL, 7LL);
  _OWORD v18[2] = sub_64F88;
  v18[3] = v14;
  v18[4] = a7;
  uint64_t v19 = *(void (**)(uint64_t, uint64_t, uint64_t, void, uint64_t (*)(uint64_t), void *, uint64_t, uint64_t))(v17 + 16);
  swift_retain(v13);
  swift_retain(a7);
  v19(a3, a4, a5, a6, sub_1FFEAC, v18, v16, v17);
  return swift_release(v18);
}

uint64_t sub_1FBD04(uint64_t a1, uint64_t (*a2)(uint64_t), uint64_t a3, uint64_t a4, const char *a5)
{
  unint64_t v46 = a5;
  uint64_t v51 = a3;
  uint64_t v52 = a2;
  uint64_t v7 = type metadata accessor for Logger(0LL);
  uint64_t v49 = *(void *)(v7 - 8);
  uint64_t v50 = v7;
  __chkstk_darwin(v7);
  uint64_t v48 = &v43[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL)];
  uint64_t v9 = sub_6C5C(&qword_28DE90);
  uint64_t v10 = __chkstk_darwin(v9);
  uint64_t v12 = &v43[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL)];
  uint64_t v13 = __chkstk_darwin(v10);
  uint64_t v15 = &v43[-v14];
  __chkstk_darwin(v13);
  uint64_t v17 = &v43[-v16];
  uint64_t v18 = sub_6C5C(&qword_2866F8);
  __chkstk_darwin(v18);
  uint64_t v20 = (uint64_t *)&v43[-((v19 + 15) & 0xFFFFFFFFFFFFFFF0LL)];
  uint64_t v47 = type metadata accessor for ResponseFactoryOutputContext(0LL);
  uint64_t v21 = (uint64_t *)swift_projectBox(a4);
  sub_FF10(a1, (uint64_t)v20, &qword_2866F8);
  if (swift_getEnumCaseMultiPayload(v20, v18) == 1)
  {
    uint64_t v22 = *v20;
    swift_beginAccess(v21, v54, 1LL, 0LL);
    uint64_t v23 = *v21;
    *uint64_t v21 = v22;
    uint64_t v24 = swift_errorRelease(v23);
  }

  else
  {
    sub_45F6C((uint64_t)v20, (uint64_t)v17, &qword_28DE90);
    if (qword_283888 != -1) {
      swift_once(&qword_283888, sub_BFC5C);
    }
    uint64_t v25 = v50;
    uint64_t v26 = sub_6960(v50, (uint64_t)qword_2969C8);
    uint64_t v28 = v48;
    uint64_t v27 = v49;
    (*(void (**)(_BYTE *, uint64_t, uint64_t))(v49 + 16))(v48, v26, v25);
    uint64_t v29 = sub_FF10((uint64_t)v17, (uint64_t)v15, &qword_28DE90);
    uint64_t v30 = (os_log_s *)Logger.logObject.getter(v29);
    os_log_type_t v31 = static os_log_type_t.debug.getter();
    int v32 = v31;
    if (os_log_type_enabled(v30, v31))
    {
      uint64_t v33 = swift_slowAlloc(22LL, -1LL);
      uint64_t v45 = swift_slowAlloc(64LL, -1LL);
      v54[0] = v45;
      *(_DWORD *)uint64_t v33 = 136315394;
      int v44 = v32;
      sub_FF10((uint64_t)v15, (uint64_t)v12, &qword_28DE90);
      uint64_t v34 = String.init<A>(describing:)(v12, v9);
      unint64_t v36 = v35;
      uint64_t v53 = sub_6978(v34, v35, v54);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v53, v54);
      swift_bridgeObjectRelease(v36);
      uint64_t v37 = sub_1F6CC((uint64_t)v15, &qword_28DE90);
      *(_WORD *)(v33 + 1sub_6C3C(v0 + 2) = 2082;
      uint64_t v38 = static Insights.responseFramework.getter(v37);
      unint64_t v40 = v39;
      uint64_t v53 = sub_6978(v38, v39, v54);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v53, v54);
      swift_bridgeObjectRelease(v40);
      _os_log_impl(&dword_0, v30, (os_log_type_t)v44, v46, (uint8_t *)v33, 0x16u);
      uint64_t v41 = v45;
      swift_arrayDestroy(v45, 2LL, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v41, -1LL, -1LL);
      swift_slowDealloc(v33, -1LL, -1LL);

      (*(void (**)(_BYTE *, uint64_t))(v49 + 8))(v28, v50);
    }

    else
    {
      sub_1F6CC((uint64_t)v15, &qword_28DE90);

      (*(void (**)(_BYTE *, uint64_t))(v27 + 8))(v28, v25);
    }

    swift_beginAccess(v21, v54, 1LL, 0LL);
    uint64_t v24 = sub_DD950((uint64_t)v17, (uint64_t)v21 + *(int *)(v47 + 20), &qword_28DE90);
  }

  return v52(v24);
}

uint64_t sub_1FC0EC( uint64_t *a1, uint64_t a2, void (*a3)(char *, id), void *a4, uint64_t a5, uint64_t a6)
{
  uint64_t v10 = *a1;
  uint64_t v11 = a1[1];
  uint64_t v12 = swift_allocObject(&unk_276438, 32LL, 7LL);
  *(void *)(v12 + swift_weakDestroy(v0 + 16) = v10;
  *(void *)(v12 + 24) = v11;
  uint64_t v13 = (void *)swift_allocObject(&unk_276460, 40LL, 7LL);
  v13[2] = sub_64F88;
  v13[3] = v12;
  v13[4] = a6;
  swift_retain(v11);
  swift_retain(a6);
  sub_1562B8(a3, a4, a5, (void (*)(void *))sub_1FFE84, (uint64_t)v13);
  return swift_release(v13);
}

uint64_t sub_1FC1B4(uint64_t a1, uint64_t (*a2)(uint64_t), uint64_t a3, uint64_t a4, const char *a5)
{
  uint64_t v92 = a5;
  uint64_t v99 = a3;
  uint64_t v100 = a2;
  uint64_t v7 = sub_6C5C((uint64_t *)&unk_286BA0);
  __chkstk_darwin(v7);
  uint64_t v95 = (char *)v81 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v9 = type metadata accessor for Logger(0LL);
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v97 = v9;
  uint64_t v98 = v10;
  __chkstk_darwin(v9);
  uint64_t v96 = (char *)v81 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v12 = sub_6C5C(&qword_289340);
  uint64_t v94 = *(void *)(v12 - 8);
  uint64_t v13 = __chkstk_darwin(v12);
  uint64_t v91 = (char *)v81 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v15 = __chkstk_darwin(v13);
  uint64_t v90 = (char *)v81 - v16;
  uint64_t v17 = __chkstk_darwin(v15);
  uint64_t v93 = (uint64_t)v81 - v18;
  uint64_t v19 = __chkstk_darwin(v17);
  uint64_t v21 = (char *)v81 - v20;
  uint64_t v22 = __chkstk_darwin(v19);
  uint64_t v24 = (char *)v81 - v23;
  __chkstk_darwin(v22);
  uint64_t v26 = (char *)v81 - v25;
  uint64_t v27 = sub_6C5C((uint64_t *)&unk_286BB0);
  __chkstk_darwin(v27);
  uint64_t v29 = (void *)((char *)v81 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  uint64_t v30 = type metadata accessor for ResponseFactoryOutputContext(0LL);
  uint64_t v31 = swift_projectBox(a4);
  sub_FF10(a1, (uint64_t)v29, (uint64_t *)&unk_286BB0);
  if (swift_getEnumCaseMultiPayload(v29, v27) == 1)
  {
    uint64_t v32 = *v29;
    swift_beginAccess(v31, v102, 1LL, 0LL);
    uint64_t v33 = *(int *)(v30 + 24);
    uint64_t v34 = *(void *)(v31 + v33);
    *(void *)(v31 + v3sub_6C3C(v0 + 3) = v32;
    uint64_t v35 = swift_errorRelease(v34);
  }

  else
  {
    uint64_t v89 = v31;
    uint64_t v86 = v30;
    uint64_t v36 = *(int *)(v12 + 48);
    uint64_t v37 = type metadata accessor for TemplatingResult(0LL);
    uint64_t v38 = *(void *)(v37 - 8);
    uint64_t v87 = *(void (**)(char *, char *, uint64_t))(v38 + 32);
    v87(v26, (char *)v29, v37);
    unint64_t v39 = *(void **)((char *)v29 + v36);
    uint64_t v88 = v36;
    *(void *)&v26[v36] = v39;
    uint64_t v40 = qword_283888;
    id v41 = v39;
    if (v40 != -1) {
      swift_once(&qword_283888, sub_BFC5C);
    }
    uint64_t v42 = v97;
    uint64_t v43 = sub_6960(v97, (uint64_t)qword_2969C8);
    int v44 = v96;
    (*(void (**)(char *, uint64_t, uint64_t))(v98 + 16))(v96, v43, v42);
    uint64_t v45 = *(int *)(v12 + 48);
    unint64_t v46 = *(void (**)(char *, char *, uint64_t))(v38 + 16);
    v46(v24, v26, v37);
    *(void *)&v24[v45] = v41;
    sub_FF10((uint64_t)v24, (uint64_t)v21, &qword_289340);
    uint64_t v47 = v93;
    uint64_t v48 = sub_45F6C((uint64_t)v24, v93, &qword_289340);
    uint64_t v49 = (os_log_s *)Logger.logObject.getter(v48);
    os_log_type_t v50 = static os_log_type_t.debug.getter();
    int v51 = v50;
    if (os_log_type_enabled(v49, v50))
    {
      uint64_t v52 = swift_slowAlloc(22LL, -1LL);
      int v84 = v51;
      uint64_t v53 = v52;
      uint64_t v85 = swift_slowAlloc(64LL, -1LL);
      v102[0] = v85;
      *(_DWORD *)uint64_t v53 = 136315394;
      v81[1] = v53 + 4;
      os_log_t v83 = v49;
      uint64_t v54 = *(int *)(v12 + 48);
      uint64_t v55 = v21;
      uint64_t v82 = v21;
      os_log_type_t v56 = v26;
      uint64_t v57 = v12;
      uint64_t v58 = v37;
      id v59 = v90;
      v46(v90, v55, v58);
      uint64_t v60 = *(void **)&v55[v54];
      uint64_t v61 = *(int *)(v57 + 48);
      unint64_t v62 = v91;
      unint64_t v63 = v59;
      uint64_t v37 = v58;
      uint64_t v12 = v57;
      uint64_t v26 = v56;
      uint64_t v64 = v47;
      uint64_t v65 = v87;
      v87(v91, v63, v37);
      *(void *)&v62[v61] = v60;
      id v66 = v60;
      uint64_t v67 = String.init<A>(describing:)(v62, v12);
      unint64_t v69 = v68;
      uint64_t v101 = sub_6978(v67, v68, v102);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v101, v102);
      swift_bridgeObjectRelease(v69);
      sub_1F6CC(v64, &qword_289340);
      uint64_t v70 = sub_1F6CC((uint64_t)v82, &qword_289340);
      *(_WORD *)(v53 + 1sub_6C3C(v0 + 2) = 2082;
      uint64_t v71 = static Insights.responseFramework.getter(v70);
      unint64_t v73 = v72;
      uint64_t v101 = sub_6978(v71, v72, v102);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v101, v102);
      swift_bridgeObjectRelease(v73);
      os_log_t v74 = v83;
      _os_log_impl(&dword_0, v83, (os_log_type_t)v84, v92, (uint8_t *)v53, 0x16u);
      uint64_t v75 = v85;
      swift_arrayDestroy(v85, 2LL, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v75, -1LL, -1LL);
      swift_slowDealloc(v53, -1LL, -1LL);

      (*(void (**)(char *, uint64_t))(v98 + 8))(v96, v97);
      uint64_t v76 = v86;
    }

    else
    {
      sub_1F6CC(v47, &qword_289340);
      sub_1F6CC((uint64_t)v21, &qword_289340);

      (*(void (**)(char *, uint64_t))(v98 + 8))(v44, v42);
      uint64_t v76 = v86;
      uint64_t v65 = v87;
    }

    uint64_t v77 = v89;
    uint64_t v78 = *(int *)(v12 + 48);
    uint64_t v79 = (uint64_t)v95;
    v65(v95, v26, v37);
    *(void *)(v79 + v7sub_6C3C(v0 + 8) = *(void *)&v26[v88];
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v94 + 56))(v79, 0LL, 1LL, v12);
    swift_beginAccess(v77, v102, 1LL, 0LL);
    uint64_t v35 = sub_DD950(v79, v77 + *(int *)(v76 + 28), (uint64_t *)&unk_286BA0);
  }

  return v100(v35);
}

uint64_t sub_1FC78C(uint64_t (**a1)(void))
{
  return (*a1)();
}

uint64_t sub_1FC7AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9 = sub_6C5C((uint64_t *)&unk_286C50);
  __chkstk_darwin(v9);
  uint64_t v11 = &v20[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL)];
  uint64_t v13 = *(void (**)(uint64_t))a1;
  uint64_t v12 = *(void *)(a1 + 8);
  uint64_t v14 = type metadata accessor for ResponseFactoryOutputContext(0LL);
  uint64_t v15 = swift_projectBox(a2);
  swift_retain(v12);
  sub_1F4F24(a3, (unint64_t *)&qword_285320, &OBJC_CLASS___INPlayMediaIntent_ptr, (uint64_t)v11);
  swift_beginAccess(v15, v21, 1LL, 0LL);
  sub_DD950((uint64_t)v11, v15 + *(int *)(v14 + 32), (uint64_t *)&unk_286C50);
  uint64_t v16 = *(void *)(a5 + OBJC_IVAR____TtCO23AudioFlowDelegatePlugin9PlayMedia20HandleIntentStrategy_deviceProvider + 24);
  uint64_t v17 = *(void *)(a5 + OBJC_IVAR____TtCO23AudioFlowDelegatePlugin9PlayMedia20HandleIntentStrategy_deviceProvider + 32);
  sub_6EA8( (void *)(a5 + OBJC_IVAR____TtCO23AudioFlowDelegatePlugin9PlayMedia20HandleIntentStrategy_deviceProvider),  v16);
  LOBYTE(a5) = dispatch thunk of DeviceProviding.isHomePod.getter(v16, v17);
  uint64_t v18 = swift_beginAccess(v15, v20, 1LL, 0LL);
  *(_BYTE *)(v15 + *(int *)(v14 + swift_bridgeObjectRelease(*(void *)(v0 + 40)) = a5 & 1;
  v13(v18);
  return swift_release(v12);
}

uint64_t sub_1FC904(uint64_t a1, void (*a2)(void), uint64_t a3)
{
  uint64_t v6 = type metadata accessor for ResponseFactoryOutputContext(0LL);
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v9 = type metadata accessor for Logger(0LL);
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)v31 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v13 = swift_projectBox(a1);
  if (qword_283888 != -1) {
    swift_once(&qword_283888, sub_BFC5C);
  }
  uint64_t v14 = sub_6960(v9, (uint64_t)qword_2969C8);
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v12, v14, v9);
  uint64_t v15 = swift_retain_n(a1, 2LL);
  uint64_t v16 = (os_log_s *)Logger.logObject.getter(v15);
  os_log_type_t v17 = static os_log_type_t.debug.getter();
  uint64_t v33 = v10;
  os_log_type_t v18 = v17;
  if (os_log_type_enabled(v16, v17))
  {
    uint64_t v19 = swift_slowAlloc(22LL, -1LL);
    uint64_t v34 = v13;
    uint64_t v20 = v19;
    v31[0] = swift_slowAlloc(64LL, -1LL);
    v37[0] = v31[0];
    *(_DWORD *)uint64_t v20 = 136446466;
    uint64_t v32 = a2;
    swift_beginAccess(v34, v36, 0LL, 0LL);
    sub_1EA0D0(v34, (uint64_t)v8);
    uint64_t v21 = String.init<A>(describing:)(v8, v6);
    unint64_t v23 = v22;
    uint64_t v35 = sub_6978(v21, v22, v37);
    v31[1] = a3;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v35, v36);
    swift_release_n(a1, 2LL);
    uint64_t v24 = swift_bridgeObjectRelease(v23);
    *(_WORD *)(v20 + 1sub_6C3C(v0 + 2) = 2082;
    uint64_t v25 = static Insights.responseFramework.getter(v24);
    unint64_t v27 = v26;
    uint64_t v35 = sub_6978(v25, v26, v37);
    a2 = v32;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v35, v36);
    swift_bridgeObjectRelease(v27);
    _os_log_impl( &dword_0,  v16,  v18,  "HandleIntentStrategy#handledIntentOutputContext created output context:  %{public}s Insights:%{public}s",  (uint8_t *)v20,  0x16u);
    uint64_t v28 = v31[0];
    swift_arrayDestroy(v31[0], 2LL, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v28, -1LL, -1LL);
    uint64_t v29 = v20;
    uint64_t v13 = v34;
    swift_slowDealloc(v29, -1LL, -1LL);
  }

  else
  {

    swift_release_n(a1, 2LL);
  }

  (*(void (**)(char *, uint64_t))(v33 + 8))(v12, v9);
  swift_beginAccess(v13, v37, 0LL, 0LL);
  sub_1EA0D0(v13, (uint64_t)v8);
  a2(v8);
  return sub_1FF044((uint64_t)v8);
}

uint64_t PlayMedia.HandleIntentStrategy.failureIntentOutputWithRF(app:intent:intentResponse:_:)( uint64_t a1, void *a2, void *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v6 = v5;
  uint64_t v41 = a4;
  uint64_t v42 = a2;
  uint64_t v43 = a3;
  uint64_t v9 = type metadata accessor for Logger(0LL);
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = __chkstk_darwin(v9);
  uint64_t v13 = (char *)&v38 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  static SiriEnvironmentWrapper.store()(v11);
  if (qword_283888 != -1) {
    swift_once(&qword_283888, sub_BFC5C);
  }
  uint64_t v14 = sub_6960(v9, (uint64_t)qword_2969C8);
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v13, v14, v9);
  uint64_t v15 = swift_retain_n(a1, 2LL);
  uint64_t v16 = (os_log_s *)Logger.logObject.getter(v15);
  os_log_type_t v17 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v16, v17))
  {
    uint64_t v18 = swift_slowAlloc(22LL, -1LL);
    uint64_t v39 = a5;
    uint64_t v19 = v18;
    uint64_t v38 = swift_slowAlloc(64LL, -1LL);
    uint64_t v44 = a1;
    uint64_t v45 = v38;
    *(_DWORD *)uint64_t v19 = 136315394;
    uint64_t v40 = v5;
    uint64_t v20 = type metadata accessor for App(0LL);
    uint64_t v21 = sub_10430( (unint64_t *)&qword_283AB0,  (uint64_t (*)(uint64_t))&type metadata accessor for App,  (uint64_t)&protocol conformance descriptor for App);
    uint64_t v22 = dispatch thunk of CustomStringConvertible.description.getter(v20, v21);
    unint64_t v24 = v23;
    uint64_t v44 = sub_6978(v22, v23, &v45);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v44, &v45);
    swift_bridgeObjectRelease(v24);
    uint64_t v25 = swift_release_n(a1, 2LL);
    *(_WORD *)(v19 + 1sub_6C3C(v0 + 2) = 2082;
    uint64_t v26 = static Insights.responseFramework.getter(v25);
    unint64_t v28 = v27;
    uint64_t v44 = sub_6978(v26, v27, &v45);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v44, &v45);
    unint64_t v29 = v28;
    uint64_t v6 = v40;
    swift_bridgeObjectRelease(v29);
    _os_log_impl( &dword_0,  v16,  v17,  "HandleIntentStrategy#failureIntentOutputWithRF response is being handled using Response Framework2.0. for app: %s Insights:%{public}s",  (uint8_t *)v19,  0x16u);
    uint64_t v30 = v38;
    swift_arrayDestroy(v38, 2LL, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v30, -1LL, -1LL);
    uint64_t v31 = v19;
    a5 = v39;
    swift_slowDealloc(v31, -1LL, -1LL);
  }

  else
  {
    swift_release_n(a1, 2LL);
  }

  (*(void (**)(char *, uint64_t))(v10 + 8))(v13, v9);
  uint64_t v32 = (void *)swift_allocObject(&unk_2760F0, 64LL, 7LL);
  void v32[2] = v6;
  v32[3] = a1;
  uint64_t v33 = v42;
  uint64_t v34 = v43;
  v32[4] = v42;
  void v32[5] = v34;
  v32[6] = v41;
  v32[7] = a5;
  swift_retain(a1);
  swift_retain(v6);
  id v35 = v33;
  id v36 = v34;
  swift_retain(a5);
  sub_1FDBC0(a1, v35, v36, (uint64_t)sub_1FE788, (uint64_t)v32);
  return swift_release(v32);
}

uint64_t sub_1FCEFC( uint64_t a1, uint64_t a2, uint64_t a3, void *a4, void *a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v27 = a8;
  uint64_t v28 = a1;
  uint64_t v29 = a6;
  uint64_t v32 = a9;
  uint64_t v15 = type metadata accessor for ResponseFactoryOutputContext(0LL);
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v17 = *(void *)(v16 + 64);
  __chkstk_darwin(v15);
  uint64_t v18 = (char *)&v27 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v19 = *(void *)(a2 + OBJC_IVAR____TtCO23AudioFlowDelegatePlugin9PlayMedia20HandleIntentStrategy_responseFactory + 24);
  uint64_t v31 = *(void *)(a2 + OBJC_IVAR____TtCO23AudioFlowDelegatePlugin9PlayMedia20HandleIntentStrategy_responseFactory + 32);
  uint64_t v30 = sub_6EA8( (void *)(a2 + OBJC_IVAR____TtCO23AudioFlowDelegatePlugin9PlayMedia20HandleIntentStrategy_responseFactory),  v19);
  sub_1EA0D0(a1, (uint64_t)v18);
  uint64_t v20 = *(unsigned __int8 *)(v16 + 80);
  uint64_t v21 = (v20 + 64) & ~v20;
  uint64_t v22 = (void *)swift_allocObject(v27, v21 + v17, v20 | 7);
  _OWORD v22[2] = a2;
  v22[3] = a3;
  uint64_t v23 = v29;
  v22[4] = a4;
  void v22[5] = v23;
  v22[6] = a7;
  v22[7] = a5;
  sub_1EA404((uint64_t)v18, (uint64_t)v22 + v21);
  swift_retain(a2);
  swift_retain(a3);
  id v24 = a4;
  swift_retain(a7);
  id v25 = a5;
  sub_1E60D4(a3, (uint64_t)v24, (uint64_t)v25, v28, v32, (uint64_t)v22, v19, v31);
  return swift_release(v22);
}

uint64_t sub_1FD050( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(uint64_t), uint64_t a6, void *a7, uint64_t a8)
{
  uint64_t v124 = a8;
  id v122 = a7;
  uint64_t v135 = a6;
  unint64_t v136 = a5;
  uint64_t v131 = a3;
  uint64_t v132 = a4;
  uint64_t v130 = a2;
  uint64_t v9 = sub_6C5C(&qword_2845A0);
  __chkstk_darwin(v9);
  id v133 = (char *)&v120 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v11 = type metadata accessor for Logger(0LL);
  uint64_t v137 = *(void *)(v11 - 8);
  uint64_t v12 = __chkstk_darwin(v11);
  uint64_t v128 = (char *)&v120 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v12);
  uint64_t v15 = (char *)&v120 - v14;
  uint64_t v16 = sub_6C5C((uint64_t *)&unk_286BA0);
  __chkstk_darwin(v16);
  uint64_t v123 = (uint64_t)&v120 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v18 = sub_6C5C((uint64_t *)&unk_286BD0);
  uint64_t v19 = __chkstk_darwin(v18);
  uint64_t v127 = (char *)&v120 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v19);
  uint64_t v125 = (char *)&v120 - v21;
  uint64_t v22 = sub_6C5C(&qword_2845A8);
  uint64_t v23 = __chkstk_darwin(v22);
  uint64_t v126 = (char *)&v120 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v23);
  uint64_t v26 = (char *)&v120 - v25;
  uint64_t v27 = (void *)type metadata accessor for AdditionalMetricsDescription.SourceFunction(0LL);
  uint64_t v28 = (char *)*(v27 - 1);
  __chkstk_darwin(v27);
  uint64_t v30 = (char *)&v120 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v31 = type metadata accessor for AdditionalMetricsDescription.ModuleName(0LL);
  uint64_t v32 = *(char **)(v31 - 8);
  __chkstk_darwin(v31);
  uint64_t v34 = (char *)&v120 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v134 = a1;
  sub_FF10(a1, (uint64_t)v141, (uint64_t *)&unk_286C60);
  if ((v144 & 1) != 0)
  {
    uint64_t v125 = v32;
    uint64_t v128 = v28;
    uint64_t v124 = v31;
    id v122 = v27;
    uint64_t v35 = v141[0];
    if (qword_283888 != -1) {
      swift_once(&qword_283888, sub_BFC5C);
    }
    uint64_t v36 = sub_6960(v11, (uint64_t)qword_2969C8);
    uint64_t v37 = v137;
    (*(void (**)(char *, uint64_t, uint64_t))(v137 + 16))(v15, v36, v11);
    swift_errorRetain(v35);
    uint64_t v38 = swift_errorRetain(v35);
    uint64_t v39 = (os_log_s *)Logger.logObject.getter(v38);
    os_log_type_t v40 = static os_log_type_t.error.getter();
    int v41 = v40;
    uint64_t v42 = v30;
    uint64_t v43 = v34;
    if (os_log_type_enabled(v39, v40))
    {
      uint64_t v44 = swift_slowAlloc(22LL, -1LL);
      int v121 = v41;
      uint64_t v45 = v44;
      uint64_t v46 = swift_slowAlloc(64LL, -1LL);
      uint64_t v140 = v35;
      v141[0] = v46;
      *(_DWORD *)uint64_t v45 = 136446466;
      uint64_t v120 = v45 + 4;
      swift_errorRetain(v35);
      uint64_t v47 = sub_6C5C(&qword_284010);
      uint64_t v129 = v11;
      uint64_t v48 = String.init<A>(describing:)(&v140, v47);
      uint64_t v49 = v35;
      unint64_t v51 = v50;
      uint64_t v140 = sub_6978(v48, v50, v141);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v140, v141);
      swift_bridgeObjectRelease(v51);
      swift_errorRelease(v49);
      uint64_t v52 = swift_errorRelease(v49);
      *(_WORD *)(v45 + 1sub_6C3C(v0 + 2) = 2082;
      uint64_t v53 = static Insights.responseFramework.getter(v52);
      unint64_t v55 = v54;
      uint64_t v140 = sub_6978(v53, v54, v141);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v140, v141);
      swift_bridgeObjectRelease(v55);
      _os_log_impl( &dword_0,  v39,  (os_log_type_t)v121,  "HandleIntentStrategy#failureIntentOutputWithRF failed with error: %{public}s, Insights:%{public}s",  (uint8_t *)v45,  0x16u);
      swift_arrayDestroy(v46, 2LL, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v46, -1LL, -1LL);
      swift_slowDealloc(v45, -1LL, -1LL);

      (*(void (**)(char *, uint64_t))(v137 + 8))(v15, v129);
    }

    else
    {
      swift_errorRelease(v35);
      swift_errorRelease(v35);

      (*(void (**)(char *, uint64_t))(v37 + 8))(v15, v11);
      uint64_t v49 = v35;
    }

    uint64_t v72 = v130;
    id v73 = v122;
    uint64_t v74 = v124;
    uint64_t v75 = v128;
    uint64_t v123 = v49;
    uint64_t v76 = v125;
    (*((void (**)(char *, void, uint64_t))v125 + 13))( v43,  enum case for AdditionalMetricsDescription.ModuleName.pmhis(_:),  v124);
    (*((void (**)(char *, void, id))v75 + 13))( v42,  enum case for AdditionalMetricsDescription.SourceFunction.failHandleResp(_:),  v73);
    swift_getErrorValue(v49, v139, v138);
    uint64_t v77 = Error.localizedDescription.getter(v138[1], v138[2]);
    uint64_t v79 = v78;
    uint64_t v137 = static AdditionalMetricsDescription.encodeInfo(module:source:statusReason:extraInfo:)( v43,  v42,  v77,  v78,  1LL,  0LL);
    uint64_t v81 = v80;
    __n128 v82 = swift_bridgeObjectRelease(v79);
    (*((void (**)(char *, id, __n128))v75 + 1))(v42, v73, v82);
    (*((void (**)(char *, uint64_t))v76 + 1))(v43, v74);
    uint64_t v83 = *(void *)(v72
                    + OBJC_IVAR____TtCO23AudioFlowDelegatePlugin9PlayMedia20HandleIntentStrategy_siriKitTaskLoggingProvider
                    + 24);
    uint64_t v84 = *(void *)(v72
                    + OBJC_IVAR____TtCO23AudioFlowDelegatePlugin9PlayMedia20HandleIntentStrategy_siriKitTaskLoggingProvider
                    + 32);
    sub_6EA8( (void *)(v72 + OBJC_IVAR____TtCO23AudioFlowDelegatePlugin9PlayMedia20HandleIntentStrategy_siriKitTaskLoggingProvider),  v83);
    uint64_t v85 = enum case for ActivityType.failed(_:);
    uint64_t v86 = type metadata accessor for ActivityType(0LL);
    uint64_t v87 = *(void *)(v86 - 8);
    uint64_t v88 = (uint64_t)v126;
    (*(void (**)(char *, uint64_t, uint64_t))(v87 + 104))(v126, v85, v86);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v87 + 56))(v88, 0LL, 1LL, v86);
    uint64_t v89 = type metadata accessor for TemplatingResult(0LL);
    uint64_t v90 = (uint64_t)v127;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v89 - 8) + 56LL))(v127, 1LL, 1LL, v89);
    uint64_t v91 = enum case for SiriKitReliabilityCodes.renderingError(_:);
    uint64_t v92 = type metadata accessor for SiriKitReliabilityCodes(0LL);
    uint64_t v93 = *(void *)(v92 - 8);
    uint64_t v94 = (uint64_t)v133;
    (*(void (**)(char *, uint64_t, uint64_t))(v93 + 104))(v133, v91, v92);
    uint64_t v95 = (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v93 + 56))(v94, 0LL, 1LL, v92);
    uint64_t v96 = v132;
    uint64_t v97 = INPlayMediaIntent.firstMediaItemType()(v95);
    dispatch thunk of SiriKitTaskLoggingProviding.submitMetric(app:intent:activityType:templateResult:statusReason:description:mediaItemType:)( v131,  v96,  v88,  v90,  v94,  v137,  v81,  v97,  0,  v83,  v84);
    swift_bridgeObjectRelease(v81);
    sub_1F6CC(v94, &qword_2845A0);
    sub_1F6CC(v90, (uint64_t *)&unk_286BD0);
    sub_1F6CC(v88, &qword_2845A8);
    v136(v134);
    return swift_errorRelease(v123);
  }

  else
  {
    uint64_t v129 = v11;
    sub_1F6CC((uint64_t)v141, (uint64_t *)&unk_286C60);
    (*((void (**)(char *, void, uint64_t))v32 + 13))( v34,  enum case for AdditionalMetricsDescription.ModuleName.pmhis(_:),  v31);
    (*((void (**)(char *, void, void *))v28 + 13))( v30,  enum case for AdditionalMetricsDescription.SourceFunction.failHandleResp(_:),  v27);
    v141[0] = (uint64_t)[v122 code];
    uint64_t v56 = dispatch thunk of CustomStringConvertible.description.getter( &type metadata for Int,  &protocol witness table for Int);
    uint64_t v58 = v57;
    uint64_t v127 = (char *)static AdditionalMetricsDescription.encodeInfo(module:source:statusReason:extraInfo:)( v34,  v30,  v56,  v57,  2LL,  0LL);
    uint64_t v60 = v59;
    __n128 v61 = swift_bridgeObjectRelease(v58);
    (*((void (**)(char *, void *, __n128))v28 + 1))(v30, v27, v61);
    (*((void (**)(char *, uint64_t))v32 + 1))(v34, v31);
    sub_157C4( v130 + OBJC_IVAR____TtCO23AudioFlowDelegatePlugin9PlayMedia20HandleIntentStrategy_siriKitTaskLoggingProvider,  (uint64_t)v141);
    uint64_t v63 = v142;
    uint64_t v62 = v143;
    sub_6EA8(v141, v142);
    uint64_t v64 = enum case for ActivityType.failed(_:);
    uint64_t v65 = type metadata accessor for ActivityType(0LL);
    uint64_t v66 = *(void *)(v65 - 8);
    (*(void (**)(char *, uint64_t, uint64_t))(v66 + 104))(v26, v64, v65);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v66 + 56))(v26, 0LL, 1LL, v65);
    uint64_t v67 = type metadata accessor for ResponseFactoryOutputContext(0LL);
    uint64_t v68 = v123;
    sub_FF10(v124 + *(int *)(v67 + 28), v123, (uint64_t *)&unk_286BA0);
    uint64_t v69 = sub_6C5C(&qword_289340);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v69 - 8) + 48LL))(v68, 1LL, v69) == 1)
    {
      sub_1F6CC(v68, (uint64_t *)&unk_286BA0);
      uint64_t v70 = type metadata accessor for TemplatingResult(0LL);
      uint64_t v71 = (uint64_t)v125;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v70 - 8) + 56LL))(v125, 1LL, 1LL, v70);
    }

    else
    {

      uint64_t v99 = type metadata accessor for TemplatingResult(0LL);
      uint64_t v100 = *(void *)(v99 - 8);
      uint64_t v71 = (uint64_t)v125;
      (*(void (**)(char *, uint64_t, uint64_t))(v100 + 32))(v125, v68, v99);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v100 + 56))(v71, 0LL, 1LL, v99);
    }

    uint64_t v101 = enum case for SiriKitReliabilityCodes.handleIntentFailure(_:);
    uint64_t v102 = type metadata accessor for SiriKitReliabilityCodes(0LL);
    uint64_t v103 = *(void *)(v102 - 8);
    uint64_t v104 = (uint64_t)v133;
    (*(void (**)(char *, uint64_t, uint64_t))(v103 + 104))(v133, v101, v102);
    uint64_t v105 = (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v103 + 56))(v104, 0LL, 1LL, v102);
    uint64_t v106 = v132;
    uint64_t v107 = INPlayMediaIntent.firstMediaItemType()(v105);
    dispatch thunk of SiriKitTaskLoggingProviding.submitMetric(app:intent:activityType:templateResult:statusReason:description:mediaItemType:)( v131,  v106,  v26,  v71,  v104,  v127,  v60,  v107,  0,  v63,  v62);
    swift_bridgeObjectRelease(v60);
    sub_1F6CC(v104, &qword_2845A0);
    sub_1F6CC(v71, (uint64_t *)&unk_286BD0);
    sub_1F6CC((uint64_t)v26, &qword_2845A8);
    sub_6C3C(v141);
    if (qword_283888 != -1) {
      swift_once(&qword_283888, sub_BFC5C);
    }
    uint64_t v108 = v129;
    uint64_t v109 = sub_6960(v129, (uint64_t)qword_2969C8);
    uint64_t v110 = v137;
    uint64_t v111 = v128;
    uint64_t v112 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v137 + 16))(v128, v109, v108);
    uint64_t v113 = (os_log_s *)Logger.logObject.getter(v112);
    os_log_type_t v114 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v113, v114))
    {
      uint64_t v115 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
      uint64_t v116 = swift_slowAlloc(32LL, -1LL);
      v141[0] = v116;
      *(_DWORD *)uint64_t v115 = 136446210;
      uint64_t v117 = static Insights.responseFramework.getter(v116);
      unint64_t v119 = v118;
      uint64_t v140 = sub_6978(v117, v118, v141);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v140, v141);
      swift_bridgeObjectRelease(v119);
      _os_log_impl( &dword_0,  v113,  v114,  "HandleIntentStrategy#failureIntentOutputWithRF completed successfully. Insights:%{public}s",  v115,  0xCu);
      swift_arrayDestroy(v116, 1LL, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v116, -1LL, -1LL);
      swift_slowDealloc(v115, -1LL, -1LL);
    }

    (*(void (**)(char *, uint64_t))(v110 + 8))(v111, v108);
    return ((uint64_t (*)(uint64_t))v136)(v134);
  }

uint64_t sub_1FDBC0(uint64_t a1, void *a2, void *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v47 = a4;
  uint64_t v9 = type metadata accessor for Logger(0LL);
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v43 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  if (qword_283888 != -1) {
    swift_once(&qword_283888, sub_BFC5C);
  }
  uint64_t v13 = sub_6960(v9, (uint64_t)qword_2969C8);
  uint64_t v14 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 16))(v12, v13, v9);
  uint64_t v15 = (os_log_s *)Logger.logObject.getter(v14);
  os_log_type_t v16 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v15, v16))
  {
    uint64_t v45 = a2;
    uint64_t v17 = swift_slowAlloc(12LL, -1LL);
    uint64_t v46 = a3;
    uint64_t v18 = (uint8_t *)v17;
    uint64_t v19 = swift_slowAlloc(32LL, -1LL);
    uint64_t v49 = v19;
    uint64_t v43 = a5;
    *(_DWORD *)uint64_t v18 = 136446210;
    uint64_t v20 = static Insights.responseFramework.getter(v19);
    uint64_t v44 = a1;
    unint64_t v22 = v21;
    uint64_t v48 = sub_6978(v20, v21, &v49);
    a2 = v45;
    a5 = v43;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v48, &v49);
    unint64_t v23 = v22;
    a1 = v44;
    swift_bridgeObjectRelease(v23);
    _os_log_impl( &dword_0,  v15,  v16,  "HandleIntentStrategy#failureIntentOutputContext failureIntentOutputContext...  Insights:%{public}s",  v18,  0xCu);
    swift_arrayDestroy(v19, 1LL, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v19, -1LL, -1LL);
    uint64_t v24 = v18;
    a3 = v46;
    swift_slowDealloc(v24, -1LL, -1LL);
  }

  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  uint64_t v25 = (int *)type metadata accessor for ResponseFactoryOutputContext(0LL);
  uint64_t v26 = swift_allocBox(v25);
  uint64_t v28 = v27;
  *uint64_t v27 = 0LL;
  uint64_t v29 = (char *)v27 + v25[5];
  uint64_t v30 = type metadata accessor for SnippetModelResponse(0LL);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 56LL))(v29, 1LL, 1LL, v30);
  *(void *)((char *)v28 + v25[6]) = 0LL;
  uint64_t v31 = (char *)v28 + v25[7];
  uint64_t v32 = sub_6C5C(&qword_289340);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v32 - 8) + 56LL))(v31, 1LL, 1LL, v32);
  uint64_t v33 = (char *)v28 + v25[8];
  uint64_t v34 = type metadata accessor for NLContextUpdate(0LL);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v34 - 8) + 56LL))(v33, 1LL, 1LL, v34);
  *(void *)((char *)v28 + v25[9]) = 0LL;
  *((_BYTE *)v28 + v25[10]) = 0;
  uint64_t v35 = (char *)v28 + v25[11];
  uint64_t v36 = type metadata accessor for ResponseFactoryOutputContext.AppIntentOutputContext(0LL);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v36 - 8) + 56LL))(v35, 1LL, 1LL, v36);
  uint64_t v37 = sub_6C5C(&qword_2844D0);
  uint64_t inited = swift_initStackObject(v37, v50);
  *(_OWORD *)(inited + swift_weakDestroy(v0 + 16) = xmmword_214510;
  strcpy((char *)(inited + 32), "MetricsError");
  *(_BYTE *)(inited + 45) = 0;
  *(_WORD *)(inited + 46) = -5120;
  *(void *)(inited + 7sub_6C3C(v0 + 2) = &type metadata for String;
  *(void *)(inited + 4sub_6C3C(v0 + 8) = 0xD000000000000022LL;
  *(void *)(inited + 56) = 0x8000000000224150LL;
  unint64_t v39 = sub_74D54(inited);
  os_log_type_t v40 = (void *)swift_allocObject(&unk_2762F8, 40LL, 7LL);
  uint64_t v41 = v47;
  void v40[2] = v26;
  v40[3] = v41;
  v40[4] = a5;
  swift_retain(v26);
  swift_retain(a5);
  sub_155880(v39, a1, a2, a3, (uint64_t)sub_1FF59C, (uint64_t)v40);
  swift_release(v26);
  swift_bridgeObjectRelease(v39);
  return swift_release(v40);
}

uint64_t sub_1FDF8C(uint64_t a1, uint64_t a2, void (*a3)(uint64_t), uint64_t a4)
{
  uint64_t v54 = a4;
  unint64_t v55 = a3;
  uint64_t v6 = type metadata accessor for ResponseFactoryOutputContext(0LL);
  __chkstk_darwin(v6);
  uint64_t v53 = (char *)&v51 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v8 = type metadata accessor for Logger(0LL);
  uint64_t v57 = *(void *)(v8 - 8);
  uint64_t v58 = v8;
  __chkstk_darwin(v8);
  uint64_t v56 = (char *)&v51 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v10 = sub_6C5C((uint64_t *)&unk_286BA0);
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)&v51 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v13 = sub_6C5C(&qword_289340);
  uint64_t v14 = *(void *)(v13 - 8);
  __chkstk_darwin(v13);
  os_log_type_t v16 = (char *)&v51 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v17 = sub_6C5C((uint64_t *)&unk_286BB0);
  __chkstk_darwin(v17);
  uint64_t v19 = (uint64_t *)((char *)&v51 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  uint64_t v52 = a2;
  uint64_t v20 = swift_projectBox(a2);
  sub_FF10(a1, (uint64_t)v19, (uint64_t *)&unk_286BB0);
  if (swift_getEnumCaseMultiPayload(v19, v17) == 1)
  {
    uint64_t v21 = *v19;
    swift_beginAccess(v20, v62, 1LL, 0LL);
    uint64_t v22 = *(int *)(v6 + 24);
    uint64_t v23 = *(void *)(v20 + v22);
    *(void *)(v20 + v2sub_6C3C(v0 + 2) = v21;
    swift_errorRelease(v23);
  }

  else
  {
    uint64_t v24 = *(int *)(v13 + 48);
    uint64_t v25 = type metadata accessor for TemplatingResult(0LL);
    uint64_t v26 = *(void (**)(char *, uint64_t *, uint64_t))(*(void *)(v25 - 8) + 32LL);
    v26(v16, v19, v25);
    uint64_t v27 = *(uint64_t *)((char *)v19 + v24);
    *(void *)&v16[v24] = v27;
    uint64_t v28 = *(int *)(v13 + 48);
    v26(v12, (uint64_t *)v16, v25);
    *(void *)&v12[v28] = v27;
    (*(void (**)(char *, void, uint64_t, uint64_t))(v14 + 56))(v12, 0LL, 1LL, v13);
    swift_beginAccess(v20, v62, 1LL, 0LL);
    sub_DD950((uint64_t)v12, v20 + *(int *)(v6 + 28), (uint64_t *)&unk_286BA0);
  }

  uint64_t v29 = v6;
  uint64_t v31 = v57;
  uint64_t v30 = v58;
  uint64_t v32 = v56;
  uint64_t v33 = v52;
  if (qword_283888 != -1) {
    swift_once(&qword_283888, sub_BFC5C);
  }
  uint64_t v34 = sub_6960(v30, (uint64_t)qword_2969C8);
  (*(void (**)(char *, uint64_t, uint64_t))(v31 + 16))(v32, v34, v30);
  uint64_t v35 = swift_retain_n(v33, 2LL);
  uint64_t v36 = (os_log_s *)Logger.logObject.getter(v35);
  os_log_type_t v37 = static os_log_type_t.debug.getter();
  BOOL v38 = os_log_type_enabled(v36, v37);
  uint64_t v39 = (uint64_t)v53;
  if (v38)
  {
    uint64_t v40 = v29;
    uint64_t v41 = swift_slowAlloc(22LL, -1LL);
    uint64_t v42 = swift_slowAlloc(64LL, -1LL);
    v61[0] = v42;
    *(_DWORD *)uint64_t v41 = 136315394;
    swift_beginAccess(v20, v60, 0LL, 0LL);
    sub_1EA0D0(v20, v39);
    uint64_t v43 = String.init<A>(describing:)(v39, v40);
    unint64_t v45 = v44;
    uint64_t v59 = sub_6978(v43, v44, v61);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v59, v60);
    swift_release_n(v33, 2LL);
    swift_bridgeObjectRelease(v45);
    *(_WORD *)(v41 + 1sub_6C3C(v0 + 2) = 2082;
    uint64_t v47 = static Insights.responseFramework.getter(v46);
    unint64_t v49 = v48;
    uint64_t v59 = sub_6978(v47, v48, v61);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v59, v60);
    swift_bridgeObjectRelease(v49);
    _os_log_impl( &dword_0,  v36,  v37,  "HandleIntentStrategy#failureIntentOutputContext outputContext: %s Insights:%{public}s",  (uint8_t *)v41,  0x16u);
    swift_arrayDestroy(v42, 2LL, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v42, -1LL, -1LL);
    swift_slowDealloc(v41, -1LL, -1LL);

    (*(void (**)(char *, uint64_t))(v57 + 8))(v56, v58);
  }

  else
  {

    swift_release_n(v33, 2LL);
    (*(void (**)(char *, uint64_t))(v31 + 8))(v32, v30);
  }

  swift_beginAccess(v20, v61, 0LL, 0LL);
  sub_1EA0D0(v20, v39);
  v55(v39);
  return sub_1FF044(v39);
}

uint64_t PlayMedia.HandleIntentStrategy.deinit()
{
  sub_6C3C((void *)(v0
                    + OBJC_IVAR____TtCO23AudioFlowDelegatePlugin9PlayMedia20HandleIntentStrategy_siriKitTaskLoggingProvider));
  sub_6C3C((void *)(v0
                    + OBJC_IVAR____TtCO23AudioFlowDelegatePlugin9PlayMedia20HandleIntentStrategy_snippetModelProvider));
  sub_6C3C((void *)(v0 + OBJC_IVAR____TtCO23AudioFlowDelegatePlugin9PlayMedia20HandleIntentStrategy_responseFactory));
  sub_6C3C((void *)(v0 + OBJC_IVAR____TtCO23AudioFlowDelegatePlugin9PlayMedia20HandleIntentStrategy_appIntentInvoker));
  swift_release(*(void *)(v0
                          + OBJC_IVAR____TtCO23AudioFlowDelegatePlugin9PlayMedia20HandleIntentStrategy_playMediaViewProvider));
  swift_release(*(void *)(v0
                          + OBJC_IVAR____TtCO23AudioFlowDelegatePlugin9PlayMedia20HandleIntentStrategy_playMediaDialogProvider));
  sub_6C3C((void *)(v0 + OBJC_IVAR____TtCO23AudioFlowDelegatePlugin9PlayMedia20HandleIntentStrategy_deviceProvider));
  sub_6C3C((void *)(v0
                    + OBJC_IVAR____TtCO23AudioFlowDelegatePlugin9PlayMedia20HandleIntentStrategy_mediaRemoteAPIProvider));
  sub_6C3C((void *)(v0 + OBJC_IVAR____TtCO23AudioFlowDelegatePlugin9PlayMedia20HandleIntentStrategy_executorProvider));
  sub_6C3C((void *)(v0 + OBJC_IVAR____TtCO23AudioFlowDelegatePlugin9PlayMedia20HandleIntentStrategy_playbackController));
  return v0;
}

uint64_t PlayMedia.HandleIntentStrategy.__deallocating_deinit()
{
  return swift_deallocClassInstance( v0,  *(unsigned int *)(*(void *)v0 + 48LL),  *(unsigned __int16 *)(*(void *)v0 + 52LL));
}

uint64_t sub_1FE524(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v13 = type metadata accessor for PlayMedia.HandleIntentStrategy(0LL);
  return HandleIntentFlowStrategy.makePromptForDeviceUnlock(app:intent:intentResponse:_:)(a1, a2, a3, a4, a5, v13, a7);
}

uint64_t sub_1FE590(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v13 = type metadata accessor for PlayMedia.HandleIntentStrategy(0LL);
  return HandleIntentFlowStrategy.makeHandoffForAuthenticationResponse(app:intent:intentResponse:_:)( a1,  a2,  a3,  a4,  a5,  v13,  a7);
}

uint64_t sub_1FE5FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v13 = type metadata accessor for PlayMedia.HandleIntentStrategy(0LL);
  return HandleIntentFlowStrategy.makeContinueInAppResponse(app:intent:intentResponse:_:)(a1, a2, a3, a4, a5, v13, a7);
}

uint64_t sub_1FE668(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v13 = type metadata accessor for PlayMedia.HandleIntentStrategy(0LL);
  return HandleIntentFlowStrategy.makeInProgressResponse(app:intent:intentResponse:_:)(a1, a2, a3, a4, a5, v13, a7);
}

uint64_t sub_1FE6D4(uint64_t a1, void *a2, void *a3, uint64_t a4, uint64_t a5)
{
  return PlayMedia.HandleIntentStrategy.makeFailureHandlingIntentResponse(app:intent:intentResponse:_:)( a1,  a2,  a3,  a4,  a5);
}

uint64_t sub_1FE6F4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = type metadata accessor for PlayMedia.HandleIntentStrategy(0LL);
  return IntentExtensionCommunicating.shouldIntentBeExecutedOnRemoteCompanion(intent:)(a1, v5, a3);
}

uint64_t sub_1FE734()
{
  return sub_1F6280(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_1FE73C()
{
  return swift_deallocObject(v0, 32LL, 7LL);
}

uint64_t sub_1FE768()
{
  return sub_1F6044(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_1FE778(uint64_t a1)
{
  return sub_7F734(a1, (uint64_t (*)(uint64_t, void, void, void, void, void, void))sub_1F8C54);
}

uint64_t sub_1FE788(uint64_t a1)
{
  return sub_1FFD24(a1, (uint64_t)&unk_276320, (uint64_t)sub_1FF5AC);
}

uint64_t sub_1FE79C()
{
  return sub_10430( &qword_28E340,  type metadata accessor for PlayMedia.HandleIntentStrategy,  (uint64_t)&protocol conformance descriptor for PlayMedia.HandleIntentStrategy);
}

uint64_t sub_1FE7C8()
{
  return type metadata accessor for PlayMedia.HandleIntentStrategy(0LL);
}

void sub_1FE7D0(uint64_t a1)
{
  v4[0] = (char *)&value witness table for Builtin.NativeObject + 64;
  v4[1] = "(";
  sub_1FE870(319LL);
  if (v3 <= 0x3F)
  {
    void v4[2] = *(void *)(v2 - 8) + 64LL;
    uint64_t v4[3] = "(";
    v4[4] = "(";
    void v4[5] = "(";
    void v4[6] = "(";
    v4[7] = (char *)&value witness table for Builtin.NativeObject + 64;
    v4[8] = (char *)&value witness table for Builtin.NativeObject + 64;
    v4[9] = "(";
    v4[10] = "(";
    v4[11] = "(";
    v4[12] = "(";
    swift_updateClassMetadata2(a1, 256LL, 13LL, v4, a1 + 80);
  }

void sub_1FE870(uint64_t a1)
{
  if (!qword_28E380)
  {
    uint64_t v2 = type metadata accessor for AppSelectionReport(255LL);
    unint64_t v3 = type metadata accessor for Optional(a1, v2);
    if (!v4) {
      atomic_store(v3, (unint64_t *)&qword_28E380);
    }
  }

uint64_t sub_1FE8C4( uint64_t a1, void *a2, void *a3, void *a4, uint64_t a5, uint64_t a6, void *a7, void *a8, uint64_t a9, uint64_t a10)
{
  uint64_t v112 = a4;
  uint64_t v99 = a3;
  uint64_t v105 = a1;
  uint64_t v106 = a2;
  uint64_t v14 = (int *)type metadata accessor for ResponseFactoryOutputContext(0LL);
  uint64_t v102 = *((void *)v14 - 1);
  uint64_t v15 = __chkstk_darwin(v14);
  uint64_t v103 = v16;
  uint64_t v104 = (uint64_t)&v93 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v15);
  uint64_t v109 = (uint64_t)&v93 - v17;
  uint64_t v18 = type metadata accessor for Logger(0LL);
  uint64_t v19 = *(void *)(v18 - 8);
  uint64_t v20 = __chkstk_darwin(v18);
  uint64_t v97 = (char *)&v93 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v20);
  uint64_t v23 = (char *)&v93 - v22;
  uint64_t v24 = (void *)swift_allocObject(&unk_276118, 64LL, 7LL);
  _OWORD v24[2] = a5;
  void v24[3] = a6;
  v24[4] = a7;
  void v24[5] = a8;
  uint64_t v107 = a9;
  uint64_t v108 = a5;
  v24[6] = a9;
  v24[7] = a10;
  uint64_t v113 = v24;
  uint64_t v25 = qword_283888;
  swift_retain(a5);
  uint64_t v111 = a6;
  swift_retain(a6);
  id v100 = a7;
  id v101 = a8;
  uint64_t v110 = a10;
  swift_retain(a10);
  if (v25 != -1) {
    swift_once(&qword_283888, sub_BFC5C);
  }
  uint64_t v26 = sub_6960(v18, (uint64_t)qword_2969C8);
  uint64_t v96 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v19 + 16);
  uint64_t v27 = v96(v23, v26, v18);
  uint64_t v28 = (os_log_s *)Logger.logObject.getter(v27);
  os_log_type_t v29 = static os_log_type_t.debug.getter();
  BOOL v30 = os_log_type_enabled(v28, v29);
  uint64_t v31 = v19;
  uint64_t v98 = v18;
  if (v30)
  {
    uint64_t v32 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
    uint64_t v33 = swift_slowAlloc(32LL, -1LL);
    uint64_t v94 = v31;
    uint64_t v34 = v33;
    v115[0] = v33;
    uint64_t v95 = v26;
    uint64_t v35 = v18;
    *(_DWORD *)uint64_t v32 = 136446210;
    uint64_t v36 = static Insights.responseFramework.getter(v33);
    unint64_t v38 = v37;
    uint64_t v114 = sub_6978(v36, v37, v115);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v114, v115);
    swift_bridgeObjectRelease(v38);
    _os_log_impl( &dword_0,  v28,  v29,  "HandleIntentStrategy#preHandledIntentOutputContext... Insights:%{public}s",  v32,  0xCu);
    swift_arrayDestroy(v34, 1LL, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v34, -1LL, -1LL);
    swift_slowDealloc(v32, -1LL, -1LL);

    uint64_t v39 = *(void (**)(char *, uint64_t))(v94 + 8);
    uint64_t v40 = v35;
    uint64_t v26 = v95;
    v39(v23, v40);
  }

  else
  {

    uint64_t v39 = *(void (**)(char *, uint64_t))(v19 + 8);
    v39(v23, v18);
  }

  uint64_t v41 = swift_allocBox(v14);
  uint64_t v43 = (uint64_t)v42;
  *uint64_t v42 = 0LL;
  unint64_t v44 = (char *)v42 + v14[5];
  uint64_t v45 = type metadata accessor for SnippetModelResponse(0LL);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v45 - 8) + 56LL))(v44, 1LL, 1LL, v45);
  *(void *)(v43 + v14[6]) = 0LL;
  uint64_t v46 = v43 + v14[7];
  uint64_t v47 = sub_6C5C(&qword_289340);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v47 - 8) + 56LL))(v46, 1LL, 1LL, v47);
  uint64_t v48 = v43 + v14[8];
  uint64_t v49 = type metadata accessor for NLContextUpdate(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v49 - 8) + 56LL))(v48, 1LL, 1LL, v49);
  *(void *)(v43 + v14[9]) = 0LL;
  *(_BYTE *)(v43 + v14[10]) = 0;
  uint64_t v50 = v43 + v14[11];
  uint64_t v51 = type metadata accessor for ResponseFactoryOutputContext.AppIntentOutputContext(0LL);
  uint64_t v52 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v51 - 8) + 56LL))( v50,  1LL,  1LL,  v51);
  char v53 = static SiriEnvironmentWrapper.isSystemApertureEnabled()(v52);
  uint64_t v54 = v112[6];
  uint64_t v55 = v112[7];
  sub_6EA8(v112 + 3, v54);
  if ((dispatch thunk of FeatureFlagProviding.isSonicResponseOnlyEnabled.getter(v54, v55) & 1) != 0)
  {
    uint64_t v112 = (void *)v41;
    uint64_t v56 = v97;
    uint64_t v57 = v26;
    uint64_t v58 = v98;
    uint64_t v59 = v96(v97, v57, v98);
    uint64_t v60 = (os_log_s *)Logger.logObject.getter(v59);
    os_log_type_t v61 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v60, v61))
    {
      uint64_t v62 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)uint64_t v62 = 0;
      _os_log_impl( &dword_0,  v60,  v61,  "PlayMediaHandleIntentStrategy#preHandledIntentOutputContext sonic response only, skipping output context generation",  v62,  2u);
      swift_slowDealloc(v62, -1LL, -1LL);
    }

    v39(v56, v58);
    uint64_t v63 = v109;
    sub_1EA0D0(v43, v109);
    uint64_t v64 = v108;
    uint64_t v65 = *(void *)(v108
                    + OBJC_IVAR____TtCO23AudioFlowDelegatePlugin9PlayMedia20HandleIntentStrategy_responseFactory
                    + 24);
    uint64_t v66 = *(void *)(v108
                    + OBJC_IVAR____TtCO23AudioFlowDelegatePlugin9PlayMedia20HandleIntentStrategy_responseFactory
                    + 32);
    sub_6EA8( (void *)(v108 + OBJC_IVAR____TtCO23AudioFlowDelegatePlugin9PlayMedia20HandleIntentStrategy_responseFactory),  v65);
    uint64_t v67 = v104;
    sub_1EA0D0(v63, v104);
    uint64_t v68 = *(unsigned __int8 *)(v102 + 80);
    uint64_t v69 = (v68 + 56) & ~v68;
    uint64_t v70 = (void *)swift_allocObject(&unk_2761B8, v69 + v103, v68 | 7);
    uint64_t v71 = v111;
    v70[2] = v64;
    v70[3] = v71;
    uint64_t v72 = v100;
    uint64_t v73 = v107;
    v70[4] = v100;
    v70[5] = v73;
    uint64_t v74 = (uint64_t)v70 + v69;
    uint64_t v75 = v110;
    v70[6] = v110;
    sub_1EA404(v67, v74);
    swift_retain(v64);
    swift_retain(v71);
    id v76 = v72;
    swift_retain(v75);
    sub_1E60D4(v71, (uint64_t)v76, (uint64_t)v101, v63, (uint64_t)sub_1FF040, (uint64_t)v70, v65, v66);
    swift_release(v70);
    sub_1FF044(v63);
    uint64_t v77 = v112;
  }

  else
  {
    if (qword_2839A8 != -1) {
      swift_once(&qword_2839A8, sub_1F5F40);
    }
    uint64_t v78 = qword_28E310;
    uint64_t v79 = sub_6C5C(&qword_286B90);
    uint64_t v80 = swift_allocObject(v79, 64LL, 7LL);
    *(_OWORD *)(v80 + swift_weakDestroy(v0 + 16) = xmmword_2160E0;
    uint64_t v81 = swift_allocObject(&unk_276140, 64LL, 7LL);
    __n128 v82 = v112;
    uint64_t v84 = v105;
    uint64_t v83 = v106;
    *(void *)(v81 + swift_weakDestroy(v0 + 16) = v112;
    *(void *)(v81 + 24) = v84;
    uint64_t v85 = v99;
    *(void *)(v81 + 3sub_6C3C(v0 + 2) = v83;
    *(void *)(v81 + 40) = v85;
    *(_BYTE *)(v81 + 4sub_6C3C(v0 + 8) = v53 & 1;
    *(void *)(v81 + 56) = v41;
    *(void *)(v80 + 3sub_6C3C(v0 + 2) = sub_1FEFE0;
    *(void *)(v80 + 40) = v81;
    uint64_t v86 = (void *)swift_allocObject(&unk_276168, 56LL, 7LL);
    v86[2] = v82;
    __int128 v86[3] = v84;
    v86[4] = v83;
    v86[5] = v85;
    v86[6] = v41;
    *(void *)(v80 + 4sub_6C3C(v0 + 8) = sub_1FEFF0;
    *(void *)(v80 + 56) = v86;
    uint64_t v77 = (void *)swift_allocObject(&unk_276190, 48LL, 7LL);
    v77[2] = v41;
    uint64_t v77[3] = v82;
    uint64_t v87 = v113;
    v77[4] = sub_1FEFD0;
    _OWORD v77[5] = v87;
    swift_retain_n(v41, 3LL);
    swift_retain_n(v82, 3LL);
    swift_retain_n(v84, 2LL);
    id v88 = v83;
    id v89 = v85;
    id v90 = v88;
    id v91 = v89;
    swift_retain(v87);
    static Tasks.parallelize(queue:tasks:completion:)(v78, v80, sub_1FF030, v77);
    swift_bridgeObjectRelease(v80);
    swift_release(v41);
  }

  swift_release(v113);
  return swift_release(v77);
}

uint64_t sub_1FEFD0(uint64_t a1)
{
  return sub_7F734(a1, (uint64_t (*)(uint64_t, void, void, void, void, void, void))sub_1F96B8);
}

uint64_t sub_1FEFE0(uint64_t a1)
{
  return sub_1FFDAC(a1, (uint64_t (*)(uint64_t, void, void, void, void, void, void))sub_1FA620);
}

uint64_t sub_1FEFF0(uint64_t a1)
{
  return sub_33EB8(a1, (uint64_t (*)(uint64_t, void, void, void, void, void))sub_1FA720);
}

uint64_t sub_1FEFFC()
{
  return swift_deallocObject(v0, 48LL, 7LL);
}

uint64_t sub_1FF030()
{
  return sub_1FA7DC( *(void *)(v0 + 16),  *(void *)(v0 + 24),  *(void (**)(char *))(v0 + 32),  *(void *)(v0 + 40));
}

uint64_t sub_1FF044(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for ResponseFactoryOutputContext(0LL);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8LL))(a1, v2);
  return a1;
}

uint64_t sub_1FF080()
{
  return swift_deallocObject(v0, 32LL, 7LL);
}

uint64_t sub_1FF0A8(uint64_t a1)
{
  return sub_1FBD04( a1,  *(uint64_t (**)(uint64_t))(v1 + 16),  *(void *)(v1 + 24),  *(void *)(v1 + 32),  "HandleIntentStrategy#preHandledIntentOutputContext snippetResult: %s Insights:%{public}s");
}

uint64_t sub_1FF0D0()
{
  uint64_t v1 = (int *)type metadata accessor for ResponseFactoryOutputContext(0LL);
  uint64_t v2 = *((void *)v1 - 1);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 56) & ~v3;
  uint64_t v5 = *(void *)(v2 + 64);
  swift_release(*(void *)(v0 + 16));
  swift_release(*(void *)(v0 + 24));

  swift_release(*(void *)(v0 + 48));
  uint64_t v6 = v0 + v4;
  swift_errorRelease(*(void *)(v0 + v4));
  uint64_t v7 = v0 + v4 + v1[5];
  uint64_t v8 = (int *)type metadata accessor for SnippetModelResponse(0LL);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, int *))(*((void *)v8 - 1) + 48LL))(v7, 1LL, v8))
  {
    uint64_t v25 = v5;
    uint64_t v9 = type metadata accessor for SiriAudioSnippets(0LL);
    uint64_t v10 = *(void *)(v9 - 8);
    uint64_t v11 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48);
    if (!v11(v7, 1LL, v9)) {
      (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v7, v9);
    }
    uint64_t v12 = v7 + v8[5];
    if (!v11(v12, 1LL, v9)) {
      (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v12, v9);
    }
    swift_bridgeObjectRelease(*(void *)(v7 + v8[6] + 8));
    swift_bridgeObjectRelease(*(void *)(v7 + v8[7]));
    uint64_t v5 = v25;
    uint64_t v4 = (v3 + 56) & ~v3;
  }

  swift_errorRelease(*(void *)(v6 + v1[6]));
  uint64_t v13 = v6 + v1[7];
  uint64_t v14 = sub_6C5C(&qword_289340);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 48LL))(v13, 1LL, v14))
  {
    uint64_t v15 = type metadata accessor for TemplatingResult(0LL);
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v15 - 8) + 8LL))(v13, v15);
  }

  uint64_t v16 = v6 + v1[8];
  uint64_t v17 = type metadata accessor for NLContextUpdate(0LL);
  uint64_t v18 = *(void *)(v17 - 8);
  swift_bridgeObjectRelease(*(void *)(v6 + v1[9]));
  uint64_t v19 = (void *)(v6 + v1[11]);
  uint64_t v20 = type metadata accessor for ResponseFactoryOutputContext.AppIntentOutputContext(0LL);
  if (!(*(unsigned int (**)(void *, uint64_t, uint64_t))(*(void *)(v20 - 8) + 48LL))(v19, 1LL, v20))
  {
    if (v19[3]) {
      sub_6C3C(v19);
    }
    uint64_t v21 = (char *)v19 + *(int *)(v20 + 20);
    uint64_t v22 = type metadata accessor for AppIntentPerformOptions(0LL);
    uint64_t v23 = *(void *)(v22 - 8);
  }

  return swift_deallocObject(v0, v4 + v5, v3 | 7);
}

uint64_t sub_1FF354(uint64_t a1)
{
  uint64_t v3 = *(unsigned __int8 *)(*(void *)(type metadata accessor for ResponseFactoryOutputContext(0LL) - 8) + 80LL);
  return sub_1F9800( a1,  *(void **)(v1 + 16),  *(void *)(v1 + 24),  *(void *)(v1 + 32),  *(void (**)(uint64_t))(v1 + 40),  *(void *)(v1 + 48),  v1 + ((v3 + 56) & ~v3));
}

uint64_t sub_1FF39C()
{
  swift_release(*(void *)(v0 + 24));
  return swift_deallocObject(v0, 32LL, 7LL);
}

uint64_t sub_1FF3C8(uint64_t a1)
{
  uint64_t v4 = swift_task_alloc(dword_28E4DC);
  __int128 v5 = *(_OWORD *)(v1 + 16);
  *(void *)(v2 + swift_weakDestroy(v0 + 16) = v4;
  *(void *)uint64_t v4 = v2;
  *(void *)(v4 + sub_6C3C(v0 + 8) = sub_11C64;
  *(_OWORD *)(v4 + 24) = v5;
  *(void *)(v4 + swift_weakDestroy(v0 + 16) = a1;
  return swift_task_switch(sub_1F815C, 0LL, 0LL);
}

uint64_t sub_1FF430(uint64_t a1)
{
  return sub_1F824C(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_1FF438()
{
  uint64_t v1 = sub_6C5C(&qword_28E4E8);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 24) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  swift_release(*(void *)(v0 + 16));
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return swift_deallocObject(v0, v5, v6);
}

double sub_1FF4B0(uint64_t a1)
{
  uint64_t v3 = *(unsigned __int8 *)(*(void *)(sub_6C5C(&qword_28E4E8) - 8) + 80LL);
  return sub_1F83B4(a1, *(void *)(v1 + 16), v1 + ((v3 + 24) & ~v3));
}

uint64_t sub_1FF4F4()
{
  uint64_t v1 = sub_6C5C(&qword_28E4E8);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return swift_deallocObject(v0, v5, v6);
}

uint64_t sub_1FF558(uint64_t a1)
{
  uint64_t v3 = *(unsigned __int8 *)(*(void *)(sub_6C5C(&qword_28E4E8) - 8) + 80LL);
  return sub_1F873C(a1, v1 + ((v3 + 16) & ~v3));
}

uint64_t sub_1FF59C(uint64_t a1)
{
  return sub_1FDF8C(a1, *(void *)(v1 + 16), *(void (**)(uint64_t))(v1 + 24), *(void *)(v1 + 32));
}

uint64_t sub_1FF5AC(uint64_t a1)
{
  return sub_200160( a1,  (uint64_t (*)(uint64_t, void, void, void, void, void, void, char *))sub_1FD050);
}

uint64_t sub_1FF5B8( uint64_t a1, void *a2, void *a3, void *a4, uint64_t a5, uint64_t a6, void *a7, void *a8, uint64_t a9, uint64_t a10)
{
  uint64_t v108 = a4;
  id v100 = a2;
  id v101 = a3;
  uint64_t v105 = a1;
  uint64_t v14 = (int *)type metadata accessor for ResponseFactoryOutputContext(0LL);
  uint64_t v96 = *((void *)v14 - 1);
  uint64_t v15 = __chkstk_darwin(v14);
  uint64_t v97 = v16;
  uint64_t v98 = (uint64_t)&v90 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v15);
  uint64_t v103 = (uint64_t)&v90 - v17;
  uint64_t v18 = type metadata accessor for Logger(0LL);
  uint64_t v19 = *(void *)(v18 - 8);
  uint64_t v20 = __chkstk_darwin(v18);
  uint64_t v93 = (char *)&v90 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v20);
  uint64_t v23 = (char *)&v90 - v22;
  uint64_t v24 = (void *)swift_allocObject(&unk_276348, 64LL, 7LL);
  _OWORD v24[2] = a5;
  void v24[3] = a6;
  v24[4] = a7;
  void v24[5] = a8;
  uint64_t v99 = a9;
  v24[6] = a9;
  v24[7] = a10;
  uint64_t v107 = v24;
  uint64_t v25 = qword_283888;
  uint64_t v102 = a5;
  swift_retain(a5);
  uint64_t v106 = a6;
  swift_retain(a6);
  id v95 = a7;
  id v94 = a8;
  uint64_t v104 = a10;
  swift_retain(a10);
  if (v25 != -1) {
    swift_once(&qword_283888, sub_BFC5C);
  }
  uint64_t v26 = sub_6960(v18, (uint64_t)qword_2969C8);
  uint64_t v92 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v19 + 16);
  uint64_t v27 = v92(v23, v26, v18);
  uint64_t v28 = (os_log_s *)Logger.logObject.getter(v27);
  os_log_type_t v29 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v28, v29))
  {
    uint64_t v90 = v19;
    BOOL v30 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
    uint64_t v31 = swift_slowAlloc(32LL, -1LL);
    v110[0] = v31;
    uint64_t v91 = v26;
    *(_DWORD *)BOOL v30 = 136446210;
    uint64_t v32 = static Insights.responseFramework.getter(v31);
    unint64_t v34 = v33;
    uint64_t v109 = sub_6978(v32, v33, v110);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v109, v110);
    swift_bridgeObjectRelease(v34);
    _os_log_impl( &dword_0,  v28,  v29,  "HandleIntentStrategy#handledIntentOutputContext... Insights:%{public}s",  v30,  0xCu);
    swift_arrayDestroy(v31, 1LL, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v31, -1LL, -1LL);
    swift_slowDealloc(v30, -1LL, -1LL);

    uint64_t v35 = *(void (**)(char *, uint64_t))(v90 + 8);
    uint64_t v36 = v18;
    uint64_t v26 = v91;
  }

  else
  {

    uint64_t v35 = *(void (**)(char *, uint64_t))(v19 + 8);
    uint64_t v36 = v18;
  }

  v35(v23, v18);
  uint64_t v37 = swift_allocBox(v14);
  uint64_t v39 = (uint64_t)v38;
  *unint64_t v38 = 0LL;
  uint64_t v40 = (char *)v38 + v14[5];
  uint64_t v41 = type metadata accessor for SnippetModelResponse(0LL);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v41 - 8) + 56LL))(v40, 1LL, 1LL, v41);
  *(void *)(v39 + v14[6]) = 0LL;
  uint64_t v42 = v39 + v14[7];
  uint64_t v43 = sub_6C5C(&qword_289340);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v43 - 8) + 56LL))(v42, 1LL, 1LL, v43);
  uint64_t v44 = v39 + v14[8];
  uint64_t v45 = type metadata accessor for NLContextUpdate(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v45 - 8) + 56LL))(v44, 1LL, 1LL, v45);
  *(void *)(v39 + v14[9]) = 0LL;
  *(_BYTE *)(v39 + v14[10]) = 0;
  uint64_t v46 = v39 + v14[11];
  uint64_t v47 = type metadata accessor for ResponseFactoryOutputContext.AppIntentOutputContext(0LL);
  uint64_t v48 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v47 - 8) + 56LL))( v46,  1LL,  1LL,  v47);
  char v49 = static SiriEnvironmentWrapper.isSystemApertureEnabled()(v48);
  uint64_t v50 = v108[6];
  uint64_t v51 = v108[7];
  sub_6EA8(v108 + 3, v50);
  if ((dispatch thunk of FeatureFlagProviding.isSonicResponseOnlyEnabled.getter(v50, v51) & 1) != 0)
  {
    uint64_t v108 = (void *)v37;
    uint64_t v52 = v93;
    uint64_t v53 = v92(v93, v26, v36);
    uint64_t v54 = (os_log_s *)Logger.logObject.getter(v53);
    os_log_type_t v55 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v54, v55))
    {
      uint64_t v56 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)uint64_t v56 = 0;
      _os_log_impl( &dword_0,  v54,  v55,  "PlayMediaHandleIntentStrategy#handledIntentOutputContext sonic response only, skipping output context generation",  v56,  2u);
      swift_slowDealloc(v56, -1LL, -1LL);
    }

    v35(v52, v36);
    uint64_t v57 = v103;
    sub_1EA0D0(v39, v103);
    uint64_t v58 = v102;
    uint64_t v59 = *(void *)(v102
                    + OBJC_IVAR____TtCO23AudioFlowDelegatePlugin9PlayMedia20HandleIntentStrategy_responseFactory
                    + 24);
    uint64_t v105 = *(void *)(v102
                     + OBJC_IVAR____TtCO23AudioFlowDelegatePlugin9PlayMedia20HandleIntentStrategy_responseFactory
                     + 32);
    id v101 = sub_6EA8( (void *)(v102 + OBJC_IVAR____TtCO23AudioFlowDelegatePlugin9PlayMedia20HandleIntentStrategy_responseFactory),  v59);
    uint64_t v60 = v98;
    sub_1EA0D0(v57, v98);
    uint64_t v61 = *(unsigned __int8 *)(v96 + 80);
    uint64_t v62 = (v61 + 64) & ~v61;
    uint64_t v63 = (void *)swift_allocObject(&unk_276410, v62 + v97, v61 | 7);
    uint64_t v64 = v106;
    v63[2] = v58;
    uint64_t v63[3] = v64;
    uint64_t v65 = v94;
    uint64_t v66 = v95;
    uint64_t v67 = v99;
    v63[4] = v95;
    v63[5] = v67;
    uint64_t v68 = v104;
    v63[6] = v104;
    v63[7] = v65;
    sub_1EA404(v60, (uint64_t)v63 + v62);
    swift_retain(v58);
    swift_retain(v64);
    id v69 = v66;
    id v70 = v65;
    swift_retain(v68);
    sub_1E60D4(v64, (uint64_t)v69, (uint64_t)v70, v57, (uint64_t)sub_1FFE74, (uint64_t)v63, v59, v105);
    swift_release(v63);
    sub_1FF044(v57);
    uint64_t v71 = v108;
  }

  else
  {
    if (qword_2839A8 != -1) {
      swift_once(&qword_2839A8, sub_1F5F40);
    }
    uint64_t v72 = qword_28E310;
    uint64_t v73 = sub_6C5C(&qword_286B90);
    uint64_t v74 = swift_allocObject(v73, 96LL, 7LL);
    *(_OWORD *)(v74 + swift_weakDestroy(v0 + 16) = xmmword_214FF0;
    uint64_t v75 = swift_allocObject(&unk_276370, 64LL, 7LL);
    id v76 = v108;
    uint64_t v77 = v105;
    *(void *)(v75 + swift_weakDestroy(v0 + 16) = v108;
    *(void *)(v75 + 24) = v77;
    uint64_t v78 = v100;
    uint64_t v79 = v101;
    *(void *)(v75 + 3sub_6C3C(v0 + 2) = v100;
    *(void *)(v75 + 40) = v79;
    *(_BYTE *)(v75 + 4sub_6C3C(v0 + 8) = v49 & 1;
    *(void *)(v75 + 56) = v37;
    *(void *)(v74 + 3sub_6C3C(v0 + 2) = sub_1FFDA0;
    *(void *)(v74 + 40) = v75;
    uint64_t v80 = (void *)swift_allocObject(&unk_276398, 56LL, 7LL);
    v80[2] = v76;
    v80[3] = v77;
    v80[4] = v78;
    void v80[5] = v79;
    v80[6] = v37;
    *(void *)(v74 + 4sub_6C3C(v0 + 8) = sub_1FFE0C;
    *(void *)(v74 + 56) = v80;
    *(void *)(v74 + 64) = sub_1FC78C;
    *(void *)(v74 + 7sub_6C3C(v0 + 2) = 0LL;
    uint64_t v81 = (void *)swift_allocObject(&unk_2763C0, 48LL, 7LL);
    void v81[2] = v37;
    v81[3] = v78;
    v81[4] = v79;
    void v81[5] = v76;
    *(void *)(v74 + 80) = sub_1FFE54;
    *(void *)(v74 + 8sub_6C3C(v0 + 8) = v81;
    uint64_t v71 = (void *)swift_allocObject(&unk_2763E8, 40LL, 7LL);
    v71[2] = v37;
    v71[3] = sub_1FFD10;
    __n128 v82 = v107;
    v71[4] = v107;
    swift_retain_n(v37, 4LL);
    id v83 = v78;
    id v84 = v79;
    swift_retain_n(v76, 3LL);
    id v85 = v83;
    id v86 = v84;
    swift_retain_n(v77, 2LL);
    id v87 = v85;
    id v88 = v86;
    swift_retain(v82);
    static Tasks.parallelize(queue:tasks:completion:)(v72, v74, sub_1FFE64, v71);
    swift_bridgeObjectRelease(v74);
    swift_release(v37);
  }

  swift_release(v107);
  return swift_release(v71);
}

uint64_t sub_1FFD10(uint64_t a1)
{
  return sub_1FFD24(a1, (uint64_t)&unk_2764D8, (uint64_t)sub_1FFE74);
}

uint64_t sub_1FFD24(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1FCEFC( a1,  *(void *)(v3 + 16),  *(void *)(v3 + 24),  *(void **)(v3 + 32),  *(void **)(v3 + 40),  *(void *)(v3 + 48),  *(void *)(v3 + 56),  a2,  a3);
}

uint64_t sub_1FFD5C()
{
  swift_release(*(void *)(v0 + 56));
  return swift_deallocObject(v0, 64LL, 7LL);
}

uint64_t sub_1FFDA0(uint64_t a1)
{
  return sub_1FFDAC(a1, (uint64_t (*)(uint64_t, void, void, void, void, void, void))sub_1FBC04);
}

uint64_t sub_1FFDAC( uint64_t a1, uint64_t (*a2)(uint64_t, void, void, void, void, void, void))
{
  return a2( a1,  *(void *)(v2 + 16),  *(void *)(v2 + 24),  *(void *)(v2 + 32),  *(void *)(v2 + 40),  *(unsigned __int8 *)(v2 + 48),  *(void *)(v2 + 56));
}

uint64_t sub_1FFDC8()
{
  swift_release(*(void *)(v0 + 48));
  return swift_deallocObject(v0, 56LL, 7LL);
}

uint64_t sub_1FFE0C(uint64_t a1)
{
  return sub_33EB8(a1, (uint64_t (*)(uint64_t, void, void, void, void, void))sub_1FC0EC);
}

uint64_t sub_1FFE18()
{
  swift_release(*(void *)(v0 + 40));
  return swift_deallocObject(v0, 48LL, 7LL);
}

uint64_t sub_1FFE54(uint64_t a1)
{
  return sub_1FC7AC(a1, v1[2], v1[3], v1[4], v1[5]);
}

uint64_t sub_1FFE64()
{
  return sub_1FC904(*(void *)(v0 + 16), *(void (**)(void))(v0 + 24), *(void *)(v0 + 32));
}

uint64_t sub_1FFE74(uint64_t a1)
{
  return sub_200160( a1,  (uint64_t (*)(uint64_t, void, void, void, void, void, void, char *))sub_1FAE40);
}

uint64_t sub_1FFE84(uint64_t a1)
{
  return sub_1FC1B4( a1,  *(uint64_t (**)(uint64_t))(v1 + 16),  *(void *)(v1 + 24),  *(void *)(v1 + 32),  "HandleIntentStrategy#handledIntentOutputContext dialogResult: %s Insights:%{public}s");
}

uint64_t sub_1FFEAC(uint64_t a1)
{
  return sub_1FBD04( a1,  *(uint64_t (**)(uint64_t))(v1 + 16),  *(void *)(v1 + 24),  *(void *)(v1 + 32),  "HandleIntentStrategy#handledIntentOutputContext handledSnippetResult: %s Insights:%{public}s");
}

uint64_t sub_1FFED4()
{
  uint64_t v1 = (int *)type metadata accessor for ResponseFactoryOutputContext(0LL);
  uint64_t v2 = *((void *)v1 - 1);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 64) & ~v3;
  uint64_t v5 = *(void *)(v2 + 64);
  swift_release(*(void *)(v0 + 16));
  swift_release(*(void *)(v0 + 24));

  swift_release(*(void *)(v0 + 48));
  uint64_t v6 = v0 + v4;
  swift_errorRelease(*(void *)(v0 + v4));
  uint64_t v7 = v0 + v4 + v1[5];
  uint64_t v8 = (int *)type metadata accessor for SnippetModelResponse(0LL);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, int *))(*((void *)v8 - 1) + 48LL))(v7, 1LL, v8))
  {
    uint64_t v25 = v5;
    uint64_t v9 = type metadata accessor for SiriAudioSnippets(0LL);
    uint64_t v10 = *(void *)(v9 - 8);
    uint64_t v11 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48);
    if (!v11(v7, 1LL, v9)) {
      (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v7, v9);
    }
    uint64_t v12 = v7 + v8[5];
    if (!v11(v12, 1LL, v9)) {
      (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v12, v9);
    }
    swift_bridgeObjectRelease(*(void *)(v7 + v8[6] + 8));
    swift_bridgeObjectRelease(*(void *)(v7 + v8[7]));
    uint64_t v5 = v25;
    uint64_t v4 = (v3 + 64) & ~v3;
  }

  swift_errorRelease(*(void *)(v6 + v1[6]));
  uint64_t v13 = v6 + v1[7];
  uint64_t v14 = sub_6C5C(&qword_289340);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 48LL))(v13, 1LL, v14))
  {
    uint64_t v15 = type metadata accessor for TemplatingResult(0LL);
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v15 - 8) + 8LL))(v13, v15);
  }

  uint64_t v16 = v6 + v1[8];
  uint64_t v17 = type metadata accessor for NLContextUpdate(0LL);
  uint64_t v18 = *(void *)(v17 - 8);
  swift_bridgeObjectRelease(*(void *)(v6 + v1[9]));
  uint64_t v19 = (void *)(v6 + v1[11]);
  uint64_t v20 = type metadata accessor for ResponseFactoryOutputContext.AppIntentOutputContext(0LL);
  if (!(*(unsigned int (**)(void *, uint64_t, uint64_t))(*(void *)(v20 - 8) + 48LL))(v19, 1LL, v20))
  {
    if (v19[3]) {
      sub_6C3C(v19);
    }
    uint64_t v21 = (char *)v19 + *(int *)(v20 + 20);
    uint64_t v22 = type metadata accessor for AppIntentPerformOptions(0LL);
    uint64_t v23 = *(void *)(v22 - 8);
  }

  return swift_deallocObject(v0, v4 + v5, v3 | 7);
}

uint64_t sub_200160( uint64_t a1, uint64_t (*a2)(uint64_t, void, void, void, void, void, void, char *))
{
  uint64_t v4 = *(unsigned __int8 *)(*(void *)(type metadata accessor for ResponseFactoryOutputContext(0LL) - 8) + 80LL);
  return a2( a1,  *((void *)v2 + 2),  *((void *)v2 + 3),  *((void *)v2 + 4),  *((void *)v2 + 5),  *((void *)v2 + 6),  *((void *)v2 + 7),  &v2[(v4 + 64) & ~v4]);
}

uint64_t sub_2001B8()
{
  swift_release(*(void *)(v0 + 48));
  swift_bridgeObjectRelease(*(void *)(v0 + 64));
  return swift_deallocObject(v0, 72LL, 7LL);
}

uint64_t sub_200204(uint64_t a1)
{
  return sub_1F729C( a1,  *(void **)(v1 + 16),  *(void *)(v1 + 24),  *(void **)(v1 + 32),  *(void (**)(__int128 *))(v1 + 40),  *(void *)(v1 + 48),  *(void *)(v1 + 56),  *(void *)(v1 + 64));
}

uint64_t sub_20021C()
{
  return swift_deallocObject(v0, 32LL, 7LL);
}

uint64_t sub_200248(uint64_t a1)
{
  return sub_1F611C(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_200268( uint64_t a1, uint64_t a2, unsigned int a3, uint64_t a4, uint64_t a5, const char *a6, uint64_t a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void (*a13)(uint64_t (*)(), uint64_t), uint64_t a14)
{
  int v50 = a8;
  uint64_t v51 = a7;
  uint64_t v43 = a4;
  unsigned int v52 = a3;
  uint64_t v55 = a14;
  uint64_t v53 = a6;
  uint64_t v54 = a13;
  uint64_t v48 = a12;
  uint64_t v49 = a1;
  uint64_t v46 = a11;
  uint64_t v47 = a10;
  uint64_t v45 = a9;
  uint64_t v16 = type metadata accessor for OSSignpostID(0LL);
  uint64_t v17 = *(void *)(v16 - 8);
  uint64_t v18 = *(void *)(v17 + 64);
  uint64_t v19 = __chkstk_darwin(v16);
  uint64_t v20 = (char *)&v42 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v19);
  uint64_t v22 = (char *)&v42 - v21;
  if (qword_2838D0 != -1) {
    swift_once(&qword_2838D0, sub_1362AC);
  }
  OSSignpostID.init(log:)((id)qword_296AA0);
  (*(void (**)(char *, char *, uint64_t))(v17 + 16))(v20, v22, v16);
  uint64_t v23 = *(unsigned __int8 *)(v17 + 80);
  uint64_t v24 = (v23 + 33) & ~v23;
  unint64_t v25 = (v18 + v24 + 7) & 0xFFFFFFFFFFFFFFF8LL;
  uint64_t v26 = swift_allocObject(&unk_276658, v25 + 16, v23 | 7);
  uint64_t v27 = v16;
  uint64_t v44 = v16;
  uint64_t v28 = v49;
  *(void *)(v26 + swift_weakDestroy(v0 + 16) = v49;
  *(void *)(v26 + 24) = a2;
  uint64_t v42 = a2;
  uint64_t v29 = v52;
  *(_BYTE *)(v26 + 3sub_6C3C(v0 + 2) = v52;
  (*(void (**)(uint64_t, char *, uint64_t))(v17 + 32))(v26 + v24, v20, v27);
  BOOL v30 = (void *)(v26 + v25);
  *BOOL v30 = v43;
  v30[1] = a5;
  uint64_t v31 = swift_retain(a5);
  uint64_t v32 = static os_signpost_type_t.begin.getter(v31);
  uint64_t v33 = qword_296AA0;
  uint64_t v34 = sub_6C5C((uint64_t *)&unk_289320);
  uint64_t v35 = swift_allocObject(v34, 112LL, 7LL);
  *(_OWORD *)(v35 + swift_weakDestroy(v0 + 16) = xmmword_2160E0;
  *(void *)(v35 + 56) = &type metadata for String;
  unint64_t v36 = sub_6DAC();
  uint64_t v37 = v46;
  uint64_t v38 = v47;
  *(void *)(v35 + 3sub_6C3C(v0 + 2) = v45;
  *(void *)(v35 + 40) = v38;
  *(void *)(v35 + 96) = &type metadata for String;
  *(void *)(v35 + 104) = v36;
  *(void *)(v35 + 64) = v36;
  *(void *)(v35 + 7sub_6C3C(v0 + 2) = v37;
  uint64_t v39 = v48;
  *(void *)(v35 + 80) = v48;
  swift_bridgeObjectRetain(v38);
  swift_bridgeObjectRetain(v39);
  os_signpost(_:dso:log:name:signpostID:_:_:)(v32, &dword_0, v33, v28, v42, v29, v22, v53, v51, v50, v35);
  swift_bridgeObjectRelease(v35);
  uint64_t v40 = swift_allocObject(&unk_276680, 32LL, 7LL);
  *(void *)(v40 + swift_weakDestroy(v0 + 16) = sub_1A8950;
  *(void *)(v40 + 24) = v26;
  swift_retain(v26);
  v54(sub_D477C, v40);
  swift_release(v26);
  swift_release(v40);
  return (*(uint64_t (**)(char *, uint64_t))(v17 + 8))(v22, v44);
}

uint64_t sub_20051C(uint64_t a1, void (*a2)(char *), uint64_t a3)
{
  uint64_t v60 = a2;
  uint64_t v61 = a3;
  uint64_t v5 = type metadata accessor for ExecuteResponse(0LL);
  uint64_t v56 = *(void *)(v5 - 8);
  uint64_t v57 = v5;
  __chkstk_darwin(v5);
  uint64_t v55 = (char *)&v55 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v7 = type metadata accessor for Logger(0LL);
  uint64_t v62 = *(void *)(v7 - 8);
  uint64_t v8 = __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v55 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v8);
  uint64_t v58 = (char *)&v55 - v11;
  uint64_t v12 = type metadata accessor for Parse(0LL);
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  uint64_t v15 = (char *)&v55 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v59 = v3;
  uint64_t v17 = *(void *)(v3 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin18PommesResponseFlow_controlsFlowProvider + 24);
  uint64_t v16 = *(void *)(v3 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin18PommesResponseFlow_controlsFlowProvider + 32);
  uint64_t v18 = sub_6EA8( (void *)(v3 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin18PommesResponseFlow_controlsFlowProvider),  v17);
  Input.parse.getter(v18);
  uint64_t v19 = dispatch thunk of ControlsFlowProviding.makeFlow(for:)(v15, v17, v16);
  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  if (v19)
  {
    if ((dispatch thunk of AnyFlow.on(input:)(a1) & 1) != 0)
    {
      if (qword_283888 != -1) {
        swift_once(&qword_283888, sub_BFC5C);
      }
      uint64_t v20 = v7;
      uint64_t v21 = sub_6960(v7, (uint64_t)qword_2969C8);
      uint64_t v22 = v62;
      uint64_t v23 = v58;
      uint64_t v24 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v62 + 16))(v58, v21, v20);
      unint64_t v25 = (os_log_s *)Logger.logObject.getter(v24);
      os_log_type_t v26 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v25, v26))
      {
        uint64_t v27 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
        uint64_t v28 = swift_slowAlloc(32LL, -1LL);
        uint64_t v64 = v28;
        *(_DWORD *)uint64_t v27 = 136446210;
        uint64_t v29 = static Insights.frameKit.getter();
        unint64_t v31 = v30;
        uint64_t v63 = sub_6978(v29, v30, &v64);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v63, &v64);
        swift_bridgeObjectRelease(v31);
        _os_log_impl( &dword_0,  v25,  v26,  "PommesResponseFlow#executeFlow %{public}s Controls is able to handle the request. Returning controls flow",  v27,  0xCu);
        swift_arrayDestroy(v28, 1LL, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v28, -1LL, -1LL);
        swift_slowDealloc(v27, -1LL, -1LL);

        (*(void (**)(char *, uint64_t))(v22 + 8))(v58, v20);
      }

      else
      {

        (*(void (**)(char *, uint64_t))(v22 + 8))(v23, v20);
      }

      uint64_t v53 = v60;
      uint64_t v54 = v55;
      static ExecuteResponse.complete(next:)(v19);
      v53(v54);
      swift_release(v19);
      return (*(uint64_t (**)(char *, uint64_t))(v56 + 8))(v54, v57);
    }

    swift_release(v19);
  }

  if (qword_283888 != -1) {
    swift_once(&qword_283888, sub_BFC5C);
  }
  uint64_t v32 = v7;
  uint64_t v33 = sub_6960(v7, (uint64_t)qword_2969C8);
  uint64_t v34 = v62;
  uint64_t v35 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v62 + 16))(v10, v33, v32);
  unint64_t v36 = (os_log_s *)Logger.logObject.getter(v35);
  os_log_type_t v37 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v36, v37))
  {
    uint64_t v38 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
    uint64_t v39 = swift_slowAlloc(32LL, -1LL);
    uint64_t v64 = v39;
    *(_DWORD *)uint64_t v38 = 136446210;
    uint64_t v40 = static Insights.frameKit.getter();
    uint64_t v41 = v34;
    unint64_t v43 = v42;
    uint64_t v63 = sub_6978(v40, v42, &v64);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v63, &v64);
    swift_bridgeObjectRelease(v43);
    _os_log_impl( &dword_0,  v36,  v37,  "PommesResponseFlow#executeFlow %{public}s Neither SiriAudio nor PlaybackControls were able to handle the request.",  v38,  0xCu);
    swift_arrayDestroy(v39, 1LL, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v39, -1LL, -1LL);
    swift_slowDealloc(v38, -1LL, -1LL);

    (*(void (**)(char *, uint64_t))(v41 + 8))(v10, v32);
  }

  else
  {

    (*(void (**)(char *, uint64_t))(v34 + 8))(v10, v32);
  }

  uint64_t v45 = v60;
  uint64_t v44 = v61;
  uint64_t v46 = *(void *)(v59 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin18PommesResponseFlow_commonMediaIntentCatDialogService);
  uint64_t v47 = v59 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin18PommesResponseFlow_aceServiceInvoker;
  type metadata accessor for App(0LL);
  uint64_t v48 = App.__allocating_init(appIdentifier:)(0LL, 0LL);
  uint64_t v49 = swift_allocObject(&unk_276608, 32LL, 7LL);
  *(void *)(v49 + swift_weakDestroy(v0 + 16) = v45;
  *(void *)(v49 + 24) = v44;
  type metadata accessor for SiriKitTaskLoggingProvider(0LL);
  uint64_t v50 = swift_retain(v44);
  uint64_t v51 = static SiriKitTaskLoggingProvider.shared.getter(v50);
  sub_200E1C( 0xD00000000000001FLL,  0x800000000021E6C0LL,  v46,  v47,  v48,  v51,  0xD000000000000010LL,  0x80000000002241C0LL,  (uint64_t)sub_200E14,  v49);
  swift_release(v51);
  swift_release(v48);
  return swift_release(v49);
}

uint64_t sub_200A98(uint64_t a1, void (*a2)(void), uint64_t a3)
{
  uint64_t v6 = type metadata accessor for ExecuteResponse(0LL);
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v10 = type metadata accessor for Logger(0LL);
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = __chkstk_darwin(v10);
  uint64_t v14 = (char *)&v27 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  if (a1)
  {
    uint64_t v31 = v7;
    uint64_t v32 = v6;
    swift_errorRetain(a1);
    if (qword_283888 != -1) {
      swift_once(&qword_283888, sub_BFC5C);
    }
    uint64_t v15 = sub_6960(v10, (uint64_t)qword_2969C8);
    (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v14, v15, v10);
    swift_errorRetain(a1);
    uint64_t v16 = swift_errorRetain(a1);
    uint64_t v17 = (os_log_s *)Logger.logObject.getter(v16);
    os_log_type_t v18 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v17, v18))
    {
      uint64_t v19 = swift_slowAlloc(12LL, -1LL);
      unint64_t v30 = a2;
      uint64_t v20 = (uint8_t *)v19;
      uint64_t v28 = swift_slowAlloc(32LL, -1LL);
      uint64_t v36 = v28;
      uint64_t v29 = a3;
      *(_DWORD *)uint64_t v20 = 136315138;
      uint64_t v27 = v20 + 4;
      swift_getErrorValue(a1, v35, v34);
      uint64_t v21 = Error.localizedDescription.getter(v34[1], v34[2]);
      unint64_t v23 = v22;
      uint64_t v33 = sub_6978(v21, v22, &v36);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v33, v34);
      swift_bridgeObjectRelease(v23);
      swift_errorRelease(a1);
      swift_errorRelease(a1);
      _os_log_impl( &dword_0,  v17,  v18,  "PommesResponseFlow#submitAndFileGenericError Could not properly create dialog. Silently failing... error: %s",  v20,  0xCu);
      uint64_t v24 = v28;
      swift_arrayDestroy(v28, 1LL, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v24, -1LL, -1LL);
      unint64_t v25 = v20;
      a2 = v30;
      swift_slowDealloc(v25, -1LL, -1LL);

      swift_errorRelease(a1);
    }

    else
    {
      swift_errorRelease(a1);
      swift_errorRelease(a1);
      swift_errorRelease(a1);
    }

    uint64_t v12 = (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v14, v10);
    uint64_t v7 = v31;
    uint64_t v6 = v32;
  }

  static ExecuteResponse.complete()(v12);
  a2(v9);
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

uint64_t sub_200D54()
{
  return type metadata accessor for PommesResponseFlow(0LL);
}

void sub_200D5C(uint64_t a1)
{
  if (v3 <= 0x3F)
  {
    v4[0] = *(void *)(v2 - 8) + 64LL;
    v4[1] = "\b";
    void v4[2] = &unk_21BD70;
    uint64_t v4[3] = &unk_21BD70;
    v4[4] = &unk_21BD70;
    void v4[5] = &unk_21BD70;
    void v4[6] = (char *)&value witness table for Builtin.NativeObject + 64;
    swift_updateClassMetadata2(a1, 256LL, 7LL, v4, a1 + 80);
  }

uint64_t sub_200DF0()
{
  return swift_deallocObject(v0, 32LL, 7LL);
}

uint64_t sub_200E14(uint64_t a1)
{
  return sub_200A98(a1, *(void (**)(void))(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_200E1C( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v43[3] = type metadata accessor for SiriKitTaskLoggingProvider(0LL);
  v43[4] = &protocol witness table for SiriKitTaskLoggingProvider;
  v43[0] = a6;
  uint64_t v17 = sub_6C5C(&qword_2844D0);
  uint64_t inited = swift_initStackObject(v17, v42);
  *(_OWORD *)(inited + swift_weakDestroy(v0 + 16) = xmmword_214510;
  type metadata accessor for ErrorFilingProvider(0LL);
  uint64_t v19 = swift_retain(a6);
  *(void *)(inited + 3sub_6C3C(v0 + 2) = static ErrorFilingProvider.errorInfoForParamsKey.getter(v19);
  *(void *)(inited + 40) = v20;
  *(void *)(inited + 7sub_6C3C(v0 + 2) = &type metadata for String;
  *(void *)(inited + 4sub_6C3C(v0 + 8) = a1;
  *(void *)(inited + 56) = a2;
  swift_bridgeObjectRetain(a2);
  unint64_t v21 = sub_74D54(inited);
  sub_157C4((uint64_t)v43, (uint64_t)v41);
  sub_157C4(a4, (uint64_t)v40);
  unint64_t v22 = (void *)swift_allocObject(&unk_276630, 136LL, 7LL);
  _OWORD v22[2] = a7;
  v22[3] = a8;
  sub_FF54(v41, (uint64_t)(v22 + 4));
  v22[9] = a5;
  sub_FF54(v40, (uint64_t)(v22 + 10));
  v22[15] = a9;
  v22[16] = a10;
  uint64_t v23 = *(void *)(a3 + 16);
  uint64_t v26 = a3 + 24;
  uint64_t v25 = *(void *)(a3 + 24);
  uint64_t v24 = *(void *)(v26 + 8);
  uint64_t v39 = 0LL;
  memset(v38, 0, sizeof(v38));
  uint64_t v30 = v23;
  uint64_t v31 = v25;
  strcpy((char *)v32, "GenericError");
  HIBYTE(v32[6]) = 0;
  v32[7] = -5120;
  uint64_t v33 = v24;
  unint64_t v34 = v21;
  uint64_t v35 = a5;
  uint64_t v36 = v38;
  uint64_t v37 = 0LL;
  swift_bridgeObjectRetain(a8);
  swift_retain(a5);
  swift_retain(a10);
  sub_200268( (uint64_t)"catServiceExecute",  17LL,  2u,  (uint64_t)sub_201070,  (uint64_t)v22,  "CatService#execute family=%{signpost.telemetry:string1,public}@ id=%{signpost.telemetry:string2,public}@ enableTelemetry=YES ",  125LL,  2,  v23,  v25,  0x45636972656E6547LL,  0xEC000000726F7272LL,  (void (*)(uint64_t (*)(), uint64_t))sub_3D0BC,  (uint64_t)v29);
  sub_1F6CC((uint64_t)v38, &qword_283FE8);
  swift_release(v22);
  swift_bridgeObjectRelease(v21);
  return sub_6C3C(v43);
}

uint64_t sub_20102C()
{
  return swift_deallocObject(v0, 136LL, 7LL);
}

uint64_t sub_201070(uint64_t a1)
{
  return sub_148A70( a1,  *(void *)(v1 + 16),  *(void *)(v1 + 24),  (void *)(v1 + 32),  *(void *)(v1 + 72),  (void *)(v1 + 80),  *(void (**)(uint64_t))(v1 + 120),  *(void *)(v1 + 128));
}

uint64_t sub_201088()
{
  uint64_t v1 = type metadata accessor for OSSignpostID(0LL);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 33) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = (*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8LL;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_release(*(void *)(v0 + v6 + 8));
  return swift_deallocObject(v0, v6 + 16, v5);
}

uint64_t sub_201100()
{
  uint64_t v0 = type metadata accessor for Logger(0LL);
  uint64_t v1 = *(void *)(v0 - 8);
  uint64_t v2 = __chkstk_darwin(v0);
  uint64_t v4 = (char *)&v25 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v2);
  unint64_t v6 = (char *)&v25 - v5;
  BOOL v7 = sub_2FB84();
  if (v7)
  {
    uint64_t v8 = static SiriEnvironmentWrapper.retrieve()(v7);
    if (!v8)
    {
      type metadata accessor for SiriEnvironment();
      uint64_t v8 = static SiriEnvironment.default.getter();
    }

    uint64_t v9 = v8;
    uint64_t v10 = SiriEnvironment.networkAvailability.getter();
    uint64_t v11 = swift_release(v9);
    char v12 = dispatch thunk of NetworkAvailability.isAvailable.getter(v11);
    swift_release(v10);
    if ((v12 & 1) != 0)
    {
      if (qword_283888 != -1) {
        swift_once(&qword_283888, sub_BFC5C);
      }
      uint64_t v13 = sub_6960(v0, (uint64_t)qword_2969C8);
      uint64_t v14 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v1 + 16))(v6, v13, v0);
      uint64_t v15 = (os_log_s *)Logger.logObject.getter(v14);
      os_log_type_t v16 = static os_log_type_t.debug.getter();
      if (os_log_type_enabled(v15, v16))
      {
        uint64_t v17 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
        *(_WORD *)uint64_t v17 = 0;
        _os_log_impl( &dword_0,  v15,  v16,  "PommesResponseFlow#shouldHandle device is NOT offline. Cannot handle playback through .uso() online.",  v17,  2u);
        swift_slowDealloc(v17, -1LL, -1LL);
      }

      (*(void (**)(char *, uint64_t))(v1 + 8))(v6, v0);
    }

    char v18 = v12 ^ 1;
  }

  else
  {
    if (qword_283888 != -1) {
      swift_once(&qword_283888, sub_BFC5C);
    }
    uint64_t v19 = sub_6960(v0, (uint64_t)qword_2969C8);
    uint64_t v20 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v1 + 16))(v4, v19, v0);
    unint64_t v21 = (os_log_s *)Logger.logObject.getter(v20);
    os_log_type_t v22 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v21, v22))
    {
      uint64_t v23 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)uint64_t v23 = 0;
      _os_log_impl(&dword_0, v21, v22, "PommesResponseFlow#shouldHandle isPlaybackTask=false", v23, 2u);
      swift_slowDealloc(v23, -1LL, -1LL);
    }

    (*(void (**)(char *, uint64_t))(v1 + 8))(v4, v0);
    char v18 = 0;
  }

  return v18 & 1;
}

uint64_t protocol witness for UnsupportedValueFlowStrategy.makeUnsupportedValueOutput(app:intent:parameterName:multicardinalValueIndex:intentResolutionResult:_:) in conformance SearchForMedia.UnsupportedValueStrategy( uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6, uint64_t a7, uint64_t a8)
{
  return sub_93740(a1, a2, a3, a4, a5, a6, a7, a8);
}

unint64_t sub_2013BC(uint64_t a1)
{
  unint64_t result = sub_2013E0();
  *(void *)(a1 + sub_6C3C(v0 + 8) = result;
  return result;
}

unint64_t sub_2013E0()
{
  unint64_t result = qword_289000;
  if (!qword_289000)
  {
    uint64_t v1 = type metadata accessor for SearchForMedia.UnsupportedValueStrategy();
    unint64_t result = swift_getWitnessTable(&protocol conformance descriptor for SearchForMedia.UnsupportedValueStrategy, v1);
    atomic_store(result, (unint64_t *)&qword_289000);
  }

  return result;
}

uint64_t type metadata accessor for SearchForMedia.UnsupportedValueStrategy()
{
  return objc_opt_self(&OBJC_CLASS____TtCO23AudioFlowDelegatePlugin14SearchForMedia24UnsupportedValueStrategy);
}

uint64_t sub_201444( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v19 = type metadata accessor for SearchForMedia.UnsupportedValueStrategy();
  return UnsupportedValueFlowStrategy.makeUpdatedIntentForUnsupportedValue(app:intent:parameterName:multicardinalValueIndex:intentResolutionResult:_:)( a1,  a2,  a3,  a4,  a5,  a6,  a7,  a8,  v19,  a10);
}

uint64_t sub_2014C8( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v19 = type metadata accessor for SearchForMedia.UnsupportedValueStrategy();
  return UnsupportedValueFlowStrategy.makeLaunchAppWithIntentOutput(app:intent:parameterName:multicardinalValueIndex:intentResolutionResult:_:)( a1,  a2,  a3,  a4,  a5,  a6,  a7,  a8,  v19,  a10);
}

uint64_t sub_20154C()
{
  return sub_201930(&qword_2839C0, &qword_296CA8, (uint64_t)sub_2023F4);
}

uint64_t sub_201568()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for CommonAudio.Sort(0LL);
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = __chkstk_darwin(v2);
  unint64_t v6 = (char *)&v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v4);
  uint64_t v8 = (char *)&v28 - v7;
  uint64_t v9 = type metadata accessor for Logger(0LL);
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  char v12 = (char *)&v28 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  if (qword_2839B8 != -1) {
    swift_once(&qword_2839B8, sub_2021C0);
  }
  uint64_t v13 = qword_296CA0;
  if (*(void *)(qword_296CA0 + 16))
  {
    unint64_t v14 = sub_9A8C8(v1);
    if ((v15 & 1) != 0) {
      return *(void *)(*(void *)(v13 + 56) + 8 * v14);
    }
  }

  if (qword_283888 != -1) {
    swift_once(&qword_283888, sub_BFC5C);
  }
  uint64_t v17 = sub_6960(v9, (uint64_t)qword_2969C8);
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v12, v17, v9);
  uint64_t v31 = v9;
  uint64_t v18 = v3;
  uint64_t v19 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v3 + 16);
  uint64_t v20 = v19(v8, v1, v2);
  unint64_t v21 = (os_log_s *)Logger.logObject.getter(v20);
  os_log_type_t v22 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v21, v22))
  {
    uint64_t v23 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
    uint64_t v29 = swift_slowAlloc(32LL, -1LL);
    uint64_t v33 = v29;
    uint64_t v30 = v10;
    *(_DWORD *)uint64_t v23 = 136315138;
    uint64_t v28 = v23 + 4;
    v19(v6, (uint64_t)v8, v2);
    uint64_t v24 = String.init<A>(describing:)(v6, v2);
    unint64_t v26 = v25;
    uint64_t v32 = sub_6978(v24, v25, &v33);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v32, &v33);
    swift_bridgeObjectRelease(v26);
    (*(void (**)(char *, uint64_t))(v18 + 8))(v8, v2);
    _os_log_impl(&dword_0, v21, v22, "CommonAudio+Extension#Sort#sortOrder received unregistered decade: %s", v23, 0xCu);
    uint64_t v27 = v29;
    swift_arrayDestroy(v29, 1LL, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v27, -1LL, -1LL);
    swift_slowDealloc(v23, -1LL, -1LL);

    (*(void (**)(char *, uint64_t))(v30 + 8))(v12, v31);
  }

  else
  {
    (*(void (**)(char *, uint64_t))(v18 + 8))(v8, v2);

    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v31);
  }

  return 0LL;
}

uint64_t sub_20184C()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for CommonAudio.Reference(0LL);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, v1, v2);
  int v6 = (*(uint64_t (**)(char *, uint64_t))(v3 + 88))(v5, v2);
  if (v6 == enum case for CommonAudio.Reference.definite(_:)) {
    return 1LL;
  }
  if (v6 != enum case for CommonAudio.Reference.indefinite(_:)) {
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
  return 0LL;
}

uint64_t sub_201914()
{
  return sub_201930(&qword_2839C8, &qword_296CB0, (uint64_t)sub_2026A8);
}

uint64_t sub_201930(void *a1, uint64_t *a2, uint64_t a3)
{
  if (*a1 != -1LL) {
    swift_once(a1, a3);
  }
  uint64_t v5 = *a2;
  if (*(void *)(v5 + 16) && (unint64_t v6 = sub_9A830(v3), (v7 & 1) != 0)) {
    return *(void *)(*(void *)(v5 + 56) + 8 * v6);
  }
  else {
    return 0LL;
  }
}

uint64_t sub_201990()
{
  uint64_t v1 = sub_6C5C(&qword_28BF78);
  uint64_t v2 = __chkstk_darwin(v1);
  uint64_t v60 = (char *)&v51 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v2);
  uint64_t v59 = (char *)&v51 - v4;
  uint64_t v5 = sub_6C5C(&qword_28E740);
  __chkstk_darwin(v5);
  char v7 = (char *)&v51 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v8 = type metadata accessor for Calendar.Identifier(0LL);
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v51 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v12 = sub_6C5C(&qword_28E748);
  __chkstk_darwin(v12);
  unint64_t v14 = (char *)&v51 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v15 = type metadata accessor for DateComponents(0LL);
  uint64_t v16 = __chkstk_darwin(v15);
  uint64_t v18 = (char *)&v51 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v16);
  unint64_t v21 = (char *)&v51 - v20;
  if (qword_2839B0 != -1)
  {
    uint64_t v39 = v19;
    swift_once(&qword_2839B0, sub_201E3C);
    uint64_t v19 = v39;
  }

  uint64_t v22 = qword_296C98;
  if (!*(void *)(qword_296C98 + 16)) {
    return 0LL;
  }
  uint64_t v58 = v19;
  unint64_t v23 = sub_9A960(v0);
  if ((v24 & 1) == 0) {
    return 0LL;
  }
  uint64_t v51 = v18;
  uint64_t v25 = *(void *)(*(void *)(v22 + 56) + 8 * v23);
  unsigned int v56 = enum case for Calendar.Identifier.gregorian(_:);
  uint64_t v57 = *(void (**)(char *))(v9 + 104);
  v57(v11);
  Calendar.init(identifier:)(v11);
  uint64_t v55 = *(void (**)(char *, uint64_t))(v9 + 8);
  v55(v11, v8);
  uint64_t v26 = type metadata accessor for Calendar(0LL);
  uint64_t v27 = *(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v26 - 8) + 56LL);
  uint64_t v53 = v26;
  uint64_t v54 = v27;
  v27(v14, 0LL, 1LL, v26);
  uint64_t v28 = type metadata accessor for TimeZone(0LL);
  unsigned int v52 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v28 - 8) + 56LL);
  v52(v7, 1LL, 1LL, v28);
  DateComponents.init(calendar:timeZone:era:year:month:day:hour:minute:second:nanosecond:weekday:weekdayOrdinal:quarter:weekOfMonth:weekOfYear:yearForWeekOfYear:)( v14,  v7,  0LL,  1LL,  v25,  0LL,  1LL,  0LL,  1LL,  0,  0LL,  0,  0LL,  0,  0LL,  0,  0LL,  0,  0LL,  1,  0LL,  1,  0LL,  1,  0LL,  1,  0LL,  1,  0LL,  1);
  ((void (*)(char *, void, uint64_t))v57)(v11, v56, v8);
  Calendar.init(identifier:)(v11);
  v55(v11, v8);
  v54(v14, 0LL, 1LL, v53);
  uint64_t result = ((uint64_t (*)(char *, uint64_t, uint64_t, uint64_t))v52)(v7, 1LL, 1LL, v28);
  uint64_t v30 = v25 + 9;
  if (!__OFADD__(v25, 9LL))
  {
    LOBYTE(v50) = 1;
    LOBYTE(v49) = 1;
    LOBYTE(v4sub_6C3C(v0 + 8) = 1;
    LOBYTE(v4sub_6C3C(v0 + 7) = 1;
    LOBYTE(v46) = 1;
    LOBYTE(v45) = 1;
    LOBYTE(v4sub_6C3C(v0 + 4) = 1;
    LOBYTE(v4sub_6C3C(v0 + 3) = 1;
    LOBYTE(v4sub_6C3C(v0 + 2) = 1;
    LOBYTE(v41) = 1;
    LOBYTE(v40) = 0;
    uint64_t v31 = v51;
    DateComponents.init(calendar:timeZone:era:year:month:day:hour:minute:second:nanosecond:weekday:weekdayOrdinal:quarter:weekOfMonth:weekOfYear:yearForWeekOfYear:)( v14,  v7,  0LL,  1LL,  v30,  0LL,  12LL,  0LL,  31LL,  v40,  0LL,  v41,  0LL,  v42,  0LL,  v43,  0LL,  v44,  0LL,  v45,  0LL,  v46,  0LL,  v47,  0LL,  v48,  0LL,  v49,  0LL,  v50);
    sub_2027DC();
    uint64_t v33 = v58;
    uint64_t v32 = (uint64_t)v59;
    unint64_t v34 = *(void (**)(char *, char *, uint64_t))(v58 + 16);
    v34(v59, v21, v15);
    uint64_t v35 = *(void (**)(uint64_t, void, uint64_t, uint64_t))(v33 + 56);
    v35(v32, 0LL, 1LL, v15);
    uint64_t v36 = (uint64_t)v60;
    v34(v60, v31, v15);
    v35(v36, 0LL, 1LL, v15);
    id v37 = sub_2020D0(v32, v36);
    uint64_t v38 = *(void (**)(char *, uint64_t))(v33 + 8);
    v38(v31, v15);
    v38(v21, v15);
    return (uint64_t)v37;
  }

  __break(1u);
  return result;
}

unint64_t sub_201E3C()
{
  uint64_t v0 = sub_6C5C(&qword_28E750);
  uint64_t v1 = sub_6C5C(&qword_285878);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(void *)(v2 + 72);
  uint64_t v4 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v5 = (v4 + 32) & ~v4;
  uint64_t v6 = swift_allocObject(v0, v5 + 11 * v3, v4 | 7);
  *(_OWORD *)(v6 + swift_weakDestroy(v0 + 16) = xmmword_21BE80;
  uint64_t v7 = v6 + v5;
  uint64_t v8 = *(int *)(v1 + 48);
  uint64_t v9 = enum case for CommonAudio.Decade._1920s(_:);
  uint64_t v10 = type metadata accessor for CommonAudio.Decade(0LL);
  uint64_t v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 104LL);
  v11(v7, v9, v10);
  *(void *)(v7 + vsub_6C3C(v0 + 8) = 1920LL;
  uint64_t v12 = *(int *)(v1 + 48);
  v11(v7 + v3, enum case for CommonAudio.Decade._1930s(_:), v10);
  *(void *)(v7 + v3 + v1sub_6C3C(v0 + 2) = 1930LL;
  uint64_t v13 = *(int *)(v1 + 48);
  v11(v7 + 2 * v3, enum case for CommonAudio.Decade._1940s(_:), v10);
  *(void *)(v7 + 2 * v3 + v1sub_6C3C(v0 + 3) = 1940LL;
  uint64_t v14 = *(int *)(v1 + 48);
  v11(v7 + 3 * v3, enum case for CommonAudio.Decade._1950s(_:), v10);
  *(void *)(v7 + 3 * v3 + v1sub_6C3C(v0 + 4) = 1950LL;
  uint64_t v15 = *(int *)(v1 + 48);
  v11(v7 + 4 * v3, enum case for CommonAudio.Decade._1960s(_:), v10);
  *(void *)(v7 + 4 * v3 + v15) = 1960LL;
  uint64_t v16 = *(int *)(v1 + 48);
  v11(v7 + 5 * v3, enum case for CommonAudio.Decade._1970s(_:), v10);
  *(void *)(v7 + 5 * v3 + vswift_weakDestroy(v0 + 16) = 1970LL;
  uint64_t v17 = *(int *)(v1 + 48);
  v11(v7 + 6 * v3, enum case for CommonAudio.Decade._1980s(_:), v10);
  *(void *)(v7 + 6 * v3 + v1sub_6C3C(v0 + 7) = 1980LL;
  uint64_t v18 = *(int *)(v1 + 48);
  v11(v7 + 7 * v3, enum case for CommonAudio.Decade._1990s(_:), v10);
  *(void *)(v7 + 7 * v3 + v1sub_6C3C(v0 + 8) = 1990LL;
  uint64_t v19 = *(int *)(v1 + 48);
  v11(v7 + 8 * v3, enum case for CommonAudio.Decade._2000s(_:), v10);
  *(void *)(v7 + 8 * v3 + v19) = 2000LL;
  uint64_t v20 = *(int *)(v1 + 48);
  v11(v7 + 9 * v3, enum case for CommonAudio.Decade._2010s(_:), v10);
  *(void *)(v7 + 9 * v3 + v20) = 2010LL;
  uint64_t v21 = v7 + 10 * v3;
  uint64_t v22 = *(int *)(v1 + 48);
  v11(v21, enum case for CommonAudio.Decade._2020s(_:), v10);
  *(void *)(v21 + v2sub_6C3C(v0 + 2) = 2020LL;
  unint64_t result = sub_7517C(v6);
  qword_296C98 = result;
  return result;
}

id sub_2020D0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = type metadata accessor for DateComponents(0LL);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
  Class isa = 0LL;
  if (v8(a1, 1LL, v6) != 1)
  {
    Class isa = DateComponents._bridgeToObjectiveC()().super.isa;
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(a1, v6);
  }

  if (v8(a2, 1LL, v6) == 1)
  {
    Class v10 = 0LL;
  }

  else
  {
    Class v10 = DateComponents._bridgeToObjectiveC()().super.isa;
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(a2, v6);
  }

  id v11 = [objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v3)) initWithStartDateComponents:isa endDateComponents:v10];

  return v11;
}

unint64_t sub_2021C0()
{
  uint64_t v0 = sub_6C5C(&qword_28E738);
  uint64_t v1 = sub_6C5C(&qword_285868);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(void *)(v2 + 72);
  uint64_t v4 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v5 = (v4 + 32) & ~v4;
  uint64_t v6 = 8 * v3;
  uint64_t v7 = swift_allocObject(v0, v5 + 9 * v3, v4 | 7);
  *(_OWORD *)(v7 + swift_weakDestroy(v0 + 16) = xmmword_219330;
  uint64_t v8 = v7 + v5;
  uint64_t v9 = *(int *)(v1 + 48);
  uint64_t v10 = enum case for CommonAudio.Sort.popular(_:);
  uint64_t v11 = type metadata accessor for CommonAudio.Sort(0LL);
  uint64_t v12 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 104LL);
  v12(v8, v10, v11);
  *(void *)(v8 + v9) = 5LL;
  uint64_t v13 = *(int *)(v1 + 48);
  v12(v8 + v3, enum case for CommonAudio.Sort.unpopular(_:), v11);
  *(void *)(v8 + v3 + v1sub_6C3C(v0 + 3) = 6LL;
  uint64_t v14 = *(int *)(v1 + 48);
  v12(v8 + 2 * v3, enum case for CommonAudio.Sort.worst(_:), v11);
  *(void *)(v8 + 2 * v3 + v1sub_6C3C(v0 + 4) = 4LL;
  uint64_t v15 = *(int *)(v1 + 48);
  v12(v8 + 3 * v3, enum case for CommonAudio.Sort.newest(_:), v11);
  *(void *)(v8 + 3 * v3 + v15) = 1LL;
  uint64_t v16 = *(int *)(v1 + 48);
  v12(v8 + 4 * v3, enum case for CommonAudio.Sort.oldest(_:), v11);
  *(void *)(v8 + 4 * v3 + vswift_weakDestroy(v0 + 16) = 2LL;
  uint64_t v17 = *(int *)(v1 + 48);
  v12(v8 + 5 * v3, enum case for CommonAudio.Sort.hottest(_:), v11);
  *(void *)(v8 + 5 * v3 + v1sub_6C3C(v0 + 7) = 7LL;
  uint64_t v18 = *(int *)(v1 + 48);
  v12(v8 + 6 * v3, enum case for CommonAudio.Sort.greatest(_:), v11);
  *(void *)(v8 + 6 * v3 + v1sub_6C3C(v0 + 8) = 3LL;
  uint64_t v19 = v8 + 7 * v3;
  uint64_t v20 = *(int *)(v1 + 48);
  v12(v19, enum case for CommonAudio.Sort.best(_:), v11);
  *(void *)(v19 + v20) = 3LL;
  uint64_t v21 = v8 + v6;
  uint64_t v22 = *(int *)(v1 + 48);
  v12(v21, enum case for CommonAudio.Sort.mediocre(_:), v11);
  *(void *)(v21 + v2sub_6C3C(v0 + 2) = 0LL;
  unint64_t result = sub_74FBC(v7);
  qword_296CA0 = result;
  return result;
}

unint64_t sub_2023F4()
{
  uint64_t v0 = sub_6C5C(&qword_28E730);
  uint64_t v1 = sub_6C5C(&qword_285858);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(void *)(v2 + 72);
  uint64_t v4 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v5 = (v4 + 32) & ~v4;
  uint64_t v6 = swift_allocObject(v0, v5 + 12 * v3, v4 | 7);
  *(_OWORD *)(v6 + swift_weakDestroy(v0 + 16) = xmmword_215010;
  uint64_t v7 = v6 + v5;
  uint64_t v8 = *(int *)(v1 + 48);
  uint64_t v9 = enum case for CommonAudio.MediaType.album(_:);
  uint64_t v10 = type metadata accessor for CommonAudio.MediaType(0LL);
  uint64_t v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 104LL);
  v11(v7, v9, v10);
  *(void *)(v7 + vsub_6C3C(v0 + 8) = 2LL;
  uint64_t v12 = *(int *)(v1 + 48);
  v11(v7 + v3, enum case for CommonAudio.MediaType.artist(_:), v10);
  *(void *)(v7 + v3 + v1sub_6C3C(v0 + 2) = 3LL;
  uint64_t v13 = *(int *)(v1 + 48);
  v11(v7 + 2 * v3, enum case for CommonAudio.MediaType.song(_:), v10);
  *(void *)(v7 + 2 * v3 + v1sub_6C3C(v0 + 3) = 1LL;
  uint64_t v14 = *(int *)(v1 + 48);
  v11(v7 + 3 * v3, enum case for CommonAudio.MediaType.audioBook(_:), v10);
  *(void *)(v7 + 3 * v3 + v1sub_6C3C(v0 + 4) = 10LL;
  uint64_t v15 = *(int *)(v1 + 48);
  v11(v7 + 4 * v3, enum case for CommonAudio.MediaType.genre(_:), v10);
  *(void *)(v7 + 4 * v3 + v15) = 4LL;
  uint64_t v16 = *(int *)(v1 + 48);
  v11(v7 + 5 * v3, enum case for CommonAudio.MediaType.playlist(_:), v10);
  *(void *)(v7 + 5 * v3 + vswift_weakDestroy(v0 + 16) = 5LL;
  uint64_t v17 = *(int *)(v1 + 48);
  v11(v7 + 6 * v3, enum case for CommonAudio.MediaType.musicPlaylist(_:), v10);
  *(void *)(v7 + 6 * v3 + v1sub_6C3C(v0 + 7) = 5LL;
  uint64_t v18 = *(int *)(v1 + 48);
  v11(v7 + 7 * v3, enum case for CommonAudio.MediaType.podcast(_:), v10);
  *(void *)(v7 + 7 * v3 + v1sub_6C3C(v0 + 8) = 6LL;
  uint64_t v19 = *(int *)(v1 + 48);
  v11(v7 + 8 * v3, enum case for CommonAudio.MediaType.video(_:), v10);
  *(void *)(v7 + 8 * v3 + v19) = 14LL;
  uint64_t v20 = *(int *)(v1 + 48);
  v11(v7 + 9 * v3, enum case for CommonAudio.MediaType.musicVideo(_:), v10);
  *(void *)(v7 + 9 * v3 + v20) = 14LL;
  uint64_t v21 = *(int *)(v1 + 48);
  v11(v7 + 10 * v3, enum case for CommonAudio.MediaType.music(_:), v10);
  *(void *)(v7 + 10 * v3 + v21) = 18LL;
  uint64_t v22 = v7 + 11 * v3;
  uint64_t v23 = *(int *)(v1 + 48);
  v11(v22, enum case for CommonAudio.MediaType.news(_:), v10);
  *(void *)(v22 + v2sub_6C3C(v0 + 3) = 20LL;
  unint64_t result = sub_74F98(v6);
  qword_296CA8 = result;
  return result;
}

unint64_t sub_2026A8()
{
  uint64_t v0 = sub_6C5C(&qword_28E730);
  uint64_t v1 = sub_6C5C(&qword_285858);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(void *)(v2 + 72);
  uint64_t v4 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v5 = (v4 + 32) & ~v4;
  uint64_t v6 = 2 * v3;
  uint64_t v7 = swift_allocObject(v0, v5 + 3 * v3, v4 | 7);
  *(_OWORD *)(v7 + swift_weakDestroy(v0 + 16) = xmmword_2168F0;
  uint64_t v8 = v7 + v5;
  uint64_t v9 = *(int *)(v1 + 48);
  uint64_t v10 = enum case for CommonAudio.MediaType.radioStation(_:);
  uint64_t v11 = type metadata accessor for CommonAudio.MediaType(0LL);
  uint64_t v12 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 104LL);
  v12(v8, v10, v11);
  *(void *)(v8 + v9) = 16LL;
  uint64_t v13 = v8 + v3;
  uint64_t v14 = *(int *)(v1 + 48);
  v12(v13, enum case for CommonAudio.MediaType.podcastStation(_:), v11);
  *(void *)(v13 + v1sub_6C3C(v0 + 4) = 15LL;
  uint64_t v15 = v8 + v6;
  uint64_t v16 = *(int *)(v1 + 48);
  v12(v15, enum case for CommonAudio.MediaType.station(_:), v11);
  *(void *)(v15 + vswift_weakDestroy(v0 + 16) = 17LL;
  unint64_t result = sub_74F98(v7);
  qword_296CB0 = result;
  return result;
}

unint64_t sub_2027DC()
{
  unint64_t result = qword_284E20;
  if (!qword_284E20)
  {
    uint64_t v1 = objc_opt_self(&OBJC_CLASS___INDateComponentsRange);
    unint64_t result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_284E20);
  }

  return result;
}

ValueMetadata *type metadata accessor for NilAppResolutionProvider()
{
  return &type metadata for NilAppResolutionProvider;
}

uint64_t sub_202828(uint64_t a1, uint64_t a2, void (*a3)(uint64_t, void), uint64_t a4)
{
  uint64_t v7 = type metadata accessor for Logger(0LL);
  uint64_t v78 = *(void *)(v7 - 8);
  uint64_t v79 = v7;
  uint64_t v8 = __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v74 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v8);
  uint64_t v77 = (char *)&v74 - v11;
  uint64_t v12 = sub_6C5C(&qword_289340);
  uint64_t v13 = __chkstk_darwin(v12);
  uint64_t v15 = (char *)&v74 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v13);
  uint64_t v17 = (char *)&v74 - v16;
  uint64_t v18 = sub_6C5C((uint64_t *)&unk_286BB0);
  __chkstk_darwin(v18);
  uint64_t v20 = (uint64_t *)((char *)&v74 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  sub_3B040(a1, (uint64_t)v20);
  if (swift_getEnumCaseMultiPayload(v20, v18) != 1)
  {
    uint64_t v75 = a3;
    uint64_t v76 = a4;
    uint64_t v34 = *(int *)(v12 + 48);
    uint64_t v35 = type metadata accessor for TemplatingResult(0LL);
    uint64_t v36 = *(void *)(v35 - 8);
    (*(void (**)(char *, uint64_t *, uint64_t))(v36 + 32))(v17, v20, v35);
    id v37 = *(void **)((char *)v20 + v34);
    *(void *)&v17[v34] = v37;
    id v38 = objc_allocWithZone(&OBJC_CLASS___SAAppsLaunchApp);
    id v39 = v37;
    id v40 = [v38 init];
    App.appIdentifier.getter(v40);
    if (v41)
    {
      uint64_t v42 = v41;
      NSString v43 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease(v42);
    }

    else
    {
      NSString v43 = 0LL;
    }

    [v40 setLaunchId:v43];

    type metadata accessor for SiriKitAceViewBuilder(0LL);
    uint64_t v45 = type metadata accessor for SiriEnvironmentBackedDeviceState(0LL);
    swift_allocObject(v45, *(unsigned int *)(v45 + 48), *(unsigned __int16 *)(v45 + 52));
    uint64_t v46 = SiriEnvironmentBackedDeviceState.init()();
    v80[3] = v45;
    v80[4] = sub_203B60();
    v80[0] = v46;
    uint64_t v47 = dispatch thunk of static SiriKitAceViewBuilder.makeBuilder(deviceState:)(v80);
    sub_6C3C(v80);
    uint64_t v48 = *(int *)(v12 + 48);
    (*(void (**)(char *, char *, uint64_t))(v36 + 16))(v15, v17, v35);

    *(void *)&v15[v48] = v39;
    int v50 = (void *)TemplatingResult.print.getter(v49);
    (*(void (**)(char *, uint64_t))(v36 + 8))(v15, v35);
    if (v50[2])
    {
      uint64_t v52 = v50[4];
      unint64_t v51 = v50[5];
      swift_bridgeObjectRetain(v51);
    }

    else
    {
      uint64_t v52 = 0LL;
      unint64_t v51 = 0xE000000000000000LL;
    }

    uint64_t v53 = v75;
    uint64_t v54 = v78;
    swift_bridgeObjectRelease(v50);
    id v55 = v40;
    uint64_t v56 = dispatch thunk of SiriKitAceViewBuilder.addButton(label:command:)(v52, v51, v55);
    swift_bridgeObjectRelease(v51);

    uint64_t v57 = swift_release(v47);
    uint64_t v58 = dispatch thunk of SiriKitAceViewBuilder.build()(v57);
    swift_release(v56);
    if (qword_283888 != -1) {
      swift_once(&qword_283888, sub_BFC5C);
    }
    uint64_t v59 = v79;
    uint64_t v60 = sub_6960(v79, (uint64_t)qword_2969C8);
    uint64_t v61 = v77;
    (*(void (**)(char *, uint64_t, uint64_t))(v54 + 16))(v77, v60, v59);
    uint64_t v62 = swift_bridgeObjectRetain_n(v58, 2LL);
    uint64_t v63 = (void *)Logger.logObject.getter(v62);
    os_log_type_t v64 = static os_log_type_t.info.getter(v63);
    if (!os_log_type_enabled((os_log_t)v63, v64))
    {

      swift_bridgeObjectRelease_n(v58, 2LL);
      (*(void (**)(char *, uint64_t))(v54 + 8))(v61, v59);
      v53(v58, 0LL);
      goto LABEL_25;
    }

    uint64_t v65 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
    uint64_t v66 = swift_slowAlloc(32LL, -1LL);
    v80[0] = v66;
    *(_DWORD *)uint64_t v65 = 136315138;
    if ((unint64_t)v58 >> 62)
    {
      if (v58 < 0) {
        uint64_t v73 = v58;
      }
      else {
        uint64_t v73 = v58 & 0xFFFFFFFFFFFFFF8LL;
      }
      swift_bridgeObjectRetain(v58);
      uint64_t result = _CocoaArrayWrapper.endIndex.getter(v73);
      uint64_t v67 = result;
      if (result) {
        goto LABEL_19;
      }
    }

    else
    {
      uint64_t v67 = *(void *)((char *)&dword_10 + (v58 & 0xFFFFFFFFFFFFF8LL));
      uint64_t result = swift_bridgeObjectRetain(v58);
      if (v67)
      {
LABEL_19:
        if ((v58 & 0xC000000000000001LL) != 0)
        {
          id v68 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0LL, v58);
        }

        else
        {
          if (!*(void *)((char *)&dword_10 + (v58 & 0xFFFFFFFFFFFFF8LL)))
          {
            __break(1u);
            return result;
          }

          id v68 = *(id *)(v58 + 32);
        }

        uint64_t v67 = (uint64_t)v68;
      }
    }

    swift_bridgeObjectRelease(v58);
    uint64_t v81 = v67;
    uint64_t v69 = sub_6C5C(&qword_28E8E0);
    uint64_t v70 = String.init<A>(describing:)(&v81, v69);
    unint64_t v72 = v71;
    uint64_t v81 = sub_6978(v70, v71, v80);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v81, v82);
    swift_bridgeObjectRelease_n(v58, 2LL);
    swift_bridgeObjectRelease(v72);
    _os_log_impl(&dword_0, (os_log_t)v63, v64, "AddMediaAceViewProvider punchout button: %s", v65, 0xCu);
    swift_arrayDestroy(v66, 1LL, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v66, -1LL, -1LL);
    swift_slowDealloc(v65, -1LL, -1LL);

    (*(void (**)(char *, uint64_t))(v78 + 8))(v77, v79);
    v75(v58, 0LL);
LABEL_25:

    swift_bridgeObjectRelease(v58);
    return sub_203BF8((uint64_t)v17);
  }

  uint64_t v21 = *v20;
  if (qword_283888 != -1) {
    swift_once(&qword_283888, sub_BFC5C);
  }
  uint64_t v22 = v79;
  uint64_t v23 = sub_6960(v79, (uint64_t)qword_2969C8);
  uint64_t v24 = v78;
  (*(void (**)(char *, uint64_t, uint64_t))(v78 + 16))(v10, v23, v22);
  swift_errorRetain(v21);
  uint64_t v25 = swift_errorRetain(v21);
  uint64_t v26 = (os_log_s *)Logger.logObject.getter(v25);
  os_log_type_t v27 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v26, v27))
  {
    uint64_t v28 = swift_slowAlloc(12LL, -1LL);
    uint64_t v76 = a4;
    uint64_t v29 = (uint8_t *)v28;
    uint64_t v30 = swift_slowAlloc(32LL, -1LL);
    v80[0] = v30;
    *(_DWORD *)uint64_t v29 = 136315138;
    swift_getErrorValue(v21, v83, v82);
    uint64_t v31 = Error.localizedDescription.getter(v82[1], v82[2]);
    unint64_t v33 = v32;
    uint64_t v81 = sub_6978(v31, v32, v80);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v81, v82);
    swift_bridgeObjectRelease(v33);
    swift_errorRelease(v21);
    swift_errorRelease(v21);
    _os_log_impl(&dword_0, v26, v27, "AddMediaAceViewProvider error rendering punchout button on tvOS: %s", v29, 0xCu);
    swift_arrayDestroy(v30, 1LL, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v30, -1LL, -1LL);
    swift_slowDealloc(v29, -1LL, -1LL);

    (*(void (**)(char *, uint64_t))(v78 + 8))(v10, v79);
  }

  else
  {
    swift_errorRelease(v21);
    swift_errorRelease(v21);

    (*(void (**)(char *, uint64_t))(v24 + 8))(v10, v22);
  }

  a3((uint64_t)_swiftEmptyArrayStorage, 0LL);
  return swift_errorRelease(v21);
}

uint64_t type metadata accessor for AddMediaViewProvider(uint64_t a1)
{
  uint64_t result = qword_28E820;
  if (!qword_28E820) {
    return swift_getSingletonMetadata(a1, &nominal type descriptor for AddMediaViewProvider);
  }
  return result;
}

uint64_t sub_202F90( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, uint64_t a6, uint64_t a7, void *a8)
{
  uint64_t v97 = a5;
  uint64_t v98 = a7;
  uint64_t v95 = a6;
  uint64_t v96 = a3;
  uint64_t v11 = type metadata accessor for Logger(0LL);
  uint64_t v99 = *(void *)(v11 - 8);
  uint64_t v100 = v11;
  uint64_t v12 = __chkstk_darwin(v11);
  id v94 = (char *)&v92 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v12);
  uint64_t v15 = (char *)&v92 - v14;
  uint64_t v16 = sub_6C5C(&qword_289340);
  uint64_t v17 = __chkstk_darwin(v16);
  uint64_t v19 = (char *)&v92 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v17);
  uint64_t v21 = (char *)&v92 - v20;
  uint64_t v22 = sub_6C5C((uint64_t *)&unk_286BB0);
  __chkstk_darwin(v22);
  uint64_t v24 = (uint64_t *)((char *)&v92 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  sub_3B040(a1, (uint64_t)v24);
  if (swift_getEnumCaseMultiPayload(v24, v22) != 1)
  {
    uint64_t v92 = a4;
    uint64_t v37 = *(int *)(v16 + 48);
    uint64_t v38 = type metadata accessor for TemplatingResult(0LL);
    uint64_t v39 = *(void *)(v38 - 8);
    (*(void (**)(char *, uint64_t *, uint64_t))(v39 + 32))(v21, v24, v38);
    id v40 = *(void **)((char *)v24 + v37);
    *(void *)&v21[v37] = v40;
    id v41 = objc_allocWithZone(&OBJC_CLASS___SAAppsLaunchApp);
    id v42 = v40;
    id v43 = [v41 init];
    App.appIdentifier.getter(v43);
    uint64_t v93 = a8;
    if (v44)
    {
      uint64_t v45 = v44;
      NSString v46 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease(v45);
    }

    else
    {
      NSString v46 = 0LL;
    }

    [v43 setLaunchId:v46];

    type metadata accessor for SiriKitAceViewBuilder(0LL);
    uint64_t v55 = type metadata accessor for SiriEnvironmentBackedDeviceState(0LL);
    swift_allocObject(v55, *(unsigned int *)(v55 + 48), *(unsigned __int16 *)(v55 + 52));
    uint64_t v56 = SiriEnvironmentBackedDeviceState.init()();
    v101[3] = v55;
    v101[4] = sub_203B60();
    v101[0] = v56;
    uint64_t v57 = dispatch thunk of static SiriKitAceViewBuilder.makeBuilder(deviceState:)(v101);
    sub_6C3C(v101);
    uint64_t v58 = *(int *)(v16 + 48);
    (*(void (**)(char *, char *, uint64_t))(v39 + 16))(v19, v21, v38);

    *(void *)&v19[v58] = v42;
    uint64_t v60 = (void *)TemplatingResult.print.getter(v59);
    (*(void (**)(char *, uint64_t))(v39 + 8))(v19, v38);
    if (v60[2])
    {
      uint64_t v62 = v60[4];
      unint64_t v61 = v60[5];
      swift_bridgeObjectRetain(v61);
    }

    else
    {
      uint64_t v62 = 0LL;
      unint64_t v61 = 0xE000000000000000LL;
    }

    uint64_t v63 = v92;
    uint64_t v64 = v100;
    swift_bridgeObjectRelease(v60);
    id v65 = v43;
    uint64_t v66 = dispatch thunk of SiriKitAceViewBuilder.addButton(label:command:)(v62, v61, v65);
    swift_bridgeObjectRelease(v61);

    uint64_t v67 = swift_release(v57);
    uint64_t v68 = dispatch thunk of SiriKitAceViewBuilder.build()(v67);
    swift_release(v66);
    uint64_t v69 = v93;
    if (qword_283888 != -1) {
      swift_once(&qword_283888, sub_BFC5C);
    }
    uint64_t v70 = sub_6960(v64, (uint64_t)qword_2969C8);
    uint64_t v71 = v99;
    unint64_t v72 = v94;
    (*(void (**)(char *, uint64_t, uint64_t))(v99 + 16))(v94, v70, v64);
    uint64_t v73 = swift_bridgeObjectRetain_n(v68, 2LL);
    uint64_t v74 = (void *)Logger.logObject.getter(v73);
    os_log_type_t v75 = static os_log_type_t.info.getter(v74);
    if (!os_log_type_enabled((os_log_t)v74, v75))
    {

      swift_bridgeObjectRelease_n(v68, 2LL);
      (*(void (**)(char *, uint64_t))(v71 + 8))(v72, v64);
      goto LABEL_25;
    }

    uint64_t v76 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
    uint64_t v77 = swift_slowAlloc(32LL, -1LL);
    v101[0] = v77;
    *(_DWORD *)uint64_t v76 = 136315138;
    if ((unint64_t)v68 >> 62)
    {
      if (v68 < 0) {
        uint64_t v91 = v68;
      }
      else {
        uint64_t v91 = v68 & 0xFFFFFFFFFFFFFF8LL;
      }
      swift_bridgeObjectRetain(v68);
      uint64_t result = _CocoaArrayWrapper.endIndex.getter(v91);
      uint64_t v78 = result;
      if (result) {
        goto LABEL_19;
      }
    }

    else
    {
      uint64_t v78 = *(void *)((char *)&dword_10 + (v68 & 0xFFFFFFFFFFFFF8LL));
      uint64_t result = swift_bridgeObjectRetain(v68);
      if (v78)
      {
LABEL_19:
        if ((v68 & 0xC000000000000001LL) != 0)
        {
          id v79 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0LL, v68);
        }

        else
        {
          if (!*(void *)((char *)&dword_10 + (v68 & 0xFFFFFFFFFFFFF8LL)))
          {
            __break(1u);
            return result;
          }

          id v79 = *(id *)(v68 + 32);
        }

        uint64_t v78 = (uint64_t)v79;
      }
    }

    swift_bridgeObjectRelease(v68);
    uint64_t v102 = v78;
    uint64_t v80 = sub_6C5C(&qword_28E8E0);
    uint64_t v81 = String.init<A>(describing:)(&v102, v80);
    unint64_t v83 = v82;
    uint64_t v102 = sub_6978(v81, v82, v101);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v102, v103);
    swift_bridgeObjectRelease_n(v68, 2LL);
    swift_bridgeObjectRelease(v83);
    _os_log_impl(&dword_0, (os_log_t)v74, v75, "AddMediaAceViewProvider punchout button: %s", v76, 0xCu);
    swift_arrayDestroy(v77, 1LL, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v77, -1LL, -1LL);
    swift_slowDealloc(v76, -1LL, -1LL);

    (*(void (**)(char *, uint64_t))(v99 + 8))(v94, v100);
    uint64_t v63 = v92;
    uint64_t v69 = v93;
LABEL_25:
    uint64_t v84 = v96;
    id v85 = (void *)swift_allocObject(&unk_2768F0, 72LL, 7LL);
    __int128 v85[2] = v84;
    v85[3] = v63;
    id v86 = v97;
    uint64_t v87 = v98;
    uint64_t v88 = v95;
    v85[4] = v97;
    v85[5] = v88;
    v85[6] = v87;
    v85[7] = v69;
    v85[8] = v68;
    swift_bridgeObjectRetain(v68);
    swift_retain(v84);
    swift_retain(v63);
    id v89 = v86;
    swift_retain(v87);
    id v90 = v69;
    sub_B67F4(v63, v89, (uint64_t)sub_203B58, (uint64_t)v85);

    swift_bridgeObjectRelease(v68);
    swift_release(v85);
    return sub_203BF8((uint64_t)v21);
  }

  uint64_t v25 = *v24;
  if (qword_283888 != -1) {
    swift_once(&qword_283888, sub_BFC5C);
  }
  uint64_t v26 = v100;
  uint64_t v27 = sub_6960(v100, (uint64_t)qword_2969C8);
  uint64_t v28 = v99;
  (*(void (**)(char *, uint64_t, uint64_t))(v99 + 16))(v15, v27, v26);
  swift_errorRetain(v25);
  uint64_t v29 = swift_errorRetain(v25);
  uint64_t v30 = (os_log_s *)Logger.logObject.getter(v29);
  os_log_type_t v31 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v30, v31))
  {
    unint64_t v32 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
    uint64_t v33 = swift_slowAlloc(32LL, -1LL);
    v101[0] = v33;
    *(_DWORD *)unint64_t v32 = 136315138;
    uint64_t v93 = a8;
    swift_getErrorValue(v25, v104, v103);
    uint64_t v34 = Error.localizedDescription.getter(v103[1], v103[2]);
    unint64_t v36 = v35;
    uint64_t v102 = sub_6978(v34, v35, v101);
    a8 = v93;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v102, v103);
    swift_bridgeObjectRelease(v36);
    swift_errorRelease(v25);
    swift_errorRelease(v25);
    _os_log_impl(&dword_0, v30, v31, "AddMediaAceViewProvider error rendering punchout button on tvOS: %s", v32, 0xCu);
    swift_arrayDestroy(v33, 1LL, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v33, -1LL, -1LL);
    swift_slowDealloc(v32, -1LL, -1LL);

    (*(void (**)(char *, uint64_t))(v99 + 8))(v15, v100);
  }

  else
  {
    swift_errorRelease(v25);
    swift_errorRelease(v25);

    (*(void (**)(char *, uint64_t))(v28 + 8))(v15, v26);
  }

  uint64_t v47 = v97;
  uint64_t v48 = v98;
  uint64_t v50 = v95;
  uint64_t v49 = v96;
  unint64_t v51 = (void *)swift_allocObject(&unk_2768C8, 72LL, 7LL);
  v51[2] = v49;
  void v51[3] = a4;
  v51[4] = v47;
  v51[5] = v50;
  v51[6] = v48;
  v51[7] = a8;
  v51[8] = _swiftEmptyArrayStorage;
  swift_retain(v49);
  swift_retain(a4);
  id v52 = v47;
  swift_retain(v48);
  id v53 = a8;
  sub_B67F4(a4, v52, (uint64_t)sub_203B58, (uint64_t)v51);
  swift_release(v51);
  return swift_errorRelease(v25);
}

void sub_2037AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, uint64_t a6, uint64_t a7, void *a8)
{
  uint64_t v44 = a2;
  uint64_t v45 = a6;
  uint64_t v14 = type metadata accessor for Logger(0LL);
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = __chkstk_darwin(v14);
  uint64_t v18 = (char *)&v43 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v16);
  uint64_t v20 = (char *)&v43 - v19;
  swift_retain(a3);
  swift_retain(a4);
  id v46 = a5;
  swift_retain(a7);
  id v21 = a8;
  if ((static SiriAudioEnvironment.isHomePod.getter(v21) & 1) != 0)
  {
    if (qword_283888 != -1) {
      swift_once(&qword_283888, sub_BFC5C);
    }
    uint64_t v22 = sub_6960(v14, (uint64_t)qword_2969C8);
    uint64_t v23 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v15 + 16))(v20, v22, v14);
    uint64_t v24 = (os_log_s *)Logger.logObject.getter(v23);
    os_log_type_t v25 = static os_log_type_t.info.getter(v24);
    if (os_log_type_enabled(v24, v25))
    {
      uint64_t v26 = a7;
      uint64_t v27 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)uint64_t v27 = 0;
      _os_log_impl(&dword_0, v24, v25, "AddMediaAceViewProvider won't return views on HomePod", v27, 2u);
      uint64_t v28 = v27;
      a7 = v26;
      swift_slowDealloc(v28, -1LL, -1LL);
    }

    (*(void (**)(char *, uint64_t))(v15 + 8))(v20, v14);
    uint64_t v29 = (void *)swift_allocObject(&unk_2768A0, 72LL, 7LL);
    v29[2] = a3;
    v29[3] = a4;
    uint64_t v30 = v45;
    id v31 = v46;
    v29[4] = v46;
    v29[5] = v30;
    v29[6] = a7;
    v29[7] = v21;
    v29[8] = _swiftEmptyArrayStorage;
    swift_retain(a3);
    swift_retain(a4);
    id v32 = v31;
    swift_retain(a7);
    id v33 = v21;
    sub_B67F4(a4, v32, (uint64_t)sub_203B58, (uint64_t)v29);
    swift_release(a4);
    swift_release(a3);
    swift_release(v29);
  }

  else
  {
    uint64_t v43 = a7;
    if (qword_283888 != -1) {
      swift_once(&qword_283888, sub_BFC5C);
    }
    uint64_t v34 = sub_6960(v14, (uint64_t)qword_2969C8);
    uint64_t v35 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v15 + 16))(v18, v34, v14);
    unint64_t v36 = (os_log_s *)Logger.logObject.getter(v35);
    os_log_type_t v37 = static os_log_type_t.info.getter(v36);
    if (os_log_type_enabled(v36, v37))
    {
      uint64_t v38 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)uint64_t v38 = 0;
      _os_log_impl(&dword_0, v36, v37, "AddMediaAceViewProvider showing punchout button on tvOS", v38, 2u);
      swift_slowDealloc(v38, -1LL, -1LL);
    }

    (*(void (**)(char *, uint64_t))(v15 + 8))(v18, v14);
    uint64_t v39 = *(void **)(v44 + 16);
    swift_retain(a3);
    swift_retain(a4);
    id v31 = v46;
    id v40 = v46;
    a7 = v43;
    swift_retain(v43);
    id v41 = v21;
    uint64_t v42 = swift_retain(a1);
    sub_1F3954(v42, v39, a1, a3, a4, v40, v45, a7, v41);
    swift_release_n(a3, 2LL);
    swift_release_n(a4, 2LL);

    swift_release(a7);
  }

  swift_release(a7);
}

unint64_t sub_203B60()
{
  unint64_t result = qword_289348;
  if (!qword_289348)
  {
    uint64_t v1 = type metadata accessor for SiriEnvironmentBackedDeviceState(255LL);
    unint64_t result = swift_getWitnessTable(&protocol conformance descriptor for SiriEnvironmentBackedDeviceState, v1);
    atomic_store(result, (unint64_t *)&qword_289348);
  }

  return result;
}

uint64_t sub_203BAC()
{
  swift_release(*(void *)(v0 + 48));
  swift_bridgeObjectRelease(*(void *)(v0 + 64));
  return swift_deallocObject(v0, 72LL, 7LL);
}

uint64_t sub_203BF8(uint64_t a1)
{
  uint64_t v2 = sub_6C5C(&qword_289340);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8LL))(a1, v2);
  return a1;
}

uint64_t sub_203C38@<X0>(uint8_t *a1@<X8>)
{
  uint64_t v55 = a1;
  uint64_t v57 = type metadata accessor for AudioMediaItem(0LL);
  uint64_t v59 = *(void *)(v57 - 8);
  uint64_t v1 = __chkstk_darwin(v57);
  uint64_t v54 = (char *)&v53 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)&v53 - v3;
  uint64_t v58 = type metadata accessor for Logger(0LL);
  uint64_t v61 = *(void *)(v58 - 8);
  __chkstk_darwin(v58);
  uint64_t v60 = (char *)&v53 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v6 = type metadata accessor for Apple_Parsec_Siri_V2alpha_AudioItemType(0LL);
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v53 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v10 = type metadata accessor for CommonAudio.MediaType(0LL);
  uint64_t v62 = *(void *)(v10 - 8);
  uint64_t v63 = v10;
  uint64_t v11 = __chkstk_darwin(v10);
  uint64_t v13 = (char *)&v53 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v14 = __chkstk_darwin(v11);
  uint64_t v64 = (uint64_t)&v53 - v15;
  uint64_t v16 = Apple_Parsec_Siri_V2alpha_AudioItem.identifier.getter(v14);
  unint64_t v18 = v17;
  uint64_t v19 = HIBYTE(v17) & 0xF;
  if ((v17 & 0x2000000000000000LL) == 0) {
    uint64_t v19 = v16 & 0xFFFFFFFFFFFFLL;
  }
  uint64_t v56 = v4;
  if (v19)
  {
    uint64_t v20 = v16;
  }

  else
  {
    swift_bridgeObjectRelease(v17);
    uint64_t v20 = 0LL;
    unint64_t v18 = 0LL;
  }

  uint64_t v21 = Apple_Parsec_Siri_V2alpha_AudioItem.title.getter(v16);
  unint64_t v23 = v22;
  uint64_t v24 = HIBYTE(v22) & 0xF;
  if ((v22 & 0x2000000000000000LL) == 0) {
    uint64_t v24 = v21 & 0xFFFFFFFFFFFFLL;
  }
  if (v24)
  {
    uint64_t v25 = v21;
  }

  else
  {
    swift_bridgeObjectRelease(v22);
    uint64_t v25 = 0LL;
    unint64_t v23 = 0LL;
  }

  Apple_Parsec_Siri_V2alpha_AudioItem.type.getter(v21);
  sub_EEF3C(v64);
  uint64_t v26 = (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  uint64_t v27 = Apple_Parsec_Siri_V2alpha_AudioItem.artist.getter(v26);
  unint64_t v29 = v28;
  uint64_t v30 = HIBYTE(v28) & 0xF;
  if ((v28 & 0x2000000000000000LL) == 0) {
    uint64_t v30 = v27 & 0xFFFFFFFFFFFFLL;
  }
  if (v30)
  {
    uint64_t v31 = v27;
  }

  else
  {
    swift_bridgeObjectRelease(v28);
    uint64_t v31 = 0LL;
    unint64_t v29 = 0LL;
  }

  uint64_t v32 = v61;
  id v33 = v55;
  (*(void (**)(char *, uint64_t, uint64_t))(v62 + 16))(v13, v64, v63);
  AudioMediaItem.init(identifier:title:type:artist:)(v20, v18, v25, v23, v13, v31, v29);
  if (qword_283888 != -1) {
    swift_once(&qword_283888, sub_BFC5C);
  }
  uint64_t v34 = v58;
  uint64_t v35 = sub_6960(v58, (uint64_t)qword_2969C8);
  unint64_t v36 = v60;
  (*(void (**)(char *, uint64_t, uint64_t))(v32 + 16))(v60, v35, v34);
  uint64_t v37 = v59;
  uint64_t v38 = *(uint64_t (**)(char *, uint8_t *, uint64_t))(v59 + 16);
  uint64_t v39 = v56;
  uint64_t v40 = v57;
  uint64_t v41 = v38(v56, v33, v57);
  uint64_t v42 = (os_log_s *)Logger.logObject.getter(v41);
  os_log_type_t v43 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v42, v43))
  {
    uint64_t v44 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
    uint64_t v45 = swift_slowAlloc(32LL, -1LL);
    uint64_t v66 = v45;
    *(_DWORD *)uint64_t v44 = 136315138;
    uint64_t v55 = v44 + 4;
    id v46 = v54;
    v38(v54, (uint8_t *)v39, v40);
    uint64_t v47 = String.init<A>(describing:)(v46, v40);
    uint64_t v48 = v40;
    unint64_t v50 = v49;
    uint64_t v65 = sub_6978(v47, v49, &v66);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v65, &v66);
    __n128 v51 = swift_bridgeObjectRelease(v50);
    (*(void (**)(char *, uint64_t, __n128))(v59 + 8))(v39, v48, v51);
    _os_log_impl(&dword_0, v42, v43, "AudioItem#toAudioMediaItem converted to %s", v44, 0xCu);
    swift_arrayDestroy(v45, 1LL, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v45, -1LL, -1LL);
    swift_slowDealloc(v44, -1LL, -1LL);

    (*(void (**)(char *, uint64_t))(v61 + 8))(v60, v34);
  }

  else
  {

    (*(void (**)(char *, uint64_t))(v37 + 8))(v39, v40);
    (*(void (**)(char *, uint64_t))(v32 + 8))(v36, v34);
  }

  return (*(uint64_t (**)(uint64_t, uint64_t))(v62 + 8))(v64, v63);
}

uint64_t sub_204098@<X0>(void *a1@<X0>, Class *a2@<X8>)
{
  uint64_t v104 = a1;
  uint64_t v91 = a2;
  uint64_t v2 = type metadata accessor for Logger(0LL);
  uint64_t v95 = *(void *)(v2 - 8);
  uint64_t v96 = v2;
  __chkstk_darwin(v2);
  uint64_t v93 = (char *)&v90 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v109 = (void *)type metadata accessor for DateTimeResolver(0LL);
  uint64_t v107 = *(v109 - 1);
  __chkstk_darwin(v109);
  uint64_t v106 = (char *)&v90 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v94 = sub_6C5C(&qword_28E8E8);
  uint64_t v98 = *(void *)(v94 - 8);
  uint64_t v5 = __chkstk_darwin(v94);
  uint64_t v92 = (char *)&v90 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v7 = __chkstk_darwin(v5);
  uint64_t v97 = (char *)&v90 - v8;
  __chkstk_darwin(v7);
  uint64_t v112 = (char *)&v90 - v9;
  uint64_t v105 = type metadata accessor for DateTimeResolutionSpec.DateTimeConvergenceStrategy(0LL);
  uint64_t v103 = *(void *)(v105 - 8);
  __chkstk_darwin(v105);
  uint64_t v102 = (char *)&v90 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v11 = type metadata accessor for DateTimeResolutionSpec.ExpandToType(0LL);
  uint64_t v100 = *(void *)(v11 - 8);
  uint64_t v101 = v11;
  __chkstk_darwin(v11);
  uint64_t v99 = (char *)&v90 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v13 = type metadata accessor for DateTimeResolutionSpec(0LL);
  uint64_t v110 = *(void *)(v13 - 8);
  uint64_t v111 = v13;
  __chkstk_darwin(v13);
  uint64_t v113 = (char *)&v90 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v15 = type metadata accessor for Date(0LL);
  __chkstk_darwin(v15);
  unint64_t v17 = (char *)&v90 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v18 = type metadata accessor for Calendar(0LL);
  __chkstk_darwin(v18);
  uint64_t v20 = (char *)&v90 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v21 = type metadata accessor for DateTimeResolutionContext.Hemisphere(0LL);
  uint64_t v22 = *(void *)(v21 - 8);
  __chkstk_darwin(v21);
  uint64_t v24 = (char *)&v90 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v25 = type metadata accessor for TimeZone(0LL);
  __chkstk_darwin(v25);
  uint64_t v27 = (char *)&v90 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v28 = type metadata accessor for Locale(0LL);
  uint64_t v29 = __chkstk_darwin(v28);
  uint64_t v31 = (char *)&v90 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v32 = __chkstk_darwin(v29);
  uint64_t v34 = (char *)&v90 - v33;
  uint64_t v35 = __chkstk_darwin(v32);
  uint64_t v37 = (char *)&v90 - v36;
  uint64_t v104 = (void *)*v104;
  uint64_t v38 = static SiriAudioEnvironment.siriLocale.getter(v35);
  uint64_t v39 = static SiriAudioEnvironment.siriLocale.getter(v38);
  uint64_t v40 = static SiriAudioEnvironment.siriLocale.getter(v39);
  static TimeZone.current.getter(v40);
  uint64_t v41 = (*(uint64_t (**)(char *, void, uint64_t))(v22 + 104))( v24,  enum case for DateTimeResolutionContext.Hemisphere.north(_:),  v21);
  uint64_t v42 = static Calendar.current.getter(v41);
  Date.init()(v42);
  uint64_t v43 = type metadata accessor for DateTimeResolutionContext(0LL);
  swift_allocObject(v43, *(unsigned int *)(v43 + 48), *(unsigned __int16 *)(v43 + 52));
  uint64_t v44 = v34;
  uint64_t v45 = v106;
  id v46 = v27;
  uint64_t v47 = v24;
  unint64_t v49 = v112;
  uint64_t v48 = v113;
  uint64_t v50 = DateTimeResolutionContext.init(with:regionFormat:regionAwareLanguage:timeZone:hemisphere:calendar:date:)( v37,  v44,  v31,  v46,  v47,  v20,  v17);
  __n128 v51 = v99;
  (*(void (**)(char *, void, uint64_t))(v100 + 104))( v99,  enum case for DateTimeResolutionSpec.ExpandToType.range(_:),  v101);
  id v52 = v102;
  (*(void (**)(char *, void, uint64_t))(v103 + 104))( v102,  enum case for DateTimeResolutionSpec.DateTimeConvergenceStrategy.past(_:),  v105);
  unint64_t v53 = sub_75798((uint64_t)&_swiftEmptyArrayStorage);
  uint64_t v54 = DateTimeResolutionSpec.init(expandToType:dateTimeConvergenceStrategy:overridesForDefinedDateTimeRanges:witchingHourRoundOffEnabled:convergeToOperatingHours:)( v51,  v52,  v53,  0LL,  0LL);
  DateTimeResolver.init()(v54);
  uint64_t v55 = v108;
  DateTimeResolver.makeRecommendation(value:context:spec:)(v104, v50, v48);
  if (v55)
  {
    swift_release(v50);
    (*(void (**)(char *, void *))(v107 + 8))(v45, v109);
    return (*(uint64_t (**)(char *, uint64_t))(v110 + 8))(v48, v111);
  }

  else
  {
    uint64_t v58 = v95;
    uint64_t v57 = v96;
    (*(void (**)(char *, void *))(v107 + 8))(v45, v109);
    uint64_t v59 = (uint64_t *)v97;
    uint64_t v60 = v98;
    uint64_t v61 = *(void (**)(char *, char *, uint64_t))(v98 + 16);
    uint64_t v62 = v94;
    v61(v97, v49, v94);
    if ((*(unsigned int (**)(uint64_t *, uint64_t))(v60 + 88))(v59, v62) == enum case for Recommendation.confident<A>(_:))
    {
      uint64_t v63 = v98;
      (*(void (**)(uint64_t *, uint64_t))(v98 + 96))(v59, v62);
      uint64_t v64 = *v59;
      Class isa = DateTime.toINDateComponentsRange()().super.isa;
      swift_release(v50);
      swift_release(v64);
      (*(void (**)(char *, uint64_t))(v63 + 8))(v49, v62);
      uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v110 + 8))(v113, v111);
      *uint64_t v91 = isa;
    }

    else
    {
      if (qword_283888 != -1) {
        swift_once(&qword_283888, sub_BFC5C);
      }
      uint64_t v66 = sub_6960(v57, (uint64_t)qword_2969C8);
      (*(void (**)(char *, uint64_t, uint64_t))(v58 + 16))(v93, v66, v57);
      uint64_t v67 = v92;
      uint64_t v68 = ((uint64_t (*)(char *, char *, uint64_t))v61)(v92, v49, v62);
      uint64_t v69 = (void *)Logger.logObject.getter(v68);
      os_log_type_t v70 = static os_log_type_t.error.getter();
      uint64_t v109 = v69;
      if (os_log_type_enabled((os_log_t)v69, v70))
      {
        uint64_t v71 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
        uint64_t v72 = swift_slowAlloc(32LL, -1LL);
        uint64_t v116 = v72;
        *(_DWORD *)uint64_t v71 = 136315138;
        unint64_t v73 = sub_2048B0();
        uint64_t v74 = dispatch thunk of CustomStringConvertible.description.getter(v62, v73);
        unint64_t v76 = v75;
        uint64_t v114 = sub_6978(v74, v75, &v116);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v114, &v115);
        swift_bridgeObjectRelease(v76);
        uint64_t v77 = *(void (**)(char *, uint64_t))(v98 + 8);
        v77(v67, v62);
        id v78 = v109;
        _os_log_impl( &dword_0,  (os_log_t)v109,  v70,  "Transformer#transformer DateTimeResolver returned unexpected recommendation: %s",  v71,  0xCu);
        swift_arrayDestroy(v72, 1LL, (char *)&type metadata for Any + 8);
        uint64_t v79 = v72;
        unint64_t v49 = v112;
        swift_slowDealloc(v79, -1LL, -1LL);
        uint64_t v80 = v71;
        uint64_t v59 = (uint64_t *)v97;
        swift_slowDealloc(v80, -1LL, -1LL);

        (*(void (**)(char *, uint64_t))(v95 + 8))(v93, v96);
      }

      else
      {
        uint64_t v77 = *(void (**)(char *, uint64_t))(v98 + 8);
        v77(v67, v62);

        (*(void (**)(char *, uint64_t))(v58 + 8))(v93, v57);
      }

      uint64_t v84 = v111;
      sub_204858(0LL, v81, v82, v83);
      uint64_t v86 = v85;
      uint64_t v89 = sub_2049B4(&qword_28E8F8, (uint64_t)&unk_21C078, v87, v88);
      swift_allocError(v86, v89, 0LL, 0LL);
      swift_willThrow();
      swift_release(v50);
      v77(v49, v62);
      (*(void (**)(char *, uint64_t))(v110 + 8))(v113, v84);
      return ((uint64_t (*)(uint64_t *, uint64_t))v77)(v59, v62);
    }
  }

  return result;
}

void sub_204858(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (!qword_28E8F0)
  {
    unint64_t v4 = _s5ErrorOMa(0LL, a2, a3, a4);
    if (!v5) {
      atomic_store(v4, (unint64_t *)&qword_28E8F0);
    }
  }

uint64_t _s5ErrorOMa(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_20280(a1, a2, a3, a4, (uint64_t)&_s5ErrorOMn);
}

unint64_t sub_2048B0()
{
  unint64_t result = qword_28E900[0];
  if (!qword_28E900[0])
  {
    uint64_t v1 = sub_45D50(&qword_28E8E8);
    unint64_t result = swift_getWitnessTable(&protocol conformance descriptor for Recommendation<A>, v1);
    atomic_store(result, qword_28E900);
  }

  return result;
}

uint64_t sub_2048FC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_allocateGenericValueMetadata(a1, a2, a3, 0LL);
}

uint64_t sub_204904(uint64_t a1, int a2, int a3)
{
  else {
    int v3 = 2;
  }
  else {
    LODWORD(vsub_6C3C(v0 + 4) = v3;
  }
  if (a3) {
    uint64_t v4 = v4;
  }
  else {
    uint64_t v4 = 0LL;
  }
  if (a2) {
    return ((uint64_t (*)(void))((char *)sub_204944 + 4 * asc_21BFD0[v4]))();
  }
  else {
    return ((uint64_t (*)(void))((char *)sub_204964 + 4 * byte_21BFD5[v4]))();
  }
}

_BYTE *sub_204944(_BYTE *result, char a2)
{
  *unint64_t result = a2;
  return result;
}

_BYTE *sub_204964(_BYTE *result)
{
  *unint64_t result = 0;
  return result;
}

_DWORD *sub_20496C(_DWORD *result, int a2)
{
  *unint64_t result = a2;
  return result;
}

_WORD *sub_204974(_WORD *result, __int16 a2)
{
  *unint64_t result = a2;
  return result;
}

_WORD *sub_20497C(_WORD *result)
{
  *unint64_t result = 0;
  return result;
}

_DWORD *sub_204984(_DWORD *result)
{
  *unint64_t result = 0;
  return result;
}

uint64_t sub_204990(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_2049B4(&qword_28E988, (uint64_t)&unk_21C050, a3, a4);
}

uint64_t sub_2049B4(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_204858(255LL, a2, a3, a4);
    uint64_t result = swift_getWitnessTable(a2, v7);
    atomic_store(result, a1);
  }

  return result;
}

uint64_t ShazamKitMatch.toRREntity()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v55 = a1;
  uint64_t v1 = sub_6C5C(&qword_2860A8);
  __chkstk_darwin(v1);
  int v3 = (char *)&v44 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v4 = type metadata accessor for UUID(0LL);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v54 = (char *)&v44 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v7 = type metadata accessor for Logger(0LL);
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v44 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v11 = sub_6C5C(&qword_287C78);
  uint64_t v12 = __chkstk_darwin(v11);
  uint64_t v14 = (char *)&v44 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v15 = static BundleIdentifiers.music.getter(v12);
  uint64_t v17 = v16;
  uint64_t v53 = v15;
  uint64_t v18 = sub_204E44(v15, v16);
  uint64_t v19 = static UsoBuilderConversionUtils.convertEntityBuilderToEntity(entityBuilder:)();
  if (v19)
  {
    uint64_t v51 = v19;
    uint64_t v52 = v5;
    uint64_t v20 = type metadata accessor for UsoBuilderOptions(0LL);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56LL))(v14, 1LL, 1LL, v20);
    uint64_t v21 = static UsoGraphBuilder.buildRootedEntityGraph(entityBuilder:options:)(v18, v14);
    sub_C15CC((uint64_t)v14);
    uint64_t v50 = v21;
    uint64_t v49 = static UsoPrintUtils.flattenUsoGraph(graph:printIdentifiers:)(v21, 1LL);
    unint64_t v23 = v22;
    if (qword_283888 != -1) {
      swift_once(&qword_283888, sub_BFC5C);
    }
    uint64_t v24 = sub_6960(v7, (uint64_t)qword_2969C8);
    (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, v24, v7);
    swift_bridgeObjectRetain(v23);
    uint64_t v26 = (os_log_s *)Logger.logObject.getter(v25);
    os_log_type_t v27 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v26, v27))
    {
      uint64_t v48 = v3;
      uint64_t v28 = swift_slowAlloc(12LL, -1LL);
      uint64_t v47 = v18;
      uint64_t v29 = (uint8_t *)v28;
      uint64_t v30 = swift_slowAlloc(32LL, -1LL);
      uint64_t v45 = v8;
      uint64_t v31 = v30;
      uint64_t v57 = v30;
      uint64_t v46 = v17;
      *(_DWORD *)uint64_t v29 = 136315138;
      swift_bridgeObjectRetain(v23);
      uint64_t v56 = sub_6978(v49, v23, &v57);
      int v3 = v48;
      uint64_t v17 = v46;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v56, &v57);
      swift_bridgeObjectRelease_n(v23, 3LL);
      _os_log_impl( &dword_0,  v26,  v27,  "ShazamKitMatch#toRREntity UsoBuilderConversionUtils.convertEntityBuilderToEntity creating UsoEntity: %s",  v29,  0xCu);
      swift_arrayDestroy(v31, 1LL, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v31, -1LL, -1LL);
      uint64_t v32 = v29;
      uint64_t v18 = v47;
      swift_slowDealloc(v32, -1LL, -1LL);

      uint64_t v33 = (*(uint64_t (**)(char *, uint64_t))(v45 + 8))(v10, v7);
    }

    else
    {

      swift_bridgeObjectRelease_n(v23, 2LL);
      uint64_t v33 = (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
    }

    uint64_t v36 = v54;
    uint64_t v37 = UUID.init()(v33);
    uint64_t v38 = UUID.uuidString.getter(v37);
    uint64_t v40 = v39;
    (*(void (**)(char *, uint64_t))(v52 + 8))(v36, v4);
    uint64_t v41 = type metadata accessor for GroupIdentifier(0LL);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v41 - 8) + 56LL))(v3, 1LL, 1LL, v41);
    uint64_t v42 = v55;
    RREntity.init(id:appBundleId:usoEntity:dataType:data:group:)( v38,  v40,  v53,  v17,  v51,  0LL,  0LL,  0LL,  0xF000000000000000LL,  v3);
    swift_release(v18);
    swift_release(v50);
    uint64_t v43 = type metadata accessor for RREntity(0LL);
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v43 - 8) + 56LL))( v42,  0LL,  1LL,  v43);
  }

  else
  {
    uint64_t v34 = type metadata accessor for RREntity(0LL);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v34 - 8) + 56LL))(v55, 1LL, 1LL, v34);
    swift_bridgeObjectRelease(v17);
    return swift_release(v18);
  }

uint64_t sub_204E44(uint64_t a1, uint64_t a2)
{
  int v3 = v2;
  uint64_t v26 = a1;
  uint64_t v27 = a2;
  uint64_t v4 = type metadata accessor for UsoIdentifier(0LL);
  uint64_t v28 = *(void *)(v4 - 8);
  uint64_t v29 = v4;
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)&v26 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v7 = type metadata accessor for UsoEntity_common_MediaItemType.DefinedValues(0LL);
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v11 = type metadata accessor for UsoEntityBuilder_common_MediaItem(0LL);
  swift_allocObject(v11, *(unsigned int *)(v11 + 48), *(unsigned __int16 *)(v11 + 52));
  uint64_t v12 = UsoEntityBuilder_common_MediaItem.init()();
  if (v2[5])
  {
    dispatch thunk of UsoEntityBuilder_common_MediaItem.setName(value:)(v2[4]);
    uint64_t v13 = type metadata accessor for UsoEntityBuilder_common_MediaItemType(0LL);
    swift_allocObject(v13, *(unsigned int *)(v13 + 48), *(unsigned __int16 *)(v13 + 52));
    uint64_t v14 = UsoEntityBuilder_common_MediaItemType.init()();
    (*(void (**)(char *, void, uint64_t))(v8 + 104))( v10,  enum case for UsoEntity_common_MediaItemType.DefinedValues.common_MediaItemType_Song(_:),  v7);
    dispatch thunk of UsoEntityBuilder_common_MediaItemType.setDefinedValue(value:)(v10);
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
    uint64_t v15 = swift_retain(v14);
    dispatch thunk of UsoEntityBuilder_common_MediaItem.setMediaItemType(value:)( v15,  &protocol witness table for UsoEntityBuilder_common_MediaItemType);
    swift_release_n(v14, 2LL);
  }

  if (v2[9])
  {
    uint64_t v16 = v2[8];
    swift_allocObject(v11, *(unsigned int *)(v11 + 48), *(unsigned __int16 *)(v11 + 52));
    uint64_t v17 = UsoEntityBuilder_common_MediaItem.init()();
    dispatch thunk of UsoEntityBuilder_common_MediaItem.setName(value:)(v16);
    uint64_t v18 = type metadata accessor for UsoEntityBuilder_common_MediaItemType(0LL);
    swift_allocObject(v18, *(unsigned int *)(v18 + 48), *(unsigned __int16 *)(v18 + 52));
    uint64_t v19 = UsoEntityBuilder_common_MediaItemType.init()();
    (*(void (**)(char *, void, uint64_t))(v8 + 104))( v10,  enum case for UsoEntity_common_MediaItemType.DefinedValues.common_MediaItemType_Artist(_:),  v7);
    dispatch thunk of UsoEntityBuilder_common_MediaItemType.setDefinedValue(value:)(v10);
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
    uint64_t v20 = swift_retain(v19);
    dispatch thunk of UsoEntityBuilder_common_MediaItem.setMediaItemType(value:)( v20,  &protocol witness table for UsoEntityBuilder_common_MediaItemType);
    swift_release(v19);
    uint64_t v21 = swift_retain(v17);
    dispatch thunk of UsoEntityBuilder_common_MediaItem.addAssociatedMediaItems(value:)( v21,  &protocol witness table for UsoEntityBuilder_common_MediaItem);
    swift_release(v19);
    swift_release_n(v17, 2LL);
  }

  uint64_t v22 = v2[11];
  if (v22)
  {
    uint64_t v23 = v3[10];
    swift_bridgeObjectRetain(v3[11]);
    uint64_t v24 = v27;
    swift_bridgeObjectRetain(v27);
    UsoIdentifier.init(value:appBundleId:namespace:)(v23, v22, v26, v24, 0x64695F6D616461LL, 0xE700000000000000LL);
    dispatch thunk of UsoBuilder.addUsoIdentifier(usoIdentifier:)(v6);
    (*(void (**)(char *, uint64_t))(v28 + 8))(v6, v29);
  }

  return v12;
}

uint64_t *sub_2050F8(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80LL);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v32 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v32 + ((v5 + 16LL) & ~(unint64_t)v5));
    swift_retain(v32);
  }

  else
  {
    uint64_t v7 = type metadata accessor for NLIntent(0LL);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16LL))(a1, a2, v7);
    uint64_t v8 = a3[5];
    uint64_t v9 = a3[6];
    uint64_t v10 = *(uint64_t *)((char *)a2 + v8);
    *(uint64_t *)((char *)a1 + vsub_6C3C(v0 + 8) = v10;
    uint64_t v11 = *(uint64_t *)((char *)a2 + v9);
    *(uint64_t *)((char *)a1 + v9) = v11;
    uint64_t v12 = a3[7];
    uint64_t v13 = a3[8];
    uint64_t v14 = *(uint64_t *)((char *)a2 + v12);
    *(uint64_t *)((char *)a1 + v1sub_6C3C(v0 + 2) = v14;
    uint64_t v76 = *(uint64_t *)((char *)a2 + v13);
    *(uint64_t *)((char *)a1 + v1sub_6C3C(v0 + 3) = v76;
    uint64_t v15 = a3[9];
    uint64_t v16 = a3[10];
    uint64_t v75 = *(uint64_t *)((char *)a2 + v15);
    *(uint64_t *)((char *)a1 + v15) = v75;
    uint64_t v82 = *(uint64_t *)((char *)a2 + v16);
    *(uint64_t *)((char *)a1 + vswift_weakDestroy(v0 + 16) = v82;
    uint64_t v17 = a3[11];
    uint64_t v18 = a3[12];
    uint64_t v19 = (uint64_t *)((char *)a1 + v17);
    uint64_t v20 = (uint64_t *)((char *)a2 + v17);
    uint64_t v21 = v20[1];
    *uint64_t v19 = *v20;
    v19[1] = v21;
    uint64_t v22 = *(uint64_t *)((char *)a2 + v18);
    *(uint64_t *)((char *)a1 + v1sub_6C3C(v0 + 8) = v22;
    uint64_t v23 = a3[13];
    uint64_t v24 = a3[14];
    uint64_t v74 = *(uint64_t *)((char *)a2 + v23);
    *(uint64_t *)((char *)a1 + v2sub_6C3C(v0 + 3) = v74;
    uint64_t v80 = *(uint64_t *)((char *)a2 + v24);
    *(uint64_t *)((char *)a1 + v2sub_6C3C(v0 + 4) = v80;
    uint64_t v25 = a3[15];
    uint64_t v26 = a3[16];
    uint64_t v78 = *(uint64_t *)((char *)a2 + v25);
    *(uint64_t *)((char *)a1 + v25) = v78;
    uint64_t v86 = *(uint64_t *)((char *)a2 + v26);
    *(uint64_t *)((char *)a1 + v26) = v86;
    uint64_t v27 = a3[17];
    uint64_t v28 = a3[18];
    uint64_t v84 = *(uint64_t *)((char *)a2 + v27);
    *(uint64_t *)((char *)a1 + v2sub_6C3C(v0 + 7) = v84;
    __dst = (char *)a1 + v28;
    uint64_t v29 = (char *)a2 + v28;
    uint64_t v30 = type metadata accessor for CommonAudio.Decade(0LL);
    uint64_t v73 = *(void *)(v30 - 8);
    uint64_t v77 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v73 + 48);
    swift_retain(v10);
    swift_bridgeObjectRetain(v11);
    swift_bridgeObjectRetain(v14);
    swift_bridgeObjectRetain(v76);
    swift_bridgeObjectRetain(v75);
    swift_bridgeObjectRetain(v82);
    swift_bridgeObjectRetain(v21);
    swift_bridgeObjectRetain(v22);
    swift_bridgeObjectRetain(v74);
    swift_bridgeObjectRetain(v80);
    swift_bridgeObjectRetain(v78);
    swift_bridgeObjectRetain(v86);
    swift_retain(v84);
    if (v77(v29, 1LL, v30))
    {
      uint64_t v31 = sub_6C5C(&qword_284E18);
      memcpy(__dst, v29, *(void *)(*(void *)(v31 - 8) + 64LL));
    }

    else
    {
      (*(void (**)(char *, char *, uint64_t))(v73 + 16))(__dst, v29, v30);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v73 + 56))(__dst, 0LL, 1LL, v30);
    }

    uint64_t v33 = a3[19];
    uint64_t v34 = a3[20];
    uint64_t v35 = *(uint64_t *)((char *)a2 + v33);
    *(uint64_t *)((char *)a1 + v3sub_6C3C(v0 + 3) = v35;
    uint64_t v87 = *(uint64_t *)((char *)a2 + v34);
    *(uint64_t *)((char *)a1 + v3sub_6C3C(v0 + 4) = v87;
    uint64_t v36 = a3[21];
    uint64_t v37 = a3[22];
    uint64_t v38 = (char *)a1 + v36;
    uint64_t v39 = (char *)a2 + v36;
    *(void *)uint64_t v38 = *(void *)v39;
    v38[8] = v39[8];
    uint64_t v40 = *(uint64_t *)((char *)a2 + v37);
    *(uint64_t *)((char *)a1 + v3sub_6C3C(v0 + 7) = v40;
    uint64_t v41 = a3[23];
    uint64_t v42 = a3[24];
    uint64_t v43 = *(uint64_t *)((char *)a2 + v41);
    *(uint64_t *)((char *)a1 + v41) = v43;
    uint64_t v44 = *(uint64_t *)((char *)a2 + v42);
    *(uint64_t *)((char *)a1 + v4sub_6C3C(v0 + 2) = v44;
    uint64_t v45 = a3[25];
    uint64_t v46 = a3[26];
    uint64_t v47 = *(uint64_t *)((char *)a2 + v45);
    *(uint64_t *)((char *)a1 + v45) = v47;
    uint64_t v85 = *(uint64_t *)((char *)a2 + v46);
    *(uint64_t *)((char *)a1 + v46) = v85;
    uint64_t v48 = a3[27];
    uint64_t v49 = a3[28];
    uint64_t v50 = *(uint64_t *)((char *)a2 + v48);
    *(uint64_t *)((char *)a1 + v4sub_6C3C(v0 + 8) = v50;
    __dsta = (char *)a1 + v49;
    uint64_t v81 = (char *)a2 + v49;
    uint64_t v51 = type metadata accessor for CommonAudio.RadioType(0LL);
    uint64_t v79 = *(void *)(v51 - 8);
    uint64_t v83 = *(unsigned int (**)(char *, uint64_t, uint64_t, __n128))(v79 + 48);
    swift_bridgeObjectRetain(v35);
    swift_bridgeObjectRetain(v87);
    swift_bridgeObjectRetain(v40);
    swift_bridgeObjectRetain(v43);
    swift_bridgeObjectRetain(v44);
    swift_bridgeObjectRetain(v47);
    swift_bridgeObjectRetain(v85);
    __n128 v52 = swift_bridgeObjectRetain(v50);
    if (v83(v81, 1LL, v51, v52))
    {
      uint64_t v53 = sub_6C5C(&qword_284D98);
      memcpy(__dsta, v81, *(void *)(*(void *)(v53 - 8) + 64LL));
    }

    else
    {
      (*(void (**)(char *, char *, uint64_t))(v79 + 16))(__dsta, v81, v51);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v79 + 56))(__dsta, 0LL, 1LL, v51);
    }

    uint64_t v54 = a3[29];
    uint64_t v55 = a3[30];
    uint64_t v56 = *(uint64_t *)((char *)a2 + v54);
    *(uint64_t *)((char *)a1 + v5sub_6C3C(v0 + 4) = v56;
    uint64_t v57 = *(uint64_t *)((char *)a2 + v55);
    *(uint64_t *)((char *)a1 + v55) = v57;
    uint64_t v58 = a3[31];
    uint64_t v59 = (char *)a1 + v58;
    uint64_t v60 = (char *)a2 + v58;
    uint64_t v61 = type metadata accessor for CommonAudio.Sort(0LL);
    uint64_t v62 = *(void *)(v61 - 8);
    uint64_t v63 = *(unsigned int (**)(char *, uint64_t, uint64_t, __n128))(v62 + 48);
    swift_retain(v56);
    __n128 v64 = swift_bridgeObjectRetain(v57);
    if (v63(v60, 1LL, v61, v64))
    {
      uint64_t v65 = sub_6C5C(&qword_284DC0);
      memcpy(v59, v60, *(void *)(*(void *)(v65 - 8) + 64LL));
    }

    else
    {
      (*(void (**)(char *, char *, uint64_t))(v62 + 16))(v59, v60, v61);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v62 + 56))(v59, 0LL, 1LL, v61);
    }

    uint64_t v66 = a3[32];
    uint64_t v67 = (char *)a1 + v66;
    uint64_t v68 = (char *)a2 + v66;
    uint64_t v69 = type metadata accessor for CommonAudio.MediaType(0LL);
    uint64_t v70 = *(void *)(v69 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v70 + 48))(v68, 1LL, v69))
    {
      uint64_t v71 = sub_6C5C(&qword_284DC8);
      memcpy(v67, v68, *(void *)(*(void *)(v71 - 8) + 64LL));
    }

    else
    {
      (*(void (**)(char *, char *, uint64_t))(v70 + 16))(v67, v68, v69);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v70 + 56))(v67, 0LL, 1LL, v69);
    }
  }

  return a1;
}

uint64_t sub_2055C0(uint64_t a1, int *a2)
{
  uint64_t v4 = type metadata accessor for NLIntent(0LL);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8LL))(a1, v4);
  swift_release(*(void *)(a1 + a2[5]));
  swift_bridgeObjectRelease(*(void *)(a1 + a2[6]));
  swift_bridgeObjectRelease(*(void *)(a1 + a2[7]));
  swift_bridgeObjectRelease(*(void *)(a1 + a2[8]));
  swift_bridgeObjectRelease(*(void *)(a1 + a2[9]));
  swift_bridgeObjectRelease(*(void *)(a1 + a2[10]));
  swift_bridgeObjectRelease(*(void *)(a1 + a2[11] + 8));
  swift_bridgeObjectRelease(*(void *)(a1 + a2[12]));
  swift_bridgeObjectRelease(*(void *)(a1 + a2[13]));
  swift_bridgeObjectRelease(*(void *)(a1 + a2[14]));
  swift_bridgeObjectRelease(*(void *)(a1 + a2[15]));
  swift_bridgeObjectRelease(*(void *)(a1 + a2[16]));
  swift_release(*(void *)(a1 + a2[17]));
  uint64_t v5 = a1 + a2[18];
  uint64_t v6 = type metadata accessor for CommonAudio.Decade(0LL);
  uint64_t v7 = *(void *)(v6 - 8);
  swift_bridgeObjectRelease(*(void *)(a1 + a2[19]));
  swift_bridgeObjectRelease(*(void *)(a1 + a2[20]));
  swift_bridgeObjectRelease(*(void *)(a1 + a2[22]));
  swift_bridgeObjectRelease(*(void *)(a1 + a2[23]));
  swift_bridgeObjectRelease(*(void *)(a1 + a2[24]));
  swift_bridgeObjectRelease(*(void *)(a1 + a2[25]));
  swift_bridgeObjectRelease(*(void *)(a1 + a2[26]));
  swift_bridgeObjectRelease(*(void *)(a1 + a2[27]));
  uint64_t v8 = a1 + a2[28];
  uint64_t v9 = type metadata accessor for CommonAudio.RadioType(0LL);
  uint64_t v10 = *(void *)(v9 - 8);
  swift_release(*(void *)(a1 + a2[29]));
  swift_bridgeObjectRelease(*(void *)(a1 + a2[30]));
  uint64_t v11 = a1 + a2[31];
  uint64_t v12 = type metadata accessor for CommonAudio.Sort(0LL);
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = a1 + a2[32];
  uint64_t v15 = type metadata accessor for CommonAudio.MediaType(0LL);
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v16 + 48))(v14, 1LL, v15);
  if (!(_DWORD)result) {
    return (*(uint64_t (**)(uint64_t, uint64_t))(v16 + 8))(v14, v15);
  }
  return result;
}

uint64_t sub_205834(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for NLIntent(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16LL))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a3[6];
  uint64_t v9 = *(void *)(a2 + v7);
  *(void *)(a1 + vsub_6C3C(v0 + 7) = v9;
  uint64_t v10 = *(void *)(a2 + v8);
  *(void *)(a1 + vsub_6C3C(v0 + 8) = v10;
  uint64_t v11 = a3[7];
  uint64_t v12 = a3[8];
  uint64_t v13 = *(void *)(a2 + v11);
  *(void *)(a1 + v11) = v13;
  uint64_t v74 = *(void *)(a2 + v12);
  *(void *)(a1 + v1sub_6C3C(v0 + 2) = v74;
  uint64_t v14 = a3[9];
  uint64_t v15 = a3[10];
  uint64_t v73 = *(void *)(a2 + v14);
  *(void *)(a1 + v1sub_6C3C(v0 + 4) = v73;
  uint64_t v80 = *(void *)(a2 + v15);
  *(void *)(a1 + v15) = v80;
  uint64_t v16 = a3[11];
  uint64_t v17 = a3[12];
  uint64_t v18 = (void *)(a1 + v16);
  uint64_t v19 = (void *)(a2 + v16);
  uint64_t v20 = v19[1];
  *uint64_t v18 = *v19;
  v18[1] = v20;
  uint64_t v21 = *(void *)(a2 + v17);
  *(void *)(a1 + v1sub_6C3C(v0 + 7) = v21;
  uint64_t v22 = a3[13];
  uint64_t v23 = a3[14];
  uint64_t v72 = *(void *)(a2 + v22);
  *(void *)(a1 + v2sub_6C3C(v0 + 2) = v72;
  uint64_t v78 = *(void *)(a2 + v23);
  *(void *)(a1 + v2sub_6C3C(v0 + 3) = v78;
  uint64_t v24 = a3[15];
  uint64_t v25 = a3[16];
  uint64_t v76 = *(void *)(a2 + v24);
  *(void *)(a1 + v2sub_6C3C(v0 + 4) = v76;
  uint64_t v84 = *(void *)(a2 + v25);
  *(void *)(a1 + v25) = v84;
  uint64_t v26 = a3[17];
  uint64_t v27 = a3[18];
  uint64_t v82 = *(void *)(a2 + v26);
  *(void *)(a1 + v26) = v82;
  __dst = (void *)(a1 + v27);
  uint64_t v28 = (const void *)(a2 + v27);
  uint64_t v29 = type metadata accessor for CommonAudio.Decade(0LL);
  uint64_t v71 = *(void *)(v29 - 8);
  uint64_t v75 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v71 + 48);
  swift_retain(v9);
  swift_bridgeObjectRetain(v10);
  swift_bridgeObjectRetain(v13);
  swift_bridgeObjectRetain(v74);
  swift_bridgeObjectRetain(v73);
  swift_bridgeObjectRetain(v80);
  swift_bridgeObjectRetain(v20);
  swift_bridgeObjectRetain(v21);
  swift_bridgeObjectRetain(v72);
  swift_bridgeObjectRetain(v78);
  swift_bridgeObjectRetain(v76);
  swift_bridgeObjectRetain(v84);
  swift_retain(v82);
  if (v75(v28, 1LL, v29))
  {
    uint64_t v30 = sub_6C5C(&qword_284E18);
    memcpy(__dst, v28, *(void *)(*(void *)(v30 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v71 + 16))(__dst, v28, v29);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v71 + 56))(__dst, 0LL, 1LL, v29);
  }

  uint64_t v31 = a3[19];
  uint64_t v32 = a3[20];
  uint64_t v33 = *(void *)(a2 + v31);
  *(void *)(a1 + v31) = v33;
  uint64_t v85 = *(void *)(a2 + v32);
  *(void *)(a1 + v3sub_6C3C(v0 + 2) = v85;
  uint64_t v34 = a3[21];
  uint64_t v35 = a3[22];
  uint64_t v36 = a1 + v34;
  uint64_t v37 = a2 + v34;
  *(void *)uint64_t v36 = *(void *)v37;
  *(_BYTE *)(v36 + sub_6C3C(v0 + 8) = *(_BYTE *)(v37 + 8);
  uint64_t v38 = *(void *)(a2 + v35);
  *(void *)(a1 + v35) = v38;
  uint64_t v39 = a3[23];
  uint64_t v40 = a3[24];
  uint64_t v41 = *(void *)(a2 + v39);
  *(void *)(a1 + v39) = v41;
  uint64_t v42 = *(void *)(a2 + v40);
  *(void *)(a1 + v40) = v42;
  uint64_t v43 = a3[25];
  uint64_t v44 = a3[26];
  uint64_t v45 = *(void *)(a2 + v43);
  *(void *)(a1 + v4sub_6C3C(v0 + 3) = v45;
  uint64_t v83 = *(void *)(a2 + v44);
  *(void *)(a1 + v4sub_6C3C(v0 + 4) = v83;
  uint64_t v46 = a3[27];
  uint64_t v47 = a3[28];
  uint64_t v48 = *(void *)(a2 + v46);
  *(void *)(a1 + v46) = v48;
  __dsta = (void *)(a1 + v47);
  uint64_t v79 = (const void *)(a2 + v47);
  uint64_t v49 = type metadata accessor for CommonAudio.RadioType(0LL);
  uint64_t v77 = *(void *)(v49 - 8);
  uint64_t v81 = *(unsigned int (**)(const void *, uint64_t, uint64_t, __n128))(v77 + 48);
  swift_bridgeObjectRetain(v33);
  swift_bridgeObjectRetain(v85);
  swift_bridgeObjectRetain(v38);
  swift_bridgeObjectRetain(v41);
  swift_bridgeObjectRetain(v42);
  swift_bridgeObjectRetain(v45);
  swift_bridgeObjectRetain(v83);
  __n128 v50 = swift_bridgeObjectRetain(v48);
  if (v81(v79, 1LL, v49, v50))
  {
    uint64_t v51 = sub_6C5C(&qword_284D98);
    memcpy(__dsta, v79, *(void *)(*(void *)(v51 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v77 + 16))(__dsta, v79, v49);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v77 + 56))(__dsta, 0LL, 1LL, v49);
  }

  uint64_t v52 = a3[29];
  uint64_t v53 = a3[30];
  uint64_t v54 = *(void *)(a2 + v52);
  *(void *)(a1 + v5sub_6C3C(v0 + 2) = v54;
  uint64_t v55 = *(void *)(a2 + v53);
  *(void *)(a1 + v5sub_6C3C(v0 + 3) = v55;
  uint64_t v56 = a3[31];
  uint64_t v57 = (void *)(a1 + v56);
  uint64_t v58 = (const void *)(a2 + v56);
  uint64_t v59 = type metadata accessor for CommonAudio.Sort(0LL);
  uint64_t v60 = *(void *)(v59 - 8);
  uint64_t v61 = *(unsigned int (**)(const void *, uint64_t, uint64_t, __n128))(v60 + 48);
  swift_retain(v54);
  __n128 v62 = swift_bridgeObjectRetain(v55);
  if (v61(v58, 1LL, v59, v62))
  {
    uint64_t v63 = sub_6C5C(&qword_284DC0);
    memcpy(v57, v58, *(void *)(*(void *)(v63 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v60 + 16))(v57, v58, v59);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v60 + 56))(v57, 0LL, 1LL, v59);
  }

  uint64_t v64 = a3[32];
  uint64_t v65 = (void *)(a1 + v64);
  uint64_t v66 = (const void *)(a2 + v64);
  uint64_t v67 = type metadata accessor for CommonAudio.MediaType(0LL);
  uint64_t v68 = *(void *)(v67 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v68 + 48))(v66, 1LL, v67))
  {
    uint64_t v69 = sub_6C5C(&qword_284DC8);
    memcpy(v65, v66, *(void *)(*(void *)(v69 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v68 + 16))(v65, v66, v67);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v68 + 56))(v65, 0LL, 1LL, v67);
  }

  return a1;
}

uint64_t sub_205CD0(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for NLIntent(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24LL))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = *(void *)(a1 + v7);
  uint64_t v9 = *(void *)(a2 + v7);
  *(void *)(a1 + vsub_6C3C(v0 + 7) = v9;
  swift_retain(v9);
  swift_release(v8);
  uint64_t v10 = a3[6];
  uint64_t v11 = *(void *)(a2 + v10);
  uint64_t v12 = *(void *)(a1 + v10);
  *(void *)(a1 + vsub_6C3C(v0 + 10) = v11;
  swift_bridgeObjectRetain(v11);
  swift_bridgeObjectRelease(v12);
  uint64_t v13 = a3[7];
  uint64_t v14 = *(void *)(a2 + v13);
  uint64_t v15 = *(void *)(a1 + v13);
  *(void *)(a1 + v1sub_6C3C(v0 + 3) = v14;
  swift_bridgeObjectRetain(v14);
  swift_bridgeObjectRelease(v15);
  uint64_t v16 = a3[8];
  uint64_t v17 = *(void *)(a2 + v16);
  uint64_t v18 = *(void *)(a1 + v16);
  *(void *)(a1 + vswift_weakDestroy(v0 + 16) = v17;
  swift_bridgeObjectRetain(v17);
  swift_bridgeObjectRelease(v18);
  uint64_t v19 = a3[9];
  uint64_t v20 = *(void *)(a2 + v19);
  uint64_t v21 = *(void *)(a1 + v19);
  *(void *)(a1 + v19) = v20;
  swift_bridgeObjectRetain(v20);
  swift_bridgeObjectRelease(v21);
  uint64_t v22 = a3[10];
  uint64_t v23 = *(void *)(a2 + v22);
  uint64_t v24 = *(void *)(a1 + v22);
  *(void *)(a1 + v2sub_6C3C(v0 + 2) = v23;
  swift_bridgeObjectRetain(v23);
  swift_bridgeObjectRelease(v24);
  uint64_t v25 = a3[11];
  uint64_t v26 = (void *)(a1 + v25);
  uint64_t v27 = (void *)(a2 + v25);
  *uint64_t v26 = *v27;
  uint64_t v28 = v27[1];
  uint64_t v29 = v26[1];
  v26[1] = v28;
  swift_bridgeObjectRetain(v28);
  swift_bridgeObjectRelease(v29);
  uint64_t v30 = a3[12];
  uint64_t v31 = *(void *)(a2 + v30);
  uint64_t v32 = *(void *)(a1 + v30);
  *(void *)(a1 + v30) = v31;
  swift_bridgeObjectRetain(v31);
  swift_bridgeObjectRelease(v32);
  uint64_t v33 = a3[13];
  uint64_t v34 = *(void *)(a2 + v33);
  uint64_t v35 = *(void *)(a1 + v33);
  *(void *)(a1 + v3sub_6C3C(v0 + 3) = v34;
  swift_bridgeObjectRetain(v34);
  swift_bridgeObjectRelease(v35);
  uint64_t v36 = a3[14];
  uint64_t v37 = *(void *)(a2 + v36);
  uint64_t v38 = *(void *)(a1 + v36);
  *(void *)(a1 + v36) = v37;
  swift_bridgeObjectRetain(v37);
  swift_bridgeObjectRelease(v38);
  uint64_t v39 = a3[15];
  uint64_t v40 = *(void *)(a2 + v39);
  uint64_t v41 = *(void *)(a1 + v39);
  *(void *)(a1 + v39) = v40;
  swift_bridgeObjectRetain(v40);
  swift_bridgeObjectRelease(v41);
  uint64_t v42 = a3[16];
  uint64_t v43 = *(void *)(a2 + v42);
  uint64_t v44 = *(void *)(a1 + v42);
  *(void *)(a1 + v4sub_6C3C(v0 + 2) = v43;
  swift_bridgeObjectRetain(v43);
  swift_bridgeObjectRelease(v44);
  uint64_t v45 = a3[17];
  uint64_t v46 = *(void *)(a1 + v45);
  uint64_t v47 = *(void *)(a2 + v45);
  *(void *)(a1 + v45) = v47;
  swift_retain(v47);
  swift_release(v46);
  uint64_t v48 = a3[18];
  uint64_t v49 = (void *)(a1 + v48);
  __n128 v50 = (void *)(a2 + v48);
  uint64_t v51 = type metadata accessor for CommonAudio.Decade(0LL);
  uint64_t v52 = *(void *)(v51 - 8);
  uint64_t v53 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v52 + 48);
  int v54 = v53(v49, 1LL, v51);
  int v55 = v53(v50, 1LL, v51);
  if (v54)
  {
    if (!v55)
    {
      (*(void (**)(void *, void *, uint64_t))(v52 + 16))(v49, v50, v51);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v52 + 56))(v49, 0LL, 1LL, v51);
      goto LABEL_7;
    }

    goto LABEL_6;
  }

  if (v55)
  {
    (*(void (**)(void *, uint64_t))(v52 + 8))(v49, v51);
LABEL_6:
    uint64_t v56 = sub_6C5C(&qword_284E18);
    memcpy(v49, v50, *(void *)(*(void *)(v56 - 8) + 64LL));
    goto LABEL_7;
  }

  (*(void (**)(void *, void *, uint64_t))(v52 + 24))(v49, v50, v51);
LABEL_7:
  uint64_t v57 = a3[19];
  uint64_t v58 = *(void *)(a2 + v57);
  uint64_t v59 = *(void *)(a1 + v57);
  *(void *)(a1 + v5sub_6C3C(v0 + 7) = v58;
  swift_bridgeObjectRetain(v58);
  swift_bridgeObjectRelease(v59);
  uint64_t v60 = a3[20];
  uint64_t v61 = *(void *)(a2 + v60);
  uint64_t v62 = *(void *)(a1 + v60);
  *(void *)(a1 + v60) = v61;
  swift_bridgeObjectRetain(v61);
  swift_bridgeObjectRelease(v62);
  uint64_t v63 = a3[21];
  uint64_t v64 = a1 + v63;
  uint64_t v65 = (uint64_t *)(a2 + v63);
  uint64_t v66 = *v65;
  *(_BYTE *)(v64 + sub_6C3C(v0 + 8) = *((_BYTE *)v65 + 8);
  *(void *)uint64_t v64 = v66;
  uint64_t v67 = a3[22];
  uint64_t v68 = *(void *)(a2 + v67);
  uint64_t v69 = *(void *)(a1 + v67);
  *(void *)(a1 + v6sub_6C3C(v0 + 7) = v68;
  swift_bridgeObjectRetain(v68);
  swift_bridgeObjectRelease(v69);
  uint64_t v70 = a3[23];
  uint64_t v71 = *(void *)(a2 + v70);
  uint64_t v72 = *(void *)(a1 + v70);
  *(void *)(a1 + v70) = v71;
  swift_bridgeObjectRetain(v71);
  swift_bridgeObjectRelease(v72);
  uint64_t v73 = a3[24];
  uint64_t v74 = *(void *)(a2 + v73);
  uint64_t v75 = *(void *)(a1 + v73);
  *(void *)(a1 + v7sub_6C3C(v0 + 3) = v74;
  swift_bridgeObjectRetain(v74);
  swift_bridgeObjectRelease(v75);
  uint64_t v76 = a3[25];
  uint64_t v77 = *(void *)(a2 + v76);
  uint64_t v78 = *(void *)(a1 + v76);
  *(void *)(a1 + v76) = v77;
  swift_bridgeObjectRetain(v77);
  swift_bridgeObjectRelease(v78);
  uint64_t v79 = a3[26];
  uint64_t v80 = *(void *)(a2 + v79);
  uint64_t v81 = *(void *)(a1 + v79);
  *(void *)(a1 + v79) = v80;
  swift_bridgeObjectRetain(v80);
  swift_bridgeObjectRelease(v81);
  uint64_t v82 = a3[27];
  uint64_t v83 = *(void *)(a2 + v82);
  uint64_t v84 = *(void *)(a1 + v82);
  *(void *)(a1 + v8sub_6C3C(v0 + 2) = v83;
  swift_bridgeObjectRetain(v83);
  swift_bridgeObjectRelease(v84);
  uint64_t v85 = a3[28];
  uint64_t v86 = (void *)(a1 + v85);
  uint64_t v87 = (void *)(a2 + v85);
  uint64_t v88 = type metadata accessor for CommonAudio.RadioType(0LL);
  uint64_t v89 = *(void *)(v88 - 8);
  uint64_t v90 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v89 + 48);
  int v91 = v90(v86, 1LL, v88);
  int v92 = v90(v87, 1LL, v88);
  if (v91)
  {
    if (!v92)
    {
      (*(void (**)(void *, void *, uint64_t))(v89 + 16))(v86, v87, v88);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v89 + 56))(v86, 0LL, 1LL, v88);
      goto LABEL_13;
    }

    goto LABEL_12;
  }

  if (v92)
  {
    (*(void (**)(void *, uint64_t))(v89 + 8))(v86, v88);
LABEL_12:
    uint64_t v93 = sub_6C5C(&qword_284D98);
    memcpy(v86, v87, *(void *)(*(void *)(v93 - 8) + 64LL));
    goto LABEL_13;
  }

  (*(void (**)(void *, void *, uint64_t))(v89 + 24))(v86, v87, v88);
LABEL_13:
  uint64_t v94 = a3[29];
  uint64_t v95 = *(void *)(a1 + v94);
  uint64_t v96 = *(void *)(a2 + v94);
  *(void *)(a1 + v9sub_6C3C(v0 + 4) = v96;
  swift_retain(v96);
  swift_release(v95);
  uint64_t v97 = a3[30];
  uint64_t v98 = *(void *)(a2 + v97);
  uint64_t v99 = *(void *)(a1 + v97);
  *(void *)(a1 + v9sub_6C3C(v0 + 7) = v98;
  swift_bridgeObjectRetain(v98);
  swift_bridgeObjectRelease(v99);
  uint64_t v100 = a3[31];
  uint64_t v101 = (void *)(a1 + v100);
  uint64_t v102 = (void *)(a2 + v100);
  uint64_t v103 = type metadata accessor for CommonAudio.Sort(0LL);
  uint64_t v104 = *(void *)(v103 - 8);
  uint64_t v105 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v104 + 48);
  int v106 = v105(v101, 1LL, v103);
  int v107 = v105(v102, 1LL, v103);
  if (v106)
  {
    if (!v107)
    {
      (*(void (**)(void *, void *, uint64_t))(v104 + 16))(v101, v102, v103);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v104 + 56))(v101, 0LL, 1LL, v103);
      goto LABEL_19;
    }

    goto LABEL_18;
  }

  if (v107)
  {
    (*(void (**)(void *, uint64_t))(v104 + 8))(v101, v103);
LABEL_18:
    uint64_t v108 = sub_6C5C(&qword_284DC0);
    memcpy(v101, v102, *(void *)(*(void *)(v108 - 8) + 64LL));
    goto LABEL_19;
  }

  (*(void (**)(void *, void *, uint64_t))(v104 + 24))(v101, v102, v103);
LABEL_19:
  uint64_t v109 = a3[32];
  uint64_t v110 = (void *)(a1 + v109);
  uint64_t v111 = (void *)(a2 + v109);
  uint64_t v112 = type metadata accessor for CommonAudio.MediaType(0LL);
  uint64_t v113 = *(void *)(v112 - 8);
  uint64_t v114 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v113 + 48);
  int v115 = v114(v110, 1LL, v112);
  int v116 = v114(v111, 1LL, v112);
  if (!v115)
  {
    if (!v116)
    {
      (*(void (**)(void *, void *, uint64_t))(v113 + 24))(v110, v111, v112);
      return a1;
    }

    (*(void (**)(void *, uint64_t))(v113 + 8))(v110, v112);
    goto LABEL_24;
  }

  if (v116)
  {
LABEL_24:
    uint64_t v117 = sub_6C5C(&qword_284DC8);
    memcpy(v110, v111, *(void *)(*(void *)(v117 - 8) + 64LL));
    return a1;
  }

  (*(void (**)(void *, void *, uint64_t))(v113 + 16))(v110, v111, v112);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v113 + 56))(v110, 0LL, 1LL, v112);
  return a1;
}

uint64_t sub_206308(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for NLIntent(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32LL))(a1, a2, v6);
  uint64_t v7 = a3[6];
  *(void *)(a1 + a3[5]) = *(void *)(a2 + a3[5]);
  *(void *)(a1 + vsub_6C3C(v0 + 7) = *(void *)(a2 + v7);
  uint64_t v8 = a3[8];
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  *(void *)(a1 + vsub_6C3C(v0 + 8) = *(void *)(a2 + v8);
  uint64_t v9 = a3[10];
  *(void *)(a1 + a3[9]) = *(void *)(a2 + a3[9]);
  *(void *)(a1 + v9) = *(void *)(a2 + v9);
  uint64_t v10 = a3[12];
  *(_OWORD *)(a1 + a3[11]) = *(_OWORD *)(a2 + a3[11]);
  *(void *)(a1 + vsub_6C3C(v0 + 10) = *(void *)(a2 + v10);
  uint64_t v11 = a3[14];
  *(void *)(a1 + a3[13]) = *(void *)(a2 + a3[13]);
  *(void *)(a1 + v11) = *(void *)(a2 + v11);
  uint64_t v12 = a3[16];
  *(void *)(a1 + a3[15]) = *(void *)(a2 + a3[15]);
  *(void *)(a1 + v1sub_6C3C(v0 + 2) = *(void *)(a2 + v12);
  uint64_t v13 = a3[18];
  *(void *)(a1 + a3[17]) = *(void *)(a2 + a3[17]);
  uint64_t v14 = (void *)(a1 + v13);
  uint64_t v15 = (const void *)(a2 + v13);
  uint64_t v16 = type metadata accessor for CommonAudio.Decade(0LL);
  uint64_t v17 = *(void *)(v16 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v17 + 48))(v15, 1LL, v16))
  {
    uint64_t v18 = sub_6C5C(&qword_284E18);
    memcpy(v14, v15, *(void *)(*(void *)(v18 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v17 + 32))(v14, v15, v16);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v17 + 56))(v14, 0LL, 1LL, v16);
  }

  uint64_t v19 = a3[20];
  *(void *)(a1 + a3[19]) = *(void *)(a2 + a3[19]);
  *(void *)(a1 + v19) = *(void *)(a2 + v19);
  uint64_t v20 = a3[21];
  uint64_t v21 = a3[22];
  uint64_t v22 = a1 + v20;
  uint64_t v23 = a2 + v20;
  *(void *)uint64_t v22 = *(void *)v23;
  *(_BYTE *)(v22 + sub_6C3C(v0 + 8) = *(_BYTE *)(v23 + 8);
  *(void *)(a1 + v21) = *(void *)(a2 + v21);
  uint64_t v24 = a3[24];
  *(void *)(a1 + a3[23]) = *(void *)(a2 + a3[23]);
  *(void *)(a1 + v2sub_6C3C(v0 + 4) = *(void *)(a2 + v24);
  uint64_t v25 = a3[26];
  *(void *)(a1 + a3[25]) = *(void *)(a2 + a3[25]);
  *(void *)(a1 + v25) = *(void *)(a2 + v25);
  uint64_t v26 = a3[28];
  *(void *)(a1 + a3[27]) = *(void *)(a2 + a3[27]);
  uint64_t v27 = (void *)(a1 + v26);
  uint64_t v28 = (const void *)(a2 + v26);
  uint64_t v29 = type metadata accessor for CommonAudio.RadioType(0LL);
  uint64_t v30 = *(void *)(v29 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v30 + 48))(v28, 1LL, v29))
  {
    uint64_t v31 = sub_6C5C(&qword_284D98);
    memcpy(v27, v28, *(void *)(*(void *)(v31 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v30 + 32))(v27, v28, v29);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v30 + 56))(v27, 0LL, 1LL, v29);
  }

  uint64_t v32 = a3[30];
  *(void *)(a1 + a3[29]) = *(void *)(a2 + a3[29]);
  *(void *)(a1 + v3sub_6C3C(v0 + 2) = *(void *)(a2 + v32);
  uint64_t v33 = a3[31];
  uint64_t v34 = (void *)(a1 + v33);
  uint64_t v35 = (const void *)(a2 + v33);
  uint64_t v36 = type metadata accessor for CommonAudio.Sort(0LL);
  uint64_t v37 = *(void *)(v36 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v37 + 48))(v35, 1LL, v36))
  {
    uint64_t v38 = sub_6C5C(&qword_284DC0);
    memcpy(v34, v35, *(void *)(*(void *)(v38 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v37 + 32))(v34, v35, v36);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v37 + 56))(v34, 0LL, 1LL, v36);
  }

  uint64_t v39 = a3[32];
  uint64_t v40 = (void *)(a1 + v39);
  uint64_t v41 = (const void *)(a2 + v39);
  uint64_t v42 = type metadata accessor for CommonAudio.MediaType(0LL);
  uint64_t v43 = *(void *)(v42 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v43 + 48))(v41, 1LL, v42))
  {
    uint64_t v44 = sub_6C5C(&qword_284DC8);
    memcpy(v40, v41, *(void *)(*(void *)(v44 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v43 + 32))(v40, v41, v42);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v43 + 56))(v40, 0LL, 1LL, v42);
  }

  return a1;
}

uint64_t sub_206674(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for NLIntent(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40LL))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = *(void *)(a1 + v7);
  *(void *)(a1 + vsub_6C3C(v0 + 7) = *(void *)(a2 + v7);
  swift_release(v8);
  uint64_t v9 = a3[6];
  uint64_t v10 = *(void *)(a1 + v9);
  *(void *)(a1 + v9) = *(void *)(a2 + v9);
  swift_bridgeObjectRelease(v10);
  uint64_t v11 = a3[7];
  uint64_t v12 = *(void *)(a1 + v11);
  *(void *)(a1 + v11) = *(void *)(a2 + v11);
  swift_bridgeObjectRelease(v12);
  uint64_t v13 = a3[8];
  uint64_t v14 = *(void *)(a1 + v13);
  *(void *)(a1 + v1sub_6C3C(v0 + 3) = *(void *)(a2 + v13);
  swift_bridgeObjectRelease(v14);
  uint64_t v15 = a3[9];
  uint64_t v16 = *(void *)(a1 + v15);
  *(void *)(a1 + v15) = *(void *)(a2 + v15);
  swift_bridgeObjectRelease(v16);
  uint64_t v17 = a3[10];
  uint64_t v18 = *(void *)(a1 + v17);
  *(void *)(a1 + v1sub_6C3C(v0 + 7) = *(void *)(a2 + v17);
  swift_bridgeObjectRelease(v18);
  uint64_t v19 = a3[11];
  uint64_t v20 = (void *)(a1 + v19);
  uint64_t v21 = (uint64_t *)(a2 + v19);
  uint64_t v23 = *v21;
  uint64_t v22 = v21[1];
  uint64_t v24 = v20[1];
  *uint64_t v20 = v23;
  v20[1] = v22;
  swift_bridgeObjectRelease(v24);
  uint64_t v25 = a3[12];
  uint64_t v26 = *(void *)(a1 + v25);
  *(void *)(a1 + v25) = *(void *)(a2 + v25);
  swift_bridgeObjectRelease(v26);
  uint64_t v27 = a3[13];
  uint64_t v28 = *(void *)(a1 + v27);
  *(void *)(a1 + v2sub_6C3C(v0 + 7) = *(void *)(a2 + v27);
  swift_bridgeObjectRelease(v28);
  uint64_t v29 = a3[14];
  uint64_t v30 = *(void *)(a1 + v29);
  *(void *)(a1 + v29) = *(void *)(a2 + v29);
  swift_bridgeObjectRelease(v30);
  uint64_t v31 = a3[15];
  uint64_t v32 = *(void *)(a1 + v31);
  *(void *)(a1 + v31) = *(void *)(a2 + v31);
  swift_bridgeObjectRelease(v32);
  uint64_t v33 = a3[16];
  uint64_t v34 = *(void *)(a1 + v33);
  *(void *)(a1 + v3sub_6C3C(v0 + 3) = *(void *)(a2 + v33);
  swift_bridgeObjectRelease(v34);
  uint64_t v35 = a3[17];
  uint64_t v36 = *(void *)(a1 + v35);
  *(void *)(a1 + v35) = *(void *)(a2 + v35);
  swift_release(v36);
  uint64_t v37 = a3[18];
  uint64_t v38 = (void *)(a1 + v37);
  uint64_t v39 = (void *)(a2 + v37);
  uint64_t v40 = type metadata accessor for CommonAudio.Decade(0LL);
  uint64_t v41 = *(void *)(v40 - 8);
  uint64_t v42 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v41 + 48);
  int v43 = v42(v38, 1LL, v40);
  int v44 = v42(v39, 1LL, v40);
  if (v43)
  {
    if (!v44)
    {
      (*(void (**)(void *, void *, uint64_t))(v41 + 32))(v38, v39, v40);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v41 + 56))(v38, 0LL, 1LL, v40);
      goto LABEL_7;
    }

    goto LABEL_6;
  }

  if (v44)
  {
    (*(void (**)(void *, uint64_t))(v41 + 8))(v38, v40);
LABEL_6:
    uint64_t v45 = sub_6C5C(&qword_284E18);
    memcpy(v38, v39, *(void *)(*(void *)(v45 - 8) + 64LL));
    goto LABEL_7;
  }

  (*(void (**)(void *, void *, uint64_t))(v41 + 40))(v38, v39, v40);
LABEL_7:
  uint64_t v46 = a3[19];
  uint64_t v47 = *(void *)(a1 + v46);
  *(void *)(a1 + v46) = *(void *)(a2 + v46);
  swift_bridgeObjectRelease(v47);
  uint64_t v48 = a3[20];
  uint64_t v49 = *(void *)(a1 + v48);
  *(void *)(a1 + v4sub_6C3C(v0 + 8) = *(void *)(a2 + v48);
  swift_bridgeObjectRelease(v49);
  uint64_t v50 = a3[21];
  uint64_t v51 = a3[22];
  uint64_t v52 = a1 + v50;
  uint64_t v53 = a2 + v50;
  *(void *)uint64_t v52 = *(void *)v53;
  *(_BYTE *)(v52 + sub_6C3C(v0 + 8) = *(_BYTE *)(v53 + 8);
  uint64_t v54 = *(void *)(a1 + v51);
  *(void *)(a1 + v51) = *(void *)(a2 + v51);
  swift_bridgeObjectRelease(v54);
  uint64_t v55 = a3[23];
  uint64_t v56 = *(void *)(a1 + v55);
  *(void *)(a1 + v55) = *(void *)(a2 + v55);
  swift_bridgeObjectRelease(v56);
  uint64_t v57 = a3[24];
  uint64_t v58 = *(void *)(a1 + v57);
  *(void *)(a1 + v5sub_6C3C(v0 + 7) = *(void *)(a2 + v57);
  swift_bridgeObjectRelease(v58);
  uint64_t v59 = a3[25];
  uint64_t v60 = *(void *)(a1 + v59);
  *(void *)(a1 + v59) = *(void *)(a2 + v59);
  swift_bridgeObjectRelease(v60);
  uint64_t v61 = a3[26];
  uint64_t v62 = *(void *)(a1 + v61);
  *(void *)(a1 + v61) = *(void *)(a2 + v61);
  swift_bridgeObjectRelease(v62);
  uint64_t v63 = a3[27];
  uint64_t v64 = *(void *)(a1 + v63);
  *(void *)(a1 + v6sub_6C3C(v0 + 3) = *(void *)(a2 + v63);
  swift_bridgeObjectRelease(v64);
  uint64_t v65 = a3[28];
  uint64_t v66 = (void *)(a1 + v65);
  uint64_t v67 = (void *)(a2 + v65);
  uint64_t v68 = type metadata accessor for CommonAudio.RadioType(0LL);
  uint64_t v69 = *(void *)(v68 - 8);
  uint64_t v70 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v69 + 48);
  int v71 = v70(v66, 1LL, v68);
  int v72 = v70(v67, 1LL, v68);
  if (v71)
  {
    if (!v72)
    {
      (*(void (**)(void *, void *, uint64_t))(v69 + 32))(v66, v67, v68);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v69 + 56))(v66, 0LL, 1LL, v68);
      goto LABEL_13;
    }

    goto LABEL_12;
  }

  if (v72)
  {
    (*(void (**)(void *, uint64_t))(v69 + 8))(v66, v68);
LABEL_12:
    uint64_t v73 = sub_6C5C(&qword_284D98);
    memcpy(v66, v67, *(void *)(*(void *)(v73 - 8) + 64LL));
    goto LABEL_13;
  }

  (*(void (**)(void *, void *, uint64_t))(v69 + 40))(v66, v67, v68);
LABEL_13:
  uint64_t v74 = a3[29];
  uint64_t v75 = *(void *)(a1 + v74);
  *(void *)(a1 + v7sub_6C3C(v0 + 4) = *(void *)(a2 + v74);
  swift_release(v75);
  uint64_t v76 = a3[30];
  uint64_t v77 = *(void *)(a1 + v76);
  *(void *)(a1 + v76) = *(void *)(a2 + v76);
  swift_bridgeObjectRelease(v77);
  uint64_t v78 = a3[31];
  uint64_t v79 = (void *)(a1 + v78);
  uint64_t v80 = (void *)(a2 + v78);
  uint64_t v81 = type metadata accessor for CommonAudio.Sort(0LL);
  uint64_t v82 = *(void *)(v81 - 8);
  uint64_t v83 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v82 + 48);
  int v84 = v83(v79, 1LL, v81);
  int v85 = v83(v80, 1LL, v81);
  if (v84)
  {
    if (!v85)
    {
      (*(void (**)(void *, void *, uint64_t))(v82 + 32))(v79, v80, v81);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v82 + 56))(v79, 0LL, 1LL, v81);
      goto LABEL_19;
    }

    goto LABEL_18;
  }

  if (v85)
  {
    (*(void (**)(void *, uint64_t))(v82 + 8))(v79, v81);
LABEL_18:
    uint64_t v86 = sub_6C5C(&qword_284DC0);
    memcpy(v79, v80, *(void *)(*(void *)(v86 - 8) + 64LL));
    goto LABEL_19;
  }

  (*(void (**)(void *, void *, uint64_t))(v82 + 40))(v79, v80, v81);
LABEL_19:
  uint64_t v87 = a3[32];
  uint64_t v88 = (void *)(a1 + v87);
  uint64_t v89 = (void *)(a2 + v87);
  uint64_t v90 = type metadata accessor for CommonAudio.MediaType(0LL);
  uint64_t v91 = *(void *)(v90 - 8);
  int v92 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v91 + 48);
  int v93 = v92(v88, 1LL, v90);
  int v94 = v92(v89, 1LL, v90);
  if (!v93)
  {
    if (!v94)
    {
      (*(void (**)(void *, void *, uint64_t))(v91 + 40))(v88, v89, v90);
      return a1;
    }

    (*(void (**)(void *, uint64_t))(v91 + 8))(v88, v90);
    goto LABEL_24;
  }

  if (v94)
  {
LABEL_24:
    uint64_t v95 = sub_6C5C(&qword_284DC8);
    memcpy(v88, v89, *(void *)(*(void *)(v95 - 8) + 64LL));
    return a1;
  }

  (*(void (**)(void *, void *, uint64_t))(v91 + 32))(v88, v89, v90);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v91 + 56))(v88, 0LL, 1LL, v90);
  return a1;
}

uint64_t sub_206BE8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_206BF4);
}

uint64_t sub_206BF4(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for NLIntent(0LL);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
    return v9(v10, a2, v8);
  }

  if ((_DWORD)a2 != 0x7FFFFFFF)
  {
    uint64_t v13 = sub_6C5C(&qword_284E18);
    uint64_t v14 = *(void *)(v13 - 8);
    if (*(_DWORD *)(v14 + 84) == (_DWORD)a2)
    {
      uint64_t v8 = v13;
      uint64_t v15 = a3[18];
    }

    else
    {
      uint64_t v16 = sub_6C5C(&qword_284D98);
      uint64_t v14 = *(void *)(v16 - 8);
      if (*(_DWORD *)(v14 + 84) == (_DWORD)a2)
      {
        uint64_t v8 = v16;
        uint64_t v15 = a3[28];
      }

      else
      {
        uint64_t v17 = sub_6C5C(&qword_284DC0);
        uint64_t v14 = *(void *)(v17 - 8);
        if (*(_DWORD *)(v14 + 84) == (_DWORD)a2)
        {
          uint64_t v8 = v17;
          uint64_t v15 = a3[31];
        }

        else
        {
          uint64_t v8 = sub_6C5C(&qword_284DC8);
          uint64_t v14 = *(void *)(v8 - 8);
          uint64_t v15 = a3[32];
        }
      }
    }

    uint64_t v10 = a1 + v15;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v14 + 48);
    return v9(v10, a2, v8);
  }

  unint64_t v11 = *(void *)(a1 + a3[6]);
  if (v11 >= 0xFFFFFFFF) {
    LODWORD(v11) = -1;
  }
  return (v11 + 1);
}

uint64_t sub_206D18(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_206D24);
}

uint64_t sub_206D24(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t result = type metadata accessor for NLIntent(0LL);
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = result;
    unint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
  }

  else
  {
    if (a3 == 0x7FFFFFFF)
    {
      *(void *)(a1 + a4[6]) = (a2 - 1);
      return result;
    }

    uint64_t v13 = sub_6C5C(&qword_284E18);
    uint64_t v14 = *(void *)(v13 - 8);
    if (*(_DWORD *)(v14 + 84) == a3)
    {
      uint64_t v10 = v13;
      uint64_t v15 = a4[18];
    }

    else
    {
      uint64_t v16 = sub_6C5C(&qword_284D98);
      uint64_t v14 = *(void *)(v16 - 8);
      if (*(_DWORD *)(v14 + 84) == a3)
      {
        uint64_t v10 = v16;
        uint64_t v15 = a4[28];
      }

      else
      {
        uint64_t v17 = sub_6C5C(&qword_284DC0);
        uint64_t v14 = *(void *)(v17 - 8);
        if (*(_DWORD *)(v14 + 84) == a3)
        {
          uint64_t v10 = v17;
          uint64_t v15 = a4[31];
        }

        else
        {
          uint64_t v10 = sub_6C5C(&qword_284DC8);
          uint64_t v14 = *(void *)(v10 - 8);
          uint64_t v15 = a4[32];
        }
      }
    }

    uint64_t v12 = a1 + v15;
    unint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }

  return v11(v12, a2, a2, v10);
}

void sub_206E44(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for NLIntent(319LL);
  if (v3 <= 0x3F)
  {
    v12[0] = *(void *)(v2 - 8) + 64LL;
    v12[1] = "\b";
    v12[2] = (char *)&value witness table for Builtin.BridgeObject + 64;
    v12[3] = (char *)&value witness table for Builtin.BridgeObject + 64;
    v12[4] = (char *)&value witness table for Builtin.BridgeObject + 64;
    _OWORD v12[5] = (char *)&value witness table for Builtin.BridgeObject + 64;
    v12[6] = (char *)&value witness table for Builtin.BridgeObject + 64;
    v12[7] = &unk_21C120;
    v12[8] = (char *)&value witness table for Builtin.BridgeObject + 64;
    v12[9] = (char *)&value witness table for Builtin.BridgeObject + 64;
    v12[10] = (char *)&value witness table for Builtin.BridgeObject + 64;
    v12[11] = (char *)&value witness table for Builtin.BridgeObject + 64;
    v12[12] = (char *)&value witness table for Builtin.BridgeObject + 64;
    v12[13] = "\b";
    sub_67DE8(319LL, &qword_287070, (uint64_t (*)(uint64_t))&type metadata accessor for CommonAudio.Decade);
    if (v5 <= 0x3F)
    {
      v12[14] = *(void *)(v4 - 8) + 64LL;
      v12[15] = (char *)&value witness table for Builtin.BridgeObject + 64;
      _BYTE v12[16] = (char *)&value witness table for Builtin.BridgeObject + 64;
      v12[17] = &unk_21C138;
      v12[18] = (char *)&value witness table for Builtin.BridgeObject + 64;
      v12[19] = (char *)&value witness table for Builtin.BridgeObject + 64;
      v12[20] = (char *)&value witness table for Builtin.BridgeObject + 64;
      v12[21] = (char *)&value witness table for Builtin.BridgeObject + 64;
      v12[22] = (char *)&value witness table for Builtin.BridgeObject + 64;
      v12[23] = (char *)&value witness table for Builtin.BridgeObject + 64;
      sub_67DE8( 319LL,  &qword_287080,  (uint64_t (*)(uint64_t))&type metadata accessor for CommonAudio.RadioType);
      if (v7 <= 0x3F)
      {
        _BYTE v12[24] = *(void *)(v6 - 8) + 64LL;
        v12[25] = "\b";
        v12[26] = (char *)&value witness table for Builtin.BridgeObject + 64;
        sub_67DE8(319LL, &qword_287088, (uint64_t (*)(uint64_t))&type metadata accessor for CommonAudio.Sort);
        if (v9 <= 0x3F)
        {
          v12[27] = *(void *)(v8 - 8) + 64LL;
          sub_67DE8( 319LL,  &qword_287060,  (uint64_t (*)(uint64_t))&type metadata accessor for CommonAudio.MediaType);
          if (v11 <= 0x3F)
          {
            v12[28] = *(void *)(v10 - 8) + 64LL;
            swift_initStructMetadata(a1, 256LL, 29LL, v12, a1 + 16);
          }
        }
      }
    }
  }

uint64_t sub_206FC0@<X0>(char *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v142 = a1;
  uint64_t v139 = a2;
  uint64_t v2 = type metadata accessor for Logger(0LL);
  uint64_t v140 = *(void *)(v2 - 8);
  uint64_t v141 = v2;
  uint64_t v3 = __chkstk_darwin(v2);
  id v133 = (char *)&v102 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v5 = __chkstk_darwin(v3);
  uint64_t v132 = (uint8_t *)&v102 - v6;
  __chkstk_darwin(v5);
  uint64_t v137 = (uint64_t)&v102 - v7;
  uint64_t v8 = type metadata accessor for NLIntent(0LL);
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = __chkstk_darwin(v8);
  uint64_t v130 = (char *)&v102 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v12 = __chkstk_darwin(v10);
  uint64_t v131 = (char *)&v102 - v13;
  uint64_t v14 = __chkstk_darwin(v12);
  uint64_t v135 = (char *)&v102 - v15;
  __chkstk_darwin(v14);
  unint64_t v136 = (char *)&v102 - v16;
  uint64_t v17 = type metadata accessor for Parse(0LL);
  uint64_t v18 = *(void *)(v17 - 8);
  uint64_t v19 = __chkstk_darwin(v17);
  uint64_t v103 = (char *)&v102 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v21 = __chkstk_darwin(v19);
  uint64_t v104 = (char *)&v102 - v22;
  __chkstk_darwin(v21);
  uint64_t v24 = (char *)&v102 - v23;
  uint64_t v25 = (int *)type metadata accessor for AudioNLv3Intent(0LL);
  uint64_t v138 = *((void *)v25 - 1);
  uint64_t v26 = (int *)__chkstk_darwin(v25);
  uint64_t v28 = (uint64_t)&v102 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v134 = (void (*)(char *, char *, uint64_t))v26[5];
  *(void *)((char *)v134 + v2sub_6C3C(v0 + 8) = 0LL;
  uint64_t v105 = v26[6];
  *(void *)(v28 + v105) = &_swiftEmptyArrayStorage;
  uint64_t v106 = v26[7];
  *(void *)(v28 + v106) = &_swiftEmptyArrayStorage;
  uint64_t v107 = v26[8];
  *(void *)(v28 + v10sub_6C3C(v0 + 7) = &_swiftEmptyArrayStorage;
  uint64_t v108 = v26[9];
  *(void *)(v28 + v10sub_6C3C(v0 + 8) = &_swiftEmptyArrayStorage;
  uint64_t v109 = v26[10];
  *(void *)(v28 + v109) = &_swiftEmptyArrayStorage;
  uint64_t v29 = (char *)(v28 + v26[11]);
  *(void *)uint64_t v29 = 0LL;
  *((void *)v29 + 1) = 0LL;
  uint64_t v110 = v29;
  uint64_t v111 = v26[12];
  *(void *)(v28 + v111) = &_swiftEmptyArrayStorage;
  uint64_t v112 = v26[13];
  *(void *)(v28 + v11sub_6C3C(v0 + 2) = &_swiftEmptyArrayStorage;
  uint64_t v113 = v26[14];
  *(void *)(v28 + v11sub_6C3C(v0 + 3) = &_swiftEmptyArrayStorage;
  uint64_t v116 = v26[15];
  *(void *)(v28 + v1swift_weakDestroy(v0 + 16) = &_swiftEmptyArrayStorage;
  uint64_t v119 = v26[16];
  *(void *)(v28 + v119) = &_swiftEmptyArrayStorage;
  uint64_t v122 = v26[17];
  *(void *)(v28 + v12sub_6C3C(v0 + 2) = 0LL;
  uint64_t v30 = v28 + v26[18];
  uint64_t v31 = type metadata accessor for CommonAudio.Decade(0LL);
  uint64_t v32 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v31 - 8) + 56LL);
  uint64_t v126 = v30;
  v32(v30, 1LL, 1LL, v31);
  uint64_t v114 = v25[19];
  *(void *)(v28 + v11sub_6C3C(v0 + 4) = &_swiftEmptyArrayStorage;
  uint64_t v117 = v25[20];
  *(void *)(v28 + v11sub_6C3C(v0 + 7) = &_swiftEmptyArrayStorage;
  uint64_t v33 = (char *)(v28 + v25[21]);
  *(void *)uint64_t v33 = 0LL;
  v33[8] = 1;
  uint64_t v115 = v25[22];
  *(void *)(v28 + v115) = &_swiftEmptyArrayStorage;
  uint64_t v118 = v25[23];
  *(void *)(v28 + v11sub_6C3C(v0 + 8) = &_swiftEmptySetSingleton;
  uint64_t v121 = v25[24];
  *(void *)(v28 + v121) = &_swiftEmptyArrayStorage;
  uint64_t v124 = v25[25];
  *(void *)(v28 + v12sub_6C3C(v0 + 4) = &_swiftEmptyArrayStorage;
  uint64_t v127 = v25[26];
  *(void *)(v28 + v12sub_6C3C(v0 + 7) = &_swiftEmptyArrayStorage;
  uint64_t v128 = v25[27];
  *(void *)(v28 + v12sub_6C3C(v0 + 8) = &_swiftEmptyArrayStorage;
  uint64_t v34 = v28 + v25[28];
  uint64_t v35 = type metadata accessor for CommonAudio.RadioType(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v35 - 8) + 56LL))(v34, 1LL, 1LL, v35);
  uint64_t v123 = v25[29];
  *(void *)(v28 + v12sub_6C3C(v0 + 3) = 0LL;
  uint64_t v125 = v25[30];
  *(void *)(v28 + v125) = &_swiftEmptyArrayStorage;
  uint64_t v36 = (char *)(v28 + v25[31]);
  uint64_t v37 = type metadata accessor for CommonAudio.Sort(0LL);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v37 - 8) + 56LL))(v36, 1LL, 1LL, v37);
  uint64_t v38 = v28 + v25[32];
  uint64_t v39 = type metadata accessor for CommonAudio.MediaType(0LL);
  uint64_t v40 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v39 - 8) + 56LL);
  uint64_t v120 = v38;
  v40(v38, 1LL, 1LL, v39);
  uint64_t v41 = *(void (**)(char *, uint64_t, uint64_t))(v18 + 16);
  v41(v24, (uint64_t)v142, v17);
  int v42 = (*(uint64_t (**)(char *, uint64_t))(v18 + 88))(v24, v17);
  if (v42 == enum case for Parse.NLv3IntentOnly(_:))
  {
    (*(void (**)(char *, uint64_t))(v18 + 96))(v24, v17);
    int v43 = v136;
    uint64_t v134 = *(void (**)(char *, char *, uint64_t))(v9 + 32);
    v134(v136, v24, v8);
    uint64_t v44 = v9;
    if (qword_283888 != -1) {
      swift_once(&qword_283888, sub_BFC5C);
    }
    uint64_t v45 = v141;
    uint64_t v46 = sub_6960(v141, (uint64_t)qword_2969C8);
    uint64_t v47 = v140;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v140 + 16))(v137, v46, v45);
    uint64_t v48 = (*(uint64_t (**)(char *, char *, uint64_t))(v44 + 16))(v135, v43, v8);
    uint64_t v49 = v8;
    uint64_t v50 = (os_log_s *)Logger.logObject.getter(v48);
    uint64_t v51 = v44;
    os_log_type_t v52 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v50, v52))
    {
      uint64_t v128 = v51;
      uint64_t v53 = swift_slowAlloc(12LL, -1LL);
      id v133 = (char *)v17;
      uint64_t v54 = (uint8_t *)v53;
      uint64_t v55 = swift_slowAlloc(32LL, -1LL);
      char v144 = (char *)v55;
      uint64_t v129 = v18;
      *(_DWORD *)uint64_t v54 = 136315138;
      uint64_t v132 = v54 + 4;
      uint64_t v56 = sub_10430( (unint64_t *)&unk_289180,  (uint64_t (*)(uint64_t))&type metadata accessor for NLIntent,  (uint64_t)&protocol conformance descriptor for NLIntent);
      uint64_t v57 = v135;
      uint64_t v58 = dispatch thunk of CustomStringConvertible.description.getter(v49, v56);
      unint64_t v60 = v59;
      uint64_t v143 = sub_6978(v58, v59, (uint64_t *)&v144);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v143, &v144);
      swift_bridgeObjectRelease(v60);
      (*(void (**)(char *, uint64_t))(v128 + 8))(v57, v49);
      _os_log_impl( &dword_0,  v50,  v52,  "AudioNLv3Intent#init unpacking AudioNLv3Intent from NLv3IntentOnly: %s",  v54,  0xCu);
      swift_arrayDestroy(v55, 1LL, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v55, -1LL, -1LL);
      uint64_t v61 = v54;
      uint64_t v62 = v139;
      swift_slowDealloc(v61, -1LL, -1LL);

      (*(void (**)(char *, char *))(v129 + 8))(v142, v133);
      (*(void (**)(uint64_t, uint64_t))(v140 + 8))(v137, v141);
    }

    else
    {

      (*(void (**)(char *, uint64_t))(v51 + 8))(v135, v49);
      (*(void (**)(char *, uint64_t))(v18 + 8))(v142, v17);
      (*(void (**)(uint64_t, uint64_t))(v47 + 8))(v137, v45);
      uint64_t v62 = v139;
    }

    v134((char *)v28, v136, v49);
LABEL_19:
    sub_FE7FC(v28, v62);
    (*(void (**)(uint64_t, void, uint64_t, int *))(v138 + 56))(v62, 0LL, 1LL, v25);
    return sub_DD994(v28);
  }

  if (v42 == enum case for Parse.NLv3IntentPlusServerConversion(_:))
  {
    (*(void (**)(char *, uint64_t))(v18 + 96))(v24, v17);
    uint64_t v63 = *(void *)&v24[*(int *)(sub_6C5C(&qword_284618) + 48)];
    uint64_t v64 = v9;
    uint64_t v65 = v131;
    unint64_t v136 = *(char **)(v9 + 32);
    uint64_t v137 = v63;
    ((void (*)(char *, char *, uint64_t))v136)(v131, v24, v8);
    if (qword_283888 != -1) {
      swift_once(&qword_283888, sub_BFC5C);
    }
    uint64_t v66 = v141;
    uint64_t v67 = sub_6960(v141, (uint64_t)qword_2969C8);
    uint64_t v68 = v140;
    (*(void (**)(uint8_t *, uint64_t, uint64_t))(v140 + 16))(v132, v67, v66);
    uint64_t v69 = (*(uint64_t (**)(char *, char *, uint64_t))(v64 + 16))(v130, v65, v8);
    uint64_t v70 = v8;
    uint64_t v71 = v64;
    int v72 = (os_log_s *)Logger.logObject.getter(v69);
    os_log_type_t v73 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v72, v73))
    {
      uint64_t v128 = v71;
      uint64_t v74 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
      uint64_t v75 = swift_slowAlloc(32LL, -1LL);
      uint64_t v129 = v18;
      uint64_t v76 = v75;
      char v144 = (char *)v75;
      id v133 = (char *)v17;
      *(_DWORD *)uint64_t v74 = 136315138;
      uint64_t v135 = (char *)(v74 + 4);
      uint64_t v77 = sub_10430( (unint64_t *)&unk_289180,  (uint64_t (*)(uint64_t))&type metadata accessor for NLIntent,  (uint64_t)&protocol conformance descriptor for NLIntent);
      uint64_t v78 = v130;
      uint64_t v79 = dispatch thunk of CustomStringConvertible.description.getter(v70, v77);
      unint64_t v81 = v80;
      uint64_t v143 = sub_6978(v79, v80, (uint64_t *)&v144);
      uint64_t v62 = v139;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v143, &v144);
      swift_bridgeObjectRelease(v81);
      (*(void (**)(char *, uint64_t))(v128 + 8))(v78, v70);
      _os_log_impl( &dword_0,  v72,  v73,  "AudioNLv3Intent#init unpacking AudioNLv3Intent from NLv3IntentPlusServerConversion: %s",  v74,  0xCu);
      swift_arrayDestroy(v76, 1LL, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v76, -1LL, -1LL);
      swift_slowDealloc(v74, -1LL, -1LL);

      (*(void (**)(char *, char *))(v129 + 8))(v142, v133);
      (*(void (**)(uint8_t *, uint64_t))(v140 + 8))(v132, v141);
    }

    else
    {

      (*(void (**)(char *, uint64_t))(v71 + 8))(v130, v70);
      (*(void (**)(char *, uint64_t))(v18 + 8))(v142, v17);
      (*(void (**)(uint8_t *, uint64_t))(v68 + 8))(v132, v66);
      uint64_t v62 = v139;
    }

    ((void (*)(uint64_t, char *, uint64_t))v136)(v28, v131, v70);
    uint64_t v100 = v134;
    swift_release(*(void *)((char *)v134 + v28));
    *(void *)((char *)v100 + v2sub_6C3C(v0 + 8) = v137;
    goto LABEL_19;
  }

  unint64_t v136 = v36;
  uint64_t v137 = v34;
  uint64_t v129 = v18;
  uint64_t v82 = v142;
  if (qword_283888 != -1) {
    swift_once(&qword_283888, sub_BFC5C);
  }
  uint64_t v83 = v141;
  uint64_t v84 = sub_6960(v141, (uint64_t)qword_2969C8);
  (*(void (**)(char *, uint64_t, uint64_t))(v140 + 16))(v133, v84, v83);
  int v85 = v104;
  uint64_t v86 = ((uint64_t (*)(char *, char *, uint64_t))v41)(v104, v82, v17);
  uint64_t v87 = (os_log_s *)Logger.logObject.getter(v86);
  os_log_type_t v88 = static os_log_type_t.error.getter();
  uint64_t v89 = v17;
  if (os_log_type_enabled(v87, v88))
  {
    uint64_t v90 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
    uint64_t v135 = (char *)swift_slowAlloc(32LL, -1LL);
    char v144 = v135;
    uint64_t v132 = v90;
    *(_DWORD *)uint64_t v90 = 136315138;
    uint64_t v131 = (char *)(v90 + 4);
    uint64_t v91 = v103;
    v41(v103, (uint64_t)v85, v89);
    uint64_t v92 = String.init<A>(describing:)(v91, v89);
    unint64_t v94 = v93;
    uint64_t v143 = sub_6978(v92, v93, (uint64_t *)&v144);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v143, &v144);
    swift_bridgeObjectRelease(v94);
    uint64_t v95 = *(void (**)(char *, uint64_t))(v129 + 8);
    v95(v85, v89);
    os_log_type_t v96 = v88;
    uint64_t v97 = v132;
    _os_log_impl( &dword_0,  v87,  v96,  "AudioNLv3Intent#init Unsupported parse while creating AudioNLv3Intent: %s",  v132,  0xCu);
    uint64_t v98 = v135;
    swift_arrayDestroy(v135, 1LL, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v98, -1LL, -1LL);
    swift_slowDealloc(v97, -1LL, -1LL);

    uint64_t v99 = v142;
  }

  else
  {

    uint64_t v95 = *(void (**)(char *, uint64_t))(v129 + 8);
    v95(v85, v89);
    uint64_t v99 = v82;
  }

  v95(v99, v89);
  (*(void (**)(char *, uint64_t))(v140 + 8))(v133, v141);
  v95(v24, v89);
  swift_release(*(void *)((char *)v134 + v28));
  swift_bridgeObjectRelease(*(void *)(v28 + v105));
  swift_bridgeObjectRelease(*(void *)(v28 + v106));
  swift_bridgeObjectRelease(*(void *)(v28 + v107));
  swift_bridgeObjectRelease(*(void *)(v28 + v108));
  swift_bridgeObjectRelease(*(void *)(v28 + v109));
  swift_bridgeObjectRelease(*((void *)v110 + 1));
  swift_bridgeObjectRelease(*(void *)(v28 + v111));
  swift_bridgeObjectRelease(*(void *)(v28 + v112));
  swift_bridgeObjectRelease(*(void *)(v28 + v113));
  swift_bridgeObjectRelease(*(void *)(v28 + v116));
  swift_bridgeObjectRelease(*(void *)(v28 + v119));
  swift_release(*(void *)(v28 + v122));
  sub_1F6CC(v126, &qword_284E18);
  swift_bridgeObjectRelease(*(void *)(v28 + v114));
  swift_bridgeObjectRelease(*(void *)(v28 + v117));
  swift_bridgeObjectRelease(*(void *)(v28 + v115));
  swift_bridgeObjectRelease(*(void *)(v28 + v118));
  swift_bridgeObjectRelease(*(void *)(v28 + v121));
  swift_bridgeObjectRelease(*(void *)(v28 + v124));
  swift_bridgeObjectRelease(*(void *)(v28 + v127));
  swift_bridgeObjectRelease(*(void *)(v28 + v128));
  sub_1F6CC(v137, &qword_284D98);
  swift_release(*(void *)(v28 + v123));
  swift_bridgeObjectRelease(*(void *)(v28 + v125));
  sub_1F6CC((uint64_t)v136, &qword_284DC0);
  sub_1F6CC(v120, &qword_284DC8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, int *))(v138 + 56))(v139, 1LL, 1LL, v25);
}

BOOL sub_207D38()
{
  uint64_t v1 = sub_6C5C(&qword_284D88);
  __chkstk_darwin(v1);
  uint64_t v77 = (char *)&v75 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v84 = type metadata accessor for CommonAudio.MediaType(0LL);
  uint64_t v82 = *(void *)(v84 - 8);
  __chkstk_darwin(v84);
  uint64_t v75 = (char *)&v75 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v81 = sub_6C5C(&qword_284DA0);
  __chkstk_darwin(v81);
  uint64_t v83 = (uint64_t)&v75 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v5 = sub_6C5C(&qword_284DC8);
  uint64_t v6 = __chkstk_darwin(v5);
  uint64_t v78 = (uint64_t)&v75 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v8 = __chkstk_darwin(v6);
  uint64_t v85 = (uint64_t)&v75 - v9;
  __chkstk_darwin(v8);
  uint64_t v91 = (char *)&v75 - v10;
  uint64_t v11 = type metadata accessor for AudioNLv3Intent(0LL);
  uint64_t v12 = __chkstk_darwin(v11);
  uint64_t v86 = (char *)&v75 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v14 = __chkstk_darwin(v12);
  uint64_t v89 = (char *)&v75 - v15;
  uint64_t v16 = __chkstk_darwin(v14);
  uint64_t v88 = (uint64_t)&v75 - v17;
  __chkstk_darwin(v16);
  uint64_t v90 = (uint64_t)&v75 - v18;
  uint64_t v19 = type metadata accessor for CommonAudio.Verb(0LL);
  uint64_t v20 = *(void *)(v19 - 8);
  __chkstk_darwin(v19);
  unint64_t v80 = (char *)&v75 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v22 = sub_6C5C(&qword_284DA8);
  __chkstk_darwin(v22);
  uint64_t v24 = (char *)&v75 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v25 = sub_6C5C(&qword_284DB0);
  uint64_t v26 = __chkstk_darwin(v25);
  uint64_t v28 = (char *)&v75 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v29 = __chkstk_darwin(v26);
  uint64_t v31 = (char *)&v75 - v30;
  __chkstk_darwin(v29);
  uint64_t v33 = (char *)&v75 - v32;
  if (qword_2839D0 != -1) {
    swift_once(&qword_2839D0, sub_209354);
  }
  uint64_t v34 = qword_28E990;
  uint64_t v35 = sub_10430(&qword_289178, type metadata accessor for AudioNLv3Intent, (uint64_t)&unk_21C3B8);
  uint64_t v79 = v11;
  uint64_t v76 = v35;
  IntentNodeTraversable.value<A>(forNode:)((uint64_t *)((char *)&v92 + 2), v34, v11, v35);
  uint64_t v87 = v0;
  if (BYTE2(v92) == 11)
  {
    uint64_t v36 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v20 + 56);
    v36(v33, 1LL, 1LL, v19);
  }

  else
  {
    sub_C09BC(SBYTE2(v92));
    uint64_t v36 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v20 + 56);
    v36(v33, 0LL, 1LL, v19);
  }

  uint64_t v37 = v91;
  (*(void (**)(char *, void, uint64_t))(v20 + 104))(v31, enum case for CommonAudio.Verb.shuffle(_:), v19);
  v36(v31, 0LL, 1LL, v19);
  uint64_t v38 = (uint64_t)&v24[*(int *)(v22 + 48)];
  sub_FF10((uint64_t)v33, (uint64_t)v24, &qword_284DB0);
  sub_FF10((uint64_t)v31, v38, &qword_284DB0);
  uint64_t v39 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v20 + 48);
  if (v39((uint64_t)v24, 1LL, v19) == 1)
  {
    sub_1F6CC((uint64_t)v31, &qword_284DB0);
    sub_1F6CC((uint64_t)v33, &qword_284DB0);
    int v40 = v39(v38, 1LL, v19);
    uint64_t v41 = v87;
    if (v40 == 1)
    {
      sub_1F6CC((uint64_t)v24, &qword_284DB0);
      uint64_t v42 = v90;
      sub_FE7FC(v41, v90);
      goto LABEL_13;
    }

    goto LABEL_11;
  }

  sub_FF10((uint64_t)v24, (uint64_t)v28, &qword_284DB0);
  if (v39(v38, 1LL, v19) == 1)
  {
    sub_1F6CC((uint64_t)v31, &qword_284DB0);
    sub_1F6CC((uint64_t)v33, &qword_284DB0);
    (*(void (**)(char *, uint64_t))(v20 + 8))(v28, v19);
    uint64_t v41 = v87;
LABEL_11:
    sub_1F6CC((uint64_t)v24, &qword_284DA8);
    uint64_t v42 = v90;
    sub_FE7FC(v41, v90);
    uint64_t v44 = v88;
    uint64_t v43 = (uint64_t)v89;
LABEL_16:
    sub_DD994(v42);
    uint64_t v58 = (uint64_t)v86;
LABEL_20:
    sub_FE7FC(v41, v44);
LABEL_21:
    sub_DD994(v44);
    sub_FE7FC(v41, v43);
LABEL_22:
    sub_DD994(v43);
    sub_FE7FC(v41, v58);
LABEL_23:
    BOOL v60 = 0LL;
    goto LABEL_24;
  }

  uint64_t v45 = v80;
  (*(void (**)(char *, uint64_t, uint64_t))(v20 + 32))(v80, v38, v19);
  uint64_t v46 = sub_10430( (unint64_t *)&qword_284E08,  (uint64_t (*)(uint64_t))&type metadata accessor for CommonAudio.Verb,  (uint64_t)&protocol conformance descriptor for CommonAudio.Verb);
  char v47 = dispatch thunk of static Equatable.== infix(_:_:)(v28, v45, v19, v46);
  uint64_t v48 = *(void (**)(char *, uint64_t))(v20 + 8);
  v48(v45, v19);
  sub_1F6CC((uint64_t)v31, &qword_284DB0);
  sub_1F6CC((uint64_t)v33, &qword_284DB0);
  v48(v28, v19);
  sub_1F6CC((uint64_t)v24, &qword_284DB0);
  uint64_t v41 = v87;
  uint64_t v42 = v90;
  sub_FE7FC(v87, v90);
  uint64_t v44 = v88;
  uint64_t v43 = (uint64_t)v89;
  if ((v47 & 1) == 0) {
    goto LABEL_16;
  }
LABEL_13:
  sub_209124(v37);
  uint64_t v49 = v82;
  uint64_t v50 = v85;
  uint64_t v51 = (uint64_t)v37;
  uint64_t v52 = v84;
  (*(void (**)(uint64_t, void, uint64_t))(v82 + 104))( v85,  enum case for CommonAudio.MediaType.music(_:),  v84);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v49 + 56))(v50, 0LL, 1LL, v52);
  uint64_t v53 = v83;
  uint64_t v54 = v83 + *(int *)(v81 + 48);
  sub_FF10(v51, v83, &qword_284DC8);
  sub_FF10(v50, v54, &qword_284DC8);
  uint64_t v55 = v42;
  uint64_t v56 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v49 + 48);
  if (v56(v53, 1LL, v52) == 1)
  {
    sub_1F6CC(v50, &qword_284DC8);
    sub_1F6CC(v51, &qword_284DC8);
    sub_DD994(v55);
    int v57 = v56(v54, 1LL, v52);
    uint64_t v44 = v88;
    uint64_t v43 = (uint64_t)v89;
    uint64_t v58 = (uint64_t)v86;
    if (v57 == 1)
    {
      sub_1F6CC(v53, &qword_284DC8);
      sub_FE7FC(v41, v44);
      goto LABEL_26;
    }

    goto LABEL_19;
  }

  uint64_t v59 = v78;
  sub_FF10(v53, v78, &qword_284DC8);
  if (v56(v54, 1LL, v52) == 1)
  {
    sub_1F6CC(v85, &qword_284DC8);
    sub_1F6CC((uint64_t)v91, &qword_284DC8);
    sub_DD994(v90);
    (*(void (**)(uint64_t, uint64_t))(v49 + 8))(v59, v52);
    uint64_t v44 = v88;
    uint64_t v43 = (uint64_t)v89;
    uint64_t v58 = (uint64_t)v86;
LABEL_19:
    sub_1F6CC(v53, &qword_284DA0);
    goto LABEL_20;
  }

  uint64_t v62 = v75;
  (*(void (**)(char *, uint64_t, uint64_t))(v49 + 32))(v75, v54, v52);
  uint64_t v63 = sub_10430( &qword_284DF8,  (uint64_t (*)(uint64_t))&type metadata accessor for CommonAudio.MediaType,  (uint64_t)&protocol conformance descriptor for CommonAudio.MediaType);
  LODWORD(v81) = dispatch thunk of static Equatable.== infix(_:_:)(v59, v62, v52, v63);
  uint64_t v64 = *(void (**)(char *, uint64_t))(v49 + 8);
  v64(v62, v52);
  sub_1F6CC(v85, &qword_284DC8);
  sub_1F6CC((uint64_t)v91, &qword_284DC8);
  sub_DD994(v90);
  v64((char *)v59, v52);
  sub_1F6CC(v53, &qword_284DC8);
  uint64_t v44 = v88;
  sub_FE7FC(v41, v88);
  uint64_t v43 = (uint64_t)v89;
  uint64_t v58 = (uint64_t)v86;
  if ((v81 & 1) == 0) {
    goto LABEL_21;
  }
LABEL_26:
  if (qword_2839D8 != -1) {
    swift_once(&qword_2839D8, sub_2093B8);
  }
  uint64_t v65 = v79;
  uint64_t v66 = v76;
  IntentNodeTraversable.value<A>(forNode:)(&v92, qword_28E998, v79, v76);
  if ((v92 & 1) != 0)
  {
    uint64_t v67 = type metadata accessor for CommonAudio.Noun(0LL);
    uint64_t v68 = (uint64_t)v77;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v67 - 8) + 56LL))(v77, 1LL, 1LL, v67);
  }

  else
  {
    uint64_t v69 = enum case for CommonAudio.Noun.library(_:);
    uint64_t v67 = type metadata accessor for CommonAudio.Noun(0LL);
    uint64_t v70 = *(void *)(v67 - 8);
    uint64_t v68 = (uint64_t)v77;
    uint64_t v71 = v69;
    uint64_t v65 = v79;
    (*(void (**)(char *, uint64_t, uint64_t))(v70 + 104))(v77, v71, v67);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v70 + 56))(v68, 0LL, 1LL, v67);
  }

  sub_DD994(v44);
  type metadata accessor for CommonAudio.Noun(0LL);
  int v72 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v67 - 8) + 48LL))(v68, 1LL, v67);
  sub_1F6CC(v68, &qword_284D88);
  sub_FE7FC(v41, v43);
  if (v72 != 1) {
    goto LABEL_22;
  }
  os_log_type_t v73 = sub_20A2F8();
  uint64_t v74 = v73[2];
  swift_bridgeObjectRelease(v73);
  sub_DD994(v43);
  sub_FE7FC(v41, v58);
  if (v74) {
    goto LABEL_23;
  }
  if (qword_283A20 != -1) {
    swift_once(&qword_283A20, sub_209704);
  }
  IntentNodeTraversable.value<A>(forNode:)((uint64_t *)((char *)&v92 + 1), qword_28E9E0, v65, v66);
  BOOL v60 = BYTE1(v92) == 4;
LABEL_24:
  sub_DD994(v58);
  return v60;
}

uint64_t sub_208724@<X0>(uint64_t a1@<X8>)
{
  if (qword_2839D0 != -1) {
    swift_once(&qword_2839D0, sub_209354);
  }
  uint64_t v2 = qword_28E990;
  uint64_t v3 = type metadata accessor for AudioNLv3Intent(0LL);
  uint64_t v4 = sub_10430(&qword_289178, type metadata accessor for AudioNLv3Intent, (uint64_t)&unk_21C3B8);
  IntentNodeTraversable.value<A>(forNode:)(&v8, v2, v3, v4);
  if (v8 == 11)
  {
    uint64_t v5 = type metadata accessor for CommonAudio.Verb(0LL);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 56LL))( a1,  1LL,  1LL,  v5);
  }

  else
  {
    sub_C09BC(v8);
    uint64_t v7 = type metadata accessor for CommonAudio.Verb(0LL);
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56LL))(a1, 0LL, 1LL, v7);
  }

uint64_t sub_208814()
{
  uint64_t v1 = type metadata accessor for Logger(0LL);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = __chkstk_darwin(v1);
  uint64_t v5 = (char *)&v41 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v3);
  uint64_t v7 = (char *)&v41 - v6;
  uint64_t v8 = type metadata accessor for AudioNLv3Intent(0LL);
  if (*(void *)(v0 + *(int *)(v8 + 20)))
  {
    uint64_t v9 = (void *)Parse.ServerConversion.siriKitIntent.getter(v8);
    uint64_t v10 = objc_opt_self(&OBJC_CLASS___INPlayMediaIntent);
    uint64_t v11 = (void *)swift_dynamicCastObjCClass(v9, v10);
    if (v11)
    {
      id v12 = [v11 privatePlayMediaIntentData];
      if (v12)
      {
        uint64_t v13 = v12;
        id v14 = [v12 audioSearchResults];

        if (v14)
        {
          unint64_t v15 = sub_687D0();
          uint64_t v16 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v14, v15);

          if ((unint64_t)v16 >> 62)
          {
LABEL_40:
            if (v16 < 0) {
              uint64_t v35 = v16;
            }
            else {
              uint64_t v35 = v16 & 0xFFFFFFFFFFFFFF8LL;
            }
            swift_bridgeObjectRetain(v16);
            uint64_t v5 = (char *)_CocoaArrayWrapper.endIndex.getter(v35);
            swift_bridgeObjectRelease(v16);
            if (v5) {
              goto LABEL_7;
            }
          }

          else
          {
            uint64_t v5 = *(char **)((char *)&dword_10 + (v16 & 0xFFFFFFFFFFFFF8LL));
            if (v5)
            {
LABEL_7:
              uint64_t v17 = 0LL;
              uint64_t v41 = v16 + 32;
              uint64_t v42 = v16 & 0xFFFFFFFFFFFFFF8LL;
              do
              {
                if ((v16 & 0xC000000000000001LL) != 0)
                {
                  id v18 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v17, v16);
                }

                else
                {
                  id v18 = *(id *)(v41 + 8LL * (void)v17);
                }

                uint64_t v19 = v18;
                if (__OFADD__(v17++, 1LL))
                {
                  __break(1u);
LABEL_39:
                  __break(1u);
                  goto LABEL_40;
                }

                if (qword_283948 != -1) {
                  swift_once(&qword_283948, sub_191EF4);
                }
                uint64_t v21 = (void *)qword_296B40;
                id v22 = objc_msgSend(v19, "type", swift_bridgeObjectRetain(qword_296B40).n128_f64[0]);
                uint64_t v23 = v21[2];
                if (v23)
                {
                  if ((id)v21[4] == v22) {
                    goto LABEL_33;
                  }
                  if (v23 != 1)
                  {
                    if ((id)v21[5] == v22)
                    {
LABEL_33:
                      swift_bridgeObjectRelease(v16);
                      id v33 = objc_msgSend(v19, "identifier", swift_bridgeObjectRelease(v21).n128_f64[0]);
                      if (v33)
                      {
                        uint64_t v34 = v33;
                        uint64_t v31 = static String._unconditionallyBridgeFromObjectiveC(_:)(v33);

                        return v31;
                      }

                      return 0LL;
                    }

                    if (v23 != 2)
                    {
                      uint64_t v24 = 6LL;
                      while (1)
                      {
                        uint64_t v25 = v24 - 3;
                        if (__OFADD__(v24 - 4, 1LL)) {
                          break;
                        }
                        if ((id)v21[v24] == v22) {
                          goto LABEL_33;
                        }
                        ++v24;
                        if (v25 == v23) {
                          goto LABEL_8;
                        }
                      }

                      __break(1u);
                      goto LABEL_37;
                    }
                  }
                }

uint64_t sub_208C9C()
{
  uint64_t v1 = type metadata accessor for Logger(0LL);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = __chkstk_darwin(v1);
  uint64_t v5 = (char *)&v41 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v3);
  uint64_t v7 = (char *)&v41 - v6;
  uint64_t v8 = type metadata accessor for AudioNLv3Intent(0LL);
  if (*(void *)(v0 + *(int *)(v8 + 20)))
  {
    uint64_t v9 = (void *)Parse.ServerConversion.siriKitIntent.getter(v8);
    uint64_t v10 = objc_opt_self(&OBJC_CLASS___INPlayMediaIntent);
    uint64_t v11 = (void *)swift_dynamicCastObjCClass(v9, v10);
    if (v11)
    {
      id v12 = [v11 privatePlayMediaIntentData];
      if (v12)
      {
        uint64_t v13 = v12;
        id v14 = [v12 audioSearchResults];

        if (v14)
        {
          unint64_t v15 = sub_687D0();
          uint64_t v16 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v14, v15);

          if ((unint64_t)v16 >> 62)
          {
LABEL_40:
            if (v16 < 0) {
              uint64_t v35 = v16;
            }
            else {
              uint64_t v35 = v16 & 0xFFFFFFFFFFFFFF8LL;
            }
            swift_bridgeObjectRetain(v16);
            uint64_t v5 = (char *)_CocoaArrayWrapper.endIndex.getter(v35);
            swift_bridgeObjectRelease(v16);
            if (v5) {
              goto LABEL_7;
            }
          }

          else
          {
            uint64_t v5 = *(char **)((char *)&dword_10 + (v16 & 0xFFFFFFFFFFFFF8LL));
            if (v5)
            {
LABEL_7:
              uint64_t v17 = 0LL;
              uint64_t v41 = v16 + 32;
              uint64_t v42 = v16 & 0xFFFFFFFFFFFFFF8LL;
              do
              {
                if ((v16 & 0xC000000000000001LL) != 0)
                {
                  id v18 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v17, v16);
                }

                else
                {
                  id v18 = *(id *)(v41 + 8LL * (void)v17);
                }

                uint64_t v19 = v18;
                if (__OFADD__(v17++, 1LL))
                {
                  __break(1u);
LABEL_39:
                  __break(1u);
                  goto LABEL_40;
                }

                if (qword_283950 != -1) {
                  swift_once(&qword_283950, sub_191F08);
                }
                uint64_t v21 = (void *)qword_296B48;
                id v22 = objc_msgSend(v19, "type", swift_bridgeObjectRetain(qword_296B48).n128_f64[0]);
                uint64_t v23 = v21[2];
                if (v23)
                {
                  if ((id)v21[4] == v22) {
                    goto LABEL_33;
                  }
                  if (v23 != 1)
                  {
                    if ((id)v21[5] == v22)
                    {
LABEL_33:
                      swift_bridgeObjectRelease(v16);
                      id v33 = objc_msgSend(v19, "identifier", swift_bridgeObjectRelease(v21).n128_f64[0]);
                      if (v33)
                      {
                        uint64_t v34 = v33;
                        uint64_t v31 = static String._unconditionallyBridgeFromObjectiveC(_:)(v33);

                        return v31;
                      }

                      return 0LL;
                    }

                    if (v23 != 2)
                    {
                      uint64_t v24 = 6LL;
                      while (1)
                      {
                        uint64_t v25 = v24 - 3;
                        if (__OFADD__(v24 - 4, 1LL)) {
                          break;
                        }
                        if ((id)v21[v24] == v22) {
                          goto LABEL_33;
                        }
                        ++v24;
                        if (v25 == v23) {
                          goto LABEL_8;
                        }
                      }

                      __break(1u);
                      goto LABEL_37;
                    }
                  }
                }

uint64_t sub_209124@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v2 = type metadata accessor for CommonAudio.MediaType(0LL);
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = __chkstk_darwin(v2);
  uint64_t v6 = &v19[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL)];
  __chkstk_darwin(v4);
  uint64_t v8 = &v19[-v7];
  if (qword_2839E0 != -1) {
    swift_once(&qword_2839E0, sub_20941C);
  }
  uint64_t v9 = qword_28E9A0;
  uint64_t v10 = type metadata accessor for AudioNLv3Intent(0LL);
  uint64_t v11 = sub_10430(&qword_289178, type metadata accessor for AudioNLv3Intent, (uint64_t)&unk_21C3B8);
  IntentNodeTraversable.value<A>(forNode:)((uint64_t *)((char *)&v20 + 1), v9, v10, v11);
  if (BYTE1(v20) == 25)
  {
    if (qword_283A08 != -1) {
      swift_once(&qword_283A08, sub_2095E8);
    }
    IntentNodeTraversable.value<A>(forNode:)(&v20, qword_28E9C8, v10, v11);
    if (v20 != 14)
    {
      uint64_t v12 = sub_67428(v20);
      uint64_t v14 = v13;
      if (v12 == 0x747369747261LL && v13 == 0xE600000000000000LL)
      {
        swift_bridgeObjectRelease(0xE600000000000000LL);
LABEL_12:
        (*(void (**)(_BYTE *, void, uint64_t))(v3 + 104))( a1,  enum case for CommonAudio.MediaType.artist(_:),  v2);
        uint64_t v16 = 0LL;
        return (*(uint64_t (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v3 + 56))(a1, v16, 1LL, v2);
      }

      char v17 = _stringCompareWithSmolCheck(_:_:expecting:)(v12, v13);
      swift_bridgeObjectRelease(v14);
      if ((v17 & 1) != 0) {
        goto LABEL_12;
      }
    }

    uint64_t v16 = 1LL;
    return (*(uint64_t (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v3 + 56))(a1, v16, 1LL, v2);
  }

  sub_1C5E84(SBYTE1(v20));
  unint64_t v15 = *(void (**)(_BYTE *, _BYTE *, uint64_t))(v3 + 32);
  v15(v8, v6, v2);
  v15(a1, v8, v2);
  uint64_t v16 = 0LL;
  return (*(uint64_t (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v3 + 56))(a1, v16, 1LL, v2);
}

uint64_t sub_209354()
{
  uint64_t v0 = sub_6C5C(&qword_28EB60);
  swift_allocObject(v0, *(unsigned int *)(v0 + 48), *(unsigned __int16 *)(v0 + 52));
  uint64_t result = TerminalOntologyNode.init(name:multicardinal:)(0x616C50616964656DLL, 0xEF62726556726579LL, 0LL);
  qword_28E990 = result;
  return result;
}

uint64_t sub_2093B8()
{
  uint64_t v0 = sub_6C5C(&qword_28EB70);
  swift_allocObject(v0, *(unsigned int *)(v0 + 48), *(unsigned __int16 *)(v0 + 52));
  uint64_t result = TerminalOntologyNode.init(name:multicardinal:)(0x616C50616964656DLL, 0xEF6E756F4E726579LL, 0LL);
  qword_28E998 = result;
  return result;
}

uint64_t sub_20941C()
{
  uint64_t v0 = sub_6C5C(&qword_28EB80);
  swift_allocObject(v0, *(unsigned int *)(v0 + 48), *(unsigned __int16 *)(v0 + 52));
  uint64_t result = TerminalOntologyNode.init(name:multicardinal:)(0x707954616964656DLL, 0xE900000000000065LL, 0LL);
  qword_28E9A0 = result;
  return result;
}

uint64_t sub_209478()
{
  uint64_t v0 = sub_6C5C(&qword_28EB90);
  swift_allocObject(v0, *(unsigned int *)(v0 + 48), *(unsigned __int16 *)(v0 + 52));
  uint64_t result = TerminalOntologyNode.init(name:multicardinal:)(0x6449616964656DLL, 0xE700000000000000LL, 0LL);
  qword_28E9A8 = result;
  return result;
}

uint64_t sub_2094D0()
{
  uint64_t v0 = sub_6C5C(&qword_28EB90);
  swift_allocObject(v0, *(unsigned int *)(v0 + 48), *(unsigned __int16 *)(v0 + 52));
  uint64_t result = TerminalOntologyNode.init(name:multicardinal:)(0x747241636973756DLL, 0xEB00000000747369LL, 0LL);
  qword_28E9B0 = result;
  return result;
}

uint64_t sub_209530()
{
  uint64_t v0 = sub_6C5C(&qword_28EBA0);
  swift_allocObject(v0, *(unsigned int *)(v0 + 48), *(unsigned __int16 *)(v0 + 52));
  uint64_t result = TerminalOntologyNode.init(name:multicardinal:)(0xD000000000000015LL, 0x800000000021F000LL, 0LL);
  qword_28E9B8 = result;
  return result;
}

uint64_t sub_20958C()
{
  uint64_t v0 = sub_6C5C(&qword_28EBB0);
  swift_allocObject(v0, *(unsigned int *)(v0 + 48), *(unsigned __int16 *)(v0 + 52));
  uint64_t result = TerminalOntologyNode.init(name:multicardinal:)(0xD000000000000014LL, 0x800000000021EB80LL, 0LL);
  qword_28E9C0 = result;
  return result;
}

uint64_t sub_2095E8()
{
  uint64_t v0 = sub_6C5C(&qword_28EBC0);
  swift_allocObject(v0, *(unsigned int *)(v0 + 48), *(unsigned __int16 *)(v0 + 52));
  uint64_t result = TerminalOntologyNode.init(name:multicardinal:)(0xD000000000000015LL, 0x8000000000224460LL, 0LL);
  qword_28E9C8 = result;
  return result;
}

uint64_t sub_209644()
{
  uint64_t v0 = sub_6C5C(&qword_28EBD0);
  swift_allocObject(v0, *(unsigned int *)(v0 + 48), *(unsigned __int16 *)(v0 + 52));
  uint64_t result = TerminalOntologyNode.init(name:multicardinal:)(0xD000000000000017LL, 0x800000000021F020LL, 0LL);
  qword_28E9D0 = result;
  return result;
}

uint64_t sub_2096A0()
{
  uint64_t v0 = sub_6C5C(&qword_28EB90);
  swift_allocObject(v0, *(unsigned int *)(v0 + 48), *(unsigned __int16 *)(v0 + 52));
  uint64_t result = TerminalOntologyNode.init(name:multicardinal:)(0x7473696C79616C70LL, 0xED0000656C746954LL, 0LL);
  qword_28E9D8 = result;
  return result;
}

uint64_t sub_209704()
{
  uint64_t v0 = sub_6C5C(&qword_28EBE0);
  swift_allocObject(v0, *(unsigned int *)(v0 + 48), *(unsigned __int16 *)(v0 + 52));
  uint64_t result = TerminalOntologyNode.init(name:multicardinal:)(0xD00000000000001ALL, 0x8000000000224440LL, 0LL);
  qword_28E9E0 = result;
  return result;
}

uint64_t sub_209760()
{
  uint64_t v0 = sub_6C5C(&qword_28EB90);
  swift_allocObject(v0, *(unsigned int *)(v0 + 48), *(unsigned __int16 *)(v0 + 52));
  uint64_t result = TerminalOntologyNode.init(name:multicardinal:)(0xD000000000000012LL, 0x8000000000224420LL, 1LL);
  qword_28E9E8 = result;
  return result;
}

uint64_t sub_2097BC()
{
  uint64_t v0 = sub_6C5C(&qword_28EB90);
  swift_allocObject(v0, *(unsigned int *)(v0 + 48), *(unsigned __int16 *)(v0 + 52));
  uint64_t result = TerminalOntologyNode.init(name:multicardinal:)(0xD000000000000012LL, 0x8000000000224400LL, 0LL);
  qword_28E9F0 = result;
  return result;
}

uint64_t sub_209818()
{
  uint64_t v0 = sub_6C5C(&qword_28EB90);
  swift_allocObject(v0, *(unsigned int *)(v0 + 48), *(unsigned __int16 *)(v0 + 52));
  uint64_t result = TerminalOntologyNode.init(name:multicardinal:)(0xD000000000000012LL, 0x80000000002243E0LL, 1LL);
  qword_28E9F8 = result;
  return result;
}

uint64_t sub_209874()
{
  uint64_t v0 = sub_6C5C(&qword_28EB90);
  swift_allocObject(v0, *(unsigned int *)(v0 + 48), *(unsigned __int16 *)(v0 + 52));
  uint64_t result = TerminalOntologyNode.init(name:multicardinal:)(0xD00000000000001BLL, 0x80000000002243C0LL, 1LL);
  qword_28EA00 = result;
  return result;
}

uint64_t sub_2098D0()
{
  uint64_t v0 = sub_6C5C(&qword_28EB90);
  swift_allocObject(v0, *(unsigned int *)(v0 + 48), *(unsigned __int16 *)(v0 + 52));
  uint64_t result = TerminalOntologyNode.init(name:multicardinal:)(0xD000000000000019LL, 0x80000000002243A0LL, 1LL);
  qword_28EA08 = result;
  return result;
}

uint64_t sub_20992C()
{
  uint64_t v0 = sub_6C5C(&qword_28EB90);
  swift_allocObject(v0, *(unsigned int *)(v0 + 48), *(unsigned __int16 *)(v0 + 52));
  uint64_t result = TerminalOntologyNode.init(name:multicardinal:)(0xD00000000000001ALL, 0x8000000000224380LL, 0LL);
  qword_28EA10 = result;
  return result;
}

uint64_t sub_209988()
{
  uint64_t v0 = sub_6C5C(&qword_28EB90);
  swift_allocObject(v0, *(unsigned int *)(v0 + 48), *(unsigned __int16 *)(v0 + 52));
  uint64_t result = TerminalOntologyNode.init(name:multicardinal:)(0xD000000000000018LL, 0x8000000000224360LL, 0LL);
  qword_28EA18 = result;
  return result;
}

uint64_t sub_2099E4()
{
  uint64_t v0 = sub_6C5C(&qword_28EBF0);
  swift_allocObject(v0, *(unsigned int *)(v0 + 48), *(unsigned __int16 *)(v0 + 52));
  uint64_t result = TerminalOntologyNode.init(name:multicardinal:)(0xD00000000000001ELL, 0x8000000000224340LL, 1LL);
  qword_28EA20 = result;
  return result;
}

uint64_t sub_209A40()
{
  uint64_t v0 = sub_6C5C(&qword_28EB90);
  swift_allocObject(v0, *(unsigned int *)(v0 + 48), *(unsigned __int16 *)(v0 + 52));
  uint64_t result = TerminalOntologyNode.init(name:multicardinal:)(0xD000000000000013LL, 0x800000000021E1A0LL, 0LL);
  qword_28EA28 = result;
  return result;
}

uint64_t sub_209A9C()
{
  uint64_t v0 = sub_6C5C(&qword_28EC00);
  swift_allocObject(v0, *(unsigned int *)(v0 + 48), *(unsigned __int16 *)(v0 + 52));
  uint64_t result = TerminalOntologyNode.init(name:multicardinal:)(0xD00000000000001CLL, 0x8000000000224320LL, 1LL);
  qword_28EA30 = result;
  return result;
}

uint64_t sub_209AF8()
{
  uint64_t v0 = sub_6C5C(&qword_28EC10);
  swift_allocObject(v0, *(unsigned int *)(v0 + 48), *(unsigned __int16 *)(v0 + 52));
  uint64_t result = TerminalOntologyNode.init(name:multicardinal:)(0xD000000000000017LL, 0x8000000000224300LL, 0LL);
  qword_28EA38 = result;
  return result;
}

uint64_t sub_209B54()
{
  uint64_t v0 = sub_6C5C(&qword_28EB58);
  uint64_t v1 = swift_allocObject(v0, 872LL, 7LL);
  *(_OWORD *)(v1 + swift_weakDestroy(v0 + 16) = xmmword_21C0C0;
  if (qword_2839D0 != -1) {
    swift_once(&qword_2839D0, sub_209354);
  }
  uint64_t v2 = qword_28E990;
  *(void *)(v1 + 56) = sub_6C5C(&qword_28EB60);
  *(void *)(v1 + 6sub_6C3C(v0 + 4) = sub_20C3A4(&qword_28EB68, &qword_28EB60);
  *(void *)(v1 + 3sub_6C3C(v0 + 2) = v2;
  uint64_t v3 = qword_2839D8;
  swift_retain(v2);
  if (v3 != -1) {
    swift_once(&qword_2839D8, sub_2093B8);
  }
  uint64_t v4 = qword_28E998;
  *(void *)(v1 + 96) = sub_6C5C(&qword_28EB70);
  *(void *)(v1 + 10sub_6C3C(v0 + 4) = sub_20C3A4(&qword_28EB78, &qword_28EB70);
  *(void *)(v1 + 7sub_6C3C(v0 + 2) = v4;
  uint64_t v5 = qword_2839E0;
  swift_retain(v4);
  if (v5 != -1) {
    swift_once(&qword_2839E0, sub_20941C);
  }
  uint64_t v6 = qword_28E9A0;
  *(void *)(v1 + 136) = sub_6C5C(&qword_28EB80);
  *(void *)(v1 + 14sub_6C3C(v0 + 4) = sub_20C3A4(&qword_28EB88, &qword_28EB80);
  *(void *)(v1 + 11sub_6C3C(v0 + 2) = v6;
  uint64_t v7 = qword_2839F0;
  swift_retain(v6);
  if (v7 != -1) {
    swift_once(&qword_2839F0, sub_2094D0);
  }
  uint64_t v8 = qword_28E9B0;
  uint64_t v9 = sub_6C5C(&qword_28EB90);
  *(void *)(v1 + 176) = v9;
  uint64_t v10 = sub_20C3A4(&qword_28EB98, &qword_28EB90);
  *(void *)(v1 + 18sub_6C3C(v0 + 4) = v10;
  *(void *)(v1 + 15sub_6C3C(v0 + 2) = v8;
  uint64_t v11 = qword_2839F8;
  swift_retain(v8);
  if (v11 != -1) {
    swift_once(&qword_2839F8, sub_209530);
  }
  uint64_t v12 = qword_28E9B8;
  *(void *)(v1 + 2swift_weakDestroy(v0 + 16) = sub_6C5C(&qword_28EBA0);
  *(void *)(v1 + 22sub_6C3C(v0 + 4) = sub_20C3A4(&qword_28EBA8, &qword_28EBA0);
  *(void *)(v1 + 19sub_6C3C(v0 + 2) = v12;
  uint64_t v13 = qword_283A00;
  swift_retain(v12);
  if (v13 != -1) {
    swift_once(&qword_283A00, sub_20958C);
  }
  uint64_t v14 = qword_28E9C0;
  *(void *)(v1 + 256) = sub_6C5C(&qword_28EBB0);
  *(void *)(v1 + 26sub_6C3C(v0 + 4) = sub_20C3A4(&qword_28EBB8, &qword_28EBB0);
  *(void *)(v1 + 23sub_6C3C(v0 + 2) = v14;
  uint64_t v15 = qword_283A08;
  swift_retain(v14);
  if (v15 != -1) {
    swift_once(&qword_283A08, sub_2095E8);
  }
  uint64_t v16 = qword_28E9C8;
  *(void *)(v1 + 296) = sub_6C5C(&qword_28EBC0);
  *(void *)(v1 + 30sub_6C3C(v0 + 4) = sub_20C3A4(&qword_28EBC8, &qword_28EBC0);
  *(void *)(v1 + 27sub_6C3C(v0 + 2) = v16;
  uint64_t v17 = qword_283A10;
  swift_retain(v16);
  if (v17 != -1) {
    swift_once(&qword_283A10, sub_209644);
  }
  uint64_t v18 = qword_28E9D0;
  *(void *)(v1 + 336) = sub_6C5C(&qword_28EBD0);
  *(void *)(v1 + 34sub_6C3C(v0 + 4) = sub_20C3A4(&qword_28EBD8, &qword_28EBD0);
  *(void *)(v1 + 31sub_6C3C(v0 + 2) = v18;
  uint64_t v19 = qword_283A18;
  swift_retain(v18);
  if (v19 != -1) {
    swift_once(&qword_283A18, sub_2096A0);
  }
  uint64_t v20 = qword_28E9D8;
  *(void *)(v1 + 376) = v9;
  *(void *)(v1 + 38sub_6C3C(v0 + 4) = v10;
  *(void *)(v1 + 35sub_6C3C(v0 + 2) = v20;
  uint64_t v21 = qword_283A20;
  swift_retain(v20);
  if (v21 != -1) {
    swift_once(&qword_283A20, sub_209704);
  }
  uint64_t v22 = qword_28E9E0;
  *(void *)(v1 + 4swift_weakDestroy(v0 + 16) = sub_6C5C(&qword_28EBE0);
  *(void *)(v1 + 42sub_6C3C(v0 + 4) = sub_20C3A4(&qword_28EBE8, &qword_28EBE0);
  *(void *)(v1 + 39sub_6C3C(v0 + 2) = v22;
  uint64_t v23 = qword_283A68;
  swift_retain(v22);
  if (v23 != -1) {
    swift_once(&qword_283A68, sub_209A40);
  }
  uint64_t v24 = qword_28EA28;
  *(void *)(v1 + 456) = v9;
  *(void *)(v1 + 46sub_6C3C(v0 + 4) = v10;
  *(void *)(v1 + 43sub_6C3C(v0 + 2) = v24;
  uint64_t v25 = qword_283A28;
  swift_retain(v24);
  if (v25 != -1) {
    swift_once(&qword_283A28, sub_209760);
  }
  uint64_t v26 = qword_28E9E8;
  *(void *)(v1 + 496) = v9;
  *(void *)(v1 + 50sub_6C3C(v0 + 4) = v10;
  *(void *)(v1 + 47sub_6C3C(v0 + 2) = v26;
  uint64_t v27 = qword_283A30;
  swift_retain(v26);
  if (v27 != -1) {
    swift_once(&qword_283A30, sub_2097BC);
  }
  uint64_t v28 = qword_28E9F0;
  *(void *)(v1 + 536) = v9;
  *(void *)(v1 + 54sub_6C3C(v0 + 4) = v10;
  *(void *)(v1 + 51sub_6C3C(v0 + 2) = v28;
  uint64_t v29 = qword_283A38;
  swift_retain(v28);
  if (v29 != -1) {
    swift_once(&qword_283A38, sub_209818);
  }
  uint64_t v30 = qword_28E9F8;
  *(void *)(v1 + 576) = v9;
  *(void *)(v1 + 58sub_6C3C(v0 + 4) = v10;
  *(void *)(v1 + 55sub_6C3C(v0 + 2) = v30;
  uint64_t v31 = qword_283A40;
  swift_retain(v30);
  if (v31 != -1) {
    swift_once(&qword_283A40, sub_209874);
  }
  uint64_t v32 = qword_28EA00;
  *(void *)(v1 + 6swift_weakDestroy(v0 + 16) = v9;
  *(void *)(v1 + 62sub_6C3C(v0 + 4) = v10;
  *(void *)(v1 + 59sub_6C3C(v0 + 2) = v32;
  uint64_t v33 = qword_283A48;
  swift_retain(v32);
  if (v33 != -1) {
    swift_once(&qword_283A48, sub_2098D0);
  }
  uint64_t v34 = qword_28EA08;
  *(void *)(v1 + 656) = v9;
  *(void *)(v1 + 66sub_6C3C(v0 + 4) = v10;
  *(void *)(v1 + 63sub_6C3C(v0 + 2) = v34;
  uint64_t v35 = qword_283A50;
  swift_retain(v34);
  if (v35 != -1) {
    swift_once(&qword_283A50, sub_20992C);
  }
  uint64_t v36 = qword_28EA10;
  *(void *)(v1 + 696) = v9;
  *(void *)(v1 + 70sub_6C3C(v0 + 4) = v10;
  *(void *)(v1 + 67sub_6C3C(v0 + 2) = v36;
  uint64_t v37 = qword_283A58;
  swift_retain(v36);
  if (v37 != -1) {
    swift_once(&qword_283A58, sub_209988);
  }
  uint64_t v38 = qword_28EA18;
  *(void *)(v1 + 736) = v9;
  *(void *)(v1 + 74sub_6C3C(v0 + 4) = v10;
  *(void *)(v1 + 71sub_6C3C(v0 + 2) = v38;
  uint64_t v39 = qword_283A60;
  swift_retain(v38);
  if (v39 != -1) {
    swift_once(&qword_283A60, sub_2099E4);
  }
  uint64_t v40 = qword_28EA20;
  *(void *)(v1 + 776) = sub_6C5C(&qword_28EBF0);
  *(void *)(v1 + 78sub_6C3C(v0 + 4) = sub_20C3A4(&qword_28EBF8, &qword_28EBF0);
  *(void *)(v1 + 75sub_6C3C(v0 + 2) = v40;
  uint64_t v41 = qword_283A70;
  swift_retain(v40);
  if (v41 != -1) {
    swift_once(&qword_283A70, sub_209A9C);
  }
  uint64_t v42 = qword_28EA30;
  *(void *)(v1 + 8swift_weakDestroy(v0 + 16) = sub_6C5C(&qword_28EC00);
  *(void *)(v1 + 82sub_6C3C(v0 + 4) = sub_20C3A4(&qword_28EC08, &qword_28EC00);
  *(void *)(v1 + 79sub_6C3C(v0 + 2) = v42;
  uint64_t v43 = qword_283A78;
  swift_retain(v42);
  if (v43 != -1) {
    swift_once(&qword_283A78, sub_209AF8);
  }
  uint64_t v44 = qword_28EA38;
  *(void *)(v1 + 856) = sub_6C5C(&qword_28EC10);
  *(void *)(v1 + 86sub_6C3C(v0 + 4) = sub_20C3A4(&qword_28EC18, &qword_28EC10);
  *(void *)(v1 + 83sub_6C3C(v0 + 2) = v44;
  uint64_t v45 = type metadata accessor for DomainOntologyNode(0LL);
  swift_allocObject(v45, *(unsigned int *)(v45 + 48), *(unsigned __int16 *)(v45 + 52));
  swift_retain(v44);
  uint64_t result = DomainOntologyNode.init(name:childNodes:isInEventTree:)(0x616C50616964656DLL, 0xEB00000000726579LL, v1, 0LL);
  qword_28EA40 = result;
  return result;
}

void *sub_20A2DC()
{
  return sub_20A5C4(&qword_2839F0, &qword_28E9B0, (uint64_t)sub_2094D0);
}

void *sub_20A2F8()
{
  if (qword_2839F8 != -1) {
    swift_once(&qword_2839F8, sub_209530);
  }
  uint64_t v0 = qword_28E9B8;
  uint64_t v1 = type metadata accessor for AudioNLv3Intent(0LL);
  uint64_t v2 = sub_10430(&qword_289178, type metadata accessor for AudioNLv3Intent, (uint64_t)&unk_21C3B8);
  IntentNodeTraversable.value<A>(forNode:)(&v13, v0, v1, v2);
  uint64_t v3 = (char)v13;
  uint64_t v5 = sub_6C5C(&qword_284DD0);
  uint64_t v6 = type metadata accessor for CommonAudio.Attribute(0LL);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(unsigned __int8 *)(v7 + 80);
  uint64_t v9 = (v8 + 32) & ~v8;
  uint64_t v10 = swift_allocObject(v5, v9 + *(void *)(v7 + 72), v8 | 7);
  *(_OWORD *)(v10 + swift_weakDestroy(v0 + 16) = xmmword_214510;
  uint64_t v11 = v10 + v9;
  (*(void (**)(uint64_t, void, uint64_t))(v7 + 104))(v11, *(unsigned int *)*(&off_2769F0 + v3), v6);
  uint64_t v4 = sub_C9F5C(v10);
  swift_setDeallocating(v10);
  swift_arrayDestroy(v11, 1LL, v6);
  swift_deallocClassInstance(v10, 32LL, 7LL);
  return (void *)v4;
}

void sub_20A458()
{
  if (qword_283A10 != -1) {
    swift_once(&qword_283A10, sub_209644);
  }
  uint64_t v0 = qword_28E9D0;
  uint64_t v1 = type metadata accessor for AudioNLv3Intent(0LL);
  uint64_t v2 = sub_10430(&qword_289178, type metadata accessor for AudioNLv3Intent, (uint64_t)&unk_21C3B8);
  IntentNodeTraversable.value<A>(forNode:)(&v3, v0, v1, v2);
  __asm { BR              X10 }

void *sub_20A5A8()
{
  return sub_20A5C4(&qword_283A18, &qword_28E9D8, (uint64_t)sub_2096A0);
}

void *sub_20A5C4(void *a1, uint64_t *a2, uint64_t a3)
{
  if (*a1 != -1LL) {
    swift_once(a1, a3);
  }
  uint64_t v4 = *a2;
  uint64_t v5 = type metadata accessor for AudioNLv3Intent(0LL);
  uint64_t v6 = sub_10430(&qword_289178, type metadata accessor for AudioNLv3Intent, (uint64_t)&unk_21C3B8);
  IntentNodeTraversable.value<A>(forNode:)(&v14, v4, v5, v6);
  uint64_t v7 = v15;
  if (!v15) {
    return _swiftEmptyArrayStorage;
  }
  uint64_t v8 = v14;
  uint64_t v9 = sub_6C5C(&qword_284018);
  uint64_t inited = swift_initStackObject(v9, &v13);
  *(_OWORD *)(inited + swift_weakDestroy(v0 + 16) = xmmword_214510;
  *(void *)(inited + 3sub_6C3C(v0 + 2) = v8;
  *(void *)(inited + 40) = v7;
  swift_bridgeObjectRetain(v7);
  uint64_t v11 = sub_3FDB4(inited);
  swift_setDeallocating(inited);
  swift_arrayDestroy(inited + 32, 1LL, &type metadata for String);
  swift_bridgeObjectRelease(v7);
  return v11;
}

void *sub_20A6CC()
{
  uint64_t v1 = sub_6C5C(&qword_285138);
  __chkstk_darwin(v1);
  uint64_t v3 = (uint64_t *)((char *)&v58 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  uint64_t v4 = type metadata accessor for DeviceType(0LL);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = __chkstk_darwin(v4);
  uint64_t v8 = (char *)&v58 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v6);
  uint64_t v10 = (char *)&v58 - v9;
  uint64_t v11 = type metadata accessor for Logger(0LL);
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v60 = v11;
  uint64_t v61 = v12;
  uint64_t v13 = __chkstk_darwin(v11);
  uint64_t v15 = (char *)&v58 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v13);
  uint64_t v17 = (char *)&v58 - v16;
  uint64_t v18 = type metadata accessor for AudioNLv3Intent(0LL);
  uint64_t v19 = v18;
  if (*(void *)(v0 + *(int *)(v18 + 20)))
  {
    id v20 = (id)Parse.ServerConversion.siriKitIntent.getter(v18);
    uint64_t v21 = objc_opt_self(&OBJC_CLASS___INPlayMediaIntent);
    if (swift_dynamicCastObjCClass(v20, v21))
    {
      id v59 = v20;
      Swift::Bool v22 = INPlayMediaIntent.isAirPlayVerbMentioned()();
      id v20 = v59;
      if (v22)
      {
        if (qword_283888 != -1) {
          swift_once(&qword_283888, sub_BFC5C);
        }
        uint64_t v23 = v60;
        uint64_t v24 = sub_6960(v60, (uint64_t)qword_2969C8);
        uint64_t v25 = v61;
        uint64_t v26 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v61 + 16))(v17, v24, v23);
        uint64_t v27 = (os_log_s *)Logger.logObject.getter(v26);
        os_log_type_t v28 = static os_log_type_t.default.getter(v27);
        if (os_log_type_enabled(v27, v28))
        {
          uint64_t v29 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
          *(_WORD *)uint64_t v29 = 0;
          _os_log_impl(&dword_0, v27, v28, "Found AirPlayRequest internal setting", v29, 2u);
          swift_slowDealloc(v29, -1LL, -1LL);
        }

        (*(void (**)(char *, uint64_t))(v25 + 8))(v17, v23);
        uint64_t v30 = sub_6C5C(&qword_28EC28);
        uint64_t v31 = type metadata accessor for UsoMediaSettingName(0LL);
        uint64_t v32 = *(void *)(v31 - 8);
        uint64_t v33 = *(unsigned __int8 *)(v32 + 80);
        uint64_t v34 = (v33 + 32) & ~v33;
        uint64_t v35 = swift_allocObject(v30, v34 + *(void *)(v32 + 72), v33 | 7);
        *(_OWORD *)(v35 + swift_weakDestroy(v0 + 16) = xmmword_214510;
        (*(void (**)(uint64_t, void, uint64_t))(v32 + 104))( v35 + v34,  enum case for UsoMediaSettingName.airplay(_:),  v31);

        return (void *)v35;
      }
    }
  }

  if (qword_283A70 != -1) {
    swift_once(&qword_283A70, sub_209A9C);
  }
  uint64_t v36 = qword_28EA30;
  uint64_t v37 = sub_10430(&qword_289178, type metadata accessor for AudioNLv3Intent, (uint64_t)&unk_21C3B8);
  IntentNodeTraversable.value<A>(forNode:)(v3, v36, v19, v37);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v5 + 48))(v3, 1LL, v4) == 1)
  {
    sub_1F6CC((uint64_t)v3, &qword_285138);
    return _swiftEmptyArrayStorage;
  }

  (*(void (**)(char *, void *, uint64_t))(v5 + 32))(v10, v3, v4);
  (*(void (**)(char *, void, uint64_t))(v5 + 104))(v8, enum case for DeviceType.airplaySpeaker(_:), v4);
  uint64_t v38 = sub_10430( &qword_28EC20,  (uint64_t (*)(uint64_t))&type metadata accessor for DeviceType,  (uint64_t)&protocol conformance descriptor for DeviceType);
  dispatch thunk of RawRepresentable.rawValue.getter(&v64, v4, v38);
  dispatch thunk of RawRepresentable.rawValue.getter(&v62, v4, v38);
  uint64_t v39 = v65;
  uint64_t v40 = v63;
  if (v64 == v62 && v65 == v63)
  {
    swift_bridgeObjectRelease_n(v65, 2LL);
    uint64_t v41 = *(void (**)(char *, uint64_t))(v5 + 8);
    v41(v8, v4);
    uint64_t v42 = v61;
  }

  else
  {
    uint64_t v43 = v10;
    char v44 = _stringCompareWithSmolCheck(_:_:expecting:)(v64, v65);
    swift_bridgeObjectRelease(v39);
    __n128 v45 = swift_bridgeObjectRelease(v40);
    uint64_t v41 = *(void (**)(char *, uint64_t))(v5 + 8);
    ((void (*)(char *, uint64_t, __n128))v41)(v8, v4, v45);
    uint64_t v42 = v61;
    if ((v44 & 1) == 0)
    {
      v41(v43, v4);
      return _swiftEmptyArrayStorage;
    }

    uint64_t v10 = v43;
  }

  uint64_t v46 = v60;
  if (qword_283888 != -1) {
    swift_once(&qword_283888, sub_BFC5C);
  }
  uint64_t v47 = sub_6960(v46, (uint64_t)qword_2969C8);
  uint64_t v48 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v42 + 16))(v15, v47, v46);
  uint64_t v49 = (os_log_s *)Logger.logObject.getter(v48);
  os_log_type_t v50 = static os_log_type_t.info.getter(v49);
  if (os_log_type_enabled(v49, v50))
  {
    uint64_t v51 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
    *(_WORD *)uint64_t v51 = 0;
    _os_log_impl(&dword_0, v49, v50, "Got .airplaySpeaker as device type. Using as audioSettingName instead", v51, 2u);
    swift_slowDealloc(v51, -1LL, -1LL);
  }

  (*(void (**)(char *, uint64_t))(v42 + 8))(v15, v46);
  uint64_t v52 = sub_6C5C(&qword_28EC28);
  uint64_t v53 = type metadata accessor for UsoMediaSettingName(0LL);
  uint64_t v54 = *(void *)(v53 - 8);
  uint64_t v55 = *(unsigned __int8 *)(v54 + 80);
  uint64_t v56 = (v55 + 32) & ~v55;
  uint64_t v35 = swift_allocObject(v52, v56 + *(void *)(v54 + 72), v55 | 7);
  *(_OWORD *)(v35 + swift_weakDestroy(v0 + 16) = xmmword_214510;
  (*(void (**)(uint64_t, void, uint64_t))(v54 + 104))( v35 + v56,  enum case for UsoMediaSettingName.airplay(_:),  v53);
  v41(v10, v4);
  return (void *)v35;
}

uint64_t sub_20AC80()
{
  uint64_t v1 = type metadata accessor for Logger(0LL);
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)&v16 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v5 = type metadata accessor for AudioNLv3Intent(0LL);
  if (*(void *)(v0 + *(int *)(v5 + 20)))
  {
    uint64_t v6 = (void *)Parse.ServerConversion.siriKitIntent.getter(v5);
    uint64_t v7 = objc_opt_self(&OBJC_CLASS___INPlayMediaIntent);
    uint64_t v8 = swift_dynamicCastObjCClass(v6, v7);
    if (v8)
    {
      char v9 = INPlayMediaIntent.appInferred.getter(v8);

      return v9 & 1;
    }
  }

  if (qword_283888 != -1) {
    swift_once(&qword_283888, sub_BFC5C);
  }
  uint64_t v11 = sub_6960(v1, (uint64_t)qword_2969C8);
  uint64_t v12 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v2 + 16))(v4, v11, v1);
  uint64_t v13 = (os_log_s *)Logger.logObject.getter(v12);
  os_log_type_t v14 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v13, v14))
  {
    uint64_t v15 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
    *(_WORD *)uint64_t v15 = 0;
    _os_log_impl( &dword_0,  v13,  v14,  "AudioNLv3Intent called for non INPlayMediaIntent. Returning appInferred=true",  v15,  2u);
    swift_slowDealloc(v15, -1LL, -1LL);
  }

  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  return 1LL;
}

char *sub_20AE08()
{
  uint64_t v0 = sub_6C5C(&qword_28EC30);
  __chkstk_darwin(v0);
  int v72 = (char *)&v63 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v2 = sub_6C5C(&qword_28EC38);
  __chkstk_darwin(v2);
  uint64_t v74 = (char *)&v63 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v4 = type metadata accessor for FromEntity.FromEntityType(0LL);
  uint64_t v75 = *(void *)(v4 - 8);
  uint64_t v76 = v4;
  uint64_t v5 = __chkstk_darwin(v4);
  uint64_t v69 = (char *)&v63 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v5);
  os_log_type_t v73 = (char *)&v63 - v7;
  uint64_t v8 = sub_6C5C(&qword_28EC40);
  uint64_t v9 = __chkstk_darwin(v8);
  uint64_t v79 = (uint64_t *)((char *)&v63 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v63 - v11;
  uint64_t v13 = sub_6C5C(&qword_287DA0);
  __chkstk_darwin(v13);
  uint64_t v84 = (char *)&v63 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v15 = type metadata accessor for FromEntity(0LL);
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v17 = __chkstk_darwin(v15);
  uint64_t v82 = (char *)&v63 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v17);
  uint64_t v78 = (char *)&v63 - v19;
  uint64_t v85 = type metadata accessor for TerminalElement(0LL);
  uint64_t v83 = *(void *)(v85 - 8);
  __chkstk_darwin(v85);
  uint64_t v21 = (char *)&v63 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v22 = sub_6C5C(&qword_28EC48);
  __chkstk_darwin(v22);
  uint64_t v24 = (char *)&v63 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v25 = type metadata accessor for TerminalIntentNode(0LL);
  uint64_t v26 = *(void *)(v25 - 8);
  __chkstk_darwin(v25);
  uint64_t v71 = (char *)&v63 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  if (qword_283A58 != -1) {
    swift_once(&qword_283A58, sub_209988);
  }
  uint64_t v28 = qword_28EA18;
  uint64_t v29 = type metadata accessor for AudioNLv3Intent(0LL);
  uint64_t v30 = sub_10430(&qword_289178, type metadata accessor for AudioNLv3Intent, (uint64_t)&unk_21C3B8);
  IntentNodeTraversable.intentNode<A>(forOntologyNode:)(v28, v29, v30);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v26 + 48))(v24, 1LL, v25) == 1)
  {
    sub_1F6CC((uint64_t)v24, &qword_28EC48);
    return (char *)_swiftEmptyArrayStorage;
  }

  uint64_t v32 = v26;
  uint64_t v33 = (*(uint64_t (**)(char *, char *, uint64_t))(v26 + 32))(v71, v24, v25);
  uint64_t v34 = TerminalIntentNode.elements.getter(v33);
  uint64_t v35 = *(void *)(v34 + 16);
  if (v35)
  {
    uint64_t v65 = v32;
    uint64_t v66 = v25;
    unint64_t v36 = (*(unsigned __int8 *)(v83 + 80) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(v83 + 80);
    uint64_t v64 = v34;
    unint64_t v37 = v34 + v36;
    uint64_t v81 = *(void *)(v83 + 72);
    unint64_t v80 = *(uint64_t (**)(char *, unint64_t, uint64_t))(v83 + 16);
    uint64_t v31 = (char *)_swiftEmptyArrayStorage;
    int v77 = enum case for TerminalElement.Value.string(_:);
    for (uint64_t i = v80(v21, v34 + v36, v85); ; uint64_t i = v80(v21, v37, v85))
    {
      TerminalElement.value.getter(i);
      uint64_t v39 = type metadata accessor for TerminalElement.Value(0LL);
      uint64_t v40 = *(void *)(v39 - 8);
      uint64_t v41 = 1LL;
      uint64_t v42 = v79;
      sub_FF10((uint64_t)v12, (uint64_t)v79, &qword_28EC40);
      int v43 = (*(uint64_t (**)(void *, uint64_t))(v40 + 88))(v42, v39);
      if (v43 != v77) {
        break;
      }
      (*(void (**)(void *, uint64_t))(v40 + 96))(v42, v39);
      uint64_t v44 = (uint64_t)v74;
      FromEntity.FromEntityType.init(rawValue:)(*v42, v42[1]);
      uint64_t v46 = v75;
      uint64_t v45 = v76;
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v75 + 48))(v44, 1LL, v76) == 1)
      {
        sub_1F6CC(v44, &qword_28EC38);
LABEL_15:
        uint64_t v41 = 1LL;
        goto LABEL_16;
      }

      uint64_t v52 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v46 + 32))(v73, v44, v45);
      uint64_t v53 = (uint64_t)v72;
      TerminalElement.originalValue.getter(v52);
      uint64_t v54 = v45;
      uint64_t v55 = type metadata accessor for TerminalElement.OriginalValue(0LL);
      uint64_t v70 = *(void *)(v55 - 8);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v70 + 48))(v53, 1LL, v55) == 1)
      {
        sub_1F6CC(v53, &qword_28EC30);
        (*(void (**)(char *, uint64_t))(v75 + 8))(v73, v54);
        goto LABEL_15;
      }

      uint64_t v56 = TerminalElement.OriginalValue.input.getter();
      uint64_t v67 = v57;
      uint64_t v68 = v56;
      (*(void (**)(uint64_t, uint64_t))(v70 + 8))(v53, v55);
      uint64_t v58 = v75;
      id v59 = v69;
      uint64_t v60 = v73;
      (*(void (**)(char *, char *, uint64_t))(v75 + 16))(v69, v73, v76);
      FromEntity.init(entityType:value:)(v59, v68, v67);
      (*(void (**)(char *, uint64_t))(v58 + 8))(v60, v76);
      uint64_t v41 = 0LL;
LABEL_16:
      uint64_t v47 = (uint64_t)v84;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v16 + 56))(v84, v41, 1LL, v15);
      sub_1F6CC((uint64_t)v12, &qword_28EC40);
      (*(void (**)(char *, uint64_t))(v83 + 8))(v21, v85);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v16 + 48))(v47, 1LL, v15) == 1)
      {
        sub_1F6CC(v47, &qword_287DA0);
      }

      else
      {
        uint64_t v48 = *(void (**)(char *, uint64_t, uint64_t))(v16 + 32);
        uint64_t v49 = v78;
        v48(v78, v47, v15);
        v48(v82, (uint64_t)v49, v15);
        if ((swift_isUniquelyReferenced_nonNull_native(v31) & 1) == 0) {
          uint64_t v31 = (char *)sub_1FE84(0, *((void *)v31 + 2) + 1LL, 1, (unint64_t)v31);
        }
        unint64_t v51 = *((void *)v31 + 2);
        unint64_t v50 = *((void *)v31 + 3);
        if (v51 >= v50 >> 1) {
          uint64_t v31 = (char *)sub_1FE84(v50 > 1, v51 + 1, 1, (unint64_t)v31);
        }
        *((void *)v31 + sub_6C3C(v0 + 2) = v51 + 1;
        v48( &v31[((*(unsigned __int8 *)(v16 + 80) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80))
             + *(void *)(v16 + 72) * v51],
          (uint64_t)v82,
          v15);
      }

      v37 += v81;
      if (!--v35)
      {
        __n128 v61 = swift_bridgeObjectRelease(v64);
        uint64_t v32 = v65;
        uint64_t v25 = v66;
        goto LABEL_27;
      }
    }

    (*(void (**)(void *, uint64_t))(v40 + 8))(v42, v39);
    goto LABEL_15;
  }

  __n128 v61 = swift_bridgeObjectRelease(v34);
  uint64_t v31 = (char *)_swiftEmptyArrayStorage;
LABEL_27:
  (*(void (**)(char *, uint64_t, __n128))(v32 + 8))(v71, v25, v61);
  return v31;
}

uint64_t sub_20B4FC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v36 = a1;
  uint64_t v1 = type metadata accessor for Logger(0LL);
  uint64_t v35 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v3 = (char *)&v33 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v4 = sub_6C5C(&qword_285138);
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)&v33 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v7 = type metadata accessor for DeviceType(0LL);
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = __chkstk_darwin(v7);
  uint64_t v11 = (char *)&v33 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v9);
  uint64_t v13 = (char *)&v33 - v12;
  if (qword_283A70 != -1) {
    swift_once(&qword_283A70, sub_209A9C);
  }
  uint64_t v14 = qword_28EA30;
  uint64_t v15 = type metadata accessor for AudioNLv3Intent(0LL);
  uint64_t v16 = sub_10430(&qword_289178, type metadata accessor for AudioNLv3Intent, (uint64_t)&unk_21C3B8);
  IntentNodeTraversable.value<A>(forNode:)(v6, v14, v15, v16);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1LL, v7) == 1)
  {
    sub_1F6CC((uint64_t)v6, &qword_285138);
  }

  else
  {
    uint64_t v17 = *(void (**)(uint64_t, char *, uint64_t))(v8 + 32);
    v17((uint64_t)v13, v6, v7);
    (*(void (**)(char *, void, uint64_t))(v8 + 104))(v11, enum case for DeviceType.airplaySpeaker(_:), v7);
    uint64_t v18 = sub_10430( &qword_28EC20,  (uint64_t (*)(uint64_t))&type metadata accessor for DeviceType,  (uint64_t)&protocol conformance descriptor for DeviceType);
    dispatch thunk of RawRepresentable.rawValue.getter(&v39, v7, v18);
    dispatch thunk of RawRepresentable.rawValue.getter(&v37, v7, v18);
    uint64_t v19 = v40;
    uint64_t v20 = v38;
    if (v39 == v37 && v40 == v38)
    {
      swift_bridgeObjectRelease_n(v40, 2LL);
      uint64_t v21 = *(void (**)(char *, uint64_t))(v8 + 8);
      v21(v11, v7);
    }

    else
    {
      uint64_t v34 = v17;
      char v22 = _stringCompareWithSmolCheck(_:_:expecting:)(v39, v40);
      swift_bridgeObjectRelease(v19);
      __n128 v23 = swift_bridgeObjectRelease(v20);
      uint64_t v21 = *(void (**)(char *, uint64_t))(v8 + 8);
      ((void (*)(char *, uint64_t, __n128))v21)(v11, v7, v23);
      if ((v22 & 1) == 0)
      {
        uint64_t v31 = v36;
        v34(v36, v13, v7);
        uint64_t v30 = 0LL;
        return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v8 + 56))(v31, v30, 1LL, v7);
      }
    }

    if (qword_283888 != -1) {
      swift_once(&qword_283888, sub_BFC5C);
    }
    uint64_t v24 = sub_6960(v1, (uint64_t)qword_2969C8);
    uint64_t v25 = v35;
    uint64_t v26 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v35 + 16))(v3, v24, v1);
    uint64_t v27 = (os_log_s *)Logger.logObject.getter(v26);
    os_log_type_t v28 = static os_log_type_t.info.getter(v27);
    if (os_log_type_enabled(v27, v28))
    {
      uint64_t v29 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)uint64_t v29 = 0;
      _os_log_impl( &dword_0,  v27,  v28,  "Got .airplaySpeaker as device type. Ignoring since it needs to be treated as a setting name instead",  v29,  2u);
      swift_slowDealloc(v29, -1LL, -1LL);
    }

    (*(void (**)(char *, uint64_t))(v25 + 8))(v3, v1);
    v21(v13, v7);
  }

  uint64_t v30 = 1LL;
  uint64_t v31 = v36;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v8 + 56))(v31, v30, 1LL, v7);
}

uint64_t sub_20B8A8@<X0>(uint64_t a1@<X8>)
{
  if (qword_283A00 != -1) {
    swift_once(&qword_283A00, sub_20958C);
  }
  uint64_t v2 = qword_28E9C0;
  uint64_t v3 = type metadata accessor for AudioNLv3Intent(0LL);
  uint64_t v4 = sub_10430(&qword_289178, type metadata accessor for AudioNLv3Intent, (uint64_t)&unk_21C3B8);
  IntentNodeTraversable.value<A>(forNode:)(&v12, v2, v3, v4);
  if (v12 == 2)
  {
    uint64_t v5 = type metadata accessor for Reference(0LL);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 56LL))( a1,  1LL,  1LL,  v5);
  }

  if ((v12 & 1) != 0)
  {
    swift_bridgeObjectRelease(0xE300000000000000LL);
    goto LABEL_9;
  }

  char v7 = _stringCompareWithSmolCheck(_:_:expecting:)(1936287860LL, 0xE400000000000000LL);
  swift_bridgeObjectRelease(0xE400000000000000LL);
  if ((v7 & 1) != 0)
  {
LABEL_9:
    uint64_t v8 = (unsigned int *)&enum case for Reference.one(_:);
    goto LABEL_10;
  }

  swift_bridgeObjectRelease(0xE400000000000000LL);
  uint64_t v8 = (unsigned int *)&enum case for Reference.the(_:);
LABEL_10:
  uint64_t v9 = *v8;
  uint64_t v10 = type metadata accessor for Reference(0LL);
  uint64_t v11 = *(void *)(v10 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 104))(a1, v9, v10);
  return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v11 + 56))(a1, 0LL, 1LL, v10);
}

uint64_t sub_20BA08@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for NLIntent(0LL);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16LL))(a1, v1, v3);
}

uint64_t sub_20BA40()
{
  if (qword_283A80 != -1) {
    swift_once(&qword_283A80, sub_209B54);
  }
  return swift_retain(qword_28EA40);
}

uint64_t sub_20BA80(uint64_t a1)
{
  return swift_bridgeObjectRetain(*(void *)(v1 + *(int *)(a1 + 24)));
}

uint64_t sub_20BA8C(uint64_t a1)
{
  return swift_bridgeObjectRetain(*(void *)(v1 + *(int *)(a1 + 28)));
}

uint64_t sub_20BA98(uint64_t a1)
{
  return swift_bridgeObjectRetain(*(void *)(v1 + *(int *)(a1 + 32)));
}

uint64_t sub_20BAA4(uint64_t a1)
{
  return swift_bridgeObjectRetain(*(void *)(v1 + *(int *)(a1 + 36)));
}

uint64_t sub_20BAB0(uint64_t a1)
{
  return swift_bridgeObjectRetain(*(void *)(v1 + *(int *)(a1 + 40)));
}

uint64_t sub_20BABC(uint64_t a1)
{
  uint64_t v2 = (uint64_t *)(v1 + *(int *)(a1 + 44));
  uint64_t v3 = *v2;
  swift_bridgeObjectRetain(v2[1]);
  return v3;
}

uint64_t sub_20BAF0(uint64_t a1)
{
  return swift_bridgeObjectRetain(*(void *)(v1 + *(int *)(a1 + 48)));
}

uint64_t sub_20BAFC(uint64_t a1)
{
  return swift_bridgeObjectRetain(*(void *)(v1 + *(int *)(a1 + 52)));
}

uint64_t sub_20BB08(uint64_t a1)
{
  return swift_bridgeObjectRetain(*(void *)(v1 + *(int *)(a1 + 56)));
}

uint64_t sub_20BB14(uint64_t a1)
{
  return swift_bridgeObjectRetain(*(void *)(v1 + *(int *)(a1 + 60)));
}

uint64_t sub_20BB20(uint64_t a1)
{
  return swift_bridgeObjectRetain(*(void *)(v1 + *(int *)(a1 + 64)));
}

void *sub_20BB2C()
{
  return sub_20A5C4(&qword_2839F0, &qword_28E9B0, (uint64_t)sub_2094D0);
}

uint64_t sub_20BB5C(uint64_t a1)
{
  return swift_retain(*(void *)(v1 + *(int *)(a1 + 68)));
}

uint64_t sub_20BB68@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_FF10(v2 + *(int *)(a1 + 72), a2, &qword_284E18);
}

uint64_t sub_20BB90(uint64_t a1)
{
  return swift_bridgeObjectRetain(*(void *)(v1 + *(int *)(a1 + 80)));
}

uint64_t sub_20BB9C(uint64_t a1)
{
  return *(void *)(v1 + *(int *)(a1 + 84));
}

uint64_t sub_20BBB0(uint64_t a1)
{
  return swift_bridgeObjectRetain(*(void *)(v1 + *(int *)(a1 + 88)));
}

uint64_t sub_20BBBC(uint64_t a1, uint64_t a2)
{
  return sub_20C010(a1, a2, &qword_2839E8, &qword_28E9A8, (uint64_t)sub_209478);
}

uint64_t sub_20BBDC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_FF10(v2 + *(int *)(a1 + 128), a2, &qword_284DC8);
}

uint64_t sub_20BC04(uint64_t a1)
{
  return swift_bridgeObjectRetain(*(void *)(v1 + *(int *)(a1 + 92)));
}

uint64_t sub_20BC10(uint64_t a1)
{
  return swift_bridgeObjectRetain(*(void *)(v1 + *(int *)(a1 + 96)));
}

uint64_t sub_20BC1C(uint64_t a1)
{
  return swift_bridgeObjectRetain(*(void *)(v1 + *(int *)(a1 + 100)));
}

uint64_t sub_20BC28@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  if (qword_2839D8 != -1) {
    swift_once(&qword_2839D8, sub_2093B8);
  }
  uint64_t v4 = qword_28E998;
  uint64_t v5 = sub_10430(&qword_289178, type metadata accessor for AudioNLv3Intent, (uint64_t)&unk_21C3B8);
  IntentNodeTraversable.value<A>(forNode:)(&v11, v4, a1, v5);
  if ((v11 & 1) != 0)
  {
    uint64_t v6 = type metadata accessor for CommonAudio.Noun(0LL);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56LL))( a2,  1LL,  1LL,  v6);
  }

  else
  {
    uint64_t v8 = enum case for CommonAudio.Noun.library(_:);
    uint64_t v9 = type metadata accessor for CommonAudio.Noun(0LL);
    uint64_t v10 = *(void *)(v9 - 8);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 104))(a2, v8, v9);
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v10 + 56))(a2, 0LL, 1LL, v9);
  }

void *sub_20BD2C()
{
  return sub_20A5C4(&qword_283A18, &qword_28E9D8, (uint64_t)sub_2096A0);
}

uint64_t sub_20BD58(uint64_t a1)
{
  return swift_bridgeObjectRetain(*(void *)(v1 + *(int *)(a1 + 104)));
}

uint64_t sub_20BD6C(uint64_t a1)
{
  return swift_bridgeObjectRetain(*(void *)(v1 + *(int *)(a1 + 108)));
}

uint64_t sub_20BD78@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_FF10(v2 + *(int *)(a1 + 112), a2, &qword_284D98);
}

uint64_t sub_20BDA0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  if (qword_283A00 != -1) {
    swift_once(&qword_283A00, sub_20958C);
  }
  uint64_t v4 = qword_28E9C0;
  uint64_t v5 = sub_10430(&qword_289178, type metadata accessor for AudioNLv3Intent, (uint64_t)&unk_21C3B8);
  IntentNodeTraversable.value<A>(forNode:)(&v11, v4, a1, v5);
  if (v11 == 2)
  {
    uint64_t v6 = type metadata accessor for CommonAudio.Reference(0LL);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56LL))( a2,  1LL,  1LL,  v6);
  }

  else
  {
    uint64_t v8 = enum case for CommonAudio.Reference.definite(_:);
    uint64_t v9 = type metadata accessor for CommonAudio.Reference(0LL);
    uint64_t v10 = *(void *)(v9 - 8);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 104))(a2, v8, v9);
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v10 + 56))(a2, 0LL, 1LL, v9);
  }

uint64_t sub_20BEA8(uint64_t a1)
{
  return swift_retain(*(void *)(v1 + *(int *)(a1 + 116)));
}

uint64_t sub_20BEB4(uint64_t a1)
{
  return swift_bridgeObjectRetain(*(void *)(v1 + *(int *)(a1 + 120)));
}

uint64_t sub_20BEC0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_FF10(v2 + *(int *)(a1 + 124), a2, &qword_284DC0);
}

uint64_t sub_20BEE8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  if (qword_2839D0 != -1) {
    swift_once(&qword_2839D0, sub_209354);
  }
  uint64_t v4 = qword_28E990;
  uint64_t v5 = sub_10430(&qword_289178, type metadata accessor for AudioNLv3Intent, (uint64_t)&unk_21C3B8);
  IntentNodeTraversable.value<A>(forNode:)(&v9, v4, a1, v5);
  if (v9 == 11)
  {
    uint64_t v6 = type metadata accessor for CommonAudio.Verb(0LL);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56LL))( a2,  1LL,  1LL,  v6);
  }

  else
  {
    sub_C09BC(v9);
    uint64_t v8 = type metadata accessor for CommonAudio.Verb(0LL);
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56LL))(a2, 0LL, 1LL, v8);
  }

uint64_t sub_20BFD8(uint64_t a1, uint64_t a2)
{
  return sub_20C0B0(a1, a2, &qword_283A28, &qword_28E9E8, (uint64_t)sub_209760);
}

uint64_t sub_20BFF4(uint64_t a1, uint64_t a2)
{
  return sub_20C010(a1, a2, &qword_283A30, &qword_28E9F0, (uint64_t)sub_2097BC);
}

uint64_t sub_20C010(uint64_t a1, uint64_t a2, void *a3, uint64_t *a4, uint64_t a5)
{
  if (*a3 != -1LL) {
    swift_once(a3, a5);
  }
  uint64_t v7 = *a4;
  uint64_t v8 = sub_10430(&qword_289178, type metadata accessor for AudioNLv3Intent, (uint64_t)&unk_21C3B8);
  IntentNodeTraversable.value<A>(forNode:)(&v10, v7, a1, v8);
  return v10;
}

uint64_t sub_20C094(uint64_t a1, uint64_t a2)
{
  return sub_20C0B0(a1, a2, &qword_283A38, &qword_28E9F8, (uint64_t)sub_209818);
}

uint64_t sub_20C0B0(uint64_t a1, uint64_t a2, void *a3, uint64_t *a4, uint64_t a5)
{
  if (*a3 != -1LL) {
    swift_once(a3, a5);
  }
  uint64_t v7 = *a4;
  uint64_t v8 = sub_10430(&qword_289178, type metadata accessor for AudioNLv3Intent, (uint64_t)&unk_21C3B8);
  return IntentNodeTraversable.values<A>(forNode:)(v7, a1, v8);
}

uint64_t sub_20C120(uint64_t a1, uint64_t a2)
{
  return sub_20C0B0(a1, a2, &qword_283A40, &qword_28EA00, (uint64_t)sub_209874);
}

uint64_t sub_20C13C(uint64_t a1, uint64_t a2)
{
  return sub_20C0B0(a1, a2, &qword_283A48, &qword_28EA08, (uint64_t)sub_2098D0);
}

uint64_t sub_20C158(uint64_t a1, uint64_t a2)
{
  return sub_20C0B0(a1, a2, &qword_283A50, &qword_28EA10, (uint64_t)sub_20992C);
}

void *sub_20C178@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  return sub_20C1D0(a1, &qword_283A60, &qword_28EA20, (uint64_t)sub_2099E4, a2);
}

uint64_t sub_20C194(uint64_t a1, uint64_t a2)
{
  return sub_20C010(a1, a2, &qword_283A68, &qword_28EA28, (uint64_t)sub_209A40);
}

void *sub_20C1B4@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  return sub_20C1D0(a1, &qword_283A78, &qword_28EA38, (uint64_t)sub_209AF8, a2);
}

void *sub_20C1D0@<X0>( uint64_t a1@<X0>, void *a2@<X2>, uint64_t *a3@<X3>, uint64_t a4@<X4>, void *a5@<X8>)
{
  if (*a2 != -1LL) {
    swift_once(a2, a4);
  }
  uint64_t v8 = *a3;
  uint64_t v9 = sub_10430(&qword_289178, type metadata accessor for AudioNLv3Intent, (uint64_t)&unk_21C3B8);
  return IntentNodeTraversable.value<A>(forNode:)(a5, v8, a1, v9);
}

uint64_t sub_20C24C(uint64_t a1)
{
  uint64_t v2 = sub_10430(&qword_28EB50, type metadata accessor for AudioNLv3Intent, (uint64_t)&unk_21C378);
  return NLIntentWrapper.traversableIntentNode.getter(a1, v2);
}

uint64_t sub_20C29C(uint64_t a1)
{
  uint64_t v2 = sub_10430(&qword_28EB50, type metadata accessor for AudioNLv3Intent, (uint64_t)&unk_21C378);
  return NLIntentWrapper.traversableOntologyNode.getter(a1, v2);
}

uint64_t sub_20C2DC(uint64_t a1)
{
  uint64_t v2 = sub_10430(&qword_28EB50, type metadata accessor for AudioNLv3Intent, (uint64_t)&unk_21C378);
  return NLIntentWrapper.description.getter(a1, v2);
}

uint64_t sub_20C320()
{
  return sub_10430(&qword_287018, type metadata accessor for AudioNLv3Intent, (uint64_t)&unk_21C150);
}

uint64_t sub_20C34C()
{
  return sub_10430(&qword_289178, type metadata accessor for AudioNLv3Intent, (uint64_t)&unk_21C3B8);
}

uint64_t sub_20C378()
{
  return sub_10430(&qword_28EB48, type metadata accessor for AudioNLv3Intent, (uint64_t)&unk_21C178);
}

uint64_t sub_20C3A4(unint64_t *a1, uint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    uint64_t v4 = sub_45D50(a2);
    uint64_t result = swift_getWitnessTable(&protocol conformance descriptor for TerminalOntologyNode<A>, v4);
    atomic_store(result, a1);
  }

  return result;
}

uint64_t sub_20C3E4(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_20C41C + 4 * byte_21C3E8[a1]))( 0x657449616964656DLL,  0xEA0000000000736DLL);
}

unint64_t sub_20C41C()
{
  return 0xD000000000000010LL;
}

uint64_t sub_20C438()
{
  return 0x6675685379616C70LL;
}

unint64_t sub_20C458()
{
  return 0xD000000000000012LL;
}

uint64_t sub_20C4B8()
{
  return 0x6B63616279616C70LL;
}

uint64_t sub_20C4DC()
{
  return 0x7974696E69666661LL;
}

unint64_t sub_20C4FC(Swift::String string)
{
  object = string._object;
  v2._uint64_t countAndFlagsBits = string._countAndFlagsBits;
  v2._object = object;
  unint64_t v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_26A7F8, v2);
  swift_bridgeObjectRelease(object);
  if (v3 >= 8) {
    return 8LL;
  }
  else {
    return v3;
  }
}

char *DetermineIntentResponse.__allocating_init(code:userActivity:)(uint64_t a1, void *a2)
{
  uint64_t v5 = (char *)[objc_allocWithZone(v2) init];
  uint64_t v6 = &v5[OBJC_IVAR___DetermineIntentResponse_code];
  swift_beginAccess(&v5[OBJC_IVAR___DetermineIntentResponse_code], v9, 1LL, 0LL);
  *(void *)uint64_t v6 = a1;
  uint64_t v7 = v5;
  [v7 setUserActivity:a2];

  return v7;
}

id DetermineIntent.init()()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for DetermineIntent();
  return objc_msgSendSuper2(&v2, "init");
}

id NowPlayingIntentInfo.__allocating_init(coder:)(void *a1)
{
  id v3 = [objc_allocWithZone(v1) initWithCoder:a1];

  return v3;
}

id DetermineIntent.init(coder:)(void *a1)
{
  v5.receiver = v1;
  v5.super_class = (Class)type metadata accessor for DetermineIntent();
  id v3 = objc_msgSendSuper2(&v5, "initWithCoder:", a1);

  return v3;
}

id DetermineIntent.__allocating_init(identifier:backingStore:)(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v4 = v3;
  if (a2)
  {
    NSString v7 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(a2);
  }

  else
  {
    NSString v7 = 0LL;
  }

  id v8 = [objc_allocWithZone(v4) initWithIdentifier:v7 backingStore:a3];

  return v8;
}

id DetermineIntent.init(identifier:backingStore:)(uint64_t a1, uint64_t a2, void *a3)
{
  if (a2)
  {
    NSString v6 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(a2);
  }

  else
  {
    NSString v6 = 0LL;
  }

  v9.receiver = v3;
  v9.super_class = (Class)type metadata accessor for DetermineIntent();
  id v7 = objc_msgSendSuper2(&v9, "initWithIdentifier:backingStore:", v6, a3);

  return v7;
}

id DetermineIntent.__allocating_init(domain:verb:parametersByName:)( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  NSString v9 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(a2);
  NSString v10 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(a4);
  if (a5)
  {
    v11.super.Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease(a5);
  }

  else
  {
    v11.super.Class isa = 0LL;
  }

  id v12 = [objc_allocWithZone(v5) initWithDomain:v9 verb:v10 parametersByName:v11.super.isa];

  return v12;
}

id DetermineIntent.init(domain:verb:parametersByName:)( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  NSString v9 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(a2);
  NSString v10 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(a4);
  if (a5)
  {
    v11.super.Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease(a5);
  }

  else
  {
    v11.super.Class isa = 0LL;
  }

  v14.receiver = v5;
  v14.super_class = (Class)type metadata accessor for DetermineIntent();
  id v12 = objc_msgSendSuper2(&v14, "initWithDomain:verb:parametersByName:", v9, v10, v11.super.isa);

  return v12;
}

id DetermineIntent.__deallocating_deinit()
{
  return sub_20D3F4(type metadata accessor for DetermineIntent);
}

unint64_t DetermineIntentResponseCode.init(rawValue:)(unint64_t a1)
{
  return sub_20D424(a1);
}

unint64_t sub_20CBA4@<X0>(unint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  unint64_t result = sub_20D424(*a1);
  *(void *)a2 = result;
  *(_BYTE *)(a2 + sub_6C3C(v0 + 8) = v4 & 1;
  return result;
}

uint64_t DetermineIntentResponse.code.getter()
{
  uint64_t v1 = v0 + OBJC_IVAR___DetermineIntentResponse_code;
  swift_beginAccess(v0 + OBJC_IVAR___DetermineIntentResponse_code, v3, 0LL, 0LL);
  return *(void *)v1;
}

char *DetermineIntentResponse.init(code:userActivity:)(uint64_t a1, void *a2)
{
  objc_super v5 = (char *)[v2 init];
  NSString v6 = &v5[OBJC_IVAR___DetermineIntentResponse_code];
  swift_beginAccess(&v5[OBJC_IVAR___DetermineIntentResponse_code], v9, 1LL, 0LL);
  *(void *)NSString v6 = a1;
  id v7 = v5;
  [v7 setUserActivity:a2];

  return v7;
}

uint64_t type metadata accessor for DetermineIntent()
{
  return objc_opt_self(&OBJC_CLASS___DetermineIntent);
}

id DetermineIntentResponse.init()()
{
  *(void *)&v0[OBJC_IVAR___DetermineIntentResponse_code] = 0LL;
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for DetermineIntentResponse();
  return objc_msgSendSuper2(&v2, "init");
}

id DetermineIntentResponse.init(coder:)(void *a1)
{
  *(void *)&v1[OBJC_IVAR___DetermineIntentResponse_code] = 0LL;
  v5.receiver = v1;
  v5.super_class = (Class)type metadata accessor for DetermineIntentResponse();
  id v3 = objc_msgSendSuper2(&v5, "initWithCoder:", a1);

  return v3;
}

id DetermineIntentResponse.__allocating_init(backingStore:)(void *a1)
{
  id v3 = [objc_allocWithZone(v1) initWithBackingStore:a1];

  return v3;
}

id DetermineIntentResponse.init(backingStore:)(void *a1)
{
  *(void *)&v1[OBJC_IVAR___DetermineIntentResponse_code] = 0LL;
  v5.receiver = v1;
  v5.super_class = (Class)type metadata accessor for DetermineIntentResponse();
  id v3 = objc_msgSendSuper2(&v5, "initWithBackingStore:", a1);

  return v3;
}

id sub_20CF74(char *a1, uint64_t a2, uint64_t a3, SEL *a4)
{
  *(void *)&a1[OBJC_IVAR___DetermineIntentResponse_code] = 0LL;
  v7.receiver = a1;
  v7.super_class = (Class)type metadata accessor for DetermineIntentResponse();
  return objc_msgSendSuper2(&v7, *a4, a3);
}

id DetermineIntentResponse.__allocating_init(propertiesByName:)(uint64_t a1)
{
  if (a1)
  {
    v3.super.Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease(a1);
  }

  else
  {
    v3.super.Class isa = 0LL;
  }

  id v4 = [objc_allocWithZone(v1) initWithPropertiesByName:v3.super.isa];

  return v4;
}

id DetermineIntentResponse.init(propertiesByName:)(uint64_t a1)
{
  *(void *)&v1[OBJC_IVAR___DetermineIntentResponse_code] = 0LL;
  if (a1)
  {
    v3.super.Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease(a1);
  }

  else
  {
    v3.super.Class isa = 0LL;
  }

  v6.receiver = v1;
  v6.super_class = (Class)type metadata accessor for DetermineIntentResponse();
  id v4 = objc_msgSendSuper2(&v6, "initWithPropertiesByName:", v3.super.isa);

  if (v4) {
  return v4;
  }
}

id DetermineIntentResponse.__deallocating_deinit()
{
  return sub_20D3F4(type metadata accessor for DetermineIntentResponse);
}

uint64_t DetermineNowPlayingIntentInfoUnsupportedReason.init(rawValue:)(uint64_t result)
{
  return result;
}

uint64_t *sub_20D168@<X0>(uint64_t *result@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2 = *result;
  unint64_t v3 = *result - 4;
  BOOL v4 = __CFADD__(v3, 3LL);
  BOOL v5 = v3 < 0xFFFFFFFFFFFFFFFDLL;
  if (!v4) {
    uint64_t v2 = 0LL;
  }
  *(void *)a2 = v2;
  *(_BYTE *)(a2 + sub_6C3C(v0 + 8) = v5;
  return result;
}

id static DetermineNowPlayingIntentInfoResolutionResult.unsupported(forReason:)(uint64_t a1)
{
  return [(id)swift_getObjCClassFromMetadata(v1) unsupportedWithReason:a1];
}

id DetermineNowPlayingIntentInfoResolutionResult.__allocating_init(JSONDictionary:intent:)( uint64_t a1, void *a2)
{
  id v5 = objc_allocWithZone(v2);
  Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(a1);
  id v7 = [v5 initWithJSONDictionary:isa forIntent:a2];

  return v7;
}

id DetermineNowPlayingIntentInfoResolutionResult.init(JSONDictionary:intent:)(uint64_t a1, void *a2)
{
  Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(a1);
  v9.receiver = v2;
  v9.super_class = (Class)type metadata accessor for DetermineNowPlayingIntentInfoResolutionResult();
  id v6 = objc_msgSendSuper2(&v9, "initWithJSONDictionary:forIntent:", isa, a2);

  id v7 = v6;
  if (v7) {

  }
  return v7;
}

id DetermineNowPlayingIntentInfoResolutionResult.__deallocating_deinit()
{
  return sub_20D3F4(type metadata accessor for DetermineNowPlayingIntentInfoResolutionResult);
}

id sub_20D3F4(uint64_t (*a1)(void))
{
  v3.receiver = v1;
  v3.super_class = (Class)a1();
  return objc_msgSendSuper2(&v3, "dealloc");
}

unint64_t sub_20D424(unint64_t result)
{
  if (result > 6) {
    return 0LL;
  }
  return result;
}

uint64_t type metadata accessor for DetermineIntentResponse()
{
  return objc_opt_self(&OBJC_CLASS___DetermineIntentResponse);
}

uint64_t type metadata accessor for DetermineNowPlayingIntentInfoResolutionResult()
{
  return objc_opt_self(&OBJC_CLASS___DetermineNowPlayingIntentInfoResolutionResult);
}

unint64_t sub_20D478()
{
  unint64_t result = qword_28EC58;
  if (!qword_28EC58)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for DetermineIntentResponseCode,  &type metadata for DetermineIntentResponseCode);
    atomic_store(result, (unint64_t *)&qword_28EC58);
  }

  return result;
}

unint64_t sub_20D4C0()
{
  unint64_t result = qword_28EC60;
  if (!qword_28EC60)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for DetermineNowPlayingIntentInfoUnsupportedReason,  &type metadata for DetermineNowPlayingIntentInfoUnsupportedReason);
    atomic_store(result, (unint64_t *)&qword_28EC60);
  }

  return result;
}

uint64_t sub_20D504@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  objc_super v3 = (void *)(*a1 + OBJC_IVAR___DetermineIntentResponse_code);
  uint64_t result = swift_beginAccess(v3, v5, 0LL, 0LL);
  *a2 = *v3;
  return result;
}

uint64_t sub_20D554(uint64_t *a1, void *a2)
{
  uint64_t v2 = *a1;
  objc_super v3 = (void *)(*a2 + OBJC_IVAR___DetermineIntentResponse_code);
  uint64_t result = swift_beginAccess(v3, v5, 1LL, 0LL);
  *objc_super v3 = v2;
  return result;
}

ValueMetadata *type metadata accessor for DetermineIntentResponseCode()
{
  return &type metadata for DetermineIntentResponseCode;
}

ValueMetadata *type metadata accessor for DetermineNowPlayingIntentInfoUnsupportedReason()
{
  return &type metadata for DetermineNowPlayingIntentInfoUnsupportedReason;
}

unint64_t RequestType.init(rawValue:)(unint64_t a1)
{
  return sub_20D864(a1);
}

unint64_t sub_20D5E4@<X0>(unint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  unint64_t result = sub_20D864(*a1);
  *(void *)a2 = result;
  *(_BYTE *)(a2 + sub_6C3C(v0 + 8) = v4 & 1;
  return result;
}

id static QueueLocationResolutionResult.success(with:)(uint64_t a1)
{
  return sub_20D658(a1, (SEL *)&selRef_successWithResolvedValue_);
}

id static QueueLocationResolutionResult.confirmationRequired(with:)(uint64_t a1)
{
  return sub_20D658(a1, (SEL *)&selRef_confirmationRequiredWithValueToConfirm_);
}

id sub_20D658(uint64_t a1, SEL *a2)
{
  return objc_msgSend((id)swift_getObjCClassFromMetadata(v2), *a2, a1);
}

id RequestTypeResolutionResult.init(JSONDictionary:intent:)(uint64_t a1, void *a2)
{
  Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(a1);
  v9.receiver = v2;
  v9.super_class = (Class)type metadata accessor for RequestTypeResolutionResult();
  id v6 = objc_msgSendSuper2(&v9, "initWithJSONDictionary:forIntent:", isa, a2);

  id v7 = v6;
  if (v7) {

  }
  return v7;
}

id RequestTypeResolutionResult.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for RequestTypeResolutionResult();
  return objc_msgSendSuper2(&v2, "dealloc");
}

unint64_t sub_20D864(unint64_t result)
{
  if (result > 7) {
    return 0LL;
  }
  return result;
}

uint64_t type metadata accessor for RequestTypeResolutionResult()
{
  return objc_opt_self(&OBJC_CLASS___RequestTypeResolutionResult);
}

unint64_t sub_20D898()
{
  unint64_t result = qword_28ECE0;
  if (!qword_28ECE0)
  {
    unint64_t result = swift_getWitnessTable(&protocol conformance descriptor for RequestType, &type metadata for RequestType);
    atomic_store(result, (unint64_t *)&qword_28ECE0);
  }

  return result;
}

ValueMetadata *type metadata accessor for RequestType()
{
  return &type metadata for RequestType;
}

id QueueLocationResolutionResult.init(JSONDictionary:intent:)(uint64_t a1, void *a2)
{
  Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(a1);
  v9.receiver = v2;
  v9.super_class = (Class)type metadata accessor for QueueLocationResolutionResult();
  id v6 = objc_msgSendSuper2(&v9, "initWithJSONDictionary:forIntent:", isa, a2);

  id v7 = v6;
  if (v7) {

  }
  return v7;
}

uint64_t type metadata accessor for QueueLocationResolutionResult()
{
  return objc_opt_self(&OBJC_CLASS___QueueLocationResolutionResult);
}

id QueueLocationResolutionResult.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for QueueLocationResolutionResult();
  return objc_msgSendSuper2(&v2, "dealloc");
}

unint64_t sub_20DB08()
{
  unint64_t result = qword_28ED10;
  if (!qword_28ED10)
  {
    unint64_t result = swift_getWitnessTable(&protocol conformance descriptor for QueueLocation, &type metadata for QueueLocation);
    atomic_store(result, (unint64_t *)&qword_28ED10);
  }

  return result;
}

ValueMetadata *type metadata accessor for QueueLocation()
{
  return &type metadata for QueueLocation;
}

unint64_t WHAError.init(rawValue:)(unint64_t result)
{
  if (result > 2) {
    return 0LL;
  }
  return result;
}

uint64_t *sub_20DB6C@<X0>(uint64_t *result@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2 = *result;
  BOOL v3 = (unint64_t)*result > 2;
  *(void *)a2 = v2;
  *(_BYTE *)(a2 + sub_6C3C(v0 + 8) = v3;
  return result;
}

id WHAErrorResolutionResult.init(JSONDictionary:intent:)(uint64_t a1, void *a2)
{
  Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(a1);
  v9.receiver = v2;
  v9.super_class = (Class)type metadata accessor for WHAErrorResolutionResult();
  id v6 = objc_msgSendSuper2(&v9, "initWithJSONDictionary:forIntent:", isa, a2);

  id v7 = v6;
  if (v7) {

  }
  return v7;
}

uint64_t type metadata accessor for WHAErrorResolutionResult()
{
  return objc_opt_self(&OBJC_CLASS___WHAErrorResolutionResult);
}

id WHAErrorResolutionResult.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for WHAErrorResolutionResult();
  return objc_msgSendSuper2(&v2, "dealloc");
}

unint64_t sub_20DDA4()
{
  unint64_t result = qword_28ED40;
  if (!qword_28ED40)
  {
    unint64_t result = swift_getWitnessTable(&protocol conformance descriptor for WHAError, &type metadata for WHAError);
    atomic_store(result, (unint64_t *)&qword_28ED40);
  }

  return result;
}

ValueMetadata *type metadata accessor for WHAError()
{
  return &type metadata for WHAError;
}

id static NowPlayingIntentInfoResolutionResult.success(with:)(uint64_t a1)
{
  v4.receiver = (id)swift_getObjCClassFromMetadata(v1);
  v4.super_class = (Class)&OBJC_METACLASS___NowPlayingIntentInfoResolutionResult;
  return objc_msgSendSuper2(&v4, "successWithResolvedObject:", a1);
}

id static NowPlayingIntentInfoResolutionResult.disambiguation(with:)(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v3 = a1;
  if ((unint64_t)a1 >> 62)
  {
    if (a1 < 0) {
      uint64_t v10 = a1;
    }
    else {
      uint64_t v10 = a1 & 0xFFFFFFFFFFFFFF8LL;
    }
    unint64_t v11 = sub_20DF3C();
    swift_bridgeObjectRetain(v3);
    uint64_t v12 = _bridgeCocoaArray<A>(_:)(v10, v11);
    swift_bridgeObjectRelease(v3);
    uint64_t v3 = v12;
  }

  else
  {
    swift_bridgeObjectRetain(a1);
    dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter(v4);
    sub_20DF3C();
  }

  uint64_t ObjCClassFromMetadata = (void *)swift_getObjCClassFromMetadata(v2);
  sub_20DF3C();
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  *(void *)&double v7 = swift_bridgeObjectRelease(v3).n128_u64[0];
  v13.receiver = ObjCClassFromMetadata;
  v13.super_class = (Class)&OBJC_METACLASS___NowPlayingIntentInfoResolutionResult;
  id v8 = objc_msgSendSuper2(&v13, "disambiguationWithObjectsToDisambiguate:", isa, v7);

  return v8;
}

unint64_t sub_20DF3C()
{
  unint64_t result = qword_28ED98;
  if (!qword_28ED98)
  {
    uint64_t v1 = objc_opt_self(&OBJC_CLASS___INObject);
    unint64_t result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_28ED98);
  }

  return result;
}

id static NowPlayingIntentInfoResolutionResult.confirmationRequired(with:)(uint64_t a1)
{
  v4.receiver = (id)swift_getObjCClassFromMetadata(v1);
  v4.super_class = (Class)&OBJC_METACLASS___NowPlayingIntentInfoResolutionResult;
  return objc_msgSendSuper2(&v4, "confirmationRequiredWithObjectToConfirm:", a1);
}

id NowPlayingIntentInfo.__allocating_init(identifier:display:pronunciationHint:)( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  if (a2)
  {
    NSString v10 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(a2);
  }

  else
  {
    NSString v10 = 0LL;
  }

  NSString v11 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(a4);
  if (a6)
  {
    NSString v12 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(a6);
  }

  else
  {
    NSString v12 = 0LL;
  }

  id v13 = [objc_allocWithZone(v6) initWithIdentifier:v10 displayString:v11 pronunciationHint:v12];

  return v13;
}

id NowPlayingIntentInfo.init(identifier:display:pronunciationHint:)( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  if (a2)
  {
    NSString v10 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(a2);
  }

  else
  {
    NSString v10 = 0LL;
  }

  NSString v11 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(a4);
  if (a6)
  {
    NSString v12 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(a6);
  }

  else
  {
    NSString v12 = 0LL;
  }

  v15.receiver = v6;
  v15.super_class = (Class)type metadata accessor for NowPlayingIntentInfo();
  id v13 = objc_msgSendSuper2(&v15, "initWithIdentifier:displayString:pronunciationHint:", v10, v11, v12);

  return v13;
}

uint64_t type metadata accessor for NowPlayingIntentInfo()
{
  return objc_opt_self(&OBJC_CLASS___NowPlayingIntentInfo);
}

id NowPlayingIntentInfo.init(coder:)(void *a1)
{
  v5.receiver = v1;
  v5.super_class = (Class)type metadata accessor for NowPlayingIntentInfo();
  id v3 = objc_msgSendSuper2(&v5, "initWithCoder:", a1);

  return v3;
}

id NowPlayingIntentInfo.__deallocating_deinit()
{
  return sub_20D3F4(type metadata accessor for NowPlayingIntentInfo);
}

void static NowPlayingIntentInfoResolutionResult.success(with:)()
{
}

void static NowPlayingIntentInfoResolutionResult.disambiguation(with:)()
{
}

void static NowPlayingIntentInfoResolutionResult.confirmationRequired(with:)()
{
}

id NowPlayingIntentInfoResolutionResult.init(JSONDictionary:intent:)(uint64_t a1, void *a2)
{
  Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(a1);
  v9.receiver = v2;
  v9.super_class = (Class)type metadata accessor for NowPlayingIntentInfoResolutionResult();
  id v6 = objc_msgSendSuper2(&v9, "initWithJSONDictionary:forIntent:", isa, a2);

  id v7 = v6;
  if (v7) {

  }
  return v7;
}

uint64_t type metadata accessor for NowPlayingIntentInfoResolutionResult()
{
  return objc_opt_self(&OBJC_CLASS___NowPlayingIntentInfoResolutionResult);
}

id NowPlayingIntentInfoResolutionResult.__deallocating_deinit()
{
  return sub_20D3F4(type metadata accessor for NowPlayingIntentInfoResolutionResult);
}

id WHADialogMetadata.init(identifier:display:pronunciationHint:)( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  if (a2)
  {
    NSString v10 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(a2);
  }

  else
  {
    NSString v10 = 0LL;
  }

  NSString v11 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(a4);
  if (a6)
  {
    NSString v12 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(a6);
  }

  else
  {
    NSString v12 = 0LL;
  }

  v15.receiver = v6;
  v15.super_class = (Class)type metadata accessor for WHADialogMetadata();
  id v13 = objc_msgSendSuper2(&v15, "initWithIdentifier:displayString:pronunciationHint:", v10, v11, v12);

  return v13;
}

uint64_t type metadata accessor for WHADialogMetadata()
{
  return objc_opt_self(&OBJC_CLASS___WHADialogMetadata);
}

id WHADialogMetadata.init(coder:)(void *a1)
{
  v5.receiver = v1;
  v5.super_class = (Class)type metadata accessor for WHADialogMetadata();
  id v3 = objc_msgSendSuper2(&v5, "initWithCoder:", a1);

  return v3;
}

id WHADialogMetadata.__deallocating_deinit()
{
  return sub_20D3F4(type metadata accessor for WHADialogMetadata);
}

id static WHADialogMetadataResolutionResult.success(with:)(uint64_t a1)
{
  v4.receiver = (id)swift_getObjCClassFromMetadata(v1);
  v4.super_class = (Class)&OBJC_METACLASS___WHADialogMetadataResolutionResult;
  return objc_msgSendSuper2(&v4, "successWithResolvedObject:", a1);
}

id static WHADialogMetadataResolutionResult.disambiguation(with:)(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v3 = a1;
  if ((unint64_t)a1 >> 62)
  {
    if (a1 < 0) {
      uint64_t v10 = a1;
    }
    else {
      uint64_t v10 = a1 & 0xFFFFFFFFFFFFFF8LL;
    }
    unint64_t v11 = sub_20DF3C();
    swift_bridgeObjectRetain(v3);
    uint64_t v12 = _bridgeCocoaArray<A>(_:)(v10, v11);
    swift_bridgeObjectRelease(v3);
    uint64_t v3 = v12;
  }

  else
  {
    swift_bridgeObjectRetain(a1);
    dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter(v4);
    sub_20DF3C();
  }

  uint64_t ObjCClassFromMetadata = (void *)swift_getObjCClassFromMetadata(v2);
  sub_20DF3C();
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  *(void *)&double v7 = swift_bridgeObjectRelease(v3).n128_u64[0];
  v13.receiver = ObjCClassFromMetadata;
  v13.super_class = (Class)&OBJC_METACLASS___WHADialogMetadataResolutionResult;
  id v8 = objc_msgSendSuper2(&v13, "disambiguationWithObjectsToDisambiguate:", isa, v7);

  return v8;
}

id static WHADialogMetadataResolutionResult.confirmationRequired(with:)(uint64_t a1)
{
  v4.receiver = (id)swift_getObjCClassFromMetadata(v1);
  v4.super_class = (Class)&OBJC_METACLASS___WHADialogMetadataResolutionResult;
  return objc_msgSendSuper2(&v4, "confirmationRequiredWithObjectToConfirm:", a1);
}

void static WHADialogMetadataResolutionResult.success(with:)()
{
}

void static WHADialogMetadataResolutionResult.disambiguation(with:)()
{
}

void static WHADialogMetadataResolutionResult.confirmationRequired(with:)()
{
}

id WHADialogMetadataResolutionResult.init(JSONDictionary:intent:)(uint64_t a1, void *a2)
{
  Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(a1);
  v9.receiver = v2;
  v9.super_class = (Class)type metadata accessor for WHADialogMetadataResolutionResult();
  id v6 = objc_msgSendSuper2(&v9, "initWithJSONDictionary:forIntent:", isa, a2);

  id v7 = v6;
  if (v7) {

  }
  return v7;
}

uint64_t type metadata accessor for WHADialogMetadataResolutionResult()
{
  return objc_opt_self(&OBJC_CLASS___WHADialogMetadataResolutionResult);
}

id WHADialogMetadataResolutionResult.__deallocating_deinit()
{
  return sub_20D3F4(type metadata accessor for WHADialogMetadataResolutionResult);
}